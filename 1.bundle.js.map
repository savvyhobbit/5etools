{"version":3,"sources":["webpack:///./components/dnd-select-add.js","webpack:///./node_modules/@vaadin/vaadin-text-field/vaadin-text-field.js","webpack:///./node_modules/@vaadin/vaadin-text-field/theme/lumo/vaadin-text-area-styles.js","webpack:///./node_modules/@vaadin/vaadin-text-field/src/vaadin-text-area.js","webpack:///./components/views/character/dnd-character-builder-equipment-item-detail.js"],"names":["DndSelectAdd","test","type","Boolean","reflectToAttribute","value","options","Array","observer","model","String","addCallback","Function","choices","Number","paren","label","placeholder","multiValue","disabled","this","listBox","remove","$","select","render","isArray","choiceArray","map","v","indexOf","findIndex","o","name","source","filter","selectedValues","i","join","super","ready","setTimeout","async","contentEl","_overlayElement","shadowRoot","querySelector","scrollHeight","addEventListener","e","scrollTop","passive","renderer","root","document","createElement","setAttribute","opened","wasPreviouslySelected","srcElement","getAttribute","scroll","length","splice","selectedOptions","option","item","optionName","innerHTML","appendChild","_assignMenuElement","valueUpdated","connectedCallback","selectChangeHandler","val","selected","undefined","disconnectedCallback","removeEventListener","a","result","customElements","define","$_documentContainer","head","content","_updateHeight","_onAnimationEnd","animationName","inputField","input","inputElement","inputWidth","getComputedStyle","width","valueLength","_oldValueLength","style","maxWidth","height","display","inputHeight","clientHeight","removeProperty","_dispatchIronResizeEventIfNeeded","is","isEditMode","hasRenderedOutput","hasAC","armorAC","isArmor","isMartial","weaponMagicModifier","itemRarity","itemName","itemWeight","weaponProperties","itemResist","itemQuantity","Object","storedItem","itemType","smallRender","itemTypes","rarityTypes","damageTypes","resistTypes","weaponPropertyOptions","weaponPropertyValues","editModeHandler","detail","console","error","itemRef","lookupFailed","renderedOutput","_getItemType","armor","ac","weaponCategory","weapon","parseInt","genericBonus","propStr","property","props","split","prop","propObj","find","trim","damages","dmg1","roll","Parser","dmgTypeToFull","dmgType","rarity","weight","canHaveResist","resist","canHaveQuantity","quantity","canHaveSpell","ITEM_TYPE_JSON_TO_ABV","newType","isEquipped","isAttuned","hasQuantity","typeVal","entries","key","push","rollDamageIndexAttr","rollDamageIndex","parsedMod","isNaN","propCodes","bind","parsedAC","parsedWeight","parseFloat","parsedQuantity","bools","bool"],"mappings":"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","file":"1.bundle.js","sourcesContent":["import { PolymerElement, html } from '@polymer/polymer';\nimport { mergeFeature } from '../util/charBuilder';\nimport { jqEmpty, util_capitalizeAll } from \"../js/utils\";\nimport \"@vaadin/vaadin-select\";\nimport {loadModel} from \"../util/data\";\n\nclass DndSelectAdd extends PolymerElement {\n  static get properties() {\n    return {\n      test: {\n        type: Boolean,\n        reflectToAttribute: true,\n        value: false\n      },\n      options: {\n        type: Array,\n        observer: \"optionsUpdated\"\n      },\n      model: {\n        type: String\n      },\n      addCallback: {\n        type: Function\n      },\n      value: {\n        type: String,\n        value: \"\",\n        observer: \"valueUpdated\"\n      },\n      choices: {\n        type: Number,\n        observer: \"choicesUpdated\"\n      },\n      paren: {\n        type: String,\n      },\n      label: {\n        type: String\n      },\n      placeholder: {\n        type: String,\n      },\n      multiValue: {\n        type: String,\n        value: \"\"\n      },\n      disabled: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      }\n    }\n  }\n\n  choicesUpdated() {\n    if (this.listBox) {\n      this.listBox.remove();\n      delete this.listBox;\n    }\n    this.$.select.render();\n  }\n\n  soptionsUpdated() {\n    if (this.listBox) {\n      this.listBox.remove();\n      delete this.listBox;\n    }\n    this.$.select.render();\n  }\n\n  valueUpdated() {\n    if (this.choices) {\n      if (Array.isArray(this.value) && this.options) {\n        const choiceArray = this.value\n          .map(v => {\n            if (this.options.indexOf(v) !== -1) {\n              return this.options.indexOf(v);\n            } else {\n              return this.options.findIndex((o) => {\n                return o.name === v.name && o.source === v.source;\n              });\n            }\n          })\n          .filter(v => { return v !== -1 });\n\n        if (this.listBox) {\n          this.listBox.selectedValues = choiceArray;\n        }\n        this.multiValue = choiceArray.map(i => {\n          let value = this.options[i];\n          return value.name ? value.name : util_capitalizeAll(value) \n        }).join(\", \");\n      } else {\n        if (this.listBox) {\n          this.listBox.selectedValues = [];\n        }\n        this.multiValue = \"\";\n      }\n    } else {\n      if (this.value && this.options) {\n        if (this.value.source) {\n          this.$.select.value = this.options.findIndex(i => { return i.name === this.value.name && i.source === this.value.source || i === this.value.name }) + \"\";\n        } else if (this.value.name) {\n          this.$.select.value = this.options.findIndex(i => { return i.name === this.value.name || i === this.value.name }) + \"\";\n        } else {\n          this.$.select.value = this.options.findIndex(i => { return i.name === this.value || i === this.value }) + \"\";\n        }\n      } else {\n        this.$.select.value = \"\";\n      }\n    }\n  }\n\n  ready() {\n    super.ready();\n\n    setTimeout(async () => {\n      if (this.model) {\n        this.options = await loadModel(this.model);\n      }\n\n      const contentEl = this.$.select._overlayElement.shadowRoot.querySelector('#content');\n      let scrollHeight = 0;\n      \n      contentEl.addEventListener('scroll', (e) => {\n        scrollHeight = contentEl.scrollTop;\n      }, { passive: true });\n\n      this.$.select.renderer = (root, select) => {\n        if (!this.listBox) {\n          this.listBox = document.createElement('vaadin-list-box');\n\n          // setting up for multi-select\n          if (this.choices) {\n            this.listBox.setAttribute(\"multiple\", true);\n\n            this.listBox.addEventListener(\"click\", (e) => {\n              select.opened = true;\n              let wasPreviouslySelected = e.srcElement.getAttribute(\"selected\") !== null\n              contentEl.scroll(0, scrollHeight);\n              setTimeout(() => {\n                if (this.listBox.selectedValues.length > this.choices\n                    && !wasPreviouslySelected) {\n                  this.listBox.selectedValues.splice(this.listBox.selectedValues.length - 2, 1)\n                }\n                let selectedOptions = this.listBox.selectedValues.map(v => { return this.options[v] });\n                this.multiValue = selectedOptions.map(o => { return o.name ? o.name : util_capitalizeAll(o) }).join(', ');\n                if (this.addCallback) {\n                  this.addCallback(selectedOptions);\n                }\n              }, 0);\n            });\n\n          }\n\n          // Adding options\n          if (this.options && this.options.length) {\n            for (let i = 0; i < this.options.length; i ++) {\n              const option = this.options[i],\n                item = document.createElement('vaadin-item');\n              const optionName = option.name || util_capitalizeAll(option);\n              item.innerHTML = `<span style='margin-left: 10px;'>${optionName}</span> ${option.name ? `<span style='font-size: 14px;color: var(--lumo-primary-color-50pct);'>${option.source || ''}</span>` : ''}`\n              item.setAttribute(\"value\", i);\n              this.listBox.appendChild(item);\n            }\n          }\n          root.appendChild(this.listBox);\n          this.$.select._assignMenuElement();\n\n          this.valueUpdated();\n        }\n      };\n    }, 0);\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    this.selectChangeHandler = () => {\n      const val = this.$.select.value;\n      if (val) {\n        if (!this.choices) {\n          const selected = this.options[val];\n          if (this.addCallback) {\n            this.addCallback(selected, this.model);\n          } else {\n            mergeFeature(undefined, selected, this.model);\n          }\n          if (!this.value) {\n            this.$.select.value = \"\";\n          }\n        }\n      }\n    };\n\n    this.$.select.addEventListener(\"change\", this.selectChangeHandler);\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n\n    this.$.select.removeEventListener(\"change\", this.selectChangeHandler);\n  }\n\n  _exists(a) {\n    return !!a;\n  }\n\n  _label(label, choices, paren) {\n    let result = '';\n    if (label) {\n      result = label;\n      if (choices && choices !== 1 && choices !== 100) {\n        result += ` (pick ${choices})`;\n      }\n      if (paren) {\n        result += ` (${paren})`;\n      }\n    }\n    return result;\n  }\n  \n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: inline-block;\n        }\n        [slot=\"prefix\"] {\n          width: calc(100% - 46px);\n          padding: 12px;\n          line-height: 1.4;\n        }\n        vaadin-select {\n          width: 100%;\n        }\n        .prefix {\n          white-space: normal;\n          color: var(--lumo-body-text-color);\n        }\n      </style>\n      <vaadin-select test$=\"[[test]]\" theme=\"dark\" add id=\"select\" label=\"[[_label(label, choices, paren)]]\" placeholder=\"[[placeholder]]\" disabled$=\"[[disabled]]\">\n        <div hidden$=\"[[!_exists(multiValue)]]\" slot=\"prefix\">\n          <span class=\"prefix\">[[multiValue]]</span>\n        </div>\n      </vaadin-select>\n      \n    `;\n  }\n}\ncustomElements.define('dnd-select-add', DndSelectAdd);","import './theme/lumo/vaadin-text-field.js';\n","import '@vaadin/vaadin-lumo-styles/color.js';\nimport '@vaadin/vaadin-lumo-styles/sizing.js';\nimport '@vaadin/vaadin-lumo-styles/typography.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\n\nconst $_documentContainer = html`<dom-module id=\"lumo-text-area\" theme-for=\"vaadin-text-area\">\n  <template>\n    <style include=\"lumo-text-field\">\n      [part=\"input-field\"],\n      [part=\"input-field\"] ::slotted(textarea) {\n        /* Equal to the implicit padding in vaadin-text-field */\n        padding-top: calc((var(--lumo-text-field-size) - 1em * var(--lumo-line-height-s)) / 2);\n        padding-bottom: calc((var(--lumo-text-field-size) - 1em * var(--lumo-line-height-s)) / 2);\n        height: auto;\n        box-sizing: border-box;\n        transition: background-color 0.1s;\n        line-height: var(--lumo-line-height-s);\n      }\n\n      :host(:not([readonly])) [part=\"input-field\"]::after {\n        display: none;\n      }\n\n      :host([readonly]) [part=\"input-field\"] {\n        border: 1px dashed var(--lumo-contrast-30pct);\n      }\n\n      :host([readonly]) [part=\"input-field\"]::after {\n        border: none;\n      }\n\n      :host(:hover:not([readonly]):not([focused])) [part=\"input-field\"] {\n        background-color: var(--lumo-contrast-20pct);\n      }\n\n      @media (pointer: coarse) {\n        :host(:hover:not([readonly]):not([focused])) [part=\"input-field\"] {\n          background-color: var(--lumo-contrast-10pct);\n        }\n\n        :host(:active:not([readonly]):not([focused])) [part=\"input-field\"] {\n          background-color: var(--lumo-contrast-20pct);\n        }\n      }\n\n      [part=\"value\"],\n      [part=\"input-field\"] ::slotted(textarea) {\n        line-height: inherit;\n        --_lumo-text-field-overflow-mask-image: none;\n      }\n\n      /* Vertically align icon prefix/suffix with the first line of text */\n      [part=\"input-field\"] ::slotted(iron-icon) {\n        margin-top: calc((var(--lumo-icon-size-m) - 1em * var(--lumo-line-height-s)) / -2);\n      }\n\n      [part=\"input-field\"] [part=\"value\"],\n      [part=\"input-field\"] ::slotted(textarea) {\n        white-space: pre-wrap; /* override \\`nowrap\\` from <vaadin-text-field> */\n        align-self: stretch; /* override \\`baseline\\` from <vaadin-text-field> */\n      }\n    </style>\n  </template>\n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\n","/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport { TextFieldMixin } from './vaadin-text-field-mixin.js';\nimport { ElementMixin } from '@vaadin/vaadin-element-mixin/vaadin-element-mixin.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n/**\n * `<vaadin-text-area>` is a Web Component for text area control in forms.\n *\n * ```html\n * <vaadin-text-area label=\"Add description\">\n * </vaadin-text-area>\n * ```\n *\n * ### Prefixes and suffixes\n *\n * These are child elements of a `<vaadin-text-area>` that are displayed\n * inline with the input, before or after.\n * In order for an element to be considered as a prefix, it must have the slot\n * attribute set to `prefix` (and similarly for `suffix`).\n *\n * ```html\n * <vaadin-text-area label=\"Add description\">\n *   <div slot=\"prefix\">Details:</div>\n *   <div slot=\"suffix\">The end!</div>\n * </vaadin-text-area>\n * ```\n *\n * ### Styling\n *\n * The following shadow DOM parts are available for styling:\n *\n * Part name | Description\n * ----------------|----------------\n * `label` | The label element\n * `input-field` | The element that wraps prefix, value and suffix\n * `value` | The text value element inside the `input-field` element\n * `error-message` | The error message element\n *\n * The following state attributes are available for styling:\n *\n * Attribute    | Description | Part name\n * -------------|-------------|------------\n * `disabled` | Set to a disabled text field | :host\n * `has-value` | Set when the element has a value | :host\n * `has-label` | Set when the element has a label | :host\n * `invalid` | Set when the element is invalid | :host\n * `focused` | Set when the element is focused | :host\n * `focus-ring` | Set when the element is keyboard focused | :host\n * `readonly` | Set to a readonly text field | :host\n *\n * See [ThemableMixin – how to apply styles for shadow parts](https://github.com/vaadin/vaadin-themable-mixin/wiki)\n *\n * @extends PolymerElement\n * @mixes TextFieldMixin\n * @mixes ThemableMixin\n * @demo demo/index.html\n */\nclass TextAreaElement extends ElementMixin(TextFieldMixin(ThemableMixin(PolymerElement))) {\n  static get template() {\n    return html`\n    <style include=\"vaadin-text-field-shared-styles\">\n      .vaadin-text-area-container {\n        flex: auto;\n        max-height: inherit; /* MSIE 11 */\n        min-height: inherit; /* MSIE 11 */\n      }\n\n      /* The label and the error message should neither grow nor shrink. */\n      [part=\"label\"],\n      [part=\"error-message\"] {\n        flex: none;\n      }\n\n      [part=\"input-field\"] {\n        overflow: auto;\n        -webkit-overflow-scrolling: touch;\n      }\n\n      [part=\"value\"] {\n        resize: none;\n      }\n\n      [part=\"value\"],\n      [part=\"input-field\"] ::slotted(*) {\n        align-self: flex-start;\n      }\n\n      @keyframes vaadin-text-area-appear {\n        to {\n          opacity: 1;\n        }\n      }\n\n      :host {\n        animation: 1ms vaadin-text-area-appear;\n      }\n    </style>\n\n    <div class=\"vaadin-text-area-container\">\n\n      <label part=\"label\" on-click=\"focus\" id=\"[[_labelId]]\">[[label]]</label>\n\n      <div part=\"input-field\" id=\"[[_inputId]]\">\n\n        <slot name=\"prefix\"></slot>\n\n        <slot name=\"textarea\">\n          <textarea part=\"value\"></textarea>\n        </slot>\n\n        <div part=\"clear-button\" id=\"clearButton\" role=\"button\" aria-label\\$=\"[[i18n.clear]]\"></div>\n        <slot name=\"suffix\"></slot>\n\n      </div>\n\n      <div part=\"error-message\" id=\"[[_errorId]]\" aria-live=\"assertive\" aria-hidden\\$=\"[[_getErrorMessageAriaHidden(invalid, errorMessage, _errorId)]]\">[[errorMessage]]</div>\n\n    </div>\n`;\n  }\n\n  static get is() {\n    return 'vaadin-text-area';\n  }\n\n  static get version() {\n    return '2.6.2';\n  }\n\n  static get observers() {\n    return [\n      '_textAreaValueChanged(value)'\n    ];\n  }\n\n  ready() {\n    super.ready();\n    this._updateHeight();\n    this.addEventListener('animationend', this._onAnimationEnd);\n  }\n\n  _onAnimationEnd(e) {\n    if (e.animationName.indexOf('vaadin-text-area-appear') === 0) {\n      this._updateHeight();\n    }\n  }\n\n  get _slottedTagName() {\n    return 'textarea';\n  }\n\n  _textAreaValueChanged(value) {\n    this._updateHeight();\n  }\n\n  _updateHeight() {\n    const inputField = this.root.querySelector('[part=input-field]');\n    const scrollTop = inputField.scrollTop;\n    const input = this.inputElement;\n\n    const inputWidth = getComputedStyle(input).width;\n\n    const valueLength = this.value ? this.value.length : 0;\n    // Only clear the height when the content shortens to minimize scrollbar flickering.\n    if (this._oldValueLength >= valueLength) {\n      // Fix the input element width so its scroll height isn't affected by host's disappearing scrollbars\n      input.style.maxWidth = inputWidth;\n      input.style.height = 'auto';\n      // Avoid a jumpy Safari rendering issue\n      inputField.style.display = 'block';\n    }\n    this._oldValueLength = valueLength;\n\n    const inputHeight = input.scrollHeight;\n    if (inputHeight > input.clientHeight) {\n      input.style.height = inputHeight + 'px';\n    }\n\n    // Restore\n    input.style.removeProperty('max-width');\n    inputField.style.removeProperty('display');\n    inputField.scrollTop = scrollTop;\n\n    this._dispatchIronResizeEventIfNeeded('InputHeight', inputHeight);\n  }\n\n  /**\n   * Fired when the text-area height changes.\n   *\n   * @event iron-resize\n   */\n}\n\ncustomElements.define(TextAreaElement.is, TextAreaElement);\n\nexport { TextAreaElement };\n","import { PolymerElement, html } from \"@polymer/polymer\";\nimport {\n  setItem\n} from \"../../../util/charBuilder\";\nimport { getEditModeChannel, isEditMode } from \"../../../util/editMode\";\nimport { renderSelection } from \"../../../js/items\";\nimport { DAMAGE_TYPES, RARITY_TYPES } from \"../../../util/consts\";\nimport { findInPath, util_capitalizeAll } from \"../../../js/utils\";\nimport \"@vaadin/vaadin-text-field/vaadin-text-field\";\n// import \"@vaadin/vaadin-text-field/vaadin-integer-field\";\nimport \"@vaadin/vaadin-text-field/vaadin-text-area\";\nimport Parser from '../../../util/Parser';\nimport \"../../dnd-select-add\";\nimport \"../../dnd-button\";\n\n\n//// BOONS\n// Resistance\n// DC+\n// Proficiency?\n// Spells known\nclass DndCharacterBuilderEquipmentItemDetail extends PolymerElement {\n  \n  static get properties() {\n    return {\n      isEditMode: {\n        type: Boolean,\n        value: false\n      },\n      hasRenderedOutput: {\n        type: Boolean,\n        value: false\n      },\n      hasAC: {\n        type: Boolean,\n        value: false\n      },\n      armorAC: {\n        type: Number,\n        value: 0\n      },\n      isArmor: {\n        type: Boolean,\n        value: false\n      },\n      isMartial: {\n        type: Boolean,\n        value: false\n      },\n      weaponMagicModifier: {\n        type: Number,\n        value: 0\n      },\n      itemRarity: {\n        type: String,\n      },\n      itemName: {\n        type: String,\n      },\n      itemWeight: {\n        type: Number,\n        value: 0\n      },\n      weaponProperties: {\n        type: Array,\n      },\n      itemResist: {\n        type: String,\n      },\n      itemQuantity: {\n        type: Number,\n        value: 0\n      },\n      item: {\n        type: Object\n      },\n      storedItem: {\n        type: Object\n      },\n      itemType: {\n        type: String,\n        value: ''\n      },\n      smallRender: {\n        type: Boolean,\n        reflectToAttribute: true,\n        value: false\n      }\n    };\n  }\n\n  static get observers() {\n    return [\n      '_itemChanged(item)'\n    ]\n  }\n\n  constructor() {\n    super();\n\n    this.itemTypes = [\n      'Currency',\n      'Armor (Light)',\n      'Armor (Medium)',\n      'Armor (Heavy)',\n      'Melee Weapon',\n      'Ranged Weapon',\n      'Shield',\n      'Adventuring Gear',\n      'Ammunition',\n      'Artisan Tool',\n      'Explosive',\n      'Gaming Set',\n      'Instrument',\n      'Mount',\n      'Potion',\n      'Rod',\n      'Ring',\n      'Scroll',\n      'Spellcasting Focus',\n      'Tool',\n      'Tack and Harness',\n      'Trade Good',\n      'Vehicle',\n      'Wand'\n    ];\n\n    this.rarityTypes = RARITY_TYPES;\n    this.damageTypes = DAMAGE_TYPES;\n    this.resistTypes = ['<None>', ...DAMAGE_TYPES];\n    this.weaponPropertyOptions = [\n      { name: 'Two-Handed', value: '2H' },\n      { name: 'Ammunition', value: 'A' },\n      { name: 'Finesse', value: 'F' },\n      { name: 'Heavy', value: 'H' },\n      { name: 'Light', value: 'L' },\n      { name: 'Loading', value: 'LD' },\n      { name: 'Reach', value: 'R' },\n      { name: 'Reload', value: 'RLD' },\n      { name: 'Special', value: 'S' },\n      { name: 'Thrown', value: 'T' },\n      { name: 'Versatile', value: 'V' },\n    ]\n    this.weaponPropertyValues = [\n      'Two-Handed',\n      'Ammunition',\n      'Finesse',\n      'Heavy',\n      'Light',\n      'Loading',\n      'Reach',\n      'Reload',\n      'Special',\n      'Thrown',\n      'Versatile'\n    ]\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    this.editModeHandler = (e) => {\n      this.isEditMode = e.detail.isEditMode;\n    }\n    getEditModeChannel().addEventListener('editModeChange', this.editModeHandler);\n    this.isEditMode = isEditMode();\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n\n    getEditModeChannel().removeEventListener('editModeChange', this.editModeHandler);\n  }\n\n  _itemChanged() {\n    if (!this.item) {\n      return;\n    }\n    console.error('itemDetail:', this.item);\n\n    if (this.item.itemRef && !this.item.lookupFailed) {\n      this.hasRenderedOutput = true;\n      renderSelection(this.item, this.$.renderedOutput, undefined, this.smallRender);\n    } else {\n      this.hasRenderedOutput = false;\n    }\n    this.itemType = this._getItemType();\n    this.hasAC = this.item.type === 'S' || !!this.item.armor;\n    if (this.hasAC) {\n      this.armorAC = this.item.ac;\n    }\n    this.isArmor = !!this.item.armor;\n    this.isMartial = this.item.weaponCategory === 'Martial';\n    if (this.item.weapon) {\n      this.weaponMagicModifier = parseInt(this.item.genericBonus, 10);\n      const propStr = this.item.property;\n      if (propStr) {\n        const props = propStr.split(',').map(prop => {\n          const propObj = this.weaponPropertyOptions.find((option) => option.value === prop.trim());\n          if (propObj) {\n            return propObj.name;\n          }\n        }).filter(prop => !!prop);\n        this.weaponProperties = props;\n        if (!this.item.damages) {\n          if (this.item.dmg1) {\n            this.item.storedItem.damages = [{roll: this.item.dmg1, type: util_capitalizeAll(Parser.dmgTypeToFull(this.item.dmgType))}];\n          } else {\n            this.item.storedItem.damages = [];\n          }\n        }\n      }\n    }\n    this.itemRarity = this.item.rarity;\n    this.itemName = this.item.name;\n    this.itemWeight = this.item.weight;\n    this.canHaveResist = this.item.armor || this.item.type === 'P' || this.item.type === 'RG';\n    this.itemResist = this.item.resist;\n    this.canHaveQuantity = this.item.type === 'P' || this.item.type === 'A' || this.item.type === 'EXP' || this.item.type === '$';\n    this.itemQuantity = this.item.quantity || 1;\n    this.canHaveSpell = this.item.type === 'SC';\n\n    if (this.item.storedItem) {\n      this.storedItem = this.item.storedItem;\n    }\n  }\n\n  _getItemType() {\n    if (this.item) {\n      return Parser.ITEM_TYPE_JSON_TO_ABV[this.item.type];  \n    }\n    return '';\n  }\n\n  _selectItemType() {\n    const newType = this.root.querySelector('#typeSelect').value\n    this.storedItem.armor = false;\n    this.storedItem.weapon = false;\n    this.storedItem.type = '';\n    this.storedItem.isEquipped = false;\n    this.storedItem.isAttuned = false;\n\n    switch (newType) {\n      case 'Armor (Light)':\n        this.storedItem.armor = true;\n        this.storedItem.weaponCategory = null;\n        this.storedItem.type = 'LA';\n        break;\n      case 'Armor (Medium)':\n        this.storedItem.armor = true;\n        this.storedItem.weaponCategory = null;\n        this.storedItem.type = 'MA';\n        break;\n      case 'Armor (Heavy)':\n        this.storedItem.armor = true;\n        this.storedItem.weaponCategory = null;\n        this.storedItem.type = 'HA';\n        break;\n      case 'Ranged Weapon':\n        this.storedItem.weapon = true;\n        this.storedItem.weaponCategory = 'Simple';\n        this.storedItem.type = 'R';\n        this.storedItem.resist = null;\n        break;\n      case 'Melee Weapon':\n        this.storedItem.weapon = true;\n        this.storedItem.weaponCategory = 'Simple';\n        this.storedItem.type = 'M';\n        this.storedItem.resist = null;\n        break;\n      case 'Shield':\n        this.storedItem.type = 'S';\n        this.storedItem.weaponCategory = null;\n        this.storedItem.ac = 2;\n        this.storedItem.resist = null;\n        break;\n      case 'Adventuring Gear':\n        this.storedItem.weaponCategory = null;\n        this.storedItem.type = 'G';\n        this.storedItem.resist = null;\n        break;\n      case 'Currency':\n        this.storedItem.weaponCategory = null;\n        this.storedItem.type = '$'\n        this.storedItem.resist = null;\n        this.storedItem.quantity = 1;\n        this.storedItem.hasQuantity = true;\n        break;\n      default:\n        const typeVal = Object.entries(Parser.ITEM_TYPE_JSON_TO_ABV).find(([key, value]) => value === newType);\n        if (typeVal) {\n          this.storedItem.type = typeVal[0];\n        }\n        if (newType !== 'P' || newType !== 'RG') {\n          this.storedItem.resist = null;\n        }\n        break;\n    }\n    if (!(this.storedItem.type === 'P' || this.storedItem.type === 'A' || this.storedItem.type === 'EXP' || this.storedItem.type === '$')) {\n      this.storedItem.hasQuantity = false;\n    }\n    setItem(this.item);\n  }\n\n  _updateItem() {\n    setItem(this.item);\n  }\n\n  _addDamage() {\n    if (!this.storedItem.damages) {\n      this.storedItem.damages = [];\n    }\n    this.storedItem.damages.push({roll: '', type: ''});\n    setItem(this.item);\n  }\n\n  _removeDamage(e) {\n    const rollDamageEl = findInPath('.roll__damage', e);\n    const rollDamageIndexAttr = rollDamageEl.getAttribute('index');\n    const rollDamageIndex = parseInt(rollDamageIndexAttr, 10);\n    this.storedItem.damages.splice(rollDamageIndex, 1);\n    setItem(this.item);\n  }\n\n  _changeWeaponType() {\n    if (this.item.weapon) {\n      if (this.isMartial) {\n        this.storedItem.weaponCategory = 'Martial';\n      } else {\n        this.storedItem.weaponCategory = 'Simple';\n      }\n      setItem(this.item);\n    }\n  }\n\n  _weaponMagicModifierChange() {\n    let parsedMod = parseInt(this.weaponMagicModifier, 10);\n\n    if (isNaN(parsedMod)) {\n      parsedMod = 0;\n    }\n    this.storedItem.genericBonus = parsedMod > 0 ? `+${parsedMod}` : parsedMod;\n    setItem(this.item);\n  }\n\n  _itemRarityChange() {\n    if (this.itemRarity) {\n      this.storedItem.rarity = this.itemRarity;\n      setItem(this.item);\n    }\n  }\n\n  _itemNameChange() {\n    if (this.itemName) {\n      this.storedItem.name = this.itemName;\n      setItem(this.item);\n    }\n  }\n\n  _addWeaponProperty() {\n    return ((props) => {\n      if (props && props.length) {\n        const propCodes = props.map((prop) => {\n          const propObj = this.weaponPropertyOptions.find((option) => option.name === prop.trim());\n          if (propObj) {\n            return propObj.value;\n          }\n        }).filter(prop => !!prop);\n        this.storedItem.property = propCodes.join(',');\n        setItem(this.item);\n      }\n    }).bind(this);\n  }\n\n  _armorACChange() {\n    let parsedAC = parseInt(this.armorAC, 10);\n\n    if (isNaN(parsedAC)) {\n      parsedAC = 0;\n    }\n    this.storedItem.ac = parsedAC;\n    setItem(this.item);\n  }\n\n  _itemWeightChange() {\n    let parsedWeight = parseFloat(this.itemWeight, 10);\n\n    if (isNaN(parsedWeight)) {\n      parsedWeight = 0;\n    }\n    this.storedItem.weight = parsedWeight;\n    setItem(this.item);\n\n  }\n\n  _itemResistChange() {\n    if (this.itemResist) {\n      this.storedItem.resist = this.itemResist === '<None>' ? null : this.itemResist;\n      setItem(this.item);\n    }\n  }\n\n  _itemQuantityChange() {\n    let parsedQuantity = parseInt(this.itemQuantity, 10);\n\n    if (isNaN(parsedQuantity)) {\n      parsedQuantity = 0;\n    }\n    this.storedItem.quantity = parsedQuantity;\n    this.storedItem.hasQuantity = true;\n    setItem(this.item);\n  }\n\n  _or(...bools) {\n    for (let bool of bools) {\n      if (bool) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  static get template() {\n    return html`\n      <style include=\"material-styles my-styles\"></style>\n      <style>\n        :host {}\n        [hidden] {\n          display: none !important;\n        }\n\n        .edit__wrap {\n          margin-right: -10px;\n        }\n        .edit__name {\n          width: calc(65% - 10px);\n          padding-top: 0;\n        }\n        .edit__notes {\n          width: calc(100% - 10px);\n          min-height: 200px;\n        }\n        .edit__checkboxes {\n          display: flex;\n          flex-direction: column;\n          margin: 10px 10px 0 0;\n        }\n\n        .section_heading {\n          margin: 16px 0 0px;\n          font-size: 17px;\n          color: var(--mdc-theme-secondary);\n        }\n\n        .roll__damages {\n          display: flex;\n          flex-direction: column;\n        }\n        .roll__damage {\n          display: flex;\n          margin-right: 10px;\n        }\n        .roll__damage vaadin-text-field,\n        .roll__damage vaadin-select {\n          max-width: 100%;\n        }\n        .roll__damage-roll--edit,\n        .roll__damage-type--edit {\n          width: calc(50% - 40px);\n        }\n        .roll__damage-roll--edit {\n          margin: 0 16px;\n        }\n        .roll__damage-remove {\n          margin: auto -5px 4px;\n        }\n\n        dnd-switch {\n          margin: 10px auto 0;\n          display: block;\n        }\n\n        h2 {\n          margin-top: 0;\n          font-size: 16px;\n          font-weight: bold;\n          margin-bottom: 8px;\n        }\n\n        vaadin-checkbox {\n          width: fit-content;\n        }\n\n        vaadin-select {\n          max-width: calc(50% - 14px);\n        }\n        vaadin-number-field,\n        vaadin-integer-field {\n          width: calc(33% - 10px);\n        }\n        vaadin-text-field,\n        vaadin-text-area,\n        vaadin-integer-field,\n        vaadin-number-field,\n        vaadin-select {\n          margin-right: 10px;\n        }\n        dnd-select-add {\n          width: calc(66% - 22px);\n          margin-right: 10px;\n          margin-left: 10px;\n        }\n\n        .margin-bottom_large {\n          margin-bottom: 0 !important;\n        }\n\n        @media(min-width: 921px) {\n          h2 {\n            font-size: 24px;\n          }\n        }\n      </style>\n\n      <div hidden$=\"[[!item]]\">\n        <div hidden$=\"[[isEditMode]]\">\n          <div hidden$=\"[[!hasRenderedOutput]]\">\n            <h2>[[item.name]]</h4>\n            <div>[[item.notes]]</div>\n            <div hidden$=\"[[item.hideRef]]\" id=\"renderedOutput\"></div>\n          </div>\n\n          <div hidden$=\"[[hasRenderedOutput]]\">\n            <h2>[[item.name]]</h4>\n            <div>[[item.notes]]</div>\n          </div>\n        </div>\n\n        <template is=\"dom-if\" if=\"[[isEditMode]]\">\n          <div class=\"edit__wrap\">\n            <vaadin-text-field class=\"edit__name\" theme=\"label--secondary\" value=\"{{itemName}}\" label=\"Name\" on-change=\"_itemNameChange\"></vaadin-text-field>\n            <vaadin-number-field theme=\"label--secondary\" has-controls value=\"{{itemWeight}}\" label=\"Weight\" min=\"0\" on-change=\"_itemWeightChange\"></vaadin-number-field>\n\n            <vaadin-select id=\"typeSelect\" value=\"[[itemType]]\" on-change=\"_selectItemType\" label=\"Type\" >\n              <template>\n                <vaadin-list-box>\n                  <template is=\"dom-repeat\" items=\"[[itemTypes]]\">\n                    <vaadin-item>[[item]]</vaadin-item>\n                  </template>\n                </vaadin-list-box>\n              </template>\n            </vaadin-select>\n\n            <vaadin-select id=\"raritySelect\" value=\"{{itemRarity}}\" on-change=\"_itemRarityChange\" label=\"Rarity\" >\n              <template>\n                <vaadin-list-box>\n                  <template is=\"dom-repeat\" items=\"[[rarityTypes]]\">\n                    <vaadin-item>[[item]]</vaadin-item>\n                  </template>\n                </vaadin-list-box>\n              </template>\n            </vaadin-select>\n\n            <div class=\"edit__weapon\" hidden$=\"[[!item.weapon]]\">\n              <h4 class=\"section_heading\">Weapon</h4>\n              <dnd-select-add choices=\"100\" label=\"Weapon Properties\" options=\"[[weaponPropertyValues]]\" value=\"[[weaponProperties]]\" add-callback=\"[[_addWeaponProperty()]]\"></dnd-select-add>\n              <!-- <vaadin-integer-field theme=\"label--secondary\"  min=\"0\" max=\"5\" has-controls value=\"{{weaponMagicModifier}}\" label=\"Magic Modifier\" on-change=\"_weaponMagicModifierChange\"></vaadin-integer-field> -->\n              <dnd-switch label='Simple Weapon' secondary-label='Martial Weapon' initial-value=\"[[isMartial]]\" checked={{isMartial}} on-switch-change=\"_changeWeaponType\" ></dnd-switch>\n\n              <template is=\"dom-repeat\" items=\"[[storedItem.damages]]\" as=\"damage\">\n                <div class=\"roll__damage\" index$=\"[[index]]\">\n                  <dnd-button on-click=\"_removeDamage\" icon=\"remove\" class='roll__damage-remove icon-only'></dnd-button>\n                  <div class=\"roll__damage-roll--edit\">\n                    <vaadin-text-field theme=\"label--secondary\" value=\"{{damage.roll}}\" on-change=\"_updateItem\" label=\"Damage Roll\"></vaadin-text-field>\n                  </div>\n                  <div class=\"roll__damage-type--edit\">\n                    <vaadin-select value=\"{{damage.type}}\" on-change=\"_updateItem\" label=\"Damage Type\" >\n                      <template>\n                        <vaadin-list-box>\n                          <template is=\"dom-repeat\" items=\"[[damageTypes]]\">\n                            <vaadin-item>[[item]]</vaadin-item>\n                          </template>\n                        </vaadin-list-box>\n                      </template>\n                    </vaadin-select>\n                  </div>\n                </div>\n              </template>\n              <dnd-button on-click=\"_addDamage\" label=\"Add Damage\" icon=\"add\" class=\"roll__add-damage\"></dnd-button>\n            </div>\n\n            <!-- <vaadin-integer-field theme=\"label--secondary\"  hidden$=\"[[!hasAC]]\" min=\"0\" max=\"30\" has-controls value=\"{{armorAC}}\" label=\"AC\" on-change=\"_armorACChange\"></vaadin-integer-field>\n            \n            <vaadin-integer-field theme=\"label--secondary\"  hidden$=\"[[!item.hasQuantity]]\" min=\"0\" has-controls value=\"{{itemQuantity}}\" label=\"Quantity\" on-change=\"_itemQuantityChange\"></vaadin-integer-field> -->\n\n            <!-- <vaadin-select hidden$=\"[[!canHaveResist]]\" value=\"{{itemResist}}\" on-change=\"_itemResistChange\" label=\"Resistance\">\n              <template>\n                <vaadin-list-box>\n                  <template is=\"dom-repeat\" items=\"[[resistTypes]]\">\n                    <vaadin-item>[[item]]</vaadin-item>\n                  </template>\n                </vaadin-list-box>\n              </template>\n            </vaadin-select> -->\n\n            <div class=\"edit__checkboxes\">\n              <vaadin-checkbox hidden$=\"[[!canHaveQuantity]]\" checked=\"{{storedItem.hasQuantity}}\" on-change=\"_updateItem\">Has Quantity</vaadin-checkbox>\n              <vaadin-checkbox hidden$=\"[[!isArmor]]\" checked=\"{{storedItem.stealth}}\" on-change=\"_updateItem\">Disadvantage on Stealth</vaadin-checkbox>\n              <vaadin-checkbox checked=\"{{storedItem.reqAttune}}\" on-change=\"_updateItem\">Requires Attunement</vaadin-checkbox>\n              <vaadin-checkbox checked=\"{{storedItem.wondrous}}\" on-change=\"_updateItem\">Wondrous</vaadin-checkbox>\n              <vaadin-checkbox hidden$=\"[[!storedItem.itemRef]]\" checked=\"{{storedItem.hideRef}}\" on-change=\"_updateItem\">Hide Reference</vaadin-checkbox>\n            </div>\n\n            <vaadin-text-area  theme=\"label--secondary\" class=\"edit__notes\" value=\"{{storedItem.notes}}\" label=\"Notes\" on-blur=\"_updateItem\"></vaadin-text-area>\n          </div>\n        </template>\n      </div>\n    `;\n  }\n}\n\ncustomElements.define(\"dnd-character-builder-equipment-item-detail\", DndCharacterBuilderEquipmentItemDetail);"],"sourceRoot":""}