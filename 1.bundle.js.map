{"version":3,"sources":["webpack:///./node_modules/@vaadin/vaadin-grid/theme/lumo/vaadin-grid-styles.js","webpack:///./node_modules/@vaadin/vaadin-grid/src/iron-list.js","webpack:///./node_modules/@vaadin/vaadin-grid/src/vaadin-grid-scroller.js","webpack:///./node_modules/@vaadin/vaadin-grid/src/vaadin-grid-a11y-mixin.js","webpack:///./node_modules/@vaadin/vaadin-grid/src/vaadin-grid-active-item-mixin.js","webpack:///./node_modules/@vaadin/vaadin-grid/src/vaadin-grid-array-data-provider-mixin.js","webpack:///./node_modules/@vaadin/vaadin-grid/src/vaadin-grid-column-resizing-mixin.js","webpack:///./node_modules/@vaadin/vaadin-grid/src/vaadin-grid-data-provider-mixin.js","webpack:///./node_modules/@vaadin/vaadin-grid/src/vaadin-grid-dynamic-columns-mixin.js","webpack:///./node_modules/@vaadin/vaadin-grid/src/vaadin-grid-event-context-mixin.js","webpack:///./node_modules/@vaadin/vaadin-grid/src/vaadin-grid-filter-mixin.js","webpack:///./node_modules/@vaadin/vaadin-grid/src/vaadin-grid-row-details-mixin.js","webpack:///./node_modules/@vaadin/vaadin-grid/src/vaadin-grid-scroll-mixin.js","webpack:///./node_modules/@vaadin/vaadin-grid/src/vaadin-grid-selection-mixin.js","webpack:///./node_modules/@vaadin/vaadin-grid/src/vaadin-grid-sort-mixin.js","webpack:///./node_modules/@vaadin/vaadin-grid/src/vaadin-grid-styling-mixin.js","webpack:///./node_modules/@vaadin/vaadin-grid/src/vaadin-grid-drag-and-drop-mixin.js","webpack:///./node_modules/@vaadin/vaadin-grid/src/vaadin-grid-keyboard-navigation-mixin.js","webpack:///./node_modules/@vaadin/vaadin-grid/src/vaadin-grid-column-reordering-mixin.js","webpack:///./node_modules/@vaadin/vaadin-grid/src/vaadin-grid-outer-scroller.js","webpack:///./node_modules/@vaadin/vaadin-grid/src/vaadin-grid-styles.js","webpack:///./node_modules/@vaadin/vaadin-grid/src/vaadin-grid.js","webpack:///./node_modules/@vaadin/vaadin-checkbox/src/vaadin-checkbox.js","webpack:///./node_modules/@vaadin/vaadin-checkbox/theme/lumo/vaadin-checkbox-styles.js","webpack:///./node_modules/@vaadin/vaadin-grid/src/vaadin-grid-column.js","webpack:///./node_modules/@polymer/iron-scroll-target-behavior/iron-scroll-target-behavior.js","webpack:///./node_modules/@vaadin/vaadin-grid/src/vaadin-grid-templatizer.js"],"names":["$_documentContainer","document","head","appendChild","content","IOS","navigator","userAgent","match","IOS_TOUCH_SCROLLING","ANIMATION_FRAME","IDLE_TIME","MICRO_TASK","PolymerIronList","behaviors","_ratio","_scrollerPaddingTop","_scrollPosition","_physicalSize","_physicalAverage","_physicalAverageCount","_physicalTop","_virtualCount","_estScrollHeight","_scrollHeight","_viewportHeight","_viewportWidth","_physicalItems","_physicalSizes","_firstVisibleIndexVal","_collection","_lastVisibleIndexVal","_maxPages","_focusedVirtualIndex","_itemsPerRow","_rowHeight","_templateCost","this","_virtualStart","_physicalCount","grid","_physicalRows","_scrollOffset","virtualCount","_convertIndexToCompleteRow","Math","max","val","_clamp","_maxVirtualStart","_virtualStartVal","_physicalStartVal","_physicalStart","_physicalCountVal","Infinity","Boolean","offsetWidth","offsetHeight","idx","physicalOffset","_iterateItems","pidx","vidx","_getPhysicalSizeIncrement","min","firstVisibleIndex","_estRowsInView","_scrollBottom","attached","_debounce","_render","listen","detached","unlisten","updateViewportBoundaries","styles","window","getComputedStyle","scrollTarget","parseInt","_isRTL","direction","$","items","_scrollTargetHeight","_updateGridMetrics","_scrollHandler","scrollTop","_maxScrollTop","_scrollTop","delta","isScrollingDown","abs","idxAdjustment","round","floor","_update","reusables","_getReusables","physicalTop","indexes","length","_increasePoolIfNeeded","bind","fromTop","ith","offsetContent","physicalItemHeight","idxs","protectedOffsetContent","_hiddenContentSize","virtualStart","virtualEnd","_virtualEnd","physicalCount","top","bottom","_physicalBottom","scrollBottom","_physicalEnd","push","itemSet","movingUp","_manageFocus","_assignModels","_updateMetrics","pop","_positionItems","_updateScrollerSize","_isClientFull","count","nextPhysicalCount","nextIncrease","ts","performance","now","apply","_createPool","i","_isIndexRendered","_getPhysicalIndex","_optPhysicalSize","isAttached","_isVisible","_itemsChanged","change","path","_physicalIndexForKey","_resetScrollPosition","_removeFocusedItem","fn","rtn","arguments","_computeVidx","call","flush","newPhysicalSize","oldPhysicalSize","prevAvgCount","prevPhysicalAvg","ceil","_adjustScrollPosition","y","translate3d","deltaHeight","pos","forceUpdate","_virtualRowCount","style","height","scrollToIndex","currentTopItem","currentVirtualItem","targetOffsetTop","hiddenContentSize","_resetAverage","_resizeHandler","toggleScrollListener","v","name","cb","asyncModule","_debouncers","debounce","size","type","Number","notify","_vidxOffset","value","super","connectedCallback","item","index","_warnPrivateAPIAccess","_pendingScrollToIndex","borderTopWidth","_scrollingToIndex","_effectiveSize","table","scrollHeight","_accessIronListAPI","_adjustVirtualIndexOffset","row","Array","from","children","filter","child","headerOffset","getBoundingClientRect","header","fvi","fviOffset","_firstVisibleIndex","isArray","maxVirtualItems","_edge","_ie","_scrollToIndex","_focusedItemIndex","_itemsFocusable","contains","shadowRoot","activeElement","cellIndex","parentElement","indexOf","focus","requestAnimationFrame","rePosition","isNaN","transform","_canPopulate","_initialPoolCreated","_debounceIncreasePool","remainingPhysicalSize","estimatedMissingRowCount","__reorderChildNodes","childNodes","reduce","inOrder","current","currentIndex","array","sort","row1","row2","forEach","fragment","createDocumentFragment","physicalItems","_createScrollerRows","inst","_getRowTarget","querySelector","slot","getAttribute","setAttribute","_updateHeaderFooterMetrics","notifyResize","el","_toggleAttribute","_updateScrollerItem","oldOffset","_afterScroll","_noScale","scale","offset","threshold","maxShift","maxOffset","_warnPrivateAPIAccessAsyncEnabled","returnValue","_debouncerWarnPrivateAPIAccess","_debounceRender","apiName","console","warn","lastVisibleIndex","customElements","define","is","A11yMixin","superClass","_columnTree","level","some","col","_headerTemplate","headerRenderer","undefined","bodyColumns","_a11yGetHeaderRowCount","_a11yGetFooterRowCount","_a11yUpdateHeaderRows","_a11yUpdateFooterRows","headerRow","footer","footerRow","selected","cell","detailsOpened","hasAttribute","removeAttribute","detailsCell","id","colspan","querySelectorAll","sorter","cellContent","parentNode","localName","assignedSlot","String","ActiveItemMixin","activeItem","Object","ready","scroller","addEventListener","_onClick","_activateItem","e","model","detail","clickedItem","_itemsEqual","defaultPrevented","composedPath","_content","getRootNode","_isFocusable","target","dispatchEvent","CustomEvent","__getRowModel","isFocusableElement","element","disabled","splices","dataProvider","_arrayDataProvider","clearCache","_ensureFirstPageLoaded","opts","slice","_filters","_checkPaths","_filter","sortOrders","_sorters","_multiSort","start","page","pageSize","end","arrayToCheck","action","result","parentProperty","replace","get","a","b","map","_compare","p","n","toString","_normalizeEmptyValue","filterValueLowercase","toLowerCase","_onHeaderTrack","preventDefault","handle","column","_column","prototype","_childColumns","_order","hidden","columnRowCells","targetCell","minWidth","paddingLeft","paddingRight","borderLeftWidth","borderRightWidth","marginLeft","marginRight","maxWidth","__isRTL","left","x","right","width","flexGrow","state","resizedColumn","ItemCache","parentCache","parentItem","itemCaches","effectiveSize","pendingRequests","keys","isLoading","cache","scaledIndex","getCacheAndIndex","_isExpanded","prev","curr","subCache","updateSize","_loadPage","thisLevelIndex","expandedIndex","observer","loading","readOnly","reflectToAttribute","_cache","itemIdPath","expandedItems","_updateItem","ensureSubCacheForScaledIndex","_getPageForIndex","expandItem","collapseItem","__expandedKeys","has","getItemId","__cacheExpandedKeys","Set","add","splice","_getItemIndexInArray","_hasData","_setLoading","params","_mapSorters","filters","_mapFilters","currentItems","_item","itemsIndex","itemIndex","cachedItem","getItemForIndex","__itemsReceived","_instance","_setPendingProperty","oldPageSize","oldDataProvider","_debouncerCheckSize","after","_checkSize","hadData","item1","item2","_addNodeObserver","columns","getFlattenedNodes","_isColumnElement","_getChildColumns","concat","c","_hasColumnGroups","_flattenColumnGroups","columnTree","_getColumnTree","_arrayEquals","_observer","info","rowDetailsTemplate","addedNodes","classList","_rowDetailsTemplate","removedNodes","_updateColumnTree","_debouncerCheckImports","_checkImports","arr1","arr2","l","elementName","_updateFirstAndLastColumnForRow","node","nodeType","Node","ELEMENT_NODE","test","EventContextMixin","event","context","section","assign","FilterMixin","_filterChanged","stopPropagation","detailsOpenedItems","rowDetailsRenderer","Function","_detailsCells","Error","templatizer","_grid","dataHost","template","_updateRow","_a11yUpdateRowDetailsOpened","_toggleDetailsCell","changeRecord","_isDetailsOpened","detailsHidden","hiddenChanged","_renderer","removeProperty","createInstance","innerHTML","root","setProperty","instance","_detailsOpenedInstanceChangedCallback","openItemDetails","closeItemDetails","SCROLL_PERIOD","WHEEL_SCROLLING","SCROLLING","IGNORE_WHEEL","_frozenCells","_scrollbarWidth","scrollDiv","createElement","overflow","position","body","scrollbarWidth","clientWidth","removeChild","_rowWithFocusedElement","Element","_deltaYAcc","_scrollLineHeight","_getScrollLineHeight","fontSize","display","_scrollPageHeight","clientHeight","_wheelScrolling","_debouncerWheelScrolling","_timeouts","_onWheel","outerscroller","outerScrolling","stopImmediatePropagation","ctrlKey","_hasScrolledAncestor","deltaX","deltaY","deltaMode","WheelEvent","DOM_DELTA_LINE","DOM_DELTA_PAGE","_wheelAnimationFrame","_debouncerWheelAnimationFrame","momentum","_canScroll","scrollLeft","_hasResidualMomentum","_ignoreNewWheel","_debouncerIgnoreNewWheel","_previousMomentum","scrollWidth","_scrollingFrame","_debounceScrolling","cancelAnimationFrame","_reorderRows","_scrollPeriodFrame","_debounceScrollPeriod","_translateStationaryElements","_scheduleScrolling","os","_ios","passthrough","syncOuterScroller","overScroll","_updateOverflow","_debounceOverflow","trim","adjustedVirtualStart","targetRow","targetPhysicalIndex","insertBefore","_debouncerCacheElements","_updateScrollerMeasurements","_updateLastFrozen","__scrollerMetrics","columnsRow","lastFrozen","_lastFrozen","frozen","_getTranslate","_scrollLeft","__getNormalizedScrollLeft","frozenCellTransform","outersizer","fixedsizer","SelectionMixin","selectedItems","_isSelected","selectItem","deselectItem","_selectedInstanceChangedCallback","multiSort","_previousSorters","_onSorterChanged","ShadyDOM","run","sorters","bubbles","composed","_removeArrayItem","unshift","JSON","stringify","_a11yUpdateSorters","StylingMixin","cellClassNameGenerator","cellClassGenerator","generateCellClassNames","_generateCellClassNames","rowData","__generatedClasses","className","remove","split","DropMode","DropLocation","DragAndDropMixin","dropMode","rowsDraggable","dragFilter","dropFilter","__dndAutoScrollThreshold","_onDragStart","_onDragEnd","_onDragOver","_onDragLeave","_onDrop","_safari","exec","rowRect","dataTransfer","setDragImage","clientX","clientY","rows","__getViewportRows","setData","__formatDefaultTransferData","updateStyles","draggedItems","setDragData","data","setDraggedItemsCount","originalEvent","_clearDragStyles","_dropLocation","_dragOverItem","__dndAutoScroll","dropAbove","__dndAutoScrolling","headerBottom","footerTop","topDiff","bottomDiff","scrollTopDelta","setTimeout","dragData","types","getData","cancelable","dropTargetItem","dropLocation","textContent","join","filterDragAndDrop","_filterDragAndDrop","dragDisabled","dropDisabled","KeyboardNavigationMixin","_headerFocusable","_footerFocusable","_navigatingIsHidden","_focusedColumnOrder","_android","_onKeyDown","_onKeyUp","_onFocusIn","_onFocusOut","_onCellFocusIn","_onCellFocusOut","_isMousedown","focusable","oldFocusable","keyGroup","key","_detectInteracting","indexOfChildElement","visibleItemsCount","_lastVisibleIndex","dx","dy","activeCell","columnIndex","isRowDetails","_elementMatches","activeRow","activeRowGroup","maxRowIndex","rowIndex","dstRowIndex","dstIsRowDetails","dstItem","_getColumns","dstColumns","dstSortedColumnOrders","maxOrderedColumnIndex","orderedColumnIndex","dstOrderedColumnIndex","_ensureScrolledToIndex","dstColumnIndex","acc","dstRow","dstCell","_scrollHorizontallyToCell","dstRect","tableIndex","rowGroup","localTarget","localTargetIsTextInput","wantInteracting","_parseEventPath","focusTarget","firstElementChild","srcElement","step","tabOrder","focusexit","_predictFocusStepTarget","shiftKey","itemsFocusTarget","focusedItemRow","wasNavigating","click","rootTarget","_activeRowGroup","_detectFocusedItemIndex","columnTreeLevel","firstVisibleIndexRow","dstCellRect","dstCellIndex","tableRect","leftBoundary","rightBoundary","query","matches","columnReorderingAllowed","_orderBaseScope","_onTrackEvent","_reorderGhost","_onTouchStart","_onTouchMove","_onTouchEnd","_onContextMenu","_startTouchReorderTimeout","_onTrackStart","touches","_draggedColumn","clearTimeout","_onTrackEnd","headerCell","_touchDevice","_onTrack","_cellFromPoint","childElementCount","_setSiblingsReorderStatus","_reorderStatus","_updateGhost","visibility","_updateGhostPosition","_autoScroller","targetColumn","_getTargetColumn","_isSwapAllowed","_isSwappableByPosition","_swapColumnOrders","_lastDragClientX","_getColumnsInOrder","elementFromPoint","eventClientX","eventClientY","ghostRect","targetLeft","targetTop","_left","_top","_getInnerText","ghost","propertyName","status","sibling","rightDiff","leftDiff","async","column1","column2","differentColumns","sameParent","sameFrozen","sourceCellRect","targetRect","_updateFirstAndLastColumn","draggedColumn","candidate","scrollHandler","noScrollbars","_syncScrollTarget","_onMouseMove","webkitOverflowScrolling","_","offsetY","offsetX","VaadinGridStyles","safari","firefox","scrollingStyles","register","TOUCH_DEVICE","createEvent","_this","MSStream","platform","maxTouchPoints","CSS","supports","_firefox","heightByRows","_recalculateColumnWidthOnceLoadingFinished","_onAnimationEnd","recalculateColumnWidths","oldValue","newValue","attributeChangedCallback","__hasRowsWithClientHeight","cols","_origFlexGrow","_currentWidth","_allCells","cellWidth","autoWidth","_recalculateColumnWidths","notifyPath","_cells","_resetKeyboardNavigation","tagName","slotName","_contentIndex","chrome","mouseUpListener","removeEventListener","isColumnRow","noNotify","contentsFragment","_vacant","_createCell","_configureDetailsCell","_a11ySetRowDetailsCell","_emptyCells","__updateHeaderFooterRowVisibility","_frozenCellsChanged","visibleRowCells","footerRenderer","_footerTemplate","_preventScrollerRotatingCellFocus","_a11yUpdateRowRowindex","_getItem","_renderColumnTree","_a11yUpdateRowSelected","_a11yUpdateRowLevel","expanded","owner","__detailsOpened__","__selected__","__level__","__expanded__","setProperties","_debouncerUpdateHeights","_updateDetailsCellHeights","headerHeight","footerHeight","borderBottomWidth","animationName","bool","_getIndexLevel","_renderHeaderAndFooter","_debouncerForceReflow","CheckboxElement","checked","indeterminate","_nativeCheckbox","_storedName","_handleClick","_addActiveListeners","attrName","_updateLabelAttribute","label","assignedNodes","_isAssignedNodesEmpty","nodes","TEXT_NODE","_addEventListenerToNode","__interactionsAllowed","keyCode","_toggleChecked","ColumnBaseMixin","resizable","parent","textAlign","_headerCell","_footerCell","_bodyTemplate","_templateObserver","callback","disconnectedCallback","_findHostGrid","_gridValue","_prepareHeaderTemplate","_prepareFooterTemplate","_prepareBodyTemplate","_prepareTemplatizer","_findTemplate","instanceProps","_instanceProps","__runRenderer","renderer","args","cells","_template","__setColumnTemplateOrRenderer","headerTemplate","footerTemplate","footerCell","_selectFirstTemplate","_rootDataHost","_columnPropChanged","order","__forceReflow","bodyTemplate","hasHeaderText","__setTextContent","pathRenderer","_generateHeader","substr","lastIndexOf","toUpperCase","reorderStatus","existingHandle","textAlignFallback","_previousHidden","_debouncerHiddenChanged","GridColumnElement","IronScrollTargetBehavior","properties","HTMLElement","_defaultScrollTarget","observers","_shouldHaveListener","_scrollTargetChanged","_oldScrollTarget","_toggleScrollListener","_doc","domHost","ownerDocument","_isValidScrollTarget","documentElement","pageYOffset","pageXOffset","scrollTo","scroll","leftOrOptions","innerWidth","innerHeight","yes","eventTarget","_boundScrollHandler","GridTemplatizer","_templateInstances","_parentPathValues","_ensureTemplatized","_TemplateClass","addInstance","parentModel","forwardHostProp","prop","_forwardParentProp","notifyInstanceProp","originalProp","gridCallback","t","addedCount","keyName","set"],"mappings":"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","file":"1.bundle.js","sourcesContent":["import '@vaadin/vaadin-lumo-styles/color.js';\nimport '@vaadin/vaadin-lumo-styles/font-icons.js';\nimport '@vaadin/vaadin-lumo-styles/sizing.js';\nimport '@vaadin/vaadin-lumo-styles/spacing.js';\nimport '@vaadin/vaadin-lumo-styles/style.js';\nimport '@vaadin/vaadin-lumo-styles/typography.js';\nimport '@vaadin/vaadin-checkbox/theme/lumo/vaadin-checkbox.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\n\nconst $_documentContainer = html`<dom-module id=\"lumo-grid\" theme-for=\"vaadin-grid\">\n  <template>\n    <style>\n      :host {\n        font-family: var(--lumo-font-family);\n        font-size: var(--lumo-font-size-m);\n        line-height: var(--lumo-line-height-s);\n        color: var(--lumo-body-text-color);\n        background-color: var(--lumo-base-color);\n        box-sizing: border-box;\n        -webkit-text-size-adjust: 100%;\n        -webkit-tap-highlight-color: transparent;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n\n        /* For internal use only */\n        --_lumo-grid-border-color: var(--lumo-contrast-20pct);\n        --_lumo-grid-secondary-border-color: var(--lumo-contrast-10pct);\n        --_lumo-grid-border-width: 1px;\n        --_lumo-grid-selected-row-color: var(--lumo-primary-color-10pct);\n      }\n\n      /* No (outer) border */\n\n      :host(:not([theme~=\"no-border\"])) {\n        border: var(--_lumo-grid-border-width) solid var(--_lumo-grid-border-color);\n      }\n\n      /* Cell styles */\n\n      [part~=\"cell\"] {\n        min-height: var(--lumo-size-m);\n        background-color: var(--lumo-base-color);\n      }\n\n      [part~=\"cell\"] ::slotted(vaadin-grid-cell-content) {\n        cursor: default;\n        padding: var(--lumo-space-xs) var(--lumo-space-m);\n      }\n\n      /* Apply row borders by default and introduce the \"no-row-borders\" variant */\n      :host(:not([theme~=\"no-row-borders\"])) [part~=\"cell\"]:not([part~=\"details-cell\"]) {\n        border-top: var(--_lumo-grid-border-width) solid var(--_lumo-grid-secondary-border-color);\n      }\n\n      /* Hide first body row top border */\n      :host(:not([theme~=\"no-row-borders\"])) [part=\"row\"][first] [part~=\"cell\"]:not([part~=\"details-cell\"]) {\n        border-top: 0;\n        min-height: calc(var(--lumo-size-m) - var(--_lumo-grid-border-width));\n      }\n\n      /* Focus-ring */\n\n      [part~=\"cell\"]:focus {\n        outline: none;\n      }\n\n      :host([navigating]) [part~=\"cell\"]:focus::before {\n        content: \"\";\n        position: absolute;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n        pointer-events: none;\n        box-shadow: inset 0 0 0 2px var(--lumo-primary-color-50pct);\n      }\n\n      /* Drag and Drop styles */\n      :host([dragover])::after {\n        content: \"\";\n        position: absolute;\n        z-index: 100;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n        pointer-events: none;\n        box-shadow: inset 0 0 0 2px var(--lumo-primary-color-50pct);\n      }\n\n      [part~=\"row\"][dragover] {\n        z-index: 100 !important;\n      }\n\n      [part~=\"row\"][dragover] [part~=\"cell\"] {\n        overflow: visible;\n      }\n\n      [part~=\"row\"][dragover] [part~=\"cell\"]::after {\n        content: \"\";\n        position: absolute;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n        height: calc(var(--_lumo-grid-border-width) + 2px);\n        pointer-events: none;\n        background: var(--lumo-primary-color-50pct);\n      }\n\n      :host([theme~=\"no-row-borders\"]) [dragover] [part~=\"cell\"]::after {\n        height: 2px;\n      }\n\n      [part~=\"row\"][dragover=\"below\"] [part~=\"cell\"]::after {\n        top: 100%;\n        bottom: auto;\n        margin-top: -1px;\n      }\n\n      [part~=\"row\"][dragover=\"above\"] [part~=\"cell\"]::after {\n        top: auto;\n        bottom: 100%;\n        margin-bottom: -1px;\n      }\n\n      [part~=\"row\"][details-opened][dragover=\"below\"] [part~=\"cell\"]:not([part~=\"details-cell\"])::after,\n      [part~=\"row\"][details-opened][dragover=\"above\"] [part~=\"details-cell\"]::after {\n        display: none;\n      }\n\n      [part~=\"row\"][dragover][dragover=\"on-top\"] [part~=\"cell\"]::after {\n        height: 100%;\n      }\n\n      [part~=\"row\"][dragstart] {\n        /* Add bottom-space to the row so the drag number doesn't get clipped. Needed for IE/Edge */\n        border-bottom: 100px solid transparent;\n        z-index: 100 !important;\n        opacity: 0.9;\n      }\n\n      [part~=\"row\"][dragstart] [part~=\"cell\"] {\n        border: none !important;\n        box-shadow: none !important;\n      }\n\n      [part~=\"row\"][dragstart] [part~=\"cell\"][last-column] {\n        border-radius: 0 var(--lumo-border-radius-s) var(--lumo-border-radius-s) 0;\n      }\n\n      [part~=\"row\"][dragstart] [part~=\"cell\"][first-column] {\n        border-radius: var(--lumo-border-radius-s) 0 0 var(--lumo-border-radius-s);\n      }\n\n      [ios] [part~=\"row\"][dragstart] [part~=\"cell\"] {\n        background: var(--lumo-primary-color-50pct);\n      }\n\n      #scroller:not([ios]) [part~=\"row\"][dragstart]:not([dragstart=\"\"])::after {\n        display: block;\n        position: absolute;\n        left: var(--_grid-drag-start-x);\n        top: var(--_grid-drag-start-y);\n        z-index: 100;\n        content: attr(dragstart);\n        align-items: center;\n        justify-content: center;\n        box-sizing: border-box;\n        padding: calc(var(--lumo-space-xs) * 0.8);\n        color: var(--lumo-error-contrast-color);\n        background-color: var(--lumo-error-color);\n        border-radius: var(--lumo-border-radius-m);\n        font-family: var(--lumo-font-family);\n        font-size: var(--lumo-font-size-xxs);\n        line-height: 1;\n        font-weight: 500;\n        text-transform: initial;\n        letter-spacing: initial;\n        min-width: calc(var(--lumo-size-s) * 0.7);\n        text-align: center;\n      }\n\n      /* Headers and footers */\n\n      [part~=\"header-cell\"] ::slotted(vaadin-grid-cell-content),\n      [part~=\"footer-cell\"] ::slotted(vaadin-grid-cell-content),\n      [part~=\"reorder-ghost\"] {\n        font-size: var(--lumo-font-size-s);\n        font-weight: 500;\n      }\n\n      [part~=\"footer-cell\"] ::slotted(vaadin-grid-cell-content) {\n        font-weight: 400;\n      }\n\n      [part=\"row\"]:only-child [part~=\"header-cell\"] {\n        min-height: var(--lumo-size-xl);\n      }\n\n      /* Header borders */\n\n      /* Hide first header row top border */\n      :host(:not([theme~=\"no-row-borders\"])) [part=\"row\"]:first-child [part~=\"header-cell\"] {\n        border-top: 0;\n      }\n\n      [part=\"row\"]:last-child [part~=\"header-cell\"] {\n        border-bottom: var(--_lumo-grid-border-width) solid transparent;\n      }\n\n      :host(:not([theme~=\"no-row-borders\"])) [part=\"row\"]:last-child [part~=\"header-cell\"] {\n        border-bottom-color: var(--_lumo-grid-secondary-border-color);\n      }\n\n      /* Overflow uses a stronger border color */\n      :host([overflow~=\"top\"]) [part=\"row\"]:last-child [part~=\"header-cell\"] {\n        border-bottom-color: var(--_lumo-grid-border-color);\n      }\n\n      /* Footer borders */\n\n      [part=\"row\"]:first-child [part~=\"footer-cell\"] {\n        border-top: var(--_lumo-grid-border-width) solid transparent;\n      }\n\n      :host(:not([theme~=\"no-row-borders\"])) [part=\"row\"]:first-child [part~=\"footer-cell\"] {\n        border-top-color: var(--_lumo-grid-secondary-border-color);\n      }\n\n      /* Overflow uses a stronger border color */\n      :host([overflow~=\"bottom\"]) [part=\"row\"]:first-child [part~=\"footer-cell\"] {\n        border-top-color: var(--_lumo-grid-border-color);\n      }\n\n      /* Column reordering */\n\n      :host([reordering]) [part~=\"cell\"] {\n        background: linear-gradient(var(--lumo-shade-20pct), var(--lumo-shade-20pct)) var(--lumo-base-color);\n      }\n\n      :host([reordering]) [part~=\"cell\"][reorder-status=\"allowed\"] {\n        background: var(--lumo-base-color);\n      }\n\n      :host([reordering]) [part~=\"cell\"][reorder-status=\"dragging\"] {\n        background: linear-gradient(var(--lumo-contrast-5pct), var(--lumo-contrast-5pct)) var(--lumo-base-color);\n      }\n\n      [part~=\"reorder-ghost\"] {\n        opacity: 0.85;\n        box-shadow: var(--lumo-box-shadow-s);\n        /* TODO Use the same styles as for the cell element (reorder-ghost copies styles from the cell element) */\n        padding: var(--lumo-space-s) var(--lumo-space-m) !important;\n      }\n\n      /* Column resizing */\n\n      [part=\"resize-handle\"] {\n        width: 3px;\n        background-color: var(--lumo-primary-color-50pct);\n        opacity: 0;\n        transition: opacity 0.2s;\n      }\n\n      :host(:not([reordering])) *:not([column-resizing]) [part~=\"cell\"]:hover [part=\"resize-handle\"],\n      [part=\"resize-handle\"]:active {\n        opacity: 1;\n        transition-delay: 0.15s;\n      }\n\n      /* Column borders */\n\n      :host([theme~=\"column-borders\"]) [part~=\"cell\"]:not([last-column]):not([part~=\"details-cell\"]) {\n        border-right: var(--_lumo-grid-border-width) solid var(--_lumo-grid-secondary-border-color);\n      }\n\n      /* Frozen columns */\n\n      [last-frozen] {\n        border-right: var(--_lumo-grid-border-width) solid transparent;\n        overflow: hidden;\n      }\n\n      :host([overflow~=\"left\"]) [part~=\"cell\"][last-frozen]:not([part~=\"details-cell\"]) {\n        border-right-color: var(--_lumo-grid-border-color);\n      }\n\n      /* Row stripes */\n\n      :host([theme~=\"row-stripes\"]) [part~=\"row\"]:not([odd]) [part~=\"body-cell\"],\n      :host([theme~=\"row-stripes\"]) [part~=\"row\"]:not([odd]) [part~=\"details-cell\"] {\n        background-image: linear-gradient(var(--lumo-contrast-5pct), var(--lumo-contrast-5pct));\n        background-repeat: repeat-x;\n      }\n\n      /* Selected row */\n\n      /* Raise the selected rows above unselected rows (so that box-shadow can cover unselected rows) */\n      :host(:not([reordering])) [part~=\"row\"][selected] {\n        z-index: 1;\n      }\n\n      :host(:not([reordering])) [part~=\"row\"][selected] [part~=\"body-cell\"]:not([part~=\"details-cell\"]) {\n        background-image: linear-gradient(var(--_lumo-grid-selected-row-color), var(--_lumo-grid-selected-row-color));\n        background-repeat: repeat;\n      }\n\n      /* Cover the border of an unselected row */\n      :host(:not([theme~=\"no-row-borders\"])) [part~=\"row\"][selected] [part~=\"cell\"]:not([part~=\"details-cell\"]) {\n        box-shadow: 0 var(--_lumo-grid-border-width) 0 0 var(--_lumo-grid-selected-row-color);\n      }\n\n      /* Compact */\n\n      :host([theme~=\"compact\"]) [part=\"row\"]:only-child [part~=\"header-cell\"] {\n        min-height: var(--lumo-size-m);\n      }\n\n      :host([theme~=\"compact\"]) [part~=\"cell\"] {\n        min-height: var(--lumo-size-s);\n      }\n\n      :host([theme~=\"compact\"]) [part=\"row\"][first] [part~=\"cell\"]:not([part~=\"details-cell\"]) {\n        min-height: calc(var(--lumo-size-s) - var(--_lumo-grid-border-width));\n      }\n\n      :host([theme~=\"compact\"]) [part~=\"cell\"] ::slotted(vaadin-grid-cell-content) {\n        padding: var(--lumo-space-xs) var(--lumo-space-s);\n      }\n\n      /* Wrap cell contents */\n\n      :host([theme~=\"wrap-cell-content\"]) [part~=\"cell\"] ::slotted(vaadin-grid-cell-content) {\n        white-space: normal;\n      }\n\n      /* RTL specific styles */\n\n      :host([dir=\"rtl\"]) [part~=\"row\"][dragstart] [part~=\"cell\"][last-column] {\n        border-radius: var(--lumo-border-radius-s) 0 0 var(--lumo-border-radius-s);\n      }\n\n      :host([dir=\"rtl\"]) [part~=\"row\"][dragstart] [part~=\"cell\"][first-column] {\n        border-radius: 0 var(--lumo-border-radius-s) var(--lumo-border-radius-s) 0;\n      }\n\n      :host([dir=\"rtl\"][theme~=\"column-borders\"]) [part~=\"cell\"]:not([last-column]):not([part~=\"details-cell\"]) {\n        border-right: none;\n        border-left: var(--_lumo-grid-border-width) solid var(--_lumo-grid-secondary-border-color);\n      }\n\n      :host([dir=\"rtl\"]) [last-frozen] {\n        border-right: none;\n        border-left: var(--_lumo-grid-border-width) solid transparent;\n      }\n\n      :host([dir=\"rtl\"][overflow~=\"right\"]) [part~=\"cell\"][last-frozen]:not([part~=\"details-cell\"]) {\n        border-left-color: var(--_lumo-grid-border-color);\n      }\n    </style>\n  </template>\n</dom-module><dom-module theme-for=\"vaadin-checkbox\" id=\"vaadin-grid-select-all-checkbox-lumo\">\n  <template>\n    <style>\n      :host(.vaadin-grid-select-all-checkbox) {\n        font-size: var(--lumo-font-size-m);\n      }\n   </style>\n  </template>\n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n/**\n\nThis is a fork of <iron-list> for <vaadin-grid>'s internal purposes only!\nTo update:\n1. Get the most recent code from https://github.com/PolymerElements/iron-list/\n2. Remove the  <dom-module id=\"iron-list\"> to avoid collisions with actual <iron-list>\n3. Change \"Polymer({\" to \"window.PolymerIronList = Polymer.Class({\" to expose the class\n3.1. Add @namespace\n4. Optional: Remove all properties and functions not needed by <vaadin-grid>\n5. Profit!\n\n*/\n/*\n  FIXME(polymer-modulizer): the above comments were extracted\n  from HTML and may be out of place here. Review them and\n  then delete this comment!\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport { IronResizableBehavior } from '@polymer/iron-resizable-behavior/iron-resizable-behavior.js';\nimport { IronScrollTargetBehavior } from '@polymer/iron-scroll-target-behavior/iron-scroll-target-behavior.js';\nimport { animationFrame, idlePeriod, microTask } from '@polymer/polymer/lib/utils/async.js';\nimport { Class } from '@polymer/polymer/lib/legacy/class.js';\nimport { flush, enqueueDebouncer } from '@polymer/polymer/lib/utils/flush.js';\nimport { flush as flush$0 } from '@polymer/polymer/lib/legacy/polymer.dom.js';\nimport { Debouncer } from '@polymer/polymer/lib/utils/debounce.js';\nvar IOS = navigator.userAgent.match(/iP(?:hone|ad;(?: U;)? CPU) OS (\\d+)/);\nvar IOS_TOUCH_SCROLLING = IOS && IOS[1] >= 8;\nvar DEFAULT_PHYSICAL_COUNT = 3;\nvar ANIMATION_FRAME = animationFrame;\nvar IDLE_TIME = idlePeriod;\nvar MICRO_TASK = microTask;\n\nexport const PolymerIronList = Class({\n\n  behaviors: [\n    IronResizableBehavior,\n    IronScrollTargetBehavior\n  ],\n\n  /**\n   * The ratio of hidden tiles that should remain in the scroll direction.\n   * Recommended value ~0.5, so it will distribute tiles evenly in both directions.\n   */\n  _ratio: 0.5,\n\n  /**\n   * The padding-top value for the list.\n   */\n  _scrollerPaddingTop: 0,\n\n  /**\n   * This value is the same as `scrollTop`.\n   */\n  _scrollPosition: 0,\n\n  /**\n   * The sum of the heights of all the tiles in the DOM.\n   */\n  _physicalSize: 0,\n\n  /**\n   * The average `offsetHeight` of the tiles observed till now.\n   */\n  _physicalAverage: 0,\n\n  /**\n   * The number of tiles which `offsetHeight` > 0 observed until now.\n   */\n  _physicalAverageCount: 0,\n\n  /**\n   * The Y position of the item rendered in the `_physicalStart`\n   * tile relative to the scrolling list.\n   */\n  _physicalTop: 0,\n\n  /**\n   * The number of items in the list.\n   */\n  _virtualCount: 0,\n\n  /**\n   * The estimated scroll height based on `_physicalAverage`\n   */\n  _estScrollHeight: 0,\n\n  /**\n   * The scroll height of the dom node\n   */\n  _scrollHeight: 0,\n\n  /**\n   * The height of the list. This is referred as the viewport in the context of list.\n   */\n  _viewportHeight: 0,\n\n  /**\n   * The width of the list. This is referred as the viewport in the context of list.\n   */\n  _viewportWidth: 0,\n\n  /**\n   * An array of DOM nodes that are currently in the tree\n   * @type {?Array<!TemplatizerNode>}\n   */\n  _physicalItems: null,\n\n  /**\n   * An array of heights for each item in `_physicalItems`\n   * @type {?Array<number>}\n   */\n  _physicalSizes: null,\n\n  /**\n   * A cached value for the first visible index.\n   * See `firstVisibleIndex`\n   * @type {?number}\n   */\n  _firstVisibleIndexVal: null,\n\n  /**\n   * A Polymer collection for the items.\n   * @type {?Polymer.Collection}\n   */\n  _collection: null,\n\n  /**\n   * A cached value for the last visible index.\n   * See `lastVisibleIndex`\n   * @type {?number}\n   */\n  _lastVisibleIndexVal: null,\n\n  /**\n   * The max number of pages to render. One page is equivalent to the height of the list.\n   */\n  _maxPages: 2,\n\n  /**\n   * The virtual index of the focused item.\n   */\n  _focusedVirtualIndex: -1,\n\n  /**\n   * The maximum items per row\n   */\n  _itemsPerRow: 1,\n\n  /**\n   * The height of the row in grid layout.\n   */\n  _rowHeight: 0,\n\n  /**\n   * The cost of stamping a template in ms.\n   */\n  _templateCost: 0,\n\n  /**\n   * The bottom of the physical content.\n   */\n  get _physicalBottom() {\n    return this._physicalTop + this._physicalSize;\n  },\n\n  /**\n   * The bottom of the scroll.\n   */\n  get _scrollBottom() {\n    return this._scrollPosition + this._viewportHeight;\n  },\n\n  /**\n   * The n-th item rendered in the last physical item.\n   */\n  get _virtualEnd() {\n    return this._virtualStart + this._physicalCount - 1;\n  },\n\n  /**\n   * The height of the physical content that isn't on the screen.\n   */\n  get _hiddenContentSize() {\n    var size = this.grid ? this._physicalRows * this._rowHeight : this._physicalSize;\n    return size - this._viewportHeight;\n  },\n\n  /**\n   * The maximum scroll top value.\n   */\n  get _maxScrollTop() {\n    return this._estScrollHeight - this._viewportHeight + this._scrollOffset;\n  },\n\n  /**\n   * The largest n-th value for an item such that it can be rendered in `_physicalStart`.\n   */\n  get _maxVirtualStart() {\n    var virtualCount = this._convertIndexToCompleteRow(this._virtualCount);\n    return Math.max(0, virtualCount - this._physicalCount);\n  },\n\n  set _virtualStart(val) {\n    val = this._clamp(val, 0, this._maxVirtualStart);\n    if (this.grid) {\n      val = val - (val % this._itemsPerRow);\n    }\n    this._virtualStartVal = val;\n  },\n\n  get _virtualStart() {\n    return this._virtualStartVal || 0;\n  },\n\n  /**\n   * The k-th tile that is at the top of the scrolling list.\n   */\n  set _physicalStart(val) {\n    val = val % this._physicalCount;\n    if (val < 0) {\n      val = this._physicalCount + val;\n    }\n    if (this.grid) {\n      val = val - (val % this._itemsPerRow);\n    }\n    this._physicalStartVal = val;\n  },\n\n  get _physicalStart() {\n    return this._physicalStartVal || 0;\n  },\n\n  /**\n   * The k-th tile that is at the bottom of the scrolling list.\n   */\n  get _physicalEnd() {\n    return (this._physicalStart + this._physicalCount - 1) % this._physicalCount;\n  },\n\n  set _physicalCount(val) {\n    this._physicalCountVal = val;\n  },\n\n  get _physicalCount() {\n    return this._physicalCountVal || 0;\n  },\n\n  /**\n   * An optimal physical size such that we will have enough physical items\n   * to fill up the viewport and recycle when the user scrolls.\n   *\n   * This default value assumes that we will at least have the equivalent\n   * to a viewport of physical items above and below the user's viewport.\n   */\n  get _optPhysicalSize() {\n    return this._viewportHeight === 0 ? Infinity : this._viewportHeight * this._maxPages;\n  },\n\n  /**\n   * True if the current list is visible.\n   */\n  get _isVisible() {\n    return Boolean(this.offsetWidth || this.offsetHeight);\n  },\n\n  /**\n   * Gets the index of the first visible item in the viewport.\n   *\n   * @type {number}\n   */\n  get firstVisibleIndex() {\n    var idx = this._firstVisibleIndexVal;\n    if (idx == null) {\n      var physicalOffset = this._physicalTop + this._scrollOffset;\n\n      idx = this._iterateItems(function(pidx, vidx) {\n        physicalOffset += this._getPhysicalSizeIncrement(pidx);\n\n        if (physicalOffset > this._scrollPosition) {\n          return this.grid ? vidx - (vidx % this._itemsPerRow) : vidx;\n        }\n        // Handle a partially rendered final row in grid mode\n        if (this.grid && this._virtualCount - 1 === vidx) {\n          return vidx - (vidx % this._itemsPerRow);\n        }\n      }) || 0;\n      this._firstVisibleIndexVal = idx;\n    }\n    return idx;\n  },\n\n  /**\n   * Gets the index of the last visible item in the viewport.\n   *\n   * @type {number}\n   */\n  get lastVisibleIndex() {\n    var idx = this._lastVisibleIndexVal;\n    if (idx == null) {\n      if (this.grid) {\n        idx = Math.min(this._virtualCount, this.firstVisibleIndex + this._estRowsInView * this._itemsPerRow - 1);\n      } else {\n        var physicalOffset = this._physicalTop + this._scrollOffset;\n        this._iterateItems(function(pidx, vidx) {\n          if (physicalOffset < this._scrollBottom) {\n            idx = vidx;\n          }\n          physicalOffset += this._getPhysicalSizeIncrement(pidx);\n        });\n      }\n      this._lastVisibleIndexVal = idx;\n    }\n    return idx;\n  },\n\n  get _scrollOffset() {\n    return this._scrollerPaddingTop;\n  },\n\n  attached: function() {\n    this._debounce('_render', this._render, ANIMATION_FRAME);\n    // `iron-resize` is fired when the list is attached if the event is added\n    // before attached causing unnecessary work.\n    this.listen(this, 'iron-resize', '_resizeHandler');\n  },\n\n  detached: function() {\n    this.unlisten(this, 'iron-resize', '_resizeHandler');\n  },\n\n  /**\n   * Invoke this method if you dynamically update the viewport's\n   * size or CSS padding.\n   *\n   * @method updateViewportBoundaries\n   */\n  updateViewportBoundaries: function() {\n    var styles = window.getComputedStyle(this);\n    this._scrollerPaddingTop = this.scrollTarget === this ? 0 : parseInt(styles['padding-top'], 10);\n    this._isRTL = Boolean(styles.direction === 'rtl');\n    this._viewportWidth = this.$.items.offsetWidth;\n    this._viewportHeight = this._scrollTargetHeight;\n    this.grid && this._updateGridMetrics();\n  },\n\n  /**\n   * Recycles the physical items when needed.\n   */\n  _scrollHandler: function() {\n    var scrollTop = Math.max(0, Math.min(this._maxScrollTop, this._scrollTop));\n    var delta = scrollTop - this._scrollPosition;\n    var isScrollingDown = delta >= 0;\n    // Track the current scroll position.\n    this._scrollPosition = scrollTop;\n    // Clear indexes for first and last visible indexes.\n    this._firstVisibleIndexVal = null;\n    this._lastVisibleIndexVal = null;\n    // Random access.\n    if (Math.abs(delta) > this._physicalSize && this._physicalSize > 0) {\n      delta = delta - this._scrollOffset;\n      var idxAdjustment = Math.round(delta / this._physicalAverage) * this._itemsPerRow;\n      this._virtualStart = this._virtualStart + idxAdjustment;\n      this._physicalStart = this._physicalStart + idxAdjustment;\n      // Estimate new physical offset.\n      this._physicalTop = Math.floor(this._virtualStart / this._itemsPerRow) * this._physicalAverage;\n      this._update();\n    } else if (this._physicalCount > 0) {\n      var reusables = this._getReusables(isScrollingDown);\n      if (isScrollingDown) {\n        this._physicalTop = reusables.physicalTop;\n        this._virtualStart = this._virtualStart + reusables.indexes.length;\n        this._physicalStart = this._physicalStart + reusables.indexes.length;\n      } else {\n        this._virtualStart = this._virtualStart - reusables.indexes.length;\n        this._physicalStart = this._physicalStart - reusables.indexes.length;\n      }\n      this._update(reusables.indexes, isScrollingDown ? null : reusables.indexes);\n      this._debounce('_increasePoolIfNeeded', this._increasePoolIfNeeded.bind(this, 0), MICRO_TASK);\n    }\n  },\n\n  /**\n   * Returns an object that contains the indexes of the physical items\n   * that might be reused and the physicalTop.\n   *\n   * @param {boolean} fromTop If the potential reusable items are above the scrolling region.\n   */\n  _getReusables: function(fromTop) {\n    var ith, offsetContent, physicalItemHeight;\n    var idxs = [];\n    var protectedOffsetContent = this._hiddenContentSize * this._ratio;\n    var virtualStart = this._virtualStart;\n    var virtualEnd = this._virtualEnd;\n    var physicalCount = this._physicalCount;\n    var top = this._physicalTop + this._scrollOffset;\n    var bottom = this._physicalBottom + this._scrollOffset;\n    var scrollTop = this._scrollTop;\n    var scrollBottom = this._scrollBottom;\n\n    if (fromTop) {\n      ith = this._physicalStart;\n      offsetContent = scrollTop - top;\n    } else {\n      ith = this._physicalEnd;\n      offsetContent = bottom - scrollBottom;\n    }\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n      physicalItemHeight = this._getPhysicalSizeIncrement(ith);\n      offsetContent = offsetContent - physicalItemHeight;\n      if (idxs.length >= physicalCount || offsetContent <= protectedOffsetContent) {\n        break;\n      }\n      if (fromTop) {\n        // Check that index is within the valid range.\n        if (virtualEnd + idxs.length + 1 >= this._virtualCount) {\n          break;\n        }\n        // Check that the index is not visible.\n        if (top + physicalItemHeight >= scrollTop - this._scrollOffset) {\n          break;\n        }\n        idxs.push(ith);\n        top = top + physicalItemHeight;\n        ith = (ith + 1) % physicalCount;\n      } else {\n        // Check that index is within the valid range.\n        if (virtualStart - idxs.length <= 0) {\n          break;\n        }\n        // Check that the index is not visible.\n        if (top + this._physicalSize - physicalItemHeight <= scrollBottom) {\n          break;\n        }\n        idxs.push(ith);\n        top = top - physicalItemHeight;\n        ith = (ith === 0) ? physicalCount - 1 : ith - 1;\n      }\n    }\n    return {indexes: idxs, physicalTop: top - this._scrollOffset};\n  },\n\n  /**\n   * Update the list of items, starting from the `_virtualStart` item.\n   * @param {!Array<number>=} itemSet\n   * @param {!Array<number>=} movingUp\n   */\n  _update: function(itemSet, movingUp) {\n    if ((itemSet && itemSet.length === 0) || this._physicalCount === 0) {\n      return;\n    }\n    this._manageFocus();\n    this._assignModels(itemSet);\n    this._updateMetrics(itemSet);\n    // Adjust offset after measuring.\n    if (movingUp) {\n      while (movingUp.length) {\n        var idx = movingUp.pop();\n        this._physicalTop -= this._getPhysicalSizeIncrement(idx);\n      }\n    }\n    this._positionItems();\n    this._updateScrollerSize();\n  },\n\n  _isClientFull: function() {\n    return this._scrollBottom != 0 && this._physicalBottom - 1 >= this._scrollBottom &&\n        this._physicalTop <= this._scrollPosition;\n  },\n\n  /**\n   * Increases the pool size.\n   */\n  _increasePoolIfNeeded: function(count) {\n    var nextPhysicalCount = this._clamp(this._physicalCount + count,\n      DEFAULT_PHYSICAL_COUNT, this._virtualCount - this._virtualStart);\n    nextPhysicalCount = this._convertIndexToCompleteRow(nextPhysicalCount);\n    var delta = nextPhysicalCount - this._physicalCount;\n    var nextIncrease = Math.round(this._physicalCount * 0.5);\n\n    if (delta < 0) {\n      return;\n    }\n    if (delta > 0) {\n      var ts = window.performance.now();\n      // Concat arrays in place.\n      [].push.apply(this._physicalItems, this._createPool(delta));\n      // Push 0s into physicalSizes. Can't use Array.fill because IE11 doesn't support it.\n      for (var i = 0; i < delta; i++) {\n        this._physicalSizes.push(0);\n      }\n      this._physicalCount = this._physicalCount + delta;\n      // Update the physical start if it needs to preserve the model of the focused item.\n      // In this situation, the focused item is currently rendered and its model would\n      // have changed after increasing the pool if the physical start remained unchanged.\n      if (this._physicalStart > this._physicalEnd &&\n          this._isIndexRendered(this._focusedVirtualIndex) &&\n          this._getPhysicalIndex(this._focusedVirtualIndex) < this._physicalEnd) {\n        this._physicalStart = this._physicalStart + delta;\n      }\n      this._update();\n      this._templateCost = (window.performance.now() - ts) / delta;\n      nextIncrease = Math.round(this._physicalCount * 0.5);\n    }\n    // The upper bounds is not fixed when dealing with a grid that doesn't\n    // fill it's last row with the exact number of items per row.\n    if (this._virtualEnd >= this._virtualCount - 1 || nextIncrease === 0) {\n      // Do nothing.\n    } else if (!this._isClientFull()) {\n      this._debounce(\n        '_increasePoolIfNeeded',\n        this._increasePoolIfNeeded.bind(\n          this,\n          nextIncrease\n        ), MICRO_TASK);\n    } else if (this._physicalSize < this._optPhysicalSize) {\n      // Yield and increase the pool during idle time until the physical size is optimal.\n      this._debounce(\n        '_increasePoolIfNeeded',\n        this._increasePoolIfNeeded.bind(\n          this,\n          this._clamp(Math.round(50 / this._templateCost), 1, nextIncrease)\n        ), IDLE_TIME);\n    }\n  },\n\n  /**\n   * Renders the a new list.\n   */\n  _render: function() {\n    if (!this.isAttached || !this._isVisible) {\n      return;\n    }\n    if (this._physicalCount !== 0) {\n      var reusables = this._getReusables(true);\n      this._physicalTop = reusables.physicalTop;\n      this._virtualStart = this._virtualStart + reusables.indexes.length;\n      this._physicalStart = this._physicalStart + reusables.indexes.length;\n      this._update(reusables.indexes);\n      this._update();\n      this._increasePoolIfNeeded(0);\n    } else if (this._virtualCount > 0) {\n      // Initial render\n      this.updateViewportBoundaries();\n      this._increasePoolIfNeeded(DEFAULT_PHYSICAL_COUNT);\n    }\n  },\n\n  /**\n   * Called when the items have changed. That is, reassignments\n   * to `items`, splices or updates to a single item.\n   */\n  _itemsChanged: function(change) {\n    if (change.path === 'items') {\n      this._virtualStart = 0;\n      this._physicalTop = 0;\n      this._virtualCount = this.items ? this.items.length : 0;\n      this._collection = this.items && undefined ?\n        undefined.get(this.items) : null;\n      this._physicalIndexForKey = {};\n      this._firstVisibleIndexVal = null;\n      this._lastVisibleIndexVal = null;\n      this._physicalCount = this._physicalCount || 0;\n      this._physicalItems = this._physicalItems || [];\n      this._physicalSizes = this._physicalSizes || [];\n      this._physicalStart = 0;\n      if (this._scrollTop > this._scrollOffset) {\n        this._resetScrollPosition(0);\n      }\n      this._removeFocusedItem();\n      this._debounce('_render', this._render, ANIMATION_FRAME);\n    }\n  },\n\n  /**\n   * Executes a provided function per every physical index in `itemSet`\n   * `itemSet` default value is equivalent to the entire set of physical indexes.\n   *\n   * @param {!function(number, number)} fn\n   * @param {!Array<number>=} itemSet\n   */\n  _iterateItems: function(fn, itemSet) {\n    var pidx, vidx, rtn, i;\n\n    if (arguments.length === 2 && itemSet) {\n      for (i = 0; i < itemSet.length; i++) {\n        pidx = itemSet[i];\n        vidx = this._computeVidx(pidx);\n        if ((rtn = fn.call(this, pidx, vidx)) != null) {\n          return rtn;\n        }\n      }\n    } else {\n      pidx = this._physicalStart;\n      vidx = this._virtualStart;\n      for (; pidx < this._physicalCount; pidx++, vidx++) {\n        if ((rtn = fn.call(this, pidx, vidx)) != null) {\n          return rtn;\n        }\n      }\n      for (pidx = 0; pidx < this._physicalStart; pidx++, vidx++) {\n        if ((rtn = fn.call(this, pidx, vidx)) != null) {\n          return rtn;\n        }\n      }\n    }\n  },\n\n  /**\n   * Returns the virtual index for a given physical index\n   *\n   * @param {number} pidx Physical index\n   * @return {number}\n   */\n  _computeVidx: function(pidx) {\n    if (pidx >= this._physicalStart) {\n      return this._virtualStart + (pidx - this._physicalStart);\n    }\n    return this._virtualStart + (this._physicalCount - this._physicalStart) + pidx;\n  },\n\n  /**\n   * Updates the height for a given set of items.\n   *\n   * @param {!Array<number>=} itemSet\n   */\n  _updateMetrics: function(itemSet) {\n    // Make sure we distributed all the physical items\n    // so we can measure them.\n    flush ? flush() : flush$0();\n\n    var newPhysicalSize = 0;\n    var oldPhysicalSize = 0;\n    var prevAvgCount = this._physicalAverageCount;\n    var prevPhysicalAvg = this._physicalAverage;\n\n    this._iterateItems(function(pidx, vidx) {\n      oldPhysicalSize += this._physicalSizes[pidx];\n      this._physicalSizes[pidx] = this._physicalItems[pidx].offsetHeight;\n      newPhysicalSize += this._physicalSizes[pidx];\n      this._physicalAverageCount += this._physicalSizes[pidx] ? 1 : 0;\n    }, itemSet);\n\n    if (this.grid) {\n      this._updateGridMetrics();\n      this._physicalSize = Math.ceil(this._physicalCount / this._itemsPerRow) * this._rowHeight;\n    } else {\n      oldPhysicalSize = (this._itemsPerRow === 1) ?\n        oldPhysicalSize :\n        Math.ceil(this._physicalCount / this._itemsPerRow) * this._rowHeight;\n      this._physicalSize = this._physicalSize + newPhysicalSize - oldPhysicalSize;\n      this._itemsPerRow = 1;\n    }\n    // Update the average if it measured something.\n    if (this._physicalAverageCount !== prevAvgCount) {\n      this._physicalAverage = Math.round(\n        ((prevPhysicalAvg * prevAvgCount) + newPhysicalSize) /\n        this._physicalAverageCount);\n    }\n  },\n\n  /**\n   * Updates the position of the physical items.\n   */\n  _positionItems: function() {\n    this._adjustScrollPosition();\n\n    var y = this._physicalTop;\n\n    this._iterateItems(function(pidx, vidx) {\n      this.translate3d(0, y + 'px', 0, this._physicalItems[pidx]);\n      y += this._physicalSizes[pidx];\n    });\n  },\n\n  _getPhysicalSizeIncrement: function(pidx) {\n    if (!this.grid) {\n      return this._physicalSizes[pidx];\n    }\n    if (this._computeVidx(pidx) % this._itemsPerRow !== this._itemsPerRow - 1) {\n      return 0;\n    }\n    return this._rowHeight;\n  },\n\n  /**\n   * Adjusts the scroll position when it was overestimated.\n   */\n  _adjustScrollPosition: function() {\n    var deltaHeight = this._virtualStart === 0 ? this._physicalTop : Math.min(this._scrollPosition + this._physicalTop, 0);\n    // Note: the delta can be positive or negative.\n    if (deltaHeight !== 0) {\n      this._physicalTop = this._physicalTop - deltaHeight;\n      var scrollTop = this._scrollTop;\n      // juking scroll position during interial scrolling on iOS is no bueno\n      if (!IOS_TOUCH_SCROLLING && scrollTop > 0) {\n        this._resetScrollPosition(scrollTop - deltaHeight);\n      }\n    }\n  },\n\n  /**\n   * Sets the position of the scroll.\n   */\n  _resetScrollPosition: function(pos) {\n    if (this.scrollTarget && pos >= 0) {\n      this._scrollTop = pos;\n      this._scrollPosition = this._scrollTop;\n    }\n  },\n\n  /**\n   * Sets the scroll height, that's the height of the content,\n   *\n   * @param {boolean=} forceUpdate If true, updates the height no matter what.\n   */\n  _updateScrollerSize: function(forceUpdate) {\n    if (this.grid) {\n      this._estScrollHeight = this._virtualRowCount * this._rowHeight;\n    } else {\n      this._estScrollHeight = (this._physicalBottom +\n          Math.max(this._virtualCount - this._physicalCount - this._virtualStart, 0) * this._physicalAverage);\n    }\n    forceUpdate = forceUpdate || this._scrollHeight === 0;\n    forceUpdate = forceUpdate || this._scrollPosition >= this._estScrollHeight - this._physicalSize;\n    forceUpdate = forceUpdate || this.grid && this.$.items.style.height < this._estScrollHeight;\n    // Amortize height adjustment, so it won't trigger large repaints too often.\n    if (forceUpdate || Math.abs(this._estScrollHeight - this._scrollHeight) >= this._viewportHeight) {\n      this.$.items.style.height = this._estScrollHeight + 'px';\n      this._scrollHeight = this._estScrollHeight;\n    }\n  },\n\n  /**\n   * Scroll to a specific index in the virtual list regardless\n   * of the physical items in the DOM tree.\n   *\n   * @method scrollToIndex\n   * @param {number} idx The index of the item\n   */\n  scrollToIndex: function(idx) {\n    if (typeof idx !== 'number' || idx < 0 || idx > this.items.length - 1) {\n      return;\n    }\n    flush ? flush() : flush$0();\n    // Items should have been rendered prior scrolling to an index.\n    if (this._physicalCount === 0) {\n      return;\n    }\n    idx = this._clamp(idx, 0, this._virtualCount - 1);\n    // Update the virtual start only when needed.\n    if (!this._isIndexRendered(idx) || idx >= this._maxVirtualStart) {\n      this._virtualStart = this.grid ? (idx - this._itemsPerRow * 2) : (idx - 1);\n    }\n    this._manageFocus();\n    this._assignModels();\n    this._updateMetrics();\n    // Estimate new physical offset.\n    this._physicalTop = Math.floor(this._virtualStart / this._itemsPerRow) * this._physicalAverage;\n\n    var currentTopItem = this._physicalStart;\n    var currentVirtualItem = this._virtualStart;\n    var targetOffsetTop = 0;\n    var hiddenContentSize = this._hiddenContentSize;\n    // scroll to the item as much as we can.\n    while (currentVirtualItem < idx && targetOffsetTop <= hiddenContentSize) {\n      targetOffsetTop = targetOffsetTop + this._getPhysicalSizeIncrement(currentTopItem);\n      currentTopItem = (currentTopItem + 1) % this._physicalCount;\n      currentVirtualItem++;\n    }\n    this._updateScrollerSize(true);\n    this._positionItems();\n    this._resetScrollPosition(this._physicalTop + this._scrollOffset + targetOffsetTop);\n    this._increasePoolIfNeeded(0);\n    // clear cached visible index.\n    this._firstVisibleIndexVal = null;\n    this._lastVisibleIndexVal = null;\n  },\n\n  /**\n   * Reset the physical average and the average count.\n   */\n  _resetAverage: function() {\n    this._physicalAverage = 0;\n    this._physicalAverageCount = 0;\n  },\n\n  /**\n   * A handler for the `iron-resize` event triggered by `IronResizableBehavior`\n   * when the element is resized.\n   */\n  _resizeHandler: function() {\n    this._debounce('_render', function() {\n      // clear cached visible index.\n      this._firstVisibleIndexVal = null;\n      this._lastVisibleIndexVal = null;\n      // Skip the resize event on touch devices when the address bar slides up.\n      this.updateViewportBoundaries();\n      if (this._isVisible) {\n        // Reinstall the scroll event listener.\n        this.toggleScrollListener(true);\n        this._resetAverage();\n        this._render();\n      } else {\n        // Uninstall the scroll event listener.\n        this.toggleScrollListener(false);\n      }\n    }, ANIMATION_FRAME);\n  },\n\n  /**\n   * Converts a random index to the index of the item that completes it's row.\n   * Allows for better order and fill computation when grid == true.\n   */\n  _convertIndexToCompleteRow: function(idx) {\n    // when grid == false _itemPerRow can be unset.\n    this._itemsPerRow = this._itemsPerRow || 1;\n    return this.grid ? Math.ceil(idx / this._itemsPerRow) * this._itemsPerRow : idx;\n  },\n\n  _isIndexRendered: function(idx) {\n    return idx >= this._virtualStart && idx <= this._virtualEnd;\n  },\n\n  _getPhysicalIndex: function(vidx) {\n    return (this._physicalStart + (vidx - this._virtualStart)) % this._physicalCount;\n  },\n\n  _clamp: function(v, min, max) {\n    return Math.min(max, Math.max(min, v));\n  },\n\n  _debounce: function(name, cb, asyncModule) {\n    this._debouncers = this._debouncers || {};\n    this._debouncers[name] = Debouncer.debounce(\n      this._debouncers[name],\n      asyncModule,\n      cb.bind(this));\n    enqueueDebouncer(this._debouncers[name]);\n  }\n\n});\n","/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport { afterNextRender } from '@polymer/polymer/lib/utils/render-status.js';\n\nimport { animationFrame } from '@polymer/polymer/lib/utils/async.js';\nimport { flush } from '@polymer/polymer/lib/utils/flush.js';\nimport { PolymerIronList } from './iron-list.js';\nimport { Debouncer } from '@polymer/polymer/lib/utils/debounce.js';\n/**\n * This Element is used internally by vaadin-grid.\n *\n * @private\n */\nclass GridScrollerElement extends PolymerIronList {\n\n  static get is() {\n    return 'vaadin-grid-scroller';\n  }\n\n  static get properties() {\n    return {\n      size: {\n        type: Number,\n        notify: true\n      },\n      _vidxOffset: {\n        value: 0\n      }\n    };\n  }\n\n  static get observers() {\n    return [\n      '_effectiveSizeChanged(_effectiveSize)'\n    ];\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    this._scrollHandler();\n  }\n\n  /**\n  * @protected\n  */\n  _updateScrollerItem(item, index) {}\n  /**\n  * @protected\n  */\n  _afterScroll() {}\n  /**\n  * @protected\n  */\n  _getRowTarget() {}\n  /**\n  * @protected\n  */\n  _createScrollerRows() {}\n  /**\n  * @protected\n  */\n  _canPopulate() {}\n\n  /**\n  * @private\n  */\n  scrollToIndex(index) {\n    this._warnPrivateAPIAccess('scrollToIndex');\n\n    if (index > 0) {\n      this._pendingScrollToIndex = null;\n    }\n    if (!parseInt(this.$.items.style.borderTopWidth) && index > 0) {\n      // Schedule another scroll to be invoked once init is complete\n      this._pendingScrollToIndex = index;\n    }\n\n    this._scrollingToIndex = true;\n    index = Math.min(Math.max(index, 0), this._effectiveSize - 1);\n    this.$.table.scrollTop = index / this._effectiveSize * (this.$.table.scrollHeight - this.$.table.offsetHeight);\n    this._scrollHandler();\n\n    if (this._accessIronListAPI(() => this._maxScrollTop) && this._virtualCount < this._effectiveSize) {\n      this._adjustVirtualIndexOffset(1000000);\n    }\n\n    this._accessIronListAPI(() => super.scrollToIndex(index - this._vidxOffset));\n    this._scrollHandler();\n\n    // Ensure scroll position\n    const row = Array.from(this.$.items.children).filter(child => child.index === index)[0];\n    if (row) {\n      const headerOffset = row.getBoundingClientRect().top - this.$.header.getBoundingClientRect().bottom;\n      if (Math.abs(headerOffset) > 1) {\n        this.$.table.scrollTop += headerOffset;\n        this._scrollHandler();\n      }\n    }\n\n    this._scrollingToIndex = false;\n  }\n\n  _effectiveSizeChanged(size) {\n    let fvi; // first visible (adjusted) index\n    let fviOffset = 0;\n    this._iterateItems((pidx, vidx) => {\n      if (vidx === this._firstVisibleIndex) {\n        const row = this._physicalItems[pidx];\n        fvi = row.index;\n        fviOffset = row.getBoundingClientRect().top;\n      }\n    });\n\n    if (this.items && size < this.items.length) {\n      // Size was reduced, scroll to 0 first\n      this._scrollTop = 0;\n    }\n    if (!Array.isArray(this.items)) {\n      // Edge/IE seems to have the lowest maximum\n      const maxVirtualItems = this._edge || this._ie ? 30000 : 100000;\n      this.items = {length: Math.min(size, maxVirtualItems)};\n    }\n\n    this._accessIronListAPI(() => super._itemsChanged({path: 'items'}));\n\n    this._virtualCount = Math.min(this.items.length, size) || 0;\n\n    if (this._scrollTop === 0) {\n      this._accessIronListAPI(() => this._scrollToIndex(Math.min(size - 1, fvi)));\n      this._iterateItems((pidx, vidx) => {\n        const row = this._physicalItems[pidx];\n        if (row.index === fvi) {\n          this.$.table.scrollTop += Math.round(row.getBoundingClientRect().top - fviOffset);\n        }\n        // Restore keyboard focus to the right cell\n        if (row.index === this._focusedItemIndex && this._itemsFocusable && this.$.items.contains(this.shadowRoot.activeElement)) {\n          const cellIndex = Array.from(this._itemsFocusable.parentElement.children).indexOf(this._itemsFocusable);\n          row.children[cellIndex].focus();\n        }\n      });\n    }\n    this._assignModels();\n    requestAnimationFrame(() => this._update());\n  }\n\n  _positionItems() {\n    this._adjustScrollPosition();\n\n    let rePosition;\n    if (isNaN(this._physicalTop)) {\n      rePosition = true;\n      this._physicalTop = 0;\n    }\n\n    let y = this._physicalTop;\n    this._iterateItems((pidx, vidx) => {\n      this._physicalItems[pidx].style.transform = `translateY(${y}px)`;\n      y += this._physicalSizes[pidx];\n    });\n\n    if (rePosition) {\n      this._scrollToIndex(0);\n    }\n  }\n\n  _increasePoolIfNeeded(count) {\n    if ((count === 0 && this._scrollingToIndex) || !this._canPopulate() || !this._effectiveSize) {\n      return;\n    }\n\n    if (!this._initialPoolCreated) {\n      this._initialPoolCreated = true;\n      super._increasePoolIfNeeded(25);\n    } else if (this._optPhysicalSize !== Infinity) {\n      this._debounceIncreasePool = Debouncer.debounce(\n        this._debounceIncreasePool,\n        animationFrame,\n        () => {\n          this._updateMetrics();\n          const remainingPhysicalSize = this._optPhysicalSize - this._physicalSize;\n          let estimatedMissingRowCount = Math.ceil(remainingPhysicalSize / this._physicalAverage);\n\n          if (this._physicalCount + estimatedMissingRowCount > this._effectiveSize) {\n            // Do not increase the physical item count above the this._effectiveSize\n            estimatedMissingRowCount = Math.max(0, this._effectiveSize - this._physicalCount);\n          }\n\n          if (this._physicalSize && estimatedMissingRowCount > 0 && this._optPhysicalSize !== Infinity) {\n            super._increasePoolIfNeeded(estimatedMissingRowCount);\n            // Ensure the rows are in order after increasing pool\n            this.__reorderChildNodes();\n          }\n        });\n    }\n  }\n\n  __reorderChildNodes() {\n    const childNodes = Array.from(this.$.items.childNodes);\n    const rowsInOrder = !!childNodes.reduce((inOrder, current, currentIndex, array) => {\n      if (currentIndex === 0 || array[currentIndex - 1].index === current.index - 1) {\n        return inOrder;\n      }\n    }, true);\n\n    if (!rowsInOrder) {\n      childNodes.sort((row1, row2) => {\n        return row1.index - row2.index;\n      }).forEach(row => this.$.items.appendChild(row));\n    }\n  }\n\n  _createPool(size) {\n    const fragment = document.createDocumentFragment();\n    const physicalItems = this._createScrollerRows(size);\n\n    physicalItems.forEach(inst => fragment.appendChild(inst));\n    this._getRowTarget().appendChild(fragment);\n\n    // Weird hack needed to get Safari to actually distribute slots\n    const content = this.querySelector('[slot]');\n    if (content) {\n      const slot = content.getAttribute('slot');\n      content.setAttribute('slot', 'foo-bar');\n      content.setAttribute('slot', slot);\n    }\n\n    this._updateHeaderFooterMetrics();\n\n    afterNextRender(this, () => this.notifyResize());\n    return physicalItems;\n  }\n\n  /**\n   * Assigns the data models to a given set of items.\n   * @param {!Array<number>=} itemSet\n   */\n  _assignModels(itemSet) {\n    this._iterateItems((pidx, vidx) => {\n      const el = this._physicalItems[pidx];\n      this._toggleAttribute('hidden', vidx >= this._effectiveSize, el);\n      this._updateScrollerItem(el, vidx + (this._vidxOffset || 0));\n    }, itemSet);\n  }\n\n  _scrollHandler() {\n    const delta = this.$.table.scrollTop - this._scrollPosition;\n    this._accessIronListAPI(super._scrollHandler);\n    const oldOffset = this._vidxOffset;\n    if (this._accessIronListAPI(() => this._maxScrollTop) && this._virtualCount < this._effectiveSize) {\n      this._adjustVirtualIndexOffset(delta);\n    }\n    if (this._vidxOffset !== oldOffset) {\n      this._update();\n    }\n    this._afterScroll();\n  }\n\n  _adjustVirtualIndexOffset(delta) {\n    if (Math.abs(delta) > 10000) {\n      if (this._noScale) {\n        this._noScale = false;\n        return;\n      }\n      const scale = this.$.table.scrollTop / (this.$.table.scrollHeight - this.$.table.offsetHeight);\n      const offset = scale * this._effectiveSize;\n      this._vidxOffset = Math.round(offset - scale * this._virtualCount);\n    } else {\n      // Make sure user can always swipe/wheel scroll to the start and end\n      const oldOffset = this._vidxOffset || 0;\n      const threshold = 1000;\n      const maxShift = 100;\n      // At start\n      if (this._scrollTop === 0) {\n        this._vidxOffset = 0;\n        if (oldOffset !== this._vidxOffset) {\n          super.scrollToIndex(0);\n        }\n      } else if (this.firstVisibleIndex < threshold && this._vidxOffset > 0) {\n        this._vidxOffset -= Math.min(this._vidxOffset, maxShift);\n        if (oldOffset !== this._vidxOffset) {\n          super.scrollToIndex(this.firstVisibleIndex + (oldOffset - this._vidxOffset));\n        }\n        this._noScale = true;\n      }\n      // At end\n      const maxOffset = this._effectiveSize - this._virtualCount;\n      if (this._scrollTop >= this._maxScrollTop && this._maxScrollTop > 0) {\n        this._vidxOffset = maxOffset;\n        if (oldOffset !== this._vidxOffset) {\n          super.scrollToIndex(this._virtualCount);\n        }\n      } else if (this.firstVisibleIndex > this._virtualCount - threshold && this._vidxOffset < maxOffset) {\n        this._vidxOffset += Math.min(maxOffset - this._vidxOffset, maxShift);\n        if (oldOffset !== this._vidxOffset) {\n          super.scrollToIndex(this.firstVisibleIndex - (this._vidxOffset - oldOffset));\n        }\n        this._noScale = true;\n      }\n    }\n  }\n\n  _accessIronListAPI(cb) {\n    this._warnPrivateAPIAccessAsyncEnabled = false;\n    const returnValue = cb.apply(this);\n    this._debouncerWarnPrivateAPIAccess = Debouncer.debounce(\n      this._debouncerWarnPrivateAPIAccess,\n      animationFrame,\n      () => this._warnPrivateAPIAccessAsyncEnabled = true\n    );\n    return returnValue;\n  }\n\n  /* Allow iron-list to access its APIs from debounced callbacks without warns */\n  _debounceRender(cb, asyncModule) {\n    super._debounceRender(() => this._accessIronListAPI(cb), asyncModule);\n  }\n\n  /* Warn when iron-list APIs are being accessed directly */\n  _warnPrivateAPIAccess(apiName) {\n    if (this._warnPrivateAPIAccessAsyncEnabled) {\n      console.warn(`Accessing private API (${apiName})!`);\n    }\n  }\n\n  _render() {\n    this._accessIronListAPI(super._render);\n  }\n\n  _createFocusBackfillItem() { /* Ignore */ }\n  _multiSelectionChanged() { /* Ignore */ }\n  clearSelection() { /* Ignore */ }\n  _itemsChanged() { /* Ignore */ }\n  _manageFocus() { /* Ignore */ }\n  _removeFocusedItem() { /* Ignore */ }\n\n  get _firstVisibleIndex() {\n    return this._accessIronListAPI(() => super.firstVisibleIndex);\n  }\n  get _lastVisibleIndex() {\n    return this._accessIronListAPI(() => super.lastVisibleIndex);\n  }\n  _scrollToIndex(index) {\n    this._accessIronListAPI(() => this.scrollToIndex(index));\n  }\n  get firstVisibleIndex() {\n    this._warnPrivateAPIAccess('firstVisibleIndex'); return super.firstVisibleIndex;\n  }\n  set firstVisibleIndex(value) {\n    this._warnPrivateAPIAccess('firstVisibleIndex'); super.firstVisibleIndex = value;\n  }\n  get lastVisibleIndex() {\n    this._warnPrivateAPIAccess('lastVisibleIndex'); return super.lastVisibleIndex;\n  }\n  set lastVisibleIndex(value) {\n    this._warnPrivateAPIAccess('lastVisibleIndex'); super.lastVisibleIndex = value;\n  }\n  updateViewportBoundaries() {\n    this._warnPrivateAPIAccess('updateViewportBoundaries'); super.updateViewportBoundaries.apply(this, arguments);\n  }\n  _resizeHandler() {\n    super._resizeHandler();\n    flush();\n  }\n}\n\ncustomElements.define(GridScrollerElement.is, GridScrollerElement);\n\nexport { GridScrollerElement as ScrollerElement };\n","/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\n/**\n * @polymerMixin\n */\nexport const A11yMixin = superClass => class A11yMixin extends superClass {\n  static get observers() {\n    return [\n      '_a11yUpdateGridSize(size, _columnTree, _columnTree.*)'\n    ];\n  }\n\n  _a11yGetHeaderRowCount(_columnTree) {\n    return _columnTree.filter(level => level.some(col => col._headerTemplate || col.headerRenderer || col.path || col.header)).length;\n  }\n\n  _a11yGetFooterRowCount(_columnTree) {\n    return _columnTree.filter(level => level.some(col => col._headerTemplate || col.headerRenderer)).length;\n  }\n\n  _a11yUpdateGridSize(size, _columnTree) {\n    if (size === undefined || _columnTree === undefined) {\n      return;\n    }\n\n    const bodyColumns = _columnTree[_columnTree.length - 1];\n    this.$.table.setAttribute(\n      'aria-rowcount',\n      size + this._a11yGetHeaderRowCount(_columnTree) + this._a11yGetFooterRowCount(_columnTree)\n    );\n    this.$.table.setAttribute('aria-colcount', bodyColumns && bodyColumns.length || 0);\n\n    this._a11yUpdateHeaderRows();\n    this._a11yUpdateFooterRows();\n  }\n\n  _a11yUpdateHeaderRows() {\n    Array.from(this.$.header.children).forEach((headerRow, index) =>\n      headerRow.setAttribute('aria-rowindex', index + 1)\n    );\n  }\n\n  _a11yUpdateFooterRows() {\n    Array.from(this.$.footer.children).forEach((footerRow, index) =>\n      footerRow.setAttribute(\n        'aria-rowindex',\n        this._a11yGetHeaderRowCount(this._columnTree) + this.size + index + 1\n      )\n    );\n  }\n\n  _a11yUpdateRowRowindex(row, index) {\n    row.setAttribute('aria-rowindex', index + this._a11yGetHeaderRowCount(this._columnTree) + 1);\n  }\n\n  _a11yUpdateRowSelected(row, selected) {\n    // Jaws reads selection only for rows, NVDA only for cells\n    row.setAttribute('aria-selected', Boolean(selected));\n    Array.from(row.children).forEach(cell =>\n      cell.setAttribute('aria-selected', Boolean(selected))\n    );\n  }\n\n  _a11yUpdateRowLevel(row, level) {\n    row.setAttribute('aria-level', level + 1);\n  }\n\n  _a11yUpdateRowDetailsOpened(row, detailsOpened) {\n    Array.from(row.children).forEach(cell => {\n      if (typeof detailsOpened === 'boolean') {\n        cell.setAttribute('aria-expanded', detailsOpened);\n      } else {\n        if (cell.hasAttribute('aria-expanded')) {\n          cell.removeAttribute('aria-expanded');\n        }\n      }\n    });\n  }\n\n  _a11ySetRowDetailsCell(row, detailsCell) {\n    Array.from(row.children).forEach(cell => {\n      if (cell !== detailsCell) {\n        cell.setAttribute('aria-controls', detailsCell.id);\n      }\n    });\n  }\n\n  _a11yUpdateCellColspan(cell, colspan) {\n    cell.setAttribute('aria-colspan', Number(colspan));\n  }\n\n  _a11yUpdateSorters() {\n    Array.from(this.querySelectorAll('vaadin-grid-sorter')).forEach(sorter => {\n      let cellContent = sorter.parentNode;\n      while (cellContent && cellContent.localName !== 'vaadin-grid-cell-content') {\n        cellContent = cellContent.parentNode;\n      }\n      if (cellContent && cellContent.assignedSlot) {\n        const cell = cellContent.assignedSlot.parentNode;\n        cell.setAttribute('aria-sort', {\n          'asc': 'ascending',\n          'desc': 'descending'\n        }[String(sorter.direction)] || 'none');\n      }\n    });\n  }\n};\n","/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\n/**\n * @polymerMixin\n */\nexport const ActiveItemMixin = superClass => class ActiveItemMixin extends superClass {\n\n  static get properties() {\n    return {\n      /**\n       * The item user has last interacted with. Turns to `null` after user deactivates\n       * the item by re-interacting with the currently active item.\n       */\n      activeItem: {\n        type: Object,\n        notify: true,\n        value: null\n      }\n    };\n  }\n\n  ready() {\n    super.ready();\n\n    this.$.scroller.addEventListener('click', this._onClick.bind(this));\n    this.addEventListener('cell-activate', this._activateItem.bind(this));\n  }\n\n  _activateItem(e) {\n    const model = e.detail.model;\n    const clickedItem = model ? model.item : null;\n\n    if (clickedItem) {\n      this.activeItem = !this._itemsEqual(this.activeItem, clickedItem) ? clickedItem : null;\n    }\n  }\n\n  // we need to listen to click instead of tap because on mobile safari, the\n  // document.activeElement has not been updated (focus has not been shifted)\n  // yet at the point when tap event is being executed.\n  _onClick(e) {\n    if (e.defaultPrevented) {\n      // Something has handled this click already, e. g., <vaadin-grid-sorter>\n      return;\n    }\n\n    const path = e.composedPath();\n    const cell = path[path.indexOf(this.$.table) - 3];\n    if (!cell || cell.getAttribute('part').indexOf('details-cell') > -1) {\n      return;\n    }\n    const cellContent = cell._content;\n\n    const activeElement = this.getRootNode().activeElement;\n    const cellContentHasFocus = cellContent.contains(activeElement) &&\n      // MSIE bug: flex children receive focus. Make type & attributes check.\n      (!this._ie || this._isFocusable(activeElement));\n    if (!cellContentHasFocus && !this._isFocusable(e.target)) {\n      this.dispatchEvent(new CustomEvent('cell-activate', {detail: {\n        model: this.__getRowModel(cell.parentElement)\n      }}));\n    }\n  }\n\n  _isFocusable(target) {\n    if (!target.parentNode) {\n      return false;\n    }\n    const focusables = Array.from(target.parentNode\n      .querySelectorAll('[tabindex], button, input, select, textarea, object, iframe, label, a[href], area[href]'))\n      .filter(element => element.getAttribute('part') !== 'cell body-cell');\n\n    const isFocusableElement = focusables.indexOf(target) !== -1;\n    return !target.disabled && isFocusableElement;\n  }\n};\n","/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport { Base } from '@polymer/polymer/polymer-legacy.js';\n\n/**\n * @polymerMixin\n */\nexport const ArrayDataProviderMixin = superClass => class ArrayDataProviderMixin extends superClass {\n\n  static get properties() {\n\n    return {\n      /**\n       * An array containing the items which will be stamped to the column template\n       * instances.\n       */\n      items: Array\n\n    };\n  }\n\n  static get observers() {\n    return [\n      '_itemsChanged(items, items.*, isAttached)'\n    ];\n  }\n\n  _itemsChanged(items, splices, isAttached) {\n    if (!isAttached) {\n      return;\n    }\n    if (!Array.isArray(items)) {\n      if (items === undefined || items === null) {\n        this.size = 0;\n      }\n      if (this.dataProvider === this._arrayDataProvider) {\n        this.dataProvider = undefined;\n      }\n      return;\n    }\n\n    this.size = items.length;\n    this.dataProvider = this.dataProvider || this._arrayDataProvider;\n    this.clearCache();\n    this._ensureFirstPageLoaded();\n  }\n\n  _arrayDataProvider(opts, cb) {\n    let items = (Array.isArray(this.items) ? this.items : []).slice(0);\n\n    if (this._filters && this._checkPaths(this._filters, 'filtering', items)) {\n      items = this._filter(items);\n    }\n\n    this.size = items.length;\n\n    if (opts.sortOrders.length && this._checkPaths(this._sorters, 'sorting', items)) {\n      items = items.sort(this._multiSort.bind(this));\n    }\n\n    const start = opts.page * opts.pageSize;\n    const end = start + opts.pageSize;\n    const slice = items.slice(start, end);\n    cb(slice, items.length);\n  }\n\n  /**\n   * Check array of filters/sorters for paths validity, console.warn invalid items\n   * @param {Array}  arrayToCheck The array of filters/sorters to check\n   * @param {string} action       The name of action to include in warning (filtering, sorting)\n   * @param {Array}  items\n   */\n  _checkPaths(arrayToCheck, action, items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let result = true;\n\n    for (var i in arrayToCheck) {\n      const path = arrayToCheck[i].path;\n\n      // skip simple paths\n      if (!path || path.indexOf('.') === -1) {\n        continue;\n      }\n\n      const parentProperty = path.replace(/\\.[^\\.]*$/, ''); // a.b.c -> a.b\n      if (Base.get(parentProperty, items[0]) === undefined) {\n        console.warn(`Path \"${path}\" used for ${action} does not exist in all of the items, ${action} is disabled.`);\n        result = false;\n      }\n    }\n\n    return result;\n  }\n\n  _multiSort(a, b) {\n    return this._sorters.map(sort => {\n      if (sort.direction === 'asc') {\n        return this._compare(Base.get(sort.path, a), Base.get(sort.path, b));\n      } else if (sort.direction === 'desc') {\n        return this._compare(Base.get(sort.path, b), Base.get(sort.path, a));\n      }\n      return 0;\n    }).reduce((p, n) => {\n      return p ? p : n;\n    }, 0);\n  }\n\n  _normalizeEmptyValue(value) {\n    if ([undefined, null].indexOf(value) >= 0) {\n      return '';\n    } else if (isNaN(value)) {\n      return value.toString();\n    } else {\n      return value;\n    }\n  }\n\n  _compare(a, b) {\n    a = this._normalizeEmptyValue(a);\n    b = this._normalizeEmptyValue(b);\n\n    if (a < b) {\n      return -1;\n    }\n    if (a > b) {\n      return 1;\n    }\n    return 0;\n  }\n\n  _filter(items) {\n    return items.filter((item, index) => {\n      return this._filters.filter(filter => {\n        const value = this._normalizeEmptyValue(Base.get(filter.path, item));\n        const filterValueLowercase = this._normalizeEmptyValue(filter.value).toString().toLowerCase();\n        return value.toString().toLowerCase().indexOf(filterValueLowercase) === -1;\n      }).length === 0;\n    });\n  }\n\n};\n","/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport { GestureEventListeners } from '@polymer/polymer/lib/mixins/gesture-event-listeners.js';\n\nimport { addListener } from '@polymer/polymer/lib/utils/gestures.js';\n\n/**\n * @polymerMixin\n */\nexport const ColumnResizingMixin = superClass => class ColumnResizingMixin extends GestureEventListeners(superClass) {\n\n  ready() {\n    super.ready();\n    const scroller = this.$.scroller;\n    addListener(scroller, 'track', this._onHeaderTrack.bind(this));\n\n    // Disallow scrolling while resizing\n    scroller.addEventListener('touchmove', e => scroller.hasAttribute('column-resizing') && e.preventDefault());\n\n    // Disable contextmenu on any resize separator.\n    scroller.addEventListener('contextmenu', e => e.target.getAttribute('part') == 'resize-handle' && e.preventDefault());\n\n    // Disable native cell focus when resizing\n    scroller.addEventListener('mousedown', e => e.target.getAttribute('part') === 'resize-handle' && e.preventDefault());\n  }\n\n  _onHeaderTrack(e) {\n    const handle = e.target;\n    if (handle.getAttribute('part') === 'resize-handle') {\n      const cell = handle.parentElement;\n      let column = cell._column;\n\n      this._toggleAttribute('column-resizing', true, this.$.scroller);\n\n      // Get the target column to resize\n      while (column.localName === 'vaadin-grid-column-group') {\n        column = Array.prototype.slice.call(column._childColumns, 0)\n          .sort(function(a, b) {\n            return a._order - b._order;\n          })\n          .filter(function(column) {\n            return !column.hidden;\n          }).pop();\n      }\n\n      const columnRowCells = Array.from(this.$.header.querySelectorAll('[part~=\"row\"]:last-child [part~=\"cell\"]'));\n      var targetCell = columnRowCells.filter(cell => cell._column === column)[0];\n      // Resize the target column\n      if (targetCell.offsetWidth) {\n        var style = window.getComputedStyle(targetCell);\n        var minWidth = 10 + parseInt(style.paddingLeft) + parseInt(style.paddingRight) + parseInt(style.borderLeftWidth)\n          + parseInt(style.borderRightWidth) + parseInt(style.marginLeft) + parseInt(style.marginRight);\n        const maxWidth = targetCell.offsetWidth + (this.__isRTL ? targetCell.getBoundingClientRect().left - e.detail.x :\n          e.detail.x - targetCell.getBoundingClientRect().right);\n        column.width = Math.max(minWidth, maxWidth) + 'px';\n        column.flexGrow = 0;\n      }\n      // Fix width and flex-grow for all preceding columns\n      columnRowCells\n        .sort(\n          function(a, b) {\n            return a._column._order - b._column._order;\n          })\n        .forEach(function(cell, index, array) {\n          if (index < array.indexOf(targetCell)) {\n            cell._column.width = cell.offsetWidth + 'px';\n            cell._column.flexGrow = 0;\n          }\n        });\n\n      if (e.detail.state === 'end') {\n        this._toggleAttribute('column-resizing', false, this.$.scroller);\n        this.dispatchEvent(new CustomEvent('column-resize', {\n          detail: {resizedColumn: column}\n        }));\n      }\n\n      // Notify resize\n      this._resizeHandler();\n    }\n  }\n\n  /**\n  * Fired when a column in the grid is resized by the user.\n  *\n  * @event column-resize\n  * @param {Object} detail\n  * @param {Object} detail.resizedColumn the column that was resized\n  */\n};\n","/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport { Debouncer } from '@polymer/polymer/lib/utils/debounce.js';\n\nimport { timeOut } from '@polymer/polymer/lib/utils/async.js';\n\nexport const ItemCache = class ItemCache {\n\n  constructor(grid, parentCache, parentItem) {\n    this.grid = grid;\n    this.parentCache = parentCache;\n    this.parentItem = parentItem;\n    this.itemCaches = {};\n    this.items = {};\n    this.effectiveSize = 0;\n    this.size = 0;\n    this.pendingRequests = {};\n  }\n\n  isLoading() {\n    return Object.keys(this.pendingRequests).length || Object.keys(this.itemCaches).filter(index => {\n      return this.itemCaches[index].isLoading();\n    })[0];\n  }\n\n  getItemForIndex(index) {\n    const {cache, scaledIndex} = this.getCacheAndIndex(index);\n    return cache.items[scaledIndex];\n  }\n\n  updateSize() {\n    this.effectiveSize = (!this.parentItem || this.grid._isExpanded(this.parentItem)) ?\n      this.size + Object.keys(this.itemCaches).reduce((prev, curr) => {\n        const subCache = this.itemCaches[curr];\n        subCache.updateSize();\n        return prev + subCache.effectiveSize;\n      }, 0) :\n      0;\n  }\n\n  ensureSubCacheForScaledIndex(scaledIndex) {\n    if (!this.itemCaches[scaledIndex]) {\n      const subCache = new ItemCache(this.grid, this, this.items[scaledIndex]);\n      this.itemCaches[scaledIndex] = subCache;\n      this.grid._loadPage(0, subCache);\n    }\n  }\n\n  getCacheAndIndex(index) {\n    let thisLevelIndex = index;\n    const keys = Object.keys(this.itemCaches);\n    for (var i = 0; i < keys.length; i++) {\n      const expandedIndex = Number(keys[i]);\n      const subCache = this.itemCaches[expandedIndex];\n      if (thisLevelIndex <= expandedIndex) {\n        return {cache: this, scaledIndex: thisLevelIndex};\n      } else if (thisLevelIndex <= expandedIndex + subCache.effectiveSize) {\n        return subCache.getCacheAndIndex(thisLevelIndex - expandedIndex - 1);\n      }\n      thisLevelIndex -= subCache.effectiveSize;\n    }\n    return {cache: this, scaledIndex: thisLevelIndex};\n  }\n\n};\n\n/**\n * @polymerMixin\n */\nexport const DataProviderMixin = superClass => class DataProviderMixin extends superClass {\n\n  static get properties() {\n    return {\n\n      /**\n       * Number of items fetched at a time from the dataprovider.\n       */\n      pageSize: {\n        type: Number,\n        value: 50,\n        observer: '_pageSizeChanged'\n      },\n\n      /**\n       * Function that provides items lazily. Receives arguments `params`, `callback`\n       *\n       * `params.page` Requested page index\n       *\n       * `params.pageSize` Current page size\n       *\n       * `params.filters` Currently applied filters\n       *\n       * `params.sortOrders` Currently applied sorting orders\n       *\n       * `params.parentItem` When tree is used, and sublevel items\n       * are requested, reference to parent item of the requested sublevel.\n       * Otherwise `undefined`.\n       *\n       * `callback(items, size)` Callback function with arguments:\n       *   - `items` Current page of items\n       *   - `size` Total number of items. When tree sublevel items\n       *     are requested, total number of items in the requested sublevel.\n       *     Optional when tree is not used, required for tree.\n       */\n      dataProvider: {\n        type: Object,\n        notify: true,\n        observer: '_dataProviderChanged'\n      },\n\n      /**\n       * `true` while data is being requested from the data provider.\n       */\n      loading: {\n        type: Boolean,\n        notify: true,\n        readOnly: true,\n        reflectToAttribute: true\n      },\n\n      _cache: {\n        type: Object,\n        value: function() {\n          const cache = new ItemCache(this);\n          return cache;\n        }\n      },\n\n      /**\n       * Path to an item sub-property that identifies the item.\n       */\n      itemIdPath: {\n        type: String,\n        value: null\n      },\n\n      /**\n       * An array that contains the expanded items.\n       */\n      expandedItems: {\n        type: Object,\n        notify: true,\n        value: () => []\n      }\n\n    };\n  }\n\n  static get observers() {\n    return [\n      '_sizeChanged(size)',\n      '_itemIdPathChanged(itemIdPath)',\n      '_expandedItemsChanged(expandedItems.*)'\n    ];\n  }\n\n  _sizeChanged(size) {\n    const delta = size - this._cache.size;\n    this._cache.size += delta;\n    this._cache.effectiveSize += delta;\n    this._effectiveSize = this._cache.effectiveSize;\n  }\n\n  _getItem(index, el) {\n    if (index >= this._effectiveSize) {\n      return;\n    }\n\n    el.index = index;\n    const {cache, scaledIndex} = this._cache.getCacheAndIndex(index);\n    const item = cache.items[scaledIndex];\n    if (item) {\n      this._toggleAttribute('loading', false, el);\n      this._updateItem(el, item);\n      if (this._isExpanded(item)) {\n        cache.ensureSubCacheForScaledIndex(scaledIndex);\n      }\n    } else {\n      this._toggleAttribute('loading', true, el);\n      this._loadPage(this._getPageForIndex(scaledIndex), cache);\n    }\n\n  }\n\n  _expandedInstanceChangedCallback(inst, value) {\n    if (inst.item === undefined) {\n      return;\n    }\n    if (value) {\n      this.expandItem(inst.item);\n    } else {\n      this.collapseItem(inst.item);\n    }\n  }\n\n  /**\n   * Returns a value that identifies the item. Uses `itemIdPath` if available.\n   * Can be customized by overriding.\n   */\n  getItemId(item) {\n    return this.itemIdPath ? this.get(this.itemIdPath, item) : item;\n  }\n\n  _isExpanded(item) {\n    return this.__expandedKeys.has(this.getItemId(item));\n  }\n\n  _expandedItemsChanged(e) {\n    this.__cacheExpandedKeys();\n    this._cache.updateSize();\n    this._effectiveSize = this._cache.effectiveSize;\n    this._assignModels();\n  }\n\n  _itemIdPathChanged(e) {\n    this.__cacheExpandedKeys();\n  }\n\n  __cacheExpandedKeys() {\n    if (this.expandedItems) {\n      this.__expandedKeys = new Set();\n      this.expandedItems.forEach(item => {\n        this.__expandedKeys.add(this.getItemId(item));\n      });\n    }\n  }\n\n  /**\n   * Expands the given item tree.\n   */\n  expandItem(item) {\n    if (!this._isExpanded(item)) {\n      this.push('expandedItems', item);\n    }\n  }\n\n  /**\n   * Collapses the given item tree.\n   */\n  collapseItem(item) {\n    if (this._isExpanded(item)) {\n      this.splice('expandedItems', this._getItemIndexInArray(item, this.expandedItems), 1);\n    }\n  }\n\n  _getIndexLevel(index) {\n    let {cache} = this._cache.getCacheAndIndex(index);\n    let level = 0;\n    while (cache.parentCache) {\n      cache = cache.parentCache;\n      level++;\n    }\n    return level;\n  }\n\n  _canPopulate() {\n    return this._hasData && this._columnTree;\n  }\n\n  _loadPage(page, cache) {\n    // make sure same page isn't requested multiple times.\n    if (!cache.pendingRequests[page] && this.dataProvider) {\n      this._setLoading(true);\n      cache.pendingRequests[page] = true;\n      const params = {\n        page,\n        pageSize: this.pageSize,\n        sortOrders: this._mapSorters(),\n        filters: this._mapFilters(),\n        parentItem: cache.parentItem\n      };\n\n      this.dataProvider(params, (items, size) => {\n        if (size !== undefined) {\n          cache.size = size;\n        } else {\n          if (params.parentItem) {\n            cache.size = items.length;\n          }\n        }\n\n        const currentItems = Array.from(this.$.items.children).map(row => row._item);\n\n        // Populate the cache with new items\n        items.forEach((item, itemsIndex) => {\n          const itemIndex = page * this.pageSize + itemsIndex;\n          cache.items[itemIndex] = item;\n          if (this._isExpanded(item) && currentItems.indexOf(item) > -1) {\n            // Force synchronous data request for expanded item sub-cache\n            cache.ensureSubCacheForScaledIndex(itemIndex);\n          }\n        });\n\n        this._hasData = true;\n\n        delete cache.pendingRequests[page];\n\n        this._setLoading(false);\n        this._cache.updateSize();\n        this._effectiveSize = this._cache.effectiveSize;\n\n        Array.from(this.$.items.children)\n          .filter(row => !row.hidden)\n          .forEach(row => {\n            const cachedItem = this._cache.getItemForIndex(row.index);\n            if (cachedItem) {\n              this._toggleAttribute('loading', false, row);\n              this._updateItem(row, cachedItem);\n            }\n          });\n\n        this._increasePoolIfNeeded(0);\n\n        this.__itemsReceived();\n      });\n    }\n  }\n\n  _getPageForIndex(index) {\n    return Math.floor(index / this.pageSize);\n  }\n\n  /**\n   * Clears the cached pages and reloads data from dataprovider when needed.\n   */\n  clearCache() {\n    this._cache = new ItemCache(this);\n    Array.from(this.$.items.children).forEach(row => {\n      Array.from(row.children).forEach(cell => {\n        // Force data system to pick up subproperty changes\n        cell._instance && cell._instance._setPendingProperty('item', {}, false);\n      });\n    });\n    this._cache.size = this.size || 0;\n    this._cache.updateSize();\n    this._hasData = false;\n    this._assignModels();\n\n    if (!this._effectiveSize) {\n      this._loadPage(0, this._cache);\n    }\n  }\n\n  _pageSizeChanged(pageSize, oldPageSize) {\n    if (oldPageSize !== undefined && pageSize !== oldPageSize) {\n      this.clearCache();\n    }\n  }\n\n  _checkSize() {\n    if (this.size === undefined && this._effectiveSize === 0) {\n      console.warn(\n        'The <vaadin-grid> needs the total number of items' +\n        ' in order to display rows. Set the total number of items' +\n        ' to the `size` property, or provide the total number of items' +\n        ' in the second argument of the `dataProvider`’s `callback` call.'\n      );\n    }\n  }\n\n  _dataProviderChanged(dataProvider, oldDataProvider) {\n    if (oldDataProvider !== undefined) {\n      this.clearCache();\n    }\n\n    if (dataProvider && this.items && this.items.length) {\n      // Fixes possibly invalid cached lastVisibleIndex value in <iron-list>\n      this._scrollToIndex(this._firstVisibleIndex);\n    }\n\n    this._ensureFirstPageLoaded();\n\n    this._debouncerCheckSize = Debouncer.debounce(\n      this._debouncerCheckSize,\n      timeOut.after(2000),\n      this._checkSize.bind(this));\n\n    this._scrollHandler();\n  }\n\n  _ensureFirstPageLoaded() {\n    if (!this._hasData) {\n      // load data before adding rows to make sure they have content when\n      // rendered for the first time.\n      this._loadPage(0, this._cache, () => {\n        const hadData = this._hasData;\n        this._hasData = true;\n        if (!hadData) {\n          this.notifyResize();\n        }\n      });\n    }\n  }\n\n  _itemsEqual(item1, item2) {\n    return this.getItemId(item1) === this.getItemId(item2);\n  }\n\n  _getItemIndexInArray(item, array) {\n    let result = -1;\n    array.forEach((i, idx) => {\n      if (this._itemsEqual(i, item)) {\n        result = idx;\n      }\n    });\n    return result;\n  }\n\n};\n","/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport { FlattenedNodesObserver } from '@polymer/polymer/lib/utils/flattened-nodes-observer.js';\n\nimport { Debouncer } from '@polymer/polymer/lib/utils/debounce.js';\nimport { timeOut } from '@polymer/polymer/lib/utils/async.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\n/**\n * @polymerMixin\n */\nexport const DynamicColumnsMixin = superClass => class DynamicColumnsMixin extends superClass {\n\n  ready() {\n    super.ready();\n    this._addNodeObserver();\n  }\n\n  _hasColumnGroups(columns) {\n    for (let i = 0; i < columns.length; i++) {\n      if (columns[i].localName === 'vaadin-grid-column-group') {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  _getChildColumns(el) {\n    return FlattenedNodesObserver.getFlattenedNodes(el).filter(this._isColumnElement);\n  }\n\n  _flattenColumnGroups(columns) {\n    return columns.map(col => {\n      if (col.localName === 'vaadin-grid-column-group') {\n        return this._getChildColumns(col);\n      } else {\n        return [col];\n      }\n    }).reduce((prev, curr) => {\n      return prev.concat(curr);\n    }, []);\n  }\n\n  _getColumnTree() {\n    var rootColumns = FlattenedNodesObserver.getFlattenedNodes(this).filter(this._isColumnElement);\n    var _columnTree = [];\n\n    for (var c = rootColumns; ;) {\n      _columnTree.push(c);\n      if (!this._hasColumnGroups(c)) {\n        break;\n      }\n      c = this._flattenColumnGroups(c);\n    }\n\n    return _columnTree;\n  }\n\n  _updateColumnTree() {\n    var columnTree = this._getColumnTree();\n    if (!this._arrayEquals(columnTree, this._columnTree)) {\n      this._columnTree = columnTree;\n    }\n  }\n\n  _addNodeObserver() {\n    this._observer = new FlattenedNodesObserver(this, info => {\n\n      const rowDetailsTemplate = info.addedNodes.filter(n => n.localName === 'template' && n.classList.contains('row-details'))[0];\n      if (rowDetailsTemplate && this._rowDetailsTemplate !== rowDetailsTemplate) {\n        this._rowDetailsTemplate = rowDetailsTemplate;\n      }\n\n      if (info.addedNodes.filter(this._isColumnElement).length > 0 ||\n        info.removedNodes.filter(this._isColumnElement).length > 0) {\n        this._updateColumnTree();\n      }\n\n      this._debouncerCheckImports = Debouncer.debounce(\n        this._debouncerCheckImports,\n        timeOut.after(2000),\n        this._checkImports.bind(this));\n\n      this._ensureFirstPageLoaded();\n    });\n  }\n\n  _arrayEquals(arr1, arr2) {\n    if (!arr1 || !arr2 || arr1.length != arr2.length) {\n      return false;\n    }\n\n    for (var i = 0, l = arr1.length; i < l; i++) {\n      // Check if we have nested arrays\n      if (arr1[i] instanceof Array && arr2[i] instanceof Array) {\n        // recurse into the nested arrays\n        if (!this._arrayEquals(arr1[i], arr2[i])) {\n          return false;\n        }\n      } else if (arr1[i] != arr2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  _checkImports() {\n    [\n      'vaadin-grid-column-group',\n      'vaadin-grid-filter',\n      'vaadin-grid-filter-column',\n      'vaadin-grid-tree-toggle',\n      'vaadin-grid-selection-column',\n      'vaadin-grid-sort-column',\n      'vaadin-grid-sorter'\n    ].forEach(elementName => {\n      var element = this.querySelector(elementName);\n      if (element && !(element instanceof PolymerElement)) {\n        console.warn(`Make sure you have imported the required module for <${elementName}> element.`);\n      }\n    });\n  }\n\n  _updateFirstAndLastColumn() {\n    Array.from(this.shadowRoot.querySelectorAll('tr')).forEach(row => this._updateFirstAndLastColumnForRow(row));\n  }\n\n  _updateFirstAndLastColumnForRow(row) {\n    Array.from(row.querySelectorAll('[part~=\"cell\"]:not([part~=\"details-cell\"])'))\n      .sort((a, b) => {\n        return a._column._order - b._column._order;\n      }).forEach((cell, cellIndex, children) => {\n        this._toggleAttribute('first-column', cellIndex === 0, cell);\n        this._toggleAttribute('last-column', cellIndex === children.length - 1, cell);\n      });\n  }\n\n  _isColumnElement(node) {\n    return node.nodeType === Node.ELEMENT_NODE && /\\bcolumn\\b/.test(node.localName);\n  }\n};\n","/**\n@license\nCopyright (c) 2018 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\n/**\n * @polymerMixin\n */\nexport const EventContextMixin = superClass => class EventContextMixin extends superClass {\n\n  /**\n   * Returns an object with context information about the event target:\n   * - `item`: the data object corresponding to the targeted row (not specified when targeting header or footer)\n   * - `column`: the column element corresponding to the targeted cell (not specified when targeting row details)\n   * - `section`: whether the event targeted the body, header, footer or details of the grid\n   *\n   * These additional properties are included when `item` is specified:\n   * - `index`: the index of the item\n   * - `selected`: the selected state of the item\n   * - `detailsOpened`: whether the row details are open for the item\n   * - `expanded`: the expanded state of the tree toggle\n   * - `level`: the tree hierarchy level\n   *\n   * The returned object is populated only when a grid cell, header, footer or row details is found in `event.composedPath()`.\n   * This means mostly mouse and keyboard events. If such a grid part is not found in the path, an empty object is returned.\n   * This may be the case eg. if the event is fired on the `<vaadin-grid>` element and not any deeper in the DOM, or if\n   * the event targets the empty part of the grid body.\n   */\n  getEventContext(event) {\n\n    const context = {};\n\n    const path = event.composedPath();\n    const cell = path[path.indexOf(this.$.table) - 3];\n\n    if (!cell) {\n      return context;\n    }\n\n    context.section = ['body', 'header', 'footer', 'details']\n      .filter(section => cell.getAttribute('part').indexOf(section) > -1)[0];\n\n    if (cell._column) {\n      context.column = cell._column;\n    }\n\n    if (context.section === 'body' || context.section === 'details') {\n      Object.assign(context, this.__getRowModel(cell.parentElement));\n    }\n\n    return context;\n  }\n\n};\n","/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\n/**\n * @polymerMixin\n */\nexport const FilterMixin = superClass => class FilterMixin extends superClass {\n\n  static get properties() {\n    return {\n      _filters: {\n        type: Array,\n        value: function() {\n          return [];\n        }\n      }\n    };\n  }\n\n  ready() {\n    super.ready();\n    this.addEventListener('filter-changed', this._filterChanged.bind(this));\n  }\n\n  _filterChanged(e) {\n    if (this._filters.indexOf(e.target) === -1) {\n      this._filters.push(e.target);\n    }\n\n    e.stopPropagation();\n\n    if (this.dataProvider) {\n      this.clearCache();\n    }\n  }\n\n  _mapFilters() {\n    return this._filters.map(filter => {\n      return {\n        path: filter.path,\n        value: filter.value\n      };\n    });\n  }\n};\n","/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport { Templatizer } from './vaadin-grid-templatizer.js';\n\nimport { flush } from '@polymer/polymer/lib/utils/flush.js';\n\n/**\n * @polymerMixin\n */\nexport const RowDetailsMixin = superClass => class RowDetailsMixin extends superClass {\n  static get properties() {\n    return {\n      /**\n       * An array containing references to items with open row details.\n       */\n      detailsOpenedItems: {\n        type: Array,\n        value: function() {\n          return [];\n        }\n      },\n\n      _rowDetailsTemplate: Object,\n\n      /**\n       * Custom function for rendering the content of the row details.\n       * Receives three arguments:\n       *\n       * - `root` The row details content DOM element. Append your content to it.\n       * - `grid` The `<vaadin-grid>` element.\n       * - `rowData` The object with the properties related with\n       *   the rendered item, contains:\n       *   - `rowData.index` The index of the item.\n       *   - `rowData.item` The item.\n       */\n      rowDetailsRenderer: Function,\n\n      _detailsCells: {\n        type: Array,\n      }\n    };\n  }\n\n  static get observers() {\n    return [\n      '_detailsOpenedItemsChanged(detailsOpenedItems.*, _rowDetailsTemplate, rowDetailsRenderer)',\n      '_rowDetailsTemplateOrRendererChanged(_rowDetailsTemplate, rowDetailsRenderer)'\n    ];\n  }\n\n  _rowDetailsTemplateOrRendererChanged(rowDetailsTemplate, rowDetailsRenderer) {\n    if (rowDetailsTemplate && rowDetailsRenderer) {\n      throw new Error('You should only use either a renderer or a template for row details');\n    }\n    if (rowDetailsTemplate || rowDetailsRenderer) {\n      if (rowDetailsTemplate && !rowDetailsTemplate.templatizer) {\n        var templatizer = new Templatizer();\n        templatizer._grid = this;\n        templatizer.dataHost = this.dataHost;\n        templatizer.template = rowDetailsTemplate;\n        rowDetailsTemplate.templatizer = templatizer;\n      }\n\n      if (this._columnTree) {\n        // Only update the rows if the column tree has already been initialized\n        Array.from(this.$.items.children).forEach(row => {\n          if (!row.querySelector('[part~=details-cell]')) {\n            this._updateRow(row, this._columnTree[this._columnTree.length - 1]);\n            this._a11yUpdateRowDetailsOpened(row, false);\n          }\n          // Clear any old template instances\n          delete row.querySelector('[part~=details-cell]')._instance;\n        });\n      }\n\n      if (this.detailsOpenedItems.length) {\n        Array.from(this.$.items.children).forEach(this._toggleDetailsCell, this);\n        this._update();\n      }\n    }\n  }\n\n  _detailsOpenedItemsChanged(changeRecord, rowDetailsTemplate, rowDetailsRenderer) {\n    if (changeRecord.path === 'detailsOpenedItems.length' || !changeRecord.value) {\n      // Let’s avoid duplicate work of both “.splices” and “.length” updates.\n      return;\n    }\n    Array.from(this.$.items.children).forEach(row => {\n      this._toggleDetailsCell(row, row._item);\n      this._a11yUpdateRowDetailsOpened(row, this._isDetailsOpened(row._item));\n      this._toggleAttribute('details-opened', this._isDetailsOpened(row._item), row);\n    });\n  }\n\n  _configureDetailsCell(cell) {\n    cell.setAttribute('part', 'cell details-cell');\n    // Freeze the details cell, so that it does not scroll horizontally\n    // with the normal cells. This way it looks less weird.\n    this._toggleAttribute('frozen', true, cell);\n  }\n\n  _toggleDetailsCell(row, item) {\n    const cell = row.querySelector('[part~=\"details-cell\"]');\n    if (!cell) {\n      return;\n    }\n    const detailsHidden = !this._isDetailsOpened(item);\n    const hiddenChanged = !!cell.hidden !== detailsHidden;\n\n    if (!cell._instance && !cell._renderer || cell.hidden !== detailsHidden) {\n      cell.hidden = detailsHidden;\n      if (detailsHidden) {\n        row.style.removeProperty('padding-bottom');\n      } else {\n        if (this.rowDetailsRenderer) {\n          cell._renderer = this.rowDetailsRenderer;\n          cell._renderer.call(this, cell._content, this, {index: row.index, item: item});\n        } else if (this._rowDetailsTemplate && !cell._instance) {\n          // Stamp the template\n          cell._instance = this._rowDetailsTemplate.templatizer.createInstance();\n          cell._content.innerHTML = '';\n          cell._content.appendChild(cell._instance.root);\n          this._updateItem(row, item);\n        }\n\n        flush();\n        row.style.setProperty('padding-bottom', `${cell.offsetHeight}px`);\n\n        requestAnimationFrame(() => this.notifyResize());\n      }\n    }\n    if (hiddenChanged) {\n      this._updateMetrics();\n      this._positionItems();\n    }\n  }\n\n  _updateDetailsCellHeights() {\n    Array.from(this.$.items.querySelectorAll('[part~=\"details-cell\"]:not([hidden])')).forEach(cell => {\n      cell.parentElement.style.setProperty('padding-bottom', `${cell.offsetHeight}px`);\n    });\n  }\n\n  _isDetailsOpened(item) {\n    return this.detailsOpenedItems && this._getItemIndexInArray(item, this.detailsOpenedItems) !== -1;\n  }\n\n  /**\n   * Open the details row of a given item.\n   */\n  openItemDetails(item) {\n    if (!this._isDetailsOpened(item)) {\n      this.push('detailsOpenedItems', item);\n    }\n  }\n\n  /**\n   * Close the details row of a given item.\n   */\n  closeItemDetails(item) {\n    if (this._isDetailsOpened(item)) {\n      this.splice('detailsOpenedItems', this._getItemIndexInArray(item, this.detailsOpenedItems), 1);\n    }\n  }\n\n  _detailsOpenedInstanceChangedCallback(instance, value) {\n    if (super._detailsOpenedInstanceChangedCallback) {\n      super._detailsOpenedInstanceChangedCallback(instance, value);\n    }\n    if (value) {\n      this.openItemDetails(instance.item);\n    } else {\n      this.closeItemDetails(instance.item);\n    }\n  }\n};\n","/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport { Debouncer } from '@polymer/polymer/lib/utils/debounce.js';\n\nimport { timeOut, animationFrame, microTask } from '@polymer/polymer/lib/utils/async.js';\n\n/**\n * @polymerMixin\n */\nexport const ScrollMixin = superClass => class ScrollMixin extends superClass {\n\n  get _timeouts() {\n    return {\n      SCROLL_PERIOD: 1000,\n      WHEEL_SCROLLING: 200,\n      SCROLLING: 100,\n      IGNORE_WHEEL: 500\n    };\n  }\n\n  static get properties() {\n    return {\n\n      // Cached array of frozen cells\n      _frozenCells: {\n        type: Array,\n        value: function() {\n          return [];\n        },\n      },\n\n      _scrollbarWidth: {\n        type: Number,\n        value: function() {\n          // Create the measurement node\n          var scrollDiv = document.createElement('div');\n          scrollDiv.style.width = '100px';\n          scrollDiv.style.height = '100px';\n          scrollDiv.style.overflow = 'scroll';\n          scrollDiv.style.position = 'absolute';\n          scrollDiv.style.top = '-9999px';\n          document.body.appendChild(scrollDiv);\n          // Get the scrollbar width\n          var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n          // Delete the DIV\n          document.body.removeChild(scrollDiv);\n          return scrollbarWidth;\n        }\n      },\n\n      _rowWithFocusedElement: Element,\n\n      _deltaYAcc: {\n        type: Number,\n        value: 0\n      }\n\n    };\n  }\n\n  static get observers() {\n    return [\n      '_scrollHeightUpdated(_estScrollHeight)',\n      '_scrollViewportHeightUpdated(_viewportHeight)'\n    ];\n  }\n\n  // Override (from iron-scroll-target-behavior) to avoid document scroll\n  set _scrollTop(top) {\n    this.$.table.scrollTop = top;\n  }\n\n  get _scrollTop() {\n    return this.$.table.scrollTop;\n  }\n\n  constructor() {\n    super();\n    this._scrollLineHeight = this._getScrollLineHeight();\n  }\n\n  /**\n   * @returns {Number|undefined} - The browser's default font-size in pixels\n   */\n  _getScrollLineHeight() {\n    const el = document.createElement('div');\n    el.style.fontSize = 'initial';\n    el.style.display = 'none';\n    document.body.appendChild(el);\n    const fontSize = window.getComputedStyle(el).fontSize;\n    document.body.removeChild(el);\n    return fontSize ? window.parseInt(fontSize) : undefined;\n  }\n\n  _scrollViewportHeightUpdated(_viewportHeight) {\n    this._scrollPageHeight = _viewportHeight - this.$.header.clientHeight - this.$.footer.clientHeight - this._scrollLineHeight;\n  }\n\n  ready() {\n    super.ready();\n    this.scrollTarget = this.$.table;\n\n    this.addEventListener('wheel', e => {\n      this._wheelScrolling = true;\n      this._debouncerWheelScrolling = Debouncer.debounce(\n        this._debouncerWheelScrolling,\n        timeOut.after(this._timeouts.WHEEL_SCROLLING),\n        () => this._wheelScrolling = false\n      );\n      this._onWheel(e);\n    });\n\n    this.$.table.addEventListener('scroll', e => {\n      if (this.$.outerscroller.outerScrolling) {\n        e.stopImmediatePropagation();\n      }\n    }, true);\n\n    this.$.items.addEventListener('focusin', (e) => {\n      const itemsIndex = e.composedPath().indexOf(this.$.items);\n      this._rowWithFocusedElement = e.composedPath()[itemsIndex - 1];\n    });\n    this.$.items.addEventListener('focusout', () => this._rowWithFocusedElement = undefined);\n  }\n\n  /**\n   * Scroll to a specific row index in the virtual list. Note that the row index is\n   * not always the same for any particular item. For example, sorting/filtering/expanding\n   * or collapsing hierarchical items can affect the row index related to an item.\n   *\n   * @param {number} index Row index to scroll to\n   */\n  scrollToIndex(index) {\n    this._accessIronListAPI(() => super.scrollToIndex(index));\n  }\n\n  _onWheel(e) {\n    if (e.ctrlKey || this._hasScrolledAncestor(e.target, e.deltaX, e.deltaY)) {\n      return;\n    }\n\n    const table = this.$.table;\n\n    let deltaY = e.deltaY;\n    if (e.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      // Scrolling by \"lines of text\" instead of pixels\n      deltaY *= this._scrollLineHeight;\n    } else if (e.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      // Scrolling by \"pages\" instead of pixels\n      deltaY *= this._scrollPageHeight;\n    }\n\n    if (this._wheelAnimationFrame) {\n      // Skip new wheel events while one is being processed\n      this._deltaYAcc += deltaY;\n      e.preventDefault();\n      return;\n    }\n\n    deltaY += this._deltaYAcc;\n    this._deltaYAcc = 0;\n\n    this._wheelAnimationFrame = true;\n    this._debouncerWheelAnimationFrame = Debouncer.debounce(\n      this._debouncerWheelAnimationFrame,\n      animationFrame,\n      () => this._wheelAnimationFrame = false\n    );\n\n    var momentum = Math.abs(e.deltaX) + Math.abs(deltaY);\n\n    if (this._canScroll(table, e.deltaX, deltaY)) {\n      e.preventDefault();\n      table.scrollTop += deltaY;\n      table.scrollLeft += e.deltaX;\n      this._scrollHandler();\n      this._hasResidualMomentum = true;\n\n      this._ignoreNewWheel = true;\n      this._debouncerIgnoreNewWheel = Debouncer.debounce(\n        this._debouncerIgnoreNewWheel,\n        timeOut.after(this._timeouts.IGNORE_WHEEL),\n        () => this._ignoreNewWheel = false\n      );\n    } else if (this._hasResidualMomentum && momentum <= this._previousMomentum || this._ignoreNewWheel) {\n      e.preventDefault();\n    } else if (momentum > this._previousMomentum) {\n      this._hasResidualMomentum = false;\n    }\n    this._previousMomentum = momentum;\n  }\n\n  /**\n   * Determines if the element has an ancestor prior to this\n   * cell content that handles the scroll delta\n   */\n  _hasScrolledAncestor(el, deltaX, deltaY) {\n    if (el.localName === 'vaadin-grid-cell-content') {\n      return false;\n    } else if (this._canScroll(el, deltaX, deltaY)\n      && ['auto', 'scroll'].indexOf(getComputedStyle(el).overflow) !== -1) {\n      return true;\n    } else if (el !== this && el.parentElement) {\n      return this._hasScrolledAncestor(el.parentElement, deltaX, deltaY);\n    }\n  }\n\n  /**\n   * Determines if the the given scroll deltas can be applied to the element\n   * (fully or partially)\n   */\n  _canScroll(el, deltaX, deltaY) {\n    return (deltaY > 0 && el.scrollTop < el.scrollHeight - el.offsetHeight) ||\n    (deltaY < 0 && el.scrollTop > 0) ||\n    (deltaX > 0 && el.scrollLeft < el.scrollWidth - el.offsetWidth) ||\n    (deltaX < 0 && el.scrollLeft > 0);\n  }\n\n  _scheduleScrolling() {\n    if (!this._scrollingFrame) {\n      // Defer setting state attributes to avoid Edge hiccups\n      this._scrollingFrame = requestAnimationFrame(() => this._toggleAttribute('scrolling', true, this.$.scroller));\n    }\n    this._debounceScrolling = Debouncer.debounce(\n      this._debounceScrolling,\n      timeOut.after(this._timeouts.SCROLLING),\n      () => {\n        cancelAnimationFrame(this._scrollingFrame);\n        delete this._scrollingFrame;\n        this._toggleAttribute('scrolling', false, this.$.scroller);\n        if (!this.$.outerscroller.outerScrolling) {\n          this._reorderRows();\n        }\n      }\n    );\n\n    if (!this._scrollPeriodFrame) {\n      this._scrollPeriodFrame = requestAnimationFrame(() => this._toggleAttribute('scroll-period', true, this.$.scroller));\n    }\n    this._debounceScrollPeriod = Debouncer.debounce(\n      this._debounceScrollPeriod,\n      timeOut.after(this._timeouts.SCROLL_PERIOD),\n      () => {\n        cancelAnimationFrame(this._scrollPeriodFrame);\n        delete this._scrollPeriodFrame;\n        this._toggleAttribute('scroll-period', false, this.$.scroller);\n      }\n    );\n  }\n\n  _afterScroll() {\n    this._translateStationaryElements();\n\n    if (!this.hasAttribute('reordering')) {\n      this._scheduleScrolling();\n    }\n\n    const os = this.$.outerscroller;\n    if (!this._ios && (this._wheelScrolling || os.passthrough)) {\n      os.syncOuterScroller();\n    }\n\n    if (this._ios) {\n      // Enable vertical rubberband feedback\n      const overScroll = Math.max(-os.scrollTop, 0) ||\n        Math.min(0, os.scrollHeight - os.scrollTop - os.offsetHeight);\n      this.$.items.style.transform = `translateY(${overScroll}px)`;\n    }\n\n    this._updateOverflow();\n  }\n\n  _updateOverflow() {\n    // Set overflow styling attributes\n    let overflow = '';\n    const table = this.$.table;\n    if (table.scrollTop < table.scrollHeight - table.clientHeight) {\n      overflow += ' bottom';\n    }\n\n    if (table.scrollTop > 0) {\n      overflow += ' top';\n    }\n\n    if (table.scrollLeft < table.scrollWidth - table.clientWidth) {\n      overflow += ' right';\n    }\n\n    if (table.scrollLeft > 0) {\n      overflow += ' left';\n    }\n\n    this._debounceOverflow = Debouncer.debounce(\n      this._debounceOverflow,\n      animationFrame,\n      () => {\n        const value = overflow.trim();\n        if (value.length > 0 && this.getAttribute('overflow') !== value) {\n          this.setAttribute('overflow', value);\n        } else if (value.length == 0 && this.hasAttribute('overflow')) {\n          this.removeAttribute('overflow');\n        }\n      }\n    );\n  }\n\n  // correct order needed for preserving correct tab order between cell contents.\n  _reorderRows() {\n    const body = this.$.items;\n    const items = body.querySelectorAll('tr');\n    if (!items.length) {\n      return;\n    }\n\n    const adjustedVirtualStart = this._virtualStart + this._vidxOffset;\n\n    // Which row to use as a target?\n    const targetRow = this._rowWithFocusedElement || Array.from(items).filter(row => !row.hidden)[0];\n    if (!targetRow) {\n      // All rows are hidden, don't reorder\n      return;\n    }\n\n    // Where the target row should be?\n    const targetPhysicalIndex = targetRow.index - adjustedVirtualStart;\n\n    // Reodrer the DOM elements to keep the target row at the target physical index\n    const delta = Array.from(items).indexOf(targetRow) - targetPhysicalIndex;\n    if (delta > 0) {\n      for (let i = 0; i < delta; i++) {\n        body.appendChild(items[i]);\n      }\n    } else if (delta < 0) {\n      for (let i = items.length + delta; i < items.length; i++) {\n        body.insertBefore(items[i], items[0]);\n      }\n    }\n  }\n\n  _frozenCellsChanged() {\n    this._debouncerCacheElements = Debouncer.debounce(\n      this._debouncerCacheElements,\n      microTask,\n      () => {\n        Array.from(this.root.querySelectorAll('[part~=\"cell\"]')).forEach(function(cell) {\n          cell.style.transform = '';\n        });\n        this._frozenCells = Array.prototype.slice.call(this.$.table.querySelectorAll('[frozen]'));\n        this._updateScrollerMeasurements();\n        this._translateStationaryElements();\n      }\n    );\n    this._updateLastFrozen();\n  }\n\n  _updateScrollerMeasurements() {\n    if (this._frozenCells.length > 0 && this.__isRTL) {\n      this.__scrollerMetrics = {\n        scrollWidth: this.$.outerscroller.scrollWidth,\n        clientWidth: this.$.outerscroller.clientWidth\n      };\n    }\n  }\n\n  _updateLastFrozen() {\n    if (!this._columnTree) {\n      return;\n    }\n\n    const columnsRow = this._columnTree[this._columnTree.length - 1].slice(0);\n    columnsRow.sort((a, b) => {\n      return a._order - b._order;\n    });\n    const lastFrozen = columnsRow.reduce((prev, col, index) => {\n      col._lastFrozen = false;\n      return col.frozen && !col.hidden ? index : prev;\n    }, undefined);\n    if (lastFrozen !== undefined) {\n      columnsRow[lastFrozen]._lastFrozen = true;\n    }\n  }\n\n  _translateStationaryElements() {\n    if (this._edge && !this._scrollbarWidth) {\n      // Fixed mode (Tablet Edge)\n      this.$.items.style.transform =\n      this._getTranslate(-this._scrollLeft || 0, -this._scrollTop || 0);\n\n      this.$.footer.style.transform = this.$.header.style.transform =\n      this._getTranslate(-this._scrollLeft || 0, 0);\n    } else {\n      this.$.footer.style.transform = this.$.header.style.transform = this._getTranslate(0, this._scrollTop);\n    }\n\n    if (this._frozenCells.length > 0) {\n      const x = this.__isRTL ?\n        this.__getNormalizedScrollLeft(this.$.table) + this.__scrollerMetrics.clientWidth -\n        this.__scrollerMetrics.scrollWidth\n        : this._scrollLeft;\n      var frozenCellTransform = this._getTranslate(x, 0);\n      for (var i = 0; i < this._frozenCells.length; i++) {\n        this._frozenCells[i].style.transform = frozenCellTransform;\n      }\n    }\n  }\n\n  _getTranslate(x, y) {\n    return 'translate(' + x + 'px,' + y + 'px)';\n  }\n\n  _scrollHeightUpdated(_estScrollHeight) {\n    this.$.outersizer.style.top = this.$.fixedsizer.style.top = _estScrollHeight + 'px';\n  }\n\n};\n","/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\n/**\n * @polymerMixin\n */\nexport const SelectionMixin = superClass => class SelectionMixin extends superClass {\n\n  static get properties() {\n    return {\n      /**\n       * An array that contains the selected items.\n       */\n      selectedItems: {\n        type: Object,\n        notify: true,\n        value: () => []\n      }\n    };\n  }\n\n  static get observers() {\n    return [\n      '_selectedItemsChanged(selectedItems.*)'\n    ];\n  }\n\n  _isSelected(item) {\n    return this.selectedItems && this._getItemIndexInArray(item, this.selectedItems) > -1;\n  }\n\n  /**\n   * Selects the given item.\n   *\n   * @method selectItem\n   * @param {Object} item The item object\n   */\n  selectItem(item) {\n    if (!this._isSelected(item)) {\n      this.push('selectedItems', item);\n    }\n  }\n\n  /**\n   * Deselects the given item if it is already selected.\n   *\n   * @method deselect\n   * @param {Object} item The item object\n   */\n  deselectItem(item) {\n    const index = this._getItemIndexInArray(item, this.selectedItems);\n    if (index > -1) {\n      this.splice('selectedItems', index, 1);\n    }\n  }\n\n  /**\n   * Toggles the selected state of the given item.\n   *\n   * @method toggle\n   * @param {Object} item The item object\n   */\n  _toggleItem(item) {\n    const index = this._getItemIndexInArray(item, this.selectedItems);\n    if (index === -1) {\n      this.selectItem(item);\n    } else {\n      this.deselectItem(item);\n    }\n  }\n\n  _selectedItemsChanged(e) {\n    if (this.$.items.children.length && (e.path === 'selectedItems' || e.path === 'selectedItems.splices')) {\n      Array.from(this.$.items.children).forEach(row => {\n        this._updateItem(row, row._item);\n      });\n    }\n  }\n\n  _selectedInstanceChangedCallback(instance, value) {\n    if (super._selectedInstanceChangedCallback) {\n      super._selectedInstanceChangedCallback(instance, value);\n    }\n    if (value) {\n      this.selectItem(instance.item);\n    } else {\n      this.deselectItem(instance.item);\n    }\n  }\n};\n","/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport { microTask } from '@polymer/polymer/lib/utils/async.js';\n\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\n/**\n * @polymerMixin\n */\nexport const SortMixin = superClass => class SortMixin extends superClass {\n  static get properties() {\n    return {\n      /**\n       * When `true`, all `<vaadin-grid-sorter>` are applied for sorting.\n       */\n      multiSort: {\n        type: Boolean,\n        value: false\n      },\n\n      _sorters: {\n        type: Array,\n        value: function() {\n          return [];\n        }\n      },\n\n      _previousSorters: {\n        type: Array,\n        value: function() {\n          return [];\n        }\n      }\n    };\n  }\n\n  ready() {\n    super.ready();\n    this.addEventListener('sorter-changed', this._onSorterChanged);\n\n    // With Polymer 2 & shady the 'sorter-changed' listener isn't guaranteed to be registered\n    // before child <vaadin-grid-sorter>'s upgrade and fire the events. The following\n    // makes sure that 'sorter-changed' is fired for all <vaadin-grid-sorter> elements\n    // after this (<vaadin-grid>) is ready (and the listeners are active).\n    if (window.ShadyDOM) {\n      microTask.run(() => {\n        const sorters = this.querySelectorAll('vaadin-grid-sorter');\n        Array.from(sorters).forEach((sorter) => {\n          // Don't try to fire if the sorter hasn't been upgraded yet\n          if (sorter instanceof PolymerElement) {\n            sorter.dispatchEvent(new CustomEvent('sorter-changed', {bubbles: true, composed: true}));\n          }\n        });\n      });\n    }\n  }\n\n  _onSorterChanged(e) {\n    const sorter = e.target;\n\n    this._removeArrayItem(this._sorters, sorter);\n    sorter._order = null;\n\n    if (this.multiSort) {\n      if (sorter.direction) {\n        this._sorters.unshift(sorter);\n      }\n\n      this._sorters.forEach((sorter, index) => sorter._order = this._sorters.length > 1 ? index : null, this);\n    } else {\n      if (sorter.direction) {\n        this._sorters.forEach(sorter => {\n          sorter._order = null;\n          sorter.direction = null;\n        });\n        this._sorters = [sorter];\n      }\n    }\n\n    e.stopPropagation();\n\n    if (this.dataProvider &&\n      // No need to clear cache if sorters didn't change\n      JSON.stringify(this._previousSorters) !== JSON.stringify(this._mapSorters())) {\n      this.clearCache();\n    }\n\n    this._a11yUpdateSorters();\n\n    this._previousSorters = this._mapSorters();\n  }\n\n  _mapSorters() {\n    return this._sorters.map(sorter => {\n      return {\n        path: sorter.path,\n        direction: sorter.direction\n      };\n    });\n  }\n\n  _removeArrayItem(array, item) {\n    const index = array.indexOf(item);\n    if (index > -1) {\n      array.splice(index, 1);\n    }\n  }\n};\n","/**\n@license\nCopyright (c) 2018 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\n/**\n * @polymerMixin\n */\nexport const StylingMixin = superClass => class StylingMixin extends superClass {\n\n  static get properties() {\n    return {\n      /**\n       * A function that allows generating CSS class names for grid cells\n       * based on their row and column. The return value should be the generated\n       * class name as a string, or multiple class names separated by whitespace\n       * characters.\n       *\n       * Receives two arguments:\n       * - `column` The `<vaadin-grid-column>` element (`undefined` for details-cell).\n       * - `rowData` The object with the properties related with\n       *   the rendered item, contains:\n       *   - `rowData.index` The index of the item.\n       *   - `rowData.item` The item.\n       *   - `rowData.expanded` Sublevel toggle state.\n       *   - `rowData.level` Level of the tree represented with a horizontal offset of the toggle button.\n       *   - `rowData.selected` Selected state.\n       */\n      cellClassNameGenerator: Function\n    };\n  }\n\n  static get observers() {\n    return [\n      '__cellClassNameGeneratorChanged(cellClassNameGenerator)'\n    ];\n  }\n\n  __cellClassNameGeneratorChanged(cellClassGenerator) {\n    this.generateCellClassNames();\n  }\n\n  /**\n   * Runs the `cellClassNameGenerator` for the visible cells.\n   * If the generator depends on varying conditions, you need to\n   * call this function manually in order to update the styles when\n   * the conditions change.\n   */\n  generateCellClassNames() {\n    Array.from(this.$.items.children).filter(row => !row.hidden).forEach(\n      row => this._generateCellClassNames(row, this.__getRowModel(row)));\n  }\n\n  _generateCellClassNames(row, rowData) {\n    Array.from(row.children).forEach(cell => {\n      if (cell.__generatedClasses) {\n        cell.__generatedClasses.forEach(className => cell.classList.remove(className));\n      }\n      if (this.cellClassNameGenerator) {\n        const result = this.cellClassNameGenerator(cell._column, rowData);\n        cell.__generatedClasses = result && result.split(' ').filter(className => className.length > 0);\n        if (cell.__generatedClasses) {\n          cell.__generatedClasses.forEach(className => cell.classList.add(className));\n        }\n      }\n    });\n  }\n};\n","/**\n@license\nCopyright (c) 2019 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nconst DropMode = {\n  BETWEEN: 'between',\n  ON_TOP: 'on-top',\n  ON_TOP_OR_BETWEEN: 'on-top-or-between',\n  ON_GRID: 'on-grid'\n};\n\nconst DropLocation = {\n  ON_TOP: 'on-top',\n  ABOVE: 'above',\n  BELOW: 'below',\n  EMPTY: 'empty'\n};\n\n/**\n * @polymerMixin\n */\nexport const DragAndDropMixin = superClass => class DragAndDropMixin extends superClass {\n\n  static get properties() {\n    return {\n      /**\n       * Defines the locations within the Grid row where an element can be dropped.\n       *\n       * Possible values are:\n       * - `between`: The drop event can happen between Grid rows.\n       * - `on-top`: The drop event can happen on top of Grid rows.\n       * - `on-top-or-between`: The drop event can happen either on top of or between Grid rows.\n       * - `on-grid`: The drop event will not happen on any specific row, it will show the drop target outline around the whole grid.\n       */\n      dropMode: String,\n\n      /**\n       * Marks the grid's rows to be available for dragging.\n       */\n      rowsDraggable: Boolean,\n\n      /**\n       * A function that filters dragging of specific grid rows. The return value should be false\n       * if dragging of the row should be disabled.\n       *\n       * Receives one argument:\n       * - `rowData` The object with the properties related with\n       *   the rendered item, contains:\n       *   - `rowData.index` The index of the item.\n       *   - `rowData.item` The item.\n       *   - `rowData.expanded` Sublevel toggle state.\n       *   - `rowData.level` Level of the tree represented with a horizontal offset of the toggle button.\n       *   - `rowData.selected` Selected state.\n       */\n      dragFilter: Function,\n\n      /**\n       * A function that filters dropping on specific grid rows. The return value should be false\n       * if dropping on the row should be disabled.\n       *\n       * Receives one argument:\n       * - `rowData` The object with the properties related with\n       *   the rendered item, contains:\n       *   - `rowData.index` The index of the item.\n       *   - `rowData.item` The item.\n       *   - `rowData.expanded` Sublevel toggle state.\n       *   - `rowData.level` Level of the tree represented with a horizontal offset of the toggle button.\n       *   - `rowData.selected` Selected state.\n       */\n      dropFilter: Function,\n\n      __dndAutoScrollThreshold: {\n        value: 50\n      }\n\n    };\n  }\n\n  static get observers() {\n    return [\n      '_dragDropAccessChanged(rowsDraggable, dropMode, dragFilter, dropFilter)'\n    ];\n  }\n\n  ready() {\n    super.ready();\n    this.$.table.addEventListener('dragstart', this._onDragStart.bind(this));\n    this.$.table.addEventListener('dragend', this._onDragEnd.bind(this));\n    this.$.table.addEventListener('dragover', this._onDragOver.bind(this));\n    this.$.table.addEventListener('dragleave', this._onDragLeave.bind(this));\n    this.$.table.addEventListener('drop', this._onDrop.bind(this));\n    this.$.table.addEventListener('dragenter', e => {\n      if (this.dropMode) {\n        e.preventDefault();\n        e.stopPropagation();\n      }\n    });\n\n  }\n\n  _onDragStart(e) {\n    if (this.rowsDraggable) {\n      let row = e.target;\n      if (row.localName === 'vaadin-grid-cell-content') {\n        // The draggable node is the cell content element on browsers that support native shadow\n        row = row.assignedSlot.parentNode.parentNode;\n      }\n      if (row.parentNode !== this.$.items) {\n        return;\n      }\n\n      e.stopPropagation();\n      this._toggleAttribute('dragging-rows', true, this);\n\n      if (this._safari) {\n        // Safari doesn't get proper drag images from transformed\n        // elements so we need to switch to top temporarily\n        const transform = row.style.transform;\n        row.style.top = /translateY\\((.*)\\)/.exec(transform)[1];\n        row.style.transform = 'none';\n        requestAnimationFrame(() => {\n          row.style.top = '';\n          row.style.transform = transform;\n        });\n      }\n\n      const rowRect = row.getBoundingClientRect();\n      if (!window.ShadyDOM) {\n        if (this._ios) {\n          e.dataTransfer.setDragImage(row);\n        } else {\n          e.dataTransfer.setDragImage(row, e.clientX - rowRect.left, e.clientY - rowRect.top);\n        }\n\n      }\n\n      let rows = [row];\n      if (this._isSelected(row._item)) {\n        rows = this.__getViewportRows()\n          .filter(row => this._isSelected(row._item))\n          .filter(row => !this.dragFilter || this.dragFilter(this.__getRowModel(row)));\n      }\n\n      // Set the default transfer data\n      e.dataTransfer.setData('text', this.__formatDefaultTransferData(rows));\n\n      row.setAttribute('dragstart', rows.length > 1 ? rows.length : '');\n      this.updateStyles({\n        '--_grid-drag-start-x': `${e.clientX - rowRect.left + 20}px`,\n        '--_grid-drag-start-y': `${e.clientY - rowRect.top + 10}px`\n      });\n\n      requestAnimationFrame(() => {\n        row.removeAttribute('dragstart');\n        this.updateStyles({'--_grid-drag-start-x': '', '--_grid-drag-start-y': ''});\n      });\n\n      const event = new CustomEvent('grid-dragstart', {\n        detail: {\n          draggedItems: rows.map(row => row._item),\n          setDragData: (type, data) => e.dataTransfer.setData(type, data),\n          setDraggedItemsCount: count => row.setAttribute('dragstart', count)\n        }\n      });\n      event.originalEvent = e;\n      this.dispatchEvent(event);\n    }\n  }\n\n  _onDragEnd(e) {\n    this._toggleAttribute('dragging-rows', false, this);\n    e.stopPropagation();\n    const event = new CustomEvent('grid-dragend');\n    event.originalEvent = e;\n    this.dispatchEvent(event);\n  }\n\n  _onDragLeave(e) {\n    e.stopPropagation();\n    this._clearDragStyles();\n  }\n\n  _onDragOver(e) {\n\n    if (this.dropMode) {\n      this._dropLocation = undefined;\n      this._dragOverItem = undefined;\n\n      if (this.__dndAutoScroll(e.clientY)) {\n        this._clearDragStyles();\n        return;\n      }\n\n      let row = e.composedPath().filter(node => node.localName === 'tr')[0];\n\n      if (!this._effectiveSize || this.dropMode === DropMode.ON_GRID) {\n        // The grid is empty or \"on-grid\" drop mode was used, always default to \"empty\"\n        this._dropLocation = DropLocation.EMPTY;\n      } else if (!row || row.parentNode !== this.$.items) {\n        // The dragover didn't occur on a body row but the grid has items\n        if (row) {\n          // The dragover occurred over a header/footer row\n          return;\n        } else if (this.dropMode === DropMode.BETWEEN || this.dropMode === DropMode.ON_TOP_OR_BETWEEN) {\n          // The drop mode allows setting the last row as the drag over item\n          row = Array.from(this.$.items.children).filter(row => !row.hidden).pop();\n          this._dropLocation = DropLocation.BELOW;\n        } else {\n          // Drop mode on-top used but the dragover didn't occur over one of the existing rows\n          return;\n        }\n      } else {\n        // The dragover occurred on a body row, determine the drop location from coordinates\n        const rowRect = row.getBoundingClientRect();\n\n        this._dropLocation = DropLocation.ON_TOP;\n\n        if (this.dropMode === DropMode.BETWEEN) {\n          const dropAbove = e.clientY - rowRect.top < rowRect.bottom - e.clientY;\n          this._dropLocation = dropAbove ? DropLocation.ABOVE : DropLocation.BELOW;\n\n        } else if (this.dropMode === DropMode.ON_TOP_OR_BETWEEN) {\n          if (e.clientY - rowRect.top < rowRect.height / 3) {\n            this._dropLocation = DropLocation.ABOVE;\n          } else if (e.clientY - rowRect.top > (rowRect.height / 3) * 2) {\n            this._dropLocation = DropLocation.BELOW;\n          }\n        }\n      }\n\n      if (row && row.hasAttribute('drop-disabled')) {\n        this._dropLocation = undefined;\n        return;\n      }\n\n      e.stopPropagation();\n      e.preventDefault();\n\n      if (this._dropLocation === DropLocation.EMPTY) {\n        this._toggleAttribute('dragover', true, this);\n      } else if (row) {\n        this._dragOverItem = row._item;\n        if (row.getAttribute('dragover') !== this._dropLocation) {\n          row.setAttribute('dragover', this._dropLocation);\n        }\n      } else {\n        this._clearDragStyles();\n      }\n    }\n  }\n\n  __dndAutoScroll(clientY) {\n    if (this.__dndAutoScrolling) {\n      return true;\n    }\n\n    const headerBottom = this.$.header.getBoundingClientRect().bottom;\n    const footerTop = this.$.footer.getBoundingClientRect().top;\n    const topDiff = headerBottom - clientY + this.__dndAutoScrollThreshold;\n    const bottomDiff = clientY - footerTop + this.__dndAutoScrollThreshold;\n    let scrollTopDelta = 0;\n\n    if (bottomDiff > 0) {\n      scrollTopDelta = bottomDiff * 2;\n    } else if (topDiff > 0) {\n      scrollTopDelta = -topDiff * 2;\n    }\n\n    if (scrollTopDelta) {\n      const scrollTop = this.$.table.scrollTop;\n      this.$.table.scrollTop += scrollTopDelta;\n      const scrollTopChanged = scrollTop !== this.$.table.scrollTop;\n      if (scrollTopChanged) {\n        this.__dndAutoScrolling = true;\n        // Disallow more auto-scrolls within 20ms\n        setTimeout(() => this.__dndAutoScrolling = false, 20);\n        this._scrollHandler();\n        return true;\n      }\n    }\n  }\n\n  __getViewportRows() {\n    const headerBottom = this.$.header.getBoundingClientRect().bottom;\n    const footerTop = this.$.footer.getBoundingClientRect().top;\n    return Array.from(this.$.items.children)\n      .filter(row => {\n        const rowRect = row.getBoundingClientRect();\n        return rowRect.bottom > headerBottom && rowRect.top < footerTop;\n      });\n  }\n\n  _clearDragStyles() {\n    this.removeAttribute('dragover');\n    Array.from(this.$.items.children).forEach(row => row.removeAttribute('dragover'));\n  }\n\n  _onDrop(e) {\n    if (this.dropMode) {\n      e.stopPropagation();\n      e.preventDefault();\n\n      const dragData = e.dataTransfer.types && Array.from(e.dataTransfer.types).map(type => {\n        return {\n          type,\n          data: e.dataTransfer.getData(type)\n        };\n      });\n\n      this._clearDragStyles();\n\n      const event = new CustomEvent('grid-drop', {\n        bubbles: e.bubbles,\n        cancelable: e.cancelable,\n        detail: {\n          dropTargetItem: this._dragOverItem,\n          dropLocation: this._dropLocation,\n          dragData\n        }\n      });\n      event.originalEvent = e;\n      this.dispatchEvent(event);\n    }\n  }\n\n  __formatDefaultTransferData(rows) {\n    return rows\n      .map(row => {\n        return Array.from(row.children)\n          .filter(cell => !cell.hidden && cell.getAttribute('part').indexOf('details-cell') === -1)\n          .sort((a, b) => {\n            return a._column._order > b._column._order ? 1 : -1;\n          })\n          .map(cell => cell._content.textContent.trim())\n          .filter(content => content)\n          .join('\\t');\n      })\n      .join('\\n');\n  }\n\n  _dragDropAccessChanged(rowsDraggable, dropMode, dragFilter, dropFilter) {\n    this.filterDragAndDrop();\n  }\n\n  /**\n   * Runs the `dragFilter` and `dropFilter` hooks for the visible cells.\n   * If the filter depends on varying conditions, you may need to\n   * call this function manually in order to update the draggability when\n   * the conditions change.\n   */\n  filterDragAndDrop() {\n    Array.from(this.$.items.children).filter(row => !row.hidden).forEach(\n      row => {\n        this._filterDragAndDrop(row, this.__getRowModel(row));\n      }\n    );\n  }\n\n  _filterDragAndDrop(row, rowData) {\n    const dragDisabled = !this.rowsDraggable || (this.dragFilter && !this.dragFilter(rowData));\n    const dropDisabled = !this.dropMode || (this.dropFilter && !this.dropFilter(rowData));\n\n    const draggableElements = window.ShadyDOM\n      ? [row]\n      : Array.from(row.children).map(cell => cell._content);\n\n    draggableElements.forEach(e => {\n      if (dragDisabled) {\n        e.removeAttribute('draggable');\n      } else {\n        e.setAttribute('draggable', true);\n      }\n    });\n\n    this._toggleAttribute('drag-disabled', dragDisabled, row);\n    this._toggleAttribute('drop-disabled', dropDisabled, row);\n  }\n\n  /**\n   * Fired when starting to drag grid rows.\n   *\n   * @event grid-dragstart\n   * @param {Object} originalEvent The native dragstart event\n   * @param {Object} detail\n   * @param {Object} detail.draggedItems the items in the visible viewport that are dragged\n   * @param {Function} detail.setDraggedItemsCount Overrides the default number shown in the drag image on multi row drag.\n   * Parameter is of type number.\n   * @param {Function} detail.setDragData Sets dataTransfer data for the drag operation.\n   * Note that \"text\" is the only data type supported by all the browsers the grid currently supports (including IE11).\n   * The function takes two parameters:\n   * - type:string The type of the data\n   * - data:string The data\n   */\n\n  /**\n   * Fired when the dragging of the rows ends.\n   *\n   * @event grid-dragend\n   * @param {Object} originalEvent The native dragend event\n   */\n\n  /**\n   * Fired when a drop occurs on top of the grid.\n   *\n   * @event grid-drop\n   * @param {Object} originalEvent The native drop event\n   * @param {Object} detail\n   * @param {Object} detail.dropTargetItem The item of the grid row on which the drop occurred.\n   * @param {string} detail.dropLocation The position at which the drop event took place relative to a row.\n   * Depending on the dropMode value, the drop location can be one of the following\n   * - `on-top`: when the drop occurred on top of the row\n   * - `above`: when the drop occurred above the row\n   * - `below`: when the drop occurred below the row\n   * - `empty`: when the drop occurred over the grid, not relative to any specific row\n   * @param {string} detail.dragData An array of items with the payload as a string representation as the\n   * `data` property and the type of the data as `type` property.\n   */\n};\n","/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\n/**\n * @polymerMixin\n */\nexport const KeyboardNavigationMixin = superClass => class KeyboardNavigationMixin extends superClass {\n  static get properties() {\n    return {\n      _headerFocusable: {\n        type: Object,\n        observer: '_focusableChanged'\n      },\n      _itemsFocusable: {\n        type: Object,\n        observer: '_focusableChanged'\n      },\n      _footerFocusable: {\n        type: Object,\n        observer: '_focusableChanged'\n      },\n      _navigatingIsHidden: Boolean,\n      _focusedItemIndex: {\n        type: Number,\n        value: 0\n      },\n      _focusedColumnOrder: Number\n    };\n  }\n\n  ready() {\n    super.ready();\n\n    if (this._ios || this._android) {\n      // Disable keyboard navigation on mobile devices\n      return;\n    }\n\n    this.addEventListener('keydown', this._onKeyDown);\n    this.addEventListener('keyup', this._onKeyUp);\n\n    this.addEventListener('focusin', this._onFocusIn);\n    this.addEventListener('focusout', this._onFocusOut);\n\n    // When focus goes from cell to another cell, focusin/focusout events do\n    // not escape the grid’s shadowRoot, thus listening inside the shadowRoot.\n    this.$.table.addEventListener('focusin', this._onCellFocusIn.bind(this));\n    this.$.table.addEventListener('focusout', this._onCellFocusOut.bind(this));\n\n    this.addEventListener('mousedown', () => {\n      this._toggleAttribute('navigating', false, this);\n      this._isMousedown = true;\n    });\n    this.addEventListener('mouseup', () => this._isMousedown = false);\n  }\n\n  _focusableChanged(focusable, oldFocusable) {\n    if (oldFocusable) {\n      oldFocusable.setAttribute('tabindex', '-1');\n    }\n    if (focusable) {\n      focusable.setAttribute('tabindex', '0');\n    }\n  }\n\n  _onKeyDown(e) {\n    // Ensure standard key value, unified across browsers\n    let key = e.key;\n    if (key === 'Up' || key === 'Down' || key === 'Left' || key === 'Right') {\n      // MSIE & Edge\n      key = 'Arrow' + key;\n    }\n    if (key === 'Esc') {\n      // MSIE & Edge\n      key = 'Escape';\n    }\n    if (key === 'Spacebar') {\n      // MSIE\n      key = ' ';\n    }\n\n    let keyGroup;\n    switch (key) {\n      case 'ArrowUp':\n      case 'ArrowDown':\n      case 'ArrowLeft':\n      case 'ArrowRight':\n      case 'PageUp':\n      case 'PageDown':\n      case 'Home':\n      case 'End':\n        keyGroup = 'Navigation';\n        break;\n      case 'Enter':\n      case 'Escape':\n      case 'F2':\n        keyGroup = 'Interaction';\n        break;\n      case 'Tab':\n        keyGroup = 'Tab';\n        break;\n      case ' ':\n        keyGroup = 'Space';\n        break;\n    }\n\n    this._detectInteracting(e);\n    if (this.hasAttribute('interacting') && keyGroup !== 'Interaction') {\n      // When in the interacting mode, only the “Interaction” keys are handled.\n      keyGroup = undefined;\n    }\n\n    if (keyGroup) {\n      this[`_on${keyGroup}KeyDown`](e, key);\n    }\n  }\n\n  _ensureScrolledToIndex(index) {\n    const targetRowInDom = Array.from(this.$.items.children).filter(child => child.index === index)[0];\n    if (!targetRowInDom) {\n      this._scrollToIndex(index);\n    }\n  }\n\n  _onNavigationKeyDown(e, key) {\n    e.preventDefault();\n\n    function indexOfChildElement(el) {\n      return Array.prototype.indexOf.call(el.parentNode.children, el);\n    }\n\n    const visibleItemsCount = this._lastVisibleIndex - this._firstVisibleIndex - 1;\n\n    let dx = 0, dy = 0;\n    switch (key) {\n      case 'ArrowRight':\n        dx = this.__isRTL ? -1 : 1;\n        break;\n      case 'ArrowLeft':\n        dx = this.__isRTL ? 1 : -1;\n        break;\n      case 'Home':\n        dx = -Infinity;\n        e.ctrlKey && (dy = -Infinity);\n        break;\n      case 'End':\n        dx = Infinity;\n        e.ctrlKey && (dy = Infinity);\n        break;\n      case 'ArrowDown':\n        dy = 1;\n        break;\n      case 'ArrowUp':\n        dy = -1;\n        break;\n      case 'PageDown':\n        dy = visibleItemsCount;\n        break;\n      case 'PageUp':\n        dy = -visibleItemsCount;\n        break;\n    }\n\n    const activeCell = e.composedPath()[0];\n    const columnIndex = indexOfChildElement(activeCell);\n    const isRowDetails = this._elementMatches(activeCell, '[part~=\"details-cell\"]');\n\n    const activeRow = activeCell.parentNode;\n\n    const activeRowGroup = activeRow.parentNode;\n    const maxRowIndex = (activeRowGroup === this.$.items ? this._effectiveSize : activeRowGroup.children.length) - 1;\n\n    // Body rows have index property, otherwise DOM child index of the row is used.\n    const rowIndex = (activeRowGroup === this.$.items) ?\n      (this._focusedItemIndex !== undefined ? this._focusedItemIndex : activeRow.index) :\n      indexOfChildElement(activeRow);\n\n    // Index of the destination row\n    let dstRowIndex = Math.max(0, Math.min(rowIndex + dy, maxRowIndex));\n\n    // Row details navigation logic\n    let dstIsRowDetails = false;\n    if (activeRowGroup === this.$.items) {\n      const item = activeRow._item;\n      const dstItem = this._cache.getItemForIndex(dstRowIndex);\n      // Should we navigate to row details?\n      if (isRowDetails) {\n        dstIsRowDetails = dy === 0;\n      } else {\n        dstIsRowDetails = dy === 1 && this._isDetailsOpened(item) ||\n          dy === -1 && dstRowIndex !== rowIndex && this._isDetailsOpened(dstItem);\n      }\n      // Should we navigate between details and regular cells of the same row?\n      if (dstIsRowDetails !== isRowDetails &&\n          (dy === 1 && dstIsRowDetails || dy === -1 && !dstIsRowDetails)) {\n        dstRowIndex = rowIndex;\n      }\n    }\n\n    // Header and footer could have hidden rows, e. g., if none of the columns\n    // or groups on the given column tree level define template. Skip them\n    // in vertical keyboard navigation.\n    if (activeRowGroup !== this.$.items) {\n      if (dstRowIndex > rowIndex) {\n        while (\n          dstRowIndex < maxRowIndex &&\n          activeRowGroup.children[dstRowIndex].hidden\n        ) {\n          dstRowIndex++;\n        }\n      } else if (dstRowIndex < rowIndex) {\n        while (\n          dstRowIndex > 0 &&\n          activeRowGroup.children[dstRowIndex].hidden\n        ) {\n          dstRowIndex--;\n        }\n      }\n    }\n\n    // _focusedColumnOrder is memoized — this is to ensure predictable\n    // navigation when entering and leaving detail and column group cells.\n    if (this._focusedColumnOrder === undefined) {\n      if (isRowDetails) {\n        this._focusedColumnOrder = 0;\n      } else {\n        this._focusedColumnOrder = this._getColumns(activeRowGroup, rowIndex).filter(c => !c.hidden)[columnIndex]._order;\n      }\n    }\n\n    // Find orderedColumnIndex — the index of order closest matching the\n    // original _focusedColumnOrder in the sorted array of orders\n    // of the visible columns on the destination row.\n    const dstColumns = this._getColumns(activeRowGroup, dstRowIndex).filter(c => !c.hidden);\n    const dstSortedColumnOrders = dstColumns.map(c => c._order)\n      .sort((b, a) => (b - a));\n    const maxOrderedColumnIndex = dstSortedColumnOrders.length - 1;\n    const orderedColumnIndex = dstSortedColumnOrders.indexOf(\n      dstSortedColumnOrders.slice(0).sort((b, a) =>\n        Math.abs(b - this._focusedColumnOrder) - Math.abs(a - this._focusedColumnOrder)\n      )[0]\n    );\n\n    // Index of the destination column order\n    const dstOrderedColumnIndex = (dy === 0 && isRowDetails) ? orderedColumnIndex :\n      Math.max(0, Math.min(orderedColumnIndex + dx, maxOrderedColumnIndex));\n\n    if (dstOrderedColumnIndex !== orderedColumnIndex) {\n      // Horizontal movement invalidates stored _focusedColumnOrder\n      this._focusedColumnOrder = undefined;\n    }\n\n    // Ensure correct vertical scroll position, destination row is visible\n    if (activeRowGroup === this.$.items) {\n      this._ensureScrolledToIndex(dstRowIndex);\n    }\n\n    // This has to be set after scrolling, otherwise it can be removed by\n    // `_preventScrollerRotatingCellFocus(item, index)` during scrolling.\n    this._toggleAttribute('navigating', true, this);\n\n    const columnIndexByOrder = dstColumns.reduce((acc, col, i) => (acc[col._order] = i, acc), {});\n    const dstColumnIndex = columnIndexByOrder[dstSortedColumnOrders[dstOrderedColumnIndex]];\n\n    // For body rows, use index property to find destination row, otherwise use DOM child index\n    const dstRow = activeRowGroup === this.$.items ?\n      Array.from(activeRowGroup.children).filter(el => el.index === dstRowIndex)[0] :\n      activeRowGroup.children[dstRowIndex];\n    if (!dstRow) {\n      return;\n    }\n\n    // Here we go!\n    const dstCell = dstIsRowDetails ?\n      Array.from(dstRow.children)\n        .filter(el => this._elementMatches(el, '[part~=\"details-cell\"]'))[0] :\n      dstRow.children[dstColumnIndex];\n    this._scrollHorizontallyToCell(dstCell);\n    if (activeRowGroup === this.$.items) {\n      // When scrolling with repeated keydown, sometimes FocusEvent listeners\n      // are too late to update _focusedItemIndex. Ensure next keydown\n      // listener invocation gets updated _focusedItemIndex value.\n      this._focusedItemIndex = dstRowIndex;\n    }\n\n    if (activeRowGroup === this.$.items) {\n      const dstRect = dstCell.getBoundingClientRect();\n      const footerTop = this.$.footer.getBoundingClientRect().top;\n      const headerBottom = this.$.header.getBoundingClientRect().bottom;\n      if (dstRect.bottom > footerTop) {\n        this.$.table.scrollTop += dstRect.bottom - footerTop;\n        this._scrollHandler();\n      } else if (dstRect.top < headerBottom) {\n        this.$.table.scrollTop -= headerBottom - dstRect.top;\n        this._scrollHandler();\n      }\n    }\n\n    dstCell.focus();\n  }\n\n  _parseEventPath(path) {\n    const tableIndex = path.indexOf(this.$.table);\n    return {\n      rowGroup: path[tableIndex - 1],\n      row: path[tableIndex - 2],\n      cell: path[tableIndex - 3]\n    };\n  }\n\n  _onInteractionKeyDown(e, key) {\n    const localTarget = e.composedPath()[0];\n    const localTargetIsTextInput = localTarget.localName === 'input' &&\n      !/^(button|checkbox|color|file|image|radio|range|reset|submit)$/i.test(localTarget.type);\n\n    let wantInteracting;\n    switch (key) {\n      case 'Enter':\n        wantInteracting = this.hasAttribute('interacting') ? !localTargetIsTextInput : true;\n        break;\n      case 'Escape':\n        wantInteracting = false;\n        break;\n      case 'F2':\n        wantInteracting = !this.hasAttribute('interacting');\n        break;\n    }\n\n    const {cell} = this._parseEventPath(e.composedPath());\n\n    if (this.hasAttribute('interacting') !== wantInteracting) {\n      if (wantInteracting) {\n        const focusTarget = cell._content.querySelector('[focus-target]') ||\n          cell._content.firstElementChild;\n        if (focusTarget) {\n          e.preventDefault();\n          focusTarget.focus();\n          this._toggleAttribute('interacting', true, this);\n          this._toggleAttribute('navigating', false, this);\n        }\n      } else {\n        e.preventDefault();\n        this._focusedColumnOrder = undefined;\n        cell.focus();\n        this._toggleAttribute('interacting', false, this);\n        this._toggleAttribute('navigating', true, this);\n      }\n    }\n  }\n\n  _predictFocusStepTarget(srcElement, step) {\n    const tabOrder = [\n      this.$.table,\n      this._headerFocusable,\n      this._itemsFocusable,\n      this._footerFocusable,\n      this.$.focusexit\n    ];\n\n    let index = tabOrder.indexOf(srcElement);\n\n    index += step;\n    while (index >= 0 && index <= tabOrder.length - 1 &&\n        (!tabOrder[index] || tabOrder[index].parentNode.hidden)) {\n      index += step;\n    }\n\n    return tabOrder[index];\n  }\n\n  _onTabKeyDown(e) {\n    const focusTarget = this._predictFocusStepTarget(e.composedPath()[0], e.shiftKey ? -1 : 1);\n\n    if (focusTarget === this.$.table) {\n      // The focus is about to exit the grid to the top.\n      this.$.table.focus();\n    } else if (focusTarget === this.$.focusexit) {\n      // The focus is about to exit the grid to the bottom.\n      this.$.focusexit.focus();\n    } else if (focusTarget === this._itemsFocusable) {\n      let itemsFocusTarget = focusTarget;\n      const targetRow = this._itemsFocusable.parentNode;\n      this._ensureScrolledToIndex(this._focusedItemIndex);\n      if (targetRow.index !== this._focusedItemIndex) {\n        // The target row, which is about to be focused next, has been\n        // assigned with a new index since last focus, probably because of\n        // scrolling. Focus the row for the stored focused item index instead.\n        const columnIndex = Array.from(targetRow.children).indexOf(this._itemsFocusable);\n        const focusedItemRow = Array.from(this.$.items.children)\n          .filter(row => row.index === this._focusedItemIndex)[0];\n        if (focusedItemRow) {\n          itemsFocusTarget = focusedItemRow.children[columnIndex];\n        }\n      }\n      e.preventDefault();\n      itemsFocusTarget.focus();\n    } else {\n      e.preventDefault();\n      focusTarget.focus();\n    }\n\n    this._toggleAttribute('navigating', true, this);\n  }\n\n  _onSpaceKeyDown(e) {\n    e.preventDefault();\n\n    const cell = e.composedPath()[0];\n    if (!cell._content || !cell._content.firstElementChild) {\n      this.dispatchEvent(new CustomEvent('cell-activate', {detail: {\n        model: this.__getRowModel(cell.parentElement)\n      }}));\n    }\n  }\n\n  /** @private */\n  _onKeyUp(e) {\n    if (!/^( |SpaceBar)$/.test(e.key)) {\n      return;\n    }\n\n    e.preventDefault();\n\n    const cell = e.composedPath()[0];\n    if (cell._content && cell._content.firstElementChild) {\n      const wasNavigating = this.hasAttribute('navigating');\n      cell._content.firstElementChild.click();\n      this._toggleAttribute('navigating', wasNavigating, this);\n    }\n  }\n\n  _onFocusIn(e) {\n    if (!this._isMousedown) {\n      this._toggleAttribute('navigating', true, this);\n    }\n\n    const rootTarget = e.composedPath()[0];\n\n    if (rootTarget === this.$.table ||\n        rootTarget === this.$.focusexit) {\n      // The focus enters the top (bottom) of the grid, meaning that user has\n      // tabbed (shift-tabbed) into the grid. Move the focus to\n      // the first (the last) focusable.\n      this._predictFocusStepTarget(\n        rootTarget,\n        rootTarget === this.$.table ? 1 : -1\n      ).focus();\n      this._toggleAttribute('interacting', false, this);\n    } else {\n      this._detectInteracting(e);\n    }\n  }\n\n  _onFocusOut(e) {\n    this._toggleAttribute('navigating', false, this);\n    this._detectInteracting(e);\n  }\n\n  _onCellFocusIn(e) {\n    this._detectInteracting(e);\n\n    if (e.composedPath().indexOf(this.$.table) === 3) {\n      const cell = e.composedPath()[0];\n      this._activeRowGroup = cell.parentNode.parentNode;\n      if (this._activeRowGroup === this.$.header) {\n        this._headerFocusable = cell;\n      } else if (this._activeRowGroup === this.$.items) {\n        this._itemsFocusable = cell;\n      } else if (this._activeRowGroup === this.$.footer) {\n        this._footerFocusable = cell;\n      }\n      // Inform cell content of the focus (used in <vaadin-grid-sorter>)\n      cell._content.dispatchEvent(new CustomEvent('cell-focusin', {bubbles: false}));\n    }\n\n    this._detectFocusedItemIndex(e);\n  }\n\n  _onCellFocusOut(e) {\n    if (e.composedPath().indexOf(this.$.table) === 3) {\n      const cell = e.composedPath()[0];\n      // Inform cell content of the focus (used in <vaadin-grid-sorter>)\n      cell._content.dispatchEvent(new CustomEvent('cell-focusout', {bubbles: false}));\n    }\n  }\n\n  _detectInteracting(e) {\n    this._toggleAttribute('interacting',\n      e.composedPath().some(el => el.localName === 'vaadin-grid-cell-content'),\n      this);\n  }\n\n  _detectFocusedItemIndex(e) {\n    const {rowGroup, row} = this._parseEventPath(e.composedPath());\n    if (rowGroup === this.$.items) {\n      this._focusedItemIndex = row.index;\n    }\n  }\n\n  _preventScrollerRotatingCellFocus(item, index) {\n    if (item.index === this._focusedItemIndex && this.hasAttribute('navigating') && this._activeRowGroup === this.$.items) {\n      // Focused item has went, hide navigation mode\n      this._navigatingIsHidden = true;\n      this._toggleAttribute('navigating', false, this);\n    }\n    if (index === this._focusedItemIndex && this._navigatingIsHidden) {\n      // Focused item is back, restore navigation mode\n      this._navigatingIsHidden = false;\n      this._toggleAttribute('navigating', true, this);\n    }\n  }\n\n  _getColumns(rowGroup, rowIndex) {\n    let columnTreeLevel = this._columnTree.length - 1;\n    if (rowGroup === this.$.header) {\n      columnTreeLevel = rowIndex;\n    } else if (rowGroup === this.$.footer) {\n      columnTreeLevel = this._columnTree.length - 1 - rowIndex;\n    }\n    return this._columnTree[columnTreeLevel];\n  }\n\n  _resetKeyboardNavigation() {\n    if (this.$.header.firstElementChild) {\n      this._headerFocusable = Array.from(this.$.header.firstElementChild.children).filter(el => !el.hidden)[0];\n    }\n\n    if (this.$.items.firstElementChild) {\n      const firstVisibleIndexRow = this._iterateItems((pidx, vidx) => {\n        if (this._firstVisibleIndex === vidx) {\n          return this.$.items.children[pidx];\n        }\n      });\n      if (firstVisibleIndexRow) {\n        this._itemsFocusable = Array.from(firstVisibleIndexRow.children).filter(el => !el.hidden)[0];\n      }\n    }\n\n    if (this.$.footer.firstElementChild) {\n      this._footerFocusable = Array.from(this.$.footer.firstElementChild.children).filter(el => !el.hidden)[0];\n    }\n  }\n\n  _scrollHorizontallyToCell(dstCell) {\n    if (dstCell.hasAttribute('frozen') || this._elementMatches(dstCell, '[part~=\"details-cell\"]')) {\n      // These cells are, by design, always visible, no need to scroll.\n      return;\n    }\n\n    const dstCellRect = dstCell.getBoundingClientRect();\n    const dstRow = dstCell.parentNode;\n    const dstCellIndex = Array.from(dstRow.children).indexOf(dstCell);\n    const tableRect = this.$.table.getBoundingClientRect();\n    let leftBoundary = tableRect.left, rightBoundary = tableRect.right;\n    for (let i = dstCellIndex - 1; i >= 0; i--) {\n      const cell = dstRow.children[i];\n      if (cell.hasAttribute('hidden') ||\n          this._elementMatches(cell, '[part~=\"details-cell\"]')) {\n        continue;\n      }\n      if (cell.hasAttribute('frozen')) {\n        leftBoundary = cell.getBoundingClientRect().right;\n        break;\n      }\n    }\n    for (let i = dstCellIndex + 1; i < dstRow.children.length; i++) {\n      const cell = dstRow.children[i];\n      if (cell.hasAttribute('hidden') ||\n          this._elementMatches(cell, '[part~=\"details-cell\"]')) {\n        continue;\n      }\n      if (cell.hasAttribute('frozen')) {\n        rightBoundary = cell.getBoundingClientRect().left;\n        break;\n      }\n    }\n\n    if (dstCellRect.left < leftBoundary) {\n      this.$.table.scrollLeft += Math.round(dstCellRect.left - leftBoundary);\n    }\n    if (dstCellRect.right > rightBoundary) {\n      this.$.table.scrollLeft += Math.round(dstCellRect.right - rightBoundary);\n    }\n  }\n\n  _elementMatches(el, query) {\n    return el.matches ? el.matches(query) :\n      Array.from(el.parentNode.querySelectorAll(query)).indexOf(el) !== -1;\n  }\n};\n","/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport { GestureEventListeners } from '@polymer/polymer/lib/mixins/gesture-event-listeners.js';\n\nimport { addListener } from '@polymer/polymer/lib/utils/gestures.js';\nimport { dom } from '@polymer/polymer/lib/legacy/polymer.dom.js';\nimport { useShadow } from '@polymer/polymer/lib/utils/settings.js';\n\n/**\n * @polymerMixin\n */\nexport const ColumnReorderingMixin = superClass => class ColumnReorderingMixin extends GestureEventListeners(superClass) {\n\n  static get properties() {\n    return {\n      /**\n       * Set to true to allow column reordering.\n       */\n      columnReorderingAllowed: {\n        type: Boolean,\n        value: false\n      },\n\n      _orderBaseScope: {\n        type: Number,\n        value: 10000000\n      }\n    };\n  }\n\n  static get observers() {\n    return [\n      '_updateOrders(_columnTree, _columnTree.*)'\n    ];\n  }\n\n  ready() {\n    super.ready();\n    addListener(this, 'track', this._onTrackEvent);\n    this._reorderGhost = this.shadowRoot.querySelector('[part=\"reorder-ghost\"]');\n\n    this.addEventListener('touchstart', this._onTouchStart.bind(this));\n    this.addEventListener('touchmove', this._onTouchMove.bind(this));\n    this.addEventListener('touchend', this._onTouchEnd.bind(this));\n    this.addEventListener('contextmenu', this._onContextMenu.bind(this));\n  }\n\n  _onContextMenu(e) {\n    if (this.hasAttribute('reordering')) {\n      e.preventDefault();\n    }\n  }\n\n  _onTouchStart(e) {\n    // Touch event, delay activation by 100ms\n    this._startTouchReorderTimeout = setTimeout(() => {\n      this._onTrackStart({\n        detail: {\n          x: e.touches[0].clientX,\n          y: e.touches[0].clientY\n        }\n      });\n    }, 100);\n  }\n\n  _onTouchMove(e) {\n    if (this._draggedColumn) {\n      e.preventDefault();\n    }\n    clearTimeout(this._startTouchReorderTimeout);\n  }\n\n  _onTouchEnd() {\n    clearTimeout(this._startTouchReorderTimeout);\n    this._onTrackEnd();\n  }\n\n  _onTrackEvent(e) {\n    if (e.detail.state === 'start') {\n      const path = e.composedPath();\n      const headerCell = path[path.indexOf(this.$.header) - 2];\n      if (!headerCell || !headerCell._content) {\n        // Not a header column\n        return;\n      }\n\n      const activeElement = this.getRootNode().activeElement;\n      if (headerCell._content.contains(this.getRootNode().activeElement)\n          && (!this._ie || !this._isFocusable(activeElement))) {\n        // Something was focused inside the cell\n        return;\n      }\n\n      if (this.$.scroller.hasAttribute('column-resizing')) {\n        // Resizing is in progress\n        return;\n      }\n\n      if (!this._touchDevice) {\n        // Not a touch device\n        this._onTrackStart(e);\n      }\n    } else if (e.detail.state === 'track') {\n      this._onTrack(e);\n    } else if (e.detail.state === 'end') {\n      this._onTrackEnd(e);\n    }\n  }\n\n  _onTrackStart(e) {\n    if (!this.columnReorderingAllowed) {\n      return;\n    }\n\n    // Cancel reordering if there are draggable nodes on the event path\n    const path = e.path || dom(e).path;\n    if (path && path.filter(node => node.hasAttribute && node.hasAttribute('draggable'))[0]) {\n      return;\n    }\n\n    const headerCell = this._cellFromPoint(e.detail.x, e.detail.y);\n    if (!headerCell || headerCell.getAttribute('part').indexOf('header-cell') === -1) {\n      return;\n    }\n\n    this._toggleAttribute('reordering', true, this);\n    this._draggedColumn = headerCell._column;\n    while (this._draggedColumn.parentElement.childElementCount === 1) {\n      // This is the only column in the group, drag the whole group instead\n      this._draggedColumn = this._draggedColumn.parentElement;\n    }\n    this._setSiblingsReorderStatus(this._draggedColumn, 'allowed');\n    this._draggedColumn._reorderStatus = 'dragging';\n\n    this._updateGhost(headerCell);\n    this._reorderGhost.style.visibility = 'visible';\n    this._updateGhostPosition(e.detail.x, this._touchDevice ? e.detail.y - 50 : e.detail.y);\n    this._autoScroller();\n  }\n\n  _onTrack(e) {\n    if (!this._draggedColumn) {\n      // Reordering didn’t start. Skip this event.\n      return;\n    }\n\n    const targetCell = this._cellFromPoint(e.detail.x, e.detail.y);\n    if (!targetCell) {\n      return;\n    }\n\n    const targetColumn = this._getTargetColumn(targetCell, this._draggedColumn);\n    if (this._isSwapAllowed(this._draggedColumn, targetColumn) &&\n      this._isSwappableByPosition(targetColumn, e.detail.x)) {\n      this._swapColumnOrders(this._draggedColumn, targetColumn);\n    }\n\n    this._updateGhostPosition(e.detail.x, this._touchDevice ? e.detail.y - 50 : e.detail.y);\n    this._lastDragClientX = e.detail.x;\n  }\n\n  _onTrackEnd() {\n    if (!this._draggedColumn) {\n      // Reordering didn’t start. Skip this event.\n      return;\n    }\n\n    this._toggleAttribute('reordering', false, this);\n    this._draggedColumn._reorderStatus = '';\n    this._setSiblingsReorderStatus(this._draggedColumn, '');\n    this._draggedColumn = null;\n    this._lastDragClientX = null;\n    this._reorderGhost.style.visibility = 'hidden';\n\n    this.dispatchEvent(new CustomEvent('column-reorder', {detail: {\n      columns: this._getColumnsInOrder()\n    }}));\n  }\n\n  _getColumnsInOrder() {\n    return this._columnTree.slice(0).pop()\n      .filter(c => !c.hidden)\n      .sort((b, a) => (b._order - a._order));\n  }\n\n  _cellFromPoint(x, y) {\n    x = x || 0;\n    y = y || 0;\n    if (!this._draggedColumn) {\n      this._toggleAttribute('no-content-pointer-events', true, this.$.scroller);\n    }\n    let cell;\n    if (useShadow) {\n      cell = this.shadowRoot.elementFromPoint(x, y);\n    } else {\n      cell = document.elementFromPoint(x, y);\n\n      // Workaround a FF58 bug\n      if (cell.localName === 'vaadin-grid-cell-content') {\n        cell = cell.assignedSlot.parentNode;\n      }\n\n    }\n    this._toggleAttribute('no-content-pointer-events', false, this.$.scroller);\n\n    // Make sure the element is actually a cell\n    if (cell && cell._column) {\n      return cell;\n    }\n  }\n\n  _updateGhostPosition(eventClientX, eventClientY) {\n    const ghostRect = this._reorderGhost.getBoundingClientRect();\n    // // This is where we want to position the ghost\n    const targetLeft = eventClientX - ghostRect.width / 2;\n    const targetTop = eventClientY - ghostRect.height / 2;\n    // Current position\n    const _left = parseInt(this._reorderGhost._left || 0);\n    const _top = parseInt(this._reorderGhost._top || 0);\n    // Reposition the ghost\n    this._reorderGhost._left = _left - (ghostRect.left - targetLeft);\n    this._reorderGhost._top = _top - (ghostRect.top - targetTop);\n    this._reorderGhost.style.transform = `translate(${this._reorderGhost._left}px, ${this._reorderGhost._top}px)`;\n  }\n\n  _getInnerText(e) {\n    if (e.localName) {\n      // Custom implementation needed since IE11 doesn't respect the spec in case of hidden elements\n      if (getComputedStyle(e).display === 'none') {\n        return '';\n      } else {\n        return Array.from(e.childNodes).map(n => this._getInnerText(n)).join('');\n      }\n    } else {\n      return e.textContent;\n    }\n  }\n\n  _updateGhost(cell) {\n    const ghost = this._reorderGhost;\n    ghost.textContent = this._getInnerText(cell._content);\n    const style = window.getComputedStyle(cell);\n    ['boxSizing', 'display', 'width', 'height', 'background', 'alignItems', 'padding', 'border', 'flex-direction', 'overflow']\n      .forEach(propertyName => ghost.style[propertyName] = style[propertyName]);\n    return ghost;\n  }\n\n  _updateOrders(columnTree, splices) {\n    if (columnTree === undefined || splices === undefined) {\n      return;\n    }\n\n    // Reset all column orders\n    columnTree[0].forEach((column, index) => column._order = 0);\n    // Set order numbers to top-level columns\n    columnTree[0].forEach((column, index) => column._order = (index + 1) * this._orderBaseScope);\n  }\n\n  _setSiblingsReorderStatus(column, status) {\n    Array.from(column.parentNode.children)\n      .filter(child => /column/.test(child.localName) && this._isSwapAllowed(child, column))\n      .forEach(sibling => sibling._reorderStatus = status);\n  }\n\n  _autoScroller() {\n    if (this._lastDragClientX) {\n      const rightDiff = this._lastDragClientX - this.getBoundingClientRect().right + 50;\n      const leftDiff = this.getBoundingClientRect().left - this._lastDragClientX + 50;\n\n      if (rightDiff > 0) {\n        this.$.table.scrollLeft += rightDiff / 10;\n      } else if (leftDiff > 0) {\n        this.$.table.scrollLeft -= leftDiff / 10;\n      }\n      this._scrollHandler();\n    }\n\n    if (this._draggedColumn) {\n      this.async(this._autoScroller, 10);\n    }\n  }\n\n  _isSwapAllowed(column1, column2) {\n    if (column1 && column2) {\n      const differentColumns = column1 !== column2;\n      const sameParent = column1.parentElement === column2.parentElement;\n      const sameFrozen = column1.frozen === column2.frozen;\n      return differentColumns && sameParent && sameFrozen;\n    }\n  }\n\n  _isSwappableByPosition(targetColumn, clientX) {\n    const targetCell =\n      Array.from(this.$.header.querySelectorAll('tr:not([hidden]) [part~=\"cell\"]')).filter(cell => targetColumn.contains(cell._column))[0];\n    const sourceCellRect = this.$.header.querySelector('tr:not([hidden]) [reorder-status=dragging]').getBoundingClientRect();\n    const targetRect = targetCell.getBoundingClientRect();\n    if (targetRect.left > sourceCellRect.left) {\n      return clientX > targetRect.right - sourceCellRect.width;\n    } else {\n      return clientX < targetRect.left + sourceCellRect.width;\n    }\n  }\n\n  _swapColumnOrders(column1, column2) {\n    const _order = column1._order;\n    column1._order = column2._order;\n    column2._order = _order;\n    this._updateLastFrozen();\n    this._updateFirstAndLastColumn();\n  }\n\n  _getTargetColumn(targetCell, draggedColumn) {\n    if (targetCell && draggedColumn) {\n      let candidate = targetCell._column;\n      while (candidate.parentElement !== draggedColumn.parentElement && candidate !== this) {\n        candidate = candidate.parentElement;\n      }\n      if (candidate.parentElement === draggedColumn.parentElement) {\n        return candidate;\n      } else {\n        return targetCell._column;\n      }\n    }\n  }\n\n  /**\n   * Fired when the columns in the grid are reordered.\n   *\n   * @event column-reorder\n   * @param {Object} detail\n   * @param {Object} detail.columns the columns in the new order\n   */\n};\n","/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\n/**\n * This Element is used internally by vaadin-grid.\n *\n * @private\n */\nclass GridOuterScrollerElement extends (class extends PolymerElement {}) {\n  static get template() {\n    return html`\n    <style>\n      :host {\n        display: block;\n        height: 100%;\n        width: 100%;\n        position: absolute;\n        top: 0;\n        box-sizing: border-box;\n        overflow: auto;\n      }\n\n      :host([passthrough]) {\n        pointer-events: none;\n      }\n    </style>\n\n    <slot></slot>\n`;\n  }\n\n  static get is() {\n    return 'vaadin-grid-outer-scroller';\n  }\n\n  static get properties() {\n    return {\n\n      scrollTarget: {\n        type: Object\n      },\n\n      scrollHandler: {\n        type: Object\n      },\n\n      passthrough: {\n        type: Boolean,\n        reflectToAttribute: true,\n        value: true\n      },\n\n      outerScrolling: Boolean,\n\n      noScrollbars: Boolean,\n\n      _touchDevice: Boolean\n    };\n  }\n\n  ready() {\n    super.ready();\n    this.addEventListener('scroll', () => this._syncScrollTarget());\n    this.parentElement.addEventListener('mousemove', this._onMouseMove.bind(this));\n\n    // for some reason scroll bars are hidden in iOS if this style is\n    // added in stylesheets or before attaching.\n    this.style.webkitOverflowScrolling = 'touch';\n\n    this.addEventListener('mousedown', _ => this.outerScrolling = true);\n    this.addEventListener('mouseup', _ => {\n      this.outerScrolling = false;\n      this.scrollHandler._scrollHandler();\n    });\n  }\n\n  _onMouseMove(e) {\n    // Ignore mousemove events on touch devices\n    if (!this._touchDevice) {\n      if (this.noScrollbars && this.parentElement.hasAttribute('scroll-period')) {\n        this.passthrough = e.offsetY <= this.clientHeight - 20 && e.offsetX <= this.clientWidth - 20;\n      } else {\n        this.passthrough = e.offsetY <= this.clientHeight && e.offsetX <= this.clientWidth;\n      }\n    }\n  }\n\n  syncOuterScroller() {\n    this.scrollTop = this.scrollTarget.scrollTop;\n    this.scrollLeft = this.scrollTarget.scrollLeft;\n  }\n\n  _syncScrollTarget() {\n    requestAnimationFrame(() => {\n      this.scrollTarget.scrollTop = this.scrollTop;\n      this.scrollTarget.scrollLeft = this.scrollLeft;\n      this.scrollHandler._scrollHandler();\n    });\n\n  }\n}\n\ncustomElements.define(GridOuterScrollerElement.is, GridOuterScrollerElement);\n","/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport '@polymer/polymer/lib/elements/dom-module.js';\n\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nconst VaadinGridStyles = document.createElement('dom-module');\n\n// NOTE(web-padawan): https://github.com/vaadin/vaadin-grid/issues/1514\nVaadinGridStyles.appendChild(\n  html`\n  <style>\n    @keyframes vaadin-grid-appear {\n      to {\n        opacity: 1;\n      }\n    }\n\n    :host {\n      display: block;\n      animation: 1ms vaadin-grid-appear;\n      height: 400px;\n      flex: 1 1 auto;\n      align-self: stretch;\n      position: relative;\n    }\n\n    :host([hidden]) {\n      display: none !important;\n    }\n\n    #scroller {\n      display: block;\n      transform: translateY(0);\n      width: auto;\n      height: auto;\n      position: absolute;\n      top: 0;\n      right: 0;\n      bottom: 0;\n      left: 0;\n    }\n\n    :host([height-by-rows]) {\n      height: auto;\n      align-self: flex-start;\n      flex-grow: 0;\n      width: 100%;\n    }\n\n    :host([height-by-rows]) #scroller {\n      width: 100%;\n      height: 100%;\n      position: relative;\n    }\n\n    #table {\n      display: block;\n      width: 100%;\n      height: 100%;\n      overflow: auto;\n      z-index: -2;\n      position: relative;\n      outline: none;\n    }\n\n    #header {\n      display: block;\n      position: absolute;\n      top: 0;\n      width: 100%;\n    }\n\n    th {\n      text-align: inherit;\n    }\n\n    /* Safari doesn't work with \"inherit\" */\n    [safari] th {\n      text-align: initial;\n    }\n\n    #footer {\n      display: block;\n      position: absolute;\n      bottom: 0;\n      width: 100%;\n    }\n\n    #items {\n      display: block;\n      width: 100%;\n      position: relative;\n      z-index: -1;\n    }\n\n    #items,\n    #outersizer,\n    #fixedsizer {\n      border-top: 0 solid transparent;\n      border-bottom: 0 solid transparent;\n    }\n\n    [part~=\"row\"] {\n      display: flex;\n      width: 100%;\n      box-sizing: border-box;\n      margin: 0;\n    }\n\n    [part~=\"row\"][loading] [part~=\"body-cell\"] ::slotted(vaadin-grid-cell-content) {\n      opacity: 0;\n    }\n\n    #items [part~=\"row\"] {\n      position: absolute;\n    }\n\n    #items [part~=\"row\"]:empty {\n      height: 1em;\n    }\n\n    [part~=\"cell\"]:not([part~=\"details-cell\"]) {\n      flex-shrink: 0;\n      flex-grow: 1;\n      box-sizing: border-box;\n      display: flex;\n      width: 100%;\n      position: relative;\n      align-items: center;\n      padding: 0;\n      white-space: nowrap;\n    }\n\n    [part~=\"details-cell\"] {\n      position: absolute;\n      bottom: 0;\n      width: 100%;\n      box-sizing: border-box;\n      padding: 0;\n    }\n\n    [part~=\"cell\"] ::slotted(vaadin-grid-cell-content) {\n      display: block;\n      width: 100%;\n      box-sizing: border-box;\n      overflow: hidden;\n      text-overflow: ellipsis;\n    }\n\n    [hidden] {\n      display: none !important;\n    }\n\n    [frozen] {\n      z-index: 2;\n      will-change: transform;\n    }\n\n    #outerscroller {\n      /* Needed (at least) for Android Chrome */\n      z-index: 0;\n    }\n\n    #scroller:not([safari]) #outerscroller {\n      /* Needed for Android Chrome (#1020). Can't be applied to Safari\n      since it would re-introduce the sub-pixel overflow bug (#853) */\n      will-change: transform;\n    }\n\n    [no-scrollbars]:not([safari]):not([firefox]) #outerscroller,\n    [no-scrollbars][safari] #table,\n    [no-scrollbars][firefox] #table {\n      overflow: hidden;\n    }\n\n    [no-scrollbars]:not([safari]):not([firefox]) #outerscroller {\n      pointer-events: none;\n    }\n\n    /* Reordering styles */\n    :host([reordering]) [part~=\"cell\"] ::slotted(vaadin-grid-cell-content),\n    :host([reordering]) [part~=\"resize-handle\"],\n    #scroller[no-content-pointer-events] [part~=\"cell\"] ::slotted(vaadin-grid-cell-content) {\n      pointer-events: none;\n    }\n\n    [part~=\"reorder-ghost\"] {\n      visibility: hidden;\n      position: fixed;\n      pointer-events: none;\n      opacity: 0.5;\n\n      /* Prevent overflowing the grid in Firefox */\n      top: 0;\n      left: 0;\n    }\n\n    :host([reordering]) {\n      -moz-user-select: none;\n      -webkit-user-select: none;\n      user-select: none;\n    }\n\n    #scroller[ie][column-reordering-allowed] [part~=\"header-cell\"] {\n      -ms-user-select: none;\n    }\n\n    :host([reordering]) #outerscroller {\n      -webkit-overflow-scrolling: auto !important;\n    }\n\n    /* Resizing styles */\n    [part~=\"resize-handle\"] {\n      position: absolute;\n      top: 0;\n      right: 0;\n      height: 100%;\n      cursor: col-resize;\n      z-index: 1;\n    }\n\n    [part~=\"resize-handle\"]::before {\n      position: absolute;\n      content: \"\";\n      height: 100%;\n      width: 35px;\n      transform: translateX(-50%);\n    }\n\n    [last-column] [part~=\"resize-handle\"]::before,\n    [last-frozen] [part~=\"resize-handle\"]::before {\n      width: 18px;\n      transform: none;\n      right: 0;\n    }\n\n    #scroller[column-resizing] {\n      -ms-user-select: none;\n      -moz-user-select: none;\n      -webkit-user-select: none;\n      user-select: none;\n    }\n\n    /* Sizer styles */\n    .sizer {\n      display: flex;\n      position: relative;\n      width: 100%;\n      visibility: hidden;\n    }\n\n    .sizer [part~=\"details-cell\"] {\n      display: none !important;\n    }\n\n    .sizer [part~=\"cell\"][hidden] {\n      display: none !important;\n    }\n\n    .sizer [part~=\"cell\"] {\n      display: block;\n      flex-shrink: 0;\n      line-height: 0;\n      margin-top: -1em;\n      height: 0 !important;\n      min-height: 0 !important;\n      max-height: 0 !important;\n      padding: 0 !important;\n    }\n\n    .sizer [part~=\"cell\"]::before {\n      content: \"-\";\n    }\n\n    .sizer [part~=\"cell\"] ::slotted(vaadin-grid-cell-content) {\n      display: none !important;\n    }\n\n    /* Fixed mode (Tablet Edge) */\n    #fixedsizer {\n      position: absolute;\n    }\n\n    :not([edge][no-scrollbars]) #fixedsizer {\n      display: none;\n    }\n\n    [edge][no-scrollbars] {\n      /* Any value other than ‘none’ for the transform results in the creation of both a stacking context and\n      a containing block. The object acts as a containing block for fixed positioned descendants. */\n      transform: translateZ(0);\n      overflow: hidden;\n    }\n\n    [edge][no-scrollbars] #header,\n    [edge][no-scrollbars] #footer {\n      position: fixed;\n    }\n\n    [edge][no-scrollbars] #items {\n      position: fixed;\n      width: 100%;\n      will-change: transform;\n    }\n\n    /* RTL specific styles */\n\n    :host([dir=\"rtl\"]) [part~=\"reorder-ghost\"] {\n      left: auto;\n      right: 0;\n    }\n\n    :host([dir=\"rtl\"]) [part~=\"resize-handle\"] {\n      left: 0;\n      right: auto;\n    }\n\n    :host([dir=\"rtl\"]) [part~=\"resize-handle\"]::before {\n      transform: translateX(50%);\n    }\n\n    :host([dir=\"rtl\"]) [last-column] [part~=\"resize-handle\"]::before,\n    :host([dir=\"rtl\"]) [last-frozen] [part~=\"resize-handle\"]::before {\n      left: 0;\n      right: auto;\n    }\n  </style>\n`);\n\nconst safari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\nconst firefox = navigator.userAgent.toLowerCase().indexOf('firefox') > -1;\n\nif (safari || firefox) {\n  const scrollingStyles = document.createElement('style');\n  scrollingStyles.textContent = `\n    [scrolling][safari] #outerscroller,\n    [scrolling][firefox] #outerscroller {\n      pointer-events: auto;\n    }\n\n    [ios] #outerscroller {\n      pointer-events: auto;\n      z-index: -3;\n    }\n\n    [ios][scrolling] #outerscroller {\n      z-index: 0;\n    }\n\n    [ios] [frozen] {\n      will-change: auto;\n    }\n  `;\n  VaadinGridStyles.querySelector('template').content.appendChild(scrollingStyles);\n}\n\nVaadinGridStyles.register('vaadin-grid-styles');\n","/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { ScrollerElement } from './vaadin-grid-scroller.js';\nimport { A11yMixin } from './vaadin-grid-a11y-mixin.js';\nimport { ActiveItemMixin } from './vaadin-grid-active-item-mixin.js';\nimport { ArrayDataProviderMixin } from './vaadin-grid-array-data-provider-mixin.js';\nimport { ColumnResizingMixin } from './vaadin-grid-column-resizing-mixin.js';\nimport { DataProviderMixin } from './vaadin-grid-data-provider-mixin.js';\nimport { DynamicColumnsMixin } from './vaadin-grid-dynamic-columns-mixin.js';\nimport { EventContextMixin } from './vaadin-grid-event-context-mixin.js';\nimport { FilterMixin } from './vaadin-grid-filter-mixin.js';\nimport { RowDetailsMixin } from './vaadin-grid-row-details-mixin.js';\nimport { ScrollMixin } from './vaadin-grid-scroll-mixin.js';\nimport { SelectionMixin } from './vaadin-grid-selection-mixin.js';\nimport { SortMixin } from './vaadin-grid-sort-mixin.js';\nimport { StylingMixin } from './vaadin-grid-styling-mixin.js';\nimport { DragAndDropMixin } from './vaadin-grid-drag-and-drop-mixin.js';\nimport { KeyboardNavigationMixin } from './vaadin-grid-keyboard-navigation-mixin.js';\nimport { ColumnReorderingMixin } from './vaadin-grid-column-reordering-mixin.js';\nimport './vaadin-grid-column.js';\nimport './vaadin-grid-outer-scroller.js';\nimport './vaadin-grid-styles.js';\nimport { ElementMixin } from '@vaadin/vaadin-element-mixin/vaadin-element-mixin.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { beforeNextRender, afterNextRender } from '@polymer/polymer/lib/utils/render-status.js';\nimport { Debouncer } from '@polymer/polymer/lib/utils/debounce.js';\nimport { timeOut, animationFrame } from '@polymer/polymer/lib/utils/async.js';\n\nconst TOUCH_DEVICE = (() => {\n  try {\n    document.createEvent('TouchEvent');\n    return true;\n  } catch (e) {\n    return false;\n  }\n})();\n\n/**\n *\n * `<vaadin-grid>` is a free, high quality data grid / data table Web Component. The content of the\n * the grid can be populated in two ways: imperatively by using renderer callback function and\n * declaratively by using Polymer's Templates.\n *\n * ### Quick Start\n *\n * Start with an assigning an array to the [`items`](#/elements/vaadin-grid#property-items) property to visualize your data.\n *\n * Use the [`<vaadin-grid-column>`](#/elements/vaadin-grid-column) element to configure the grid columns. Set `path` and `header`\n * shorthand properties for the columns to define what gets rendered in the cells of the column.\n *\n * #### Example:\n * ```html\n * <vaadin-grid>\n *   <vaadin-grid-column path=\"name.first\" header=\"First name\"></vaadin-grid-column>\n *   <vaadin-grid-column path=\"name.last\" header=\"Last name\"></vaadin-grid-column>\n *   <vaadin-grid-column path=\"email\"></vaadin-grid-column>\n * </vaadin-grid>\n * ```\n *\n * For custom content `vaadin-grid-column` element provides you with three types of `renderer` callback functions: `headerRenderer`,\n * `renderer` and `footerRenderer`.\n *\n * Each of those renderer functions provides `root`, `column`, `rowData` arguments when applicable.\n * Generate DOM content, append it to the `root` element and control the state\n * of the host element by accessing `column`. Before generating new content,\n * users are able to check if there is already content in `root` for reusing it.\n *\n * Renderers are called on initialization of new column cells and each time the\n * related row data is updated. DOM generated during the renderer call can be reused\n * in the next renderer call and will be provided with the `root` argument.\n * On first call it will be empty.\n *\n * #### Example:\n * ```html\n * <vaadin-grid>\n *   <vaadin-grid-column></vaadin-grid-column>\n *   <vaadin-grid-column></vaadin-grid-column>\n *   <vaadin-grid-column></vaadin-grid-column>\n * </vaadin-grid>\n * ```\n * ```js\n * const grid = document.querySelector('vaadin-grid');\n * grid.items = [{'name': 'John', 'surname': 'Lennon', 'role': 'singer'},\n *               {'name': 'Ringo', 'surname': 'Starr', 'role': 'drums'}];\n *\n * const columns = grid.querySelectorAll('vaadin-grid-column');\n *\n * columns[0].headerRenderer = function(root) {\n *   root.textContent = 'Name';\n * };\n * columns[0].renderer = function(root, column, rowData) {\n *   root.textContent = rowData.item.name;\n * };\n *\n * columns[1].headerRenderer = function(root) {\n *   root.textContent = 'Surname';\n * };\n * columns[1].renderer = function(root, column, rowData) {\n *   root.textContent = rowData.item.surname;\n * };\n *\n * columns[2].headerRenderer = function(root) {\n *   root.textContent = 'Role';\n * };\n * columns[2].renderer = function(root, column, rowData) {\n *   root.textContent = rowData.item.role;\n * };\n * ```\n *\n * Alternatively, the content can be provided with Polymer's Templates:\n *\n * #### Example:\n * ```html\n * <vaadin-grid items='[{\"name\": \"John\", \"surname\": \"Lennon\", \"role\": \"singer\"},\n * {\"name\": \"Ringo\", \"surname\": \"Starr\", \"role\": \"drums\"}]'>\n *   <vaadin-grid-column>\n *     <template class=\"header\">Name</template>\n *     <template>[[item.name]]</template>\n *   </vaadin-grid-column>\n *   <vaadin-grid-column>\n *     <template class=\"header\">Surname</template>\n *     <template>[[item.surname]]</template>\n *   </vaadin-grid-column>\n *   <vaadin-grid-column>\n *     <template class=\"header\">Role</template>\n *     <template>[[item.role]]</template>\n *   </vaadin-grid-column>\n * </vaadin-grid>\n * ```\n *\n * The following helper elements can be used for further customization:\n * - [`<vaadin-grid-column-group>`](#/elements/vaadin-grid-column-group)\n * - [`<vaadin-grid-filter>`](#/elements/vaadin-grid-filter)\n * - [`<vaadin-grid-sorter>`](#/elements/vaadin-grid-sorter)\n * - [`<vaadin-grid-selection-column>`](#/elements/vaadin-grid-selection-column)\n * - [`<vaadin-grid-tree-toggle>`](#/elements/vaadin-grid-tree-toggle)\n *\n * __Note that the helper elements must be explicitly imported.__\n * If you want to import everything at once you can use the `all-imports.html` bundle.\n *\n * A column template can be decorated with one the following class names to specify its purpose\n * - `header`: Marks a header template\n * - `footer`: Marks a footer template\n * - `row-details`: Marks a row details template\n *\n * The following built-in template variables can be bound to inside the column templates:\n * - `[[index]]`: Number representing the row index\n * - `[[item]]` and it's sub-properties: Data object (provided by a data provider / items array)\n * - `{{selected}}`: True if the item is selected (can be two-way bound)\n * - `{{detailsOpened}}`: True if the item has row details opened (can be two-way bound)\n * - `{{expanded}}`: True if the item has tree sublevel expanded (can be two-way bound)\n * - `[[level]]`: Number of the tree sublevel of the item, first level-items have 0\n *\n * ### Lazy Loading with Function Data Provider\n *\n * In addition to assigning an array to the items property, you can alternatively\n * provide the `<vaadin-grid>` data through the\n * [`dataProvider`](#/elements/vaadin-grid#property-dataProvider) function property.\n * The `<vaadin-grid>` calls this function lazily, only when it needs more data\n * to be displayed.\n *\n * See the [`dataProvider`](#/elements/vaadin-grid#property-dataProvider) in\n * the API reference below for the detailed data provider arguments description,\n * and the “Assigning Data” page in the demos.\n *\n * __Note that expanding the tree grid's item will trigger a call to the `dataProvider`.__\n *\n * __Also, note that when using function data providers, the total number of items\n * needs to be set manually. The total number of items can be returned\n * in the second argument of the data provider callback:__\n *\n * ```javascript\n * grid.dataProvider = function(params, callback) {\n *   var url = 'https://api.example/data' +\n *       '?page=' + params.page +        // the requested page index\n *       '&per_page=' + params.pageSize; // number of items on the page\n *   var xhr = new XMLHttpRequest();\n *   xhr.onload = function() {\n *     var response = JSON.parse(xhr.responseText);\n *     callback(\n *       response.employees, // requested page of items\n *       response.totalSize  // total number of items\n *     );\n *   };\n *   xhr.open('GET', url, true);\n *   xhr.send();\n * };\n * ```\n *\n * __Alternatively, you can use the `size` property to set the total number of items:__\n *\n * ```javascript\n * grid.size = 200; // The total number of items\n * grid.dataProvider = function(params, callback) {\n *   var url = 'https://api.example/data' +\n *       '?page=' + params.page +        // the requested page index\n *       '&per_page=' + params.pageSize; // number of items on the page\n *   var xhr = new XMLHttpRequest();\n *   xhr.onload = function() {\n *     var response = JSON.parse(xhr.responseText);\n *     callback(response.employees);\n *   };\n *   xhr.open('GET', url, true);\n *   xhr.send();\n * };\n * ```\n *\n * ### Styling\n *\n * The following shadow DOM parts are available for styling:\n *\n * Part name | Description\n * ----------------|----------------\n * `row` | Row in the internal table\n * `cell` | Cell in the internal table\n * `header-cell` | Header cell in the internal table\n * `body-cell` | Body cell in the internal table\n * `footer-cell` | Footer cell in the internal table\n * `details-cell` | Row details cell in the internal table\n * `resize-handle` | Handle for resizing the columns\n * `reorder-ghost` | Ghost element of the header cell being dragged\n *\n * The following state attributes are available for styling:\n *\n * Attribute    | Description | Part name\n * -------------|-------------|------------\n * `loading` | Set when the grid is loading data from data provider | :host\n * `interacting` | Keyboard navigation in interaction mode | :host\n * `navigating` | Keyboard navigation in navigation mode | :host\n * `overflow` | Set when rows are overflowing the grid viewport. Possible values: `top`, `bottom`, `left`, `right` | :host\n * `reordering` | Set when the grid's columns are being reordered | :host\n * `dragover` | Set when the grid (not a specific row) is dragged over | :host\n * `dragging-rows` : Set when grid rows are dragged  | :host\n * `reorder-status` | Reflects the status of a cell while columns are being reordered | cell\n * `frozen` | Frozen cell | cell\n * `last-frozen` | Last frozen cell | cell\n* * `first-column` | First visible cell on a row | cell\n * `last-column` | Last visible cell on a row | cell\n * `selected` | Selected row | row\n * `expanded` | Expanded row | row\n * `details-opened` | Row with details open | row\n * `loading` | Row that is waiting for data from data provider | row\n * `odd` | Odd row | row\n * `first` | The first body row | row\n * `dragstart` | Set for one frame when drag of a row is starting. The value is a number when multiple rows are dragged | row\n * `dragover` | Set when the row is dragged over | row\n * `drag-disabled` | Set to a row that isn't available for dragging | row\n * `drop-disabled` | Set to a row that can't be dropped on top of | row\n *\n * See [ThemableMixin – how to apply styles for shadow parts](https://github.com/vaadin/vaadin-themable-mixin/wiki)\n *\n * @extends PolymerElement\n * @mixes ThemableMixin\n * @mixes Grid.A11yMixin\n * @mixes Grid.ActiveItemMixin\n * @mixes Grid.ArrayDataProviderMixin\n * @mixes Grid.ColumnResizingMixin\n * @mixes Grid.DataProviderMixin\n * @mixes Grid.DynamicColumnsMixin\n * @mixes Grid.FilterMixin\n * @mixes Grid.RowDetailsMixin\n * @mixes Grid.ScrollMixin\n * @mixes Grid.SelectionMixin\n * @mixes Grid.SortMixin\n * @mixes Grid.KeyboardNavigationMixin\n * @mixes Grid.ColumnReorderingMixin\n * @mixes Grid.EventContextMixin\n * @mixes Grid.StylingMixin\n * @mixes Grid.DragAndDropMixin\n * @demo demo/index.html\n */\nclass GridElement extends\n  ElementMixin(\n    ThemableMixin(\n      DataProviderMixin(\n        ArrayDataProviderMixin(\n          DynamicColumnsMixin(\n            ActiveItemMixin(\n              ScrollMixin(\n                SelectionMixin(\n                  SortMixin(\n                    RowDetailsMixin(\n                      KeyboardNavigationMixin(\n                        A11yMixin(\n                          FilterMixin(\n                            ColumnReorderingMixin(\n                              ColumnResizingMixin(\n                                EventContextMixin(\n                                  DragAndDropMixin(\n                                    StylingMixin(\n                                      ScrollerElement)))))))))))))))))) {\n  static get template() {\n    return html`\n    <style include=\"vaadin-grid-styles\"></style>\n\n    <div id=\"scroller\" no-scrollbars\\$=\"[[!_scrollbarWidth]]\" wheel-scrolling\\$=\"[[_wheelScrolling]]\" safari\\$=\"[[_safari]]\" ios\\$=\"[[_ios]]\" loading\\$=\"[[loading]]\" edge\\$=\"[[_edge]]\" firefox\\$=\"[[_firefox]]\" ie\\$=\"[[_ie]]\" column-reordering-allowed\\$=\"[[columnReorderingAllowed]]\">\n\n      <table id=\"table\" role=\"grid\" aria-multiselectable=\"true\" tabindex=\"0\">\n        <caption id=\"fixedsizer\" class=\"sizer\" part=\"row\"></caption>\n        <thead id=\"header\" role=\"rowgroup\"></thead>\n        <tbody id=\"items\" role=\"rowgroup\"></tbody>\n        <tfoot id=\"footer\" role=\"rowgroup\"></tfoot>\n      </table>\n\n      <div part=\"reorder-ghost\"></div>\n      <vaadin-grid-outer-scroller id=\"outerscroller\" _touch-device=\"[[_touchDevice]]\" scroll-target=\"[[scrollTarget]]\" scroll-handler=\"[[_this]]\" no-scrollbars=\"[[!_scrollbarWidth]]\">\n        <div id=\"outersizer\" class=\"sizer\" part=\"row\"></div>\n      </vaadin-grid-outer-scroller>\n    </div>\n\n    <!-- The template needs at least one slot or else shady doesn't distribute -->\n    <slot name=\"nodistribute\"></slot>\n\n    <div id=\"focusexit\" tabindex=\"0\"></div>\n`;\n  }\n\n  static get is() {\n    return 'vaadin-grid';\n  }\n\n  static get version() {\n    return '5.6.6';\n  }\n\n  static get observers() {\n    return [\n      '_columnTreeChanged(_columnTree, _columnTree.*)'\n    ];\n  }\n\n  static get properties() {\n    return {\n\n      _this: {\n        type: Object,\n        value: function() {\n          return this;\n        }\n      },\n\n      _safari: {\n        type: Boolean,\n        value: /^((?!chrome|android).)*safari/i.test(navigator.userAgent)\n      },\n\n      _ios: {\n        type: Boolean,\n        value: (/iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream)\n          || (navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1)\n      },\n\n      _edge: {\n        type: Boolean,\n        value: typeof CSS !== 'undefined' && CSS.supports('(-ms-ime-align:auto)')\n      },\n\n      _ie: {\n        type: Boolean,\n        value: !!(navigator.userAgent.match(/Trident/) && !navigator.userAgent.match(/MSIE/))\n      },\n\n      _firefox: {\n        type: Boolean,\n        value: navigator.userAgent.toLowerCase().indexOf('firefox') > -1\n      },\n\n      _android: {\n        type: Boolean,\n        value: /android/i.test(navigator.userAgent)\n      },\n\n      _touchDevice: {\n        type: Boolean,\n        value: TOUCH_DEVICE\n      },\n\n      /**\n       * If true, the grid's height is defined by its rows.\n       *\n       * Effectively, this disables the grid's virtual scrolling so that all the rows are rendered in the DOM at once.\n       * If the grid has a large number of items, using the feature is discouraged to avoid performance issues.\n       */\n      heightByRows: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true,\n        observer: '_heightByRowsChanged'\n      },\n      _recalculateColumnWidthOnceLoadingFinished: {\n        type: Boolean,\n        value: true\n      }\n    };\n  }\n\n  constructor() {\n    super();\n    this.addEventListener('animationend', this._onAnimationEnd);\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.recalculateColumnWidths();\n  }\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    super.attributeChangedCallback(name, oldValue, newValue);\n    if (name === 'dir') {\n      this.__isRTL = newValue === 'rtl';\n      this._updateScrollerMeasurements();\n    }\n  }\n\n  __hasRowsWithClientHeight() {\n    return !!Array.from(this.$.items.children).filter(row => row.clientHeight).length;\n  }\n\n  __itemsReceived() {\n    if (this._recalculateColumnWidthOnceLoadingFinished\n      && !this._cache.isLoading()\n      && this.__hasRowsWithClientHeight()) {\n      this._recalculateColumnWidthOnceLoadingFinished = false;\n      this.recalculateColumnWidths();\n    }\n  }\n\n  /**\n   * @param {Array<Vaadin.GridColumnElement>} cols the columns to auto size based on their content width\n   */\n  _recalculateColumnWidths(cols) {\n    // Note: The `cols.forEach()` loops below could be implemented as a single loop but this has been\n    // split for performance reasons to batch these similar actions [write/read] together to avoid\n    // unnecessary layout trashing.\n\n    // [write] Set automatic width for all cells (breaks column alignment)\n    cols.forEach(col => {\n      col.width = 'auto';\n      col._origFlexGrow = col.flexGrow;\n      col.flexGrow = 0;\n    });\n    // [read] Measure max cell width in each column\n    cols.forEach(col => {\n      col._currentWidth = 0;\n      // Note: _allCells only contains cells which are currently rendered in DOM\n      col._allCells.forEach(c => {\n        // Add 1px buffer to the offset width to avoid too narrow columns (sub-pixel rendering)\n        const cellWidth = c.offsetWidth + 1;\n        col._currentWidth = Math.max(col._currentWidth, cellWidth);\n      });\n    });\n    // [write] Set column widths to fit widest measured content\n    cols.forEach(col => {\n      col.width = `${col._currentWidth}px`;\n      col.flexGrow = col._origFlexGrow;\n      col._currentWidth = undefined;\n      col._origFlexGrow = undefined;\n    });\n  }\n\n  /**\n   * Updates the `width` of all columns which have `autoWidth` set to `true`.\n   */\n  recalculateColumnWidths() {\n    if (!this._columnTree) {\n      return; // No columns\n    }\n    if (this._cache.isLoading()) {\n      this._recalculateColumnWidthOnceLoadingFinished = true;\n    } else {\n      const cols = this._getColumns().filter(col => !col.hidden && col.autoWidth);\n      this._recalculateColumnWidths(cols);\n\n    }\n  }\n\n  _createScrollerRows(count) {\n    const rows = [];\n    for (var i = 0; i < count; i++) {\n      const row = document.createElement('tr');\n      row.setAttribute('part', 'row');\n      row.setAttribute('role', 'row');\n      if (this._columnTree) {\n        this._updateRow(row, this._columnTree[this._columnTree.length - 1], 'body', false, true);\n      }\n      rows.push(row);\n    }\n\n    if (this._columnTree) {\n      this._columnTree[this._columnTree.length - 1].forEach(c => c.notifyPath && c.notifyPath('_cells.*', c._cells));\n    }\n\n    beforeNextRender(this, () => {\n      this._updateFirstAndLastColumn();\n      this._resetKeyboardNavigation();\n    });\n    return rows;\n  }\n\n  _getRowTarget() {\n    return this.$.items;\n  }\n\n  _createCell(tagName) {\n    const contentId = this._contentIndex = this._contentIndex + 1 || 0;\n    const slotName = 'vaadin-grid-cell-content-' + contentId;\n\n    const cellContent = document.createElement('vaadin-grid-cell-content');\n    cellContent.setAttribute('slot', slotName);\n\n    const cell = document.createElement(tagName);\n    cell.id = slotName.replace('-content-', '-');\n    cell.setAttribute('tabindex', '-1');\n    cell.setAttribute('role', tagName === 'td' ? 'gridcell' : 'columnheader');\n\n    const slot = document.createElement('slot');\n    slot.setAttribute('name', slotName);\n\n    cell.appendChild(slot);\n\n    cell._content = cellContent;\n\n    // With native Shadow DOM, mousedown on slotted element does not focus\n    // focusable slot wrapper, that is why cells are not focused with\n    // mousedown. Workaround: listen for mousedown and focus manually.\n    cellContent.addEventListener('mousedown', () => {\n      if (window.chrome) {\n        // Chrome bug: focusing before mouseup prevents text selection, see http://crbug.com/771903\n        const mouseUpListener = () => {\n          if (!cellContent.contains(this.getRootNode().activeElement)) {\n            cell.focus();\n          }\n          // If focus is in the cell content — respect it, do not change.\n          document.removeEventListener('mouseup', mouseUpListener, true);\n        };\n        document.addEventListener('mouseup', mouseUpListener, true);\n      } else {\n        // Focus on mouseup, on the other hand, removes selection on Safari.\n        // Watch out sync focus removal issue, only async focus works here.\n        setTimeout(() => {\n          if (!cellContent.contains(this.getRootNode().activeElement)) {\n            cell.focus();\n          }\n        });\n      }\n    });\n\n    return cell;\n  }\n\n  _updateRow(row, columns, section, isColumnRow, noNotify) {\n    section = section || 'body';\n\n    const contentsFragment = document.createDocumentFragment();\n\n    Array.from(row.children).forEach(cell => cell._vacant = true);\n    row.innerHTML = '';\n    if (row.id !== 'outersizer' && row.id !== 'fixedsizer') {\n      row.hidden = true;\n    }\n    columns\n      .filter(column => !column.hidden)\n      .forEach((column, index, cols) => {\n        let cell;\n\n        if (section === 'body') {\n        // Body\n          column._cells = column._cells || [];\n          cell = column._cells.filter(cell => cell._vacant)[0];\n          if (!cell) {\n            cell = this._createCell('td');\n            column._cells.push(cell);\n          }\n          cell.setAttribute('part', 'cell body-cell');\n          row.appendChild(cell);\n\n          if (index === cols.length - 1 && (this._rowDetailsTemplate || this.rowDetailsRenderer)) {\n          // Add details cell as last cell to body rows\n            this._detailsCells = this._detailsCells || [];\n            const detailsCell = this._detailsCells.filter(cell => cell._vacant)[0] || this._createCell('td');\n            if (this._detailsCells.indexOf(detailsCell) === -1) {\n              this._detailsCells.push(detailsCell);\n            }\n            if (!detailsCell._content.parentElement) {\n              contentsFragment.appendChild(detailsCell._content);\n            }\n            this._configureDetailsCell(detailsCell);\n            row.appendChild(detailsCell);\n            this._a11ySetRowDetailsCell(row, detailsCell);\n            detailsCell._vacant = false;\n          }\n\n          if (column.notifyPath && !noNotify) {\n            column.notifyPath('_cells.*', column._cells);\n          }\n        } else {\n        // Header & footer\n          const tagName = section === 'header' ? 'th' : 'td';\n          if (isColumnRow || column.localName === 'vaadin-grid-column-group') {\n            cell = column[`_${section}Cell`] || this._createCell(tagName);\n            cell._column = column;\n            row.appendChild(cell);\n            column[`_${section}Cell`] = cell;\n          } else {\n            column._emptyCells = column._emptyCells || [];\n            cell = column._emptyCells.filter(cell => cell._vacant)[0] || this._createCell(tagName);\n            cell._column = column;\n            row.appendChild(cell);\n            if (column._emptyCells.indexOf(cell) === -1) {\n              column._emptyCells.push(cell);\n            }\n          }\n          cell.setAttribute('part', `cell ${section}-cell`);\n          this.__updateHeaderFooterRowVisibility(row);\n        }\n\n        if (!cell._content.parentElement) {\n          contentsFragment.appendChild(cell._content);\n        }\n        cell._vacant = false;\n        cell._column = column;\n      });\n\n    // Might be empty if only cache was used\n    this.appendChild(contentsFragment);\n\n    this._frozenCellsChanged();\n    this._updateFirstAndLastColumnForRow(row);\n  }\n\n  __updateHeaderFooterRowVisibility(row) {\n    if (!row) {\n      return;\n    }\n\n    const visibleRowCells = Array.from(row.children).filter(cell => {\n      const column = cell._column;\n      if (column._emptyCells && column._emptyCells.indexOf(cell) > -1) {\n        // The cell is an \"empty cell\"  -> doesn't block hiding the row\n        return false;\n      }\n      if (row.parentElement === this.$.header) {\n        if (column.headerRenderer || column._headerTemplate) {\n          // The cell is the header cell of a column that has a header renderer\n          // or a header template -> row should be visible\n          return true;\n        }\n        if (column.header === null) {\n          // The column header is explicilty set to null -> doesn't block hiding the row\n          return false;\n        }\n        if (column.path || column.header !== undefined) {\n          // The column has an explicit non-null header or a path that generates a header\n          // -> row should be visible\n          return true;\n        }\n      } else {\n        if (column.footerRenderer || column._footerTemplate) {\n          // The cell is the footer cell of a column that has a footer renderer\n          // or a footer template -> row should be visible\n          return true;\n        }\n      }\n    });\n\n    if (row.hidden !== !visibleRowCells.length) {\n      row.hidden = !visibleRowCells.length;\n      this.notifyResize();\n    }\n  }\n\n  _updateScrollerItem(row, index) {\n    this._preventScrollerRotatingCellFocus(row, index);\n\n    if (!this._columnTree) {\n      return;\n    }\n\n    this._toggleAttribute('first', index === 0, row);\n    this._toggleAttribute('odd', index % 2, row);\n    this._a11yUpdateRowRowindex(row, index);\n    this._getItem(index, row);\n  }\n\n  _columnTreeChanged(columnTree, splices) {\n    this._renderColumnTree(columnTree);\n    this.recalculateColumnWidths();\n  }\n\n  _renderColumnTree(columnTree) {\n    Array.from(this.$.items.children).forEach((row) => this._updateRow(row, columnTree[columnTree.length - 1], null, false, true));\n\n    while (this.$.header.children.length < columnTree.length) {\n      const headerRow = document.createElement('tr');\n      headerRow.setAttribute('part', 'row');\n      headerRow.setAttribute('role', 'row');\n      this.$.header.appendChild(headerRow);\n\n      const footerRow = document.createElement('tr');\n      footerRow.setAttribute('part', 'row');\n      footerRow.setAttribute('role', 'row');\n      this.$.footer.appendChild(footerRow);\n    }\n    while (this.$.header.children.length > columnTree.length) {\n      this.$.header.removeChild(this.$.header.firstElementChild);\n      this.$.footer.removeChild(this.$.footer.firstElementChild);\n    }\n\n    Array.from(this.$.header.children)\n      .forEach((headerRow, index) => this._updateRow(headerRow, columnTree[index], 'header', index === columnTree.length - 1));\n\n    Array.from(this.$.footer.children)\n      .forEach((footerRow, index) => this._updateRow(footerRow, columnTree[columnTree.length - 1 - index], 'footer', index === 0));\n\n    // Sizer rows\n    this._updateRow(this.$.outersizer, columnTree[columnTree.length - 1], null, false, true);\n    this._updateRow(this.$.fixedsizer, columnTree[columnTree.length - 1]);\n\n    this._resizeHandler();\n    this._frozenCellsChanged();\n    this._updateFirstAndLastColumn();\n    this._resetKeyboardNavigation();\n    this._a11yUpdateHeaderRows();\n    this._a11yUpdateFooterRows();\n  }\n\n  _updateItem(row, item) {\n    row._item = item;\n    const model = this.__getRowModel(row);\n\n    this._toggleAttribute('selected', model.selected, row);\n    this._a11yUpdateRowSelected(row, model.selected);\n    this._a11yUpdateRowLevel(row, model.level);\n    this._toggleAttribute('expanded', model.expanded, row);\n    if (this._rowDetailsTemplate || this.rowDetailsRenderer) {\n      this._toggleDetailsCell(row, item);\n    }\n    this._generateCellClassNames(row, model);\n    this._filterDragAndDrop(row, model);\n\n    Array.from(row.children).forEach(cell => {\n      if (cell._renderer) {\n        const owner = cell._column || this;\n        cell._renderer.call(owner, cell._content, owner, model);\n      } else if (cell._instance) {\n        cell._instance.__detailsOpened__ = model.detailsOpened;\n        cell._instance.__selected__ = model.selected;\n        cell._instance.__level__ = model.level;\n        cell._instance.__expanded__ = model.expanded;\n        cell._instance.setProperties(model);\n      }\n    });\n\n    this._debouncerUpdateHeights = Debouncer.debounce(this._debouncerUpdateHeights,\n      timeOut.after(1), () => {\n        this._updateMetrics();\n        this._positionItems();\n        this._updateScrollerSize();\n      }\n    );\n  }\n\n  _resizeHandler() {\n    this._updateDetailsCellHeights();\n    this._accessIronListAPI(super._resizeHandler, true);\n    this._updateScrollerMeasurements();\n    this._updateHeaderFooterMetrics();\n  }\n\n  _updateHeaderFooterMetrics() {\n    const headerHeight = this.$.header.clientHeight + 'px';\n    const footerHeight = this.$.footer.clientHeight + 'px';\n    [this.$.outersizer, this.$.fixedsizer, this.$.items].forEach(element => {\n      element.style.borderTopWidth = headerHeight;\n      element.style.borderBottomWidth = footerHeight;\n    });\n\n    afterNextRender(this.$.header, () => {\n      if (this._pendingScrollToIndex) {\n        this._scrollToIndex(this._pendingScrollToIndex);\n      }\n    });\n  }\n\n  _onAnimationEnd(e) {\n    // ShadyCSS applies scoping suffixes to animation names\n    if (e.animationName.indexOf('vaadin-grid-appear') === 0) {\n      this._render();\n      this._updateHeaderFooterMetrics();\n      e.stopPropagation();\n      this.notifyResize();\n      this.__itemsReceived();\n    }\n  }\n\n  _toggleAttribute(name, bool, node) {\n    if (node.hasAttribute(name) === !bool) {\n      if (bool) {\n        node.setAttribute(name, '');\n      } else {\n        node.removeAttribute(name);\n      }\n    }\n  }\n\n  __getRowModel(row) {\n    return {\n      index: row.index,\n      item: row._item,\n      level: this._getIndexLevel(row.index),\n      expanded: this._isExpanded(row._item),\n      selected: this._isSelected(row._item),\n      detailsOpened:\n        !!(this._rowDetailsTemplate || this.rowDetailsRenderer) && this._isDetailsOpened(row._item)\n    };\n  }\n\n  /**\n   * Manually invoke existing renderers for all the columns\n   * (header, footer and body cells) and opened row details.\n   */\n  render() {\n    if (this._columnTree) {\n      // header and footer renderers\n      this._columnTree.forEach(level => {\n        level.forEach(column => column._renderHeaderAndFooter());\n      });\n\n      // body and row details renderers\n      this._update();\n    }\n  }\n\n  /**\n   * Updates the computed metrics and positioning of internal grid parts\n   * (row/details cell positioning etc). Needs to be invoked whenever the sizing of grid\n   * content changes asynchronously to ensure consistent appearance (e.g. when a\n   * contained image whose bounds aren't known beforehand finishes loading).\n   */\n  notifyResize() {\n    super.notifyResize();\n  }\n\n  _heightByRowsChanged(value, oldValue) {\n    if (value || oldValue) {\n      this.notifyResize();\n    }\n  }\n\n  __forceReflow() {\n    this._debouncerForceReflow = Debouncer.debounce(this._debouncerForceReflow,\n      animationFrame, () => {\n        this.$.scroller.style.overflow = 'hidden';\n        setTimeout(() => this.$.scroller.style.overflow = '');\n      }\n    );\n  }\n}\n\ncustomElements.define(GridElement.is, GridElement);\nexport { GridElement };\n","/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport { GestureEventListeners } from '@polymer/polymer/lib/mixins/gesture-event-listeners.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { ControlStateMixin } from '@vaadin/vaadin-control-state-mixin/vaadin-control-state-mixin.js';\nimport { ElementMixin } from '@vaadin/vaadin-element-mixin/vaadin-element-mixin.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\n/**\n * `<vaadin-checkbox>` is a Web Component for customized checkboxes.\n *\n * ```html\n * <vaadin-checkbox>\n *   Make my profile visible\n * </vaadin-checkbox>\n * ```\n *\n * ### Styling\n *\n * The following shadow DOM parts are available for styling:\n *\n * Part name         | Description\n * ------------------|----------------\n * `checkbox`        | The wrapper element for the native <input type=\"checkbox\">\n * `label`           | The wrapper element in which the component's children, namely the label, is slotted\n *\n * The following state attributes are available for styling:\n *\n * Attribute    | Description | Part name\n * -------------|-------------|--------------\n * `active`     | Set when the checkbox is pressed down, either with mouse, touch or the keyboard. | `:host`\n * `disabled`   | Set when the checkbox is disabled. | `:host`\n * `focus-ring` | Set when the checkbox is focused using the keyboard. | `:host`\n * `focused`    | Set when the checkbox is focused. | `:host`\n * `indeterminate` | Set when the checkbox is in indeterminate mode. | `:host`\n * `checked` | Set when the checkbox is checked. | `:host`\n * `empty` | Set when there is no label provided. | `label`\n *\n * See [ThemableMixin – how to apply styles for shadow parts](https://github.com/vaadin/vaadin-themable-mixin/wiki)\n *\n * @extends PolymerElement\n * @mixes ElementMixin\n * @mixes ControlStateMixin\n * @mixes ThemableMixin\n * @mixes GestureEventListeners\n * @demo demo/index.html\n */\nclass CheckboxElement extends\n  ElementMixin(\n    ControlStateMixin(\n      ThemableMixin(\n        GestureEventListeners(PolymerElement)))) {\n  static get template() {\n    return html`\n    <style>\n      :host {\n        display: inline-block;\n      }\n\n      :host([hidden]) {\n        display: none !important;\n      }\n\n      label {\n        display: inline-flex;\n        align-items: baseline;\n        outline: none;\n      }\n\n      [part=\"checkbox\"] {\n        position: relative;\n        display: inline-block;\n        flex: none;\n      }\n\n      input[type=\"checkbox\"] {\n        position: absolute;\n        top: 0;\n        left: 0;\n        right: 0;\n        width: 100%;\n        height: 100%;\n        opacity: 0;\n        cursor: inherit;\n        margin: 0;\n      }\n\n      :host([disabled]) {\n        -webkit-tap-highlight-color: transparent;\n      }\n    </style>\n\n    <label>\n      <span part=\"checkbox\">\n        <input type=\"checkbox\" checked=\"{{checked::change}}\" disabled\\$=\"[[disabled]]\" indeterminate=\"{{indeterminate::change}}\" role=\"presentation\" tabindex=\"-1\">\n      </span>\n\n      <span part=\"label\">\n        <slot></slot>\n      </span>\n    </label>\n`;\n  }\n\n  static get is() {\n    return 'vaadin-checkbox';\n  }\n\n  static get version() {\n    return '2.5.0';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * True if the checkbox is checked.\n       * @type {boolean}\n       */\n      checked: {\n        type: Boolean,\n        value: false,\n        notify: true,\n        observer: '_checkedChanged',\n        reflectToAttribute: true\n      },\n\n      /**\n       * Indeterminate state of the checkbox when it's neither checked nor unchecked, but undetermined.\n       * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/checkbox#Indeterminate_state_checkboxes\n       * @type {boolean}\n       */\n      indeterminate: {\n        type: Boolean,\n        notify: true,\n        observer: '_indeterminateChanged',\n        reflectToAttribute: true,\n        value: false\n      },\n\n      /**\n       * The value given to the data submitted with the checkbox's name to the server when the control is inside a form.\n       */\n      value: {\n        type: String,\n        value: 'on'\n      },\n\n      /** @private */\n      _nativeCheckbox: {\n        type: Object\n      }\n    };\n  }\n\n  constructor() {\n    super();\n    /**\n     * @type {string}\n     * Name of the element.\n     */\n    this.name;\n  }\n\n  get name() {\n    return this.checked ? this._storedName : '';\n  }\n\n  set name(name) {\n    this._storedName = name;\n  }\n\n  ready() {\n    super.ready();\n\n    this.setAttribute('role', 'checkbox');\n\n    this._nativeCheckbox = this.shadowRoot.querySelector('input[type=\"checkbox\"]');\n\n    this.addEventListener('click', this._handleClick.bind(this));\n\n    this._addActiveListeners();\n\n    const attrName = this.getAttribute('name');\n    if (attrName) {\n      this.name = attrName;\n    }\n\n    this.shadowRoot.querySelector('[part~=\"label\"]').querySelector('slot')\n      .addEventListener('slotchange', this._updateLabelAttribute.bind(this));\n\n    this._updateLabelAttribute();\n  }\n\n  /** @private */\n  _updateLabelAttribute() {\n    const label = this.shadowRoot.querySelector('[part~=\"label\"]');\n    const assignedNodes = label.firstElementChild.assignedNodes();\n    if (this._isAssignedNodesEmpty(assignedNodes)) {\n      label.setAttribute('empty', '');\n    } else {\n      label.removeAttribute('empty');\n    }\n  }\n\n  /** @private */\n  _isAssignedNodesEmpty(nodes) {\n    // The assigned nodes considered to be empty if there is no slotted content or only one empty text node\n    return nodes.length === 0 ||\n          (nodes.length == 1\n          && nodes[0].nodeType == Node.TEXT_NODE\n          && nodes[0].textContent.trim() === '');\n  }\n\n  /** @private */\n  _checkedChanged(checked) {\n    if (this.indeterminate) {\n      this.setAttribute('aria-checked', 'mixed');\n    } else {\n      this.setAttribute('aria-checked', Boolean(checked));\n    }\n  }\n\n  /** @private */\n  _indeterminateChanged(indeterminate) {\n    if (indeterminate) {\n      this.setAttribute('aria-checked', 'mixed');\n    } else {\n      this.setAttribute('aria-checked', this.checked);\n    }\n  }\n\n  /** @private */\n  _addActiveListeners() {\n    // DOWN\n    this._addEventListenerToNode(this, 'down', (e) => {\n      if (this.__interactionsAllowed(e)) {\n        this.setAttribute('active', '');\n      }\n    });\n\n    // UP\n    this._addEventListenerToNode(this, 'up', () => this.removeAttribute('active'));\n\n    // KEYDOWN\n    this.addEventListener('keydown', e => {\n      if (this.__interactionsAllowed(e) && e.keyCode === 32) {\n        e.preventDefault();\n        this.setAttribute('active', '');\n      }\n    });\n\n    // KEYUP\n    this.addEventListener('keyup', e => {\n      if (this.__interactionsAllowed(e) && e.keyCode === 32) {\n        e.preventDefault();\n        this._toggleChecked();\n        this.removeAttribute('active');\n\n        if (this.indeterminate) {\n          this.indeterminate = false;\n        }\n      }\n    });\n  }\n\n  /**\n   * @return {!HTMLInputElement}\n   * @protected\n   */\n  get focusElement() {\n    return this.shadowRoot.querySelector('input');\n  }\n\n  /**\n   * True if users' interactions (mouse or keyboard)\n   * should toggle the checkbox\n   */\n  __interactionsAllowed(e) {\n    if (this.disabled) {\n      return false;\n    }\n\n    // https://github.com/vaadin/vaadin-checkbox/issues/63\n    if (e.target.localName === 'a') {\n      return false;\n    }\n\n    return true;\n  }\n\n  /** @private */\n  _handleClick(e) {\n    if (this.__interactionsAllowed(e)) {\n      if (!this.indeterminate) {\n        if (e.composedPath()[0] !== this._nativeCheckbox) {\n          e.preventDefault();\n          this._toggleChecked();\n        }\n      } else {\n        /*\n         * Required for IE 11 and Edge.\n         * See issue here: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/7344418/\n         */\n        this.indeterminate = false;\n        e.preventDefault();\n        this._toggleChecked();\n      }\n    }\n  }\n\n  /** @protected */\n  _toggleChecked() {\n    this.checked = !this.checked;\n    this.dispatchEvent(new CustomEvent('change', {composed: false, bubbles: true}));\n  }\n\n  /**\n   * Fired when the user commits a value change.\n   *\n   * @event change\n   */\n}\n\ncustomElements.define(CheckboxElement.is, CheckboxElement);\n\nexport { CheckboxElement };\n","import '@vaadin/vaadin-lumo-styles/color.js';\nimport '@vaadin/vaadin-lumo-styles/style.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\n\nconst $_documentContainer = html`<dom-module id=\"lumo-checkbox\" theme-for=\"vaadin-checkbox\">\n  <template>\n    <style include=\"lumo-checkbox-style lumo-checkbox-effects\">\n      /* IE11 only */\n      ::-ms-backdrop,\n      [part=\"checkbox\"] {\n        line-height: 1;\n      }\n    </style>\n  </template>\n</dom-module><dom-module id=\"lumo-checkbox-style\">\n  <template>\n    <style>\n      :host {\n        -webkit-tap-highlight-color: transparent;\n        -webkit-user-select: none;\n        -moz-user-select: none;\n        -ms-user-select: none;\n        user-select: none;\n        cursor: default;\n        outline: none;\n      }\n\n      [part=\"label\"]:not([empty]) {\n        margin: 0.1875em 0.875em 0.1875em 0.375em;\n      }\n\n      [part=\"checkbox\"] {\n        width: calc(1em + 2px);\n        height: calc(1em + 2px);\n        margin: 0.1875em;\n        position: relative;\n        border-radius: var(--lumo-border-radius-s);\n        background-color: var(--lumo-contrast-20pct);\n        transition: transform 0.2s cubic-bezier(.12, .32, .54, 2), background-color 0.15s;\n        pointer-events: none;\n        line-height: 1.2;\n      }\n\n      :host([indeterminate]) [part=\"checkbox\"],\n      :host([checked]) [part=\"checkbox\"] {\n        background-color: var(--lumo-primary-color);\n      }\n\n      /* Needed to align the checkbox nicely on the baseline */\n      [part=\"checkbox\"]::before {\n        content: \"\\\\2003\";\n      }\n\n      /* Checkmark */\n      [part=\"checkbox\"]::after {\n        content: \"\";\n        display: inline-block;\n        width: 0;\n        height: 0;\n        border: 0 solid var(--lumo-primary-contrast-color);\n        border-width: 0.1875em 0 0 0.1875em;\n        box-sizing: border-box;\n        transform-origin: 0 0;\n        position: absolute;\n        top: 0.8125em;\n        left: 0.5em;\n        transform: scale(0.55) rotate(-135deg);\n        opacity: 0;\n      }\n\n      :host([checked]) [part=\"checkbox\"]::after {\n        opacity: 1;\n        width: 0.625em;\n        height: 1.0625em;\n      }\n\n      /* Indeterminate checkmark */\n\n      :host([indeterminate]) [part=\"checkbox\"]::after {\n        transform: none;\n        opacity: 1;\n        top: 45%;\n        height: 10%;\n        left: 22%;\n        right: 22%;\n        width: auto;\n        border: 0;\n        background-color: var(--lumo-primary-contrast-color);\n        transition: opacity 0.25s;\n      }\n\n      /* Focus ring */\n\n      :host([focus-ring]) [part=\"checkbox\"] {\n        box-shadow: 0 0 0 3px var(--lumo-primary-color-50pct);\n      }\n\n      /* Disabled */\n\n      :host([disabled]) {\n        pointer-events: none;\n        color: var(--lumo-disabled-text-color);\n      }\n\n      :host([disabled]) [part=\"label\"] ::slotted(*) {\n        color: inherit;\n      }\n\n      :host([disabled]) [part=\"checkbox\"] {\n        background-color: var(--lumo-contrast-10pct);\n      }\n\n      :host([disabled]) [part=\"checkbox\"]::after {\n        border-color: var(--lumo-contrast-30pct);\n      }\n\n      :host([indeterminate][disabled]) [part=\"checkbox\"]::after {\n        background-color: var(--lumo-contrast-30pct);\n      }\n\n      /* RTL specific styles */\n\n      :host([dir=\"rtl\"]) [part=\"label\"]:not([empty]) {\n        margin: 0.1875em 0.375em 0.1875em 0.875em;\n      }\n    </style>\n  </template>\n</dom-module><dom-module id=\"lumo-checkbox-effects\">\n  <template>\n    <style>\n      /* Transition the checkmark if activated with the mouse (disabled for grid select-all this way) */\n      :host(:hover) [part=\"checkbox\"]::after {\n        transition: width 0.1s, height 0.25s;\n      }\n\n      /* Used for activation \"halo\" */\n      [part=\"checkbox\"]::before {\n        color: transparent;\n        display: inline-block;\n        width: 100%;\n        height: 100%;\n        border-radius: inherit;\n        background-color: inherit;\n        transform: scale(1.4);\n        opacity: 0;\n        transition: transform 0.1s, opacity 0.8s;\n      }\n\n      /* Hover */\n\n      :host(:not([checked]):not([indeterminate]):not([disabled]):hover) [part=\"checkbox\"] {\n        background-color: var(--lumo-contrast-30pct);\n      }\n\n      /* Disable hover for touch devices */\n      @media (pointer: coarse) {\n        :host(:not([checked]):not([indeterminate]):not([disabled]):hover) [part=\"checkbox\"] {\n          background-color: var(--lumo-contrast-20pct);\n        }\n      }\n\n      /* Active */\n\n      :host([active]) [part=\"checkbox\"] {\n        transform: scale(0.9);\n        transition-duration: 0.05s;\n      }\n\n      :host([active][checked]) [part=\"checkbox\"] {\n        transform: scale(1.1);\n      }\n\n      :host([active]:not([checked])) [part=\"checkbox\"]::before {\n        transition-duration: 0.01s, 0.01s;\n        transform: scale(0);\n        opacity: 0.4;\n      }\n    </style>\n  </template>\n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\n","/**\n@license\nCopyright (c) 2018 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport { FlattenedNodesObserver } from '@polymer/polymer/lib/utils/flattened-nodes-observer.js';\nimport { DirMixin } from '@vaadin/vaadin-element-mixin/vaadin-dir-mixin.js';\nimport { Templatizer } from './vaadin-grid-templatizer.js';\nimport { Debouncer } from '@polymer/polymer/lib/utils/debounce.js';\nimport { animationFrame } from '@polymer/polymer/lib/utils/async.js';\n\n/**\n * @polymerMixin\n */\nexport const ColumnBaseMixin = superClass => class ColumnBaseMixin extends superClass {\n  static get properties() {\n    return {\n      /**\n       * When set to true, the column is user-resizable.\n       * @default false\n       */\n      resizable: {\n        type: Boolean,\n        value: function() {\n          if (this.localName === 'vaadin-grid-column-group') {\n            return;\n          }\n\n          const parent = this.parentNode;\n          if (parent && parent.localName === 'vaadin-grid-column-group') {\n            return parent.resizable || false;\n          } else {\n            return false;\n          }\n        }\n      },\n\n      _headerTemplate: {\n        type: Object\n      },\n\n      _footerTemplate: {\n        type: Object\n      },\n\n      /**\n       * When true, the column is frozen. When a column inside of a column group is frozen,\n       * all of the sibling columns inside the group will get frozen also.\n       */\n      frozen: {\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * When set to true, the cells for this column are hidden.\n       */\n      hidden: {\n        type: Boolean\n      },\n\n      /**\n       * Text content to display in the header cell of the column.\n       */\n      header: {\n        type: String\n      },\n\n      /**\n       * Aligns the columns cell content horizontally.\n       * Supported values: \"start\", \"center\" and \"end\".\n       */\n      textAlign: {\n        type: String\n      },\n\n      _lastFrozen: {\n        type: Boolean,\n        value: false\n      },\n\n      _order: Number,\n\n      _reorderStatus: Boolean,\n\n      _emptyCells: Array,\n\n      _headerCell: Object,\n\n      _footerCell: Object,\n\n      _grid: Object,\n\n      /**\n       * Custom function for rendering the header content.\n       * Receives two arguments:\n       *\n       * - `root` The header cell content DOM element. Append your content to it.\n       * - `column` The `<vaadin-grid-column>` element.\n       */\n      headerRenderer: Function,\n\n      /**\n       * Custom function for rendering the footer content.\n       * Receives two arguments:\n       *\n       * - `root` The footer cell content DOM element. Append your content to it.\n       * - `column` The `<vaadin-grid-column>` element.\n       */\n      footerRenderer: Function\n    };\n  }\n\n  static get observers() {\n    return [\n      '_widthChanged(width, _headerCell, _footerCell, _cells.*)',\n      '_frozenChanged(frozen, _headerCell, _footerCell, _cells.*)',\n      '_flexGrowChanged(flexGrow, _headerCell, _footerCell, _cells.*)',\n      '_pathOrHeaderChanged(path, header, _headerCell, _footerCell, _cells.*, renderer, headerRenderer, _bodyTemplate, _headerTemplate)',\n      '_textAlignChanged(textAlign, _cells.*, _headerCell, _footerCell)',\n      '_orderChanged(_order, _headerCell, _footerCell, _cells.*)',\n      '_lastFrozenChanged(_lastFrozen)',\n      '_setBodyTemplateOrRenderer(_bodyTemplate, renderer, _cells, _cells.*)',\n      '_setHeaderTemplateOrRenderer(_headerTemplate, headerRenderer, _headerCell)',\n      '_setFooterTemplateOrRenderer(_footerTemplate, footerRenderer, _footerCell)',\n      '_resizableChanged(resizable, _headerCell)',\n      '_reorderStatusChanged(_reorderStatus, _headerCell, _footerCell, _cells.*)',\n      '_hiddenChanged(hidden, _headerCell, _footerCell, _cells.*)'\n    ];\n  }\n\n  /** @protected */\n  connectedCallback() {\n    super.connectedCallback();\n\n    this._bodyTemplate && (this._bodyTemplate.templatizer._grid = this._grid);\n    this._headerTemplate && (this._headerTemplate.templatizer._grid = this._grid);\n    this._footerTemplate && (this._footerTemplate.templatizer._grid = this._grid);\n\n    this._templateObserver.flush();\n    if (!this._bodyTemplate) {\n      // The observer might not have triggered if the tag is empty. Run manually.\n      this._templateObserver.callback();\n    }\n\n    requestAnimationFrame(() => {\n      this._allCells.forEach(cell => {\n        if (!cell._content.parentNode) {\n          this._grid && this._grid.appendChild(cell._content);\n        }\n      });\n    });\n  }\n\n  /** @protected */\n  disconnectedCallback() {\n    super.disconnectedCallback();\n\n    requestAnimationFrame(() => {\n      if (!this._findHostGrid()) {\n        this._allCells.forEach(cell => {\n          if (cell._content.parentNode) {\n            cell._content.parentNode.removeChild(cell._content);\n          }\n        });\n      }\n    });\n\n    this._gridValue = undefined;\n  }\n\n  _findHostGrid() {\n    let el = this;\n    // Custom elements extending grid must have a specific localName\n    while (el && !/^vaadin.*grid(-pro)?$/.test(el.localName)) {\n      el = el.assignedSlot ? el.assignedSlot.parentNode : el.parentNode;\n    }\n    return el || undefined;\n  }\n\n  get _grid() {\n    if (!this._gridValue) {\n      this._gridValue = this._findHostGrid();\n    }\n    return this._gridValue;\n  }\n\n  get _allCells() {\n    return []\n      .concat(this._cells || [])\n      .concat(this._emptyCells || [])\n      .concat(this._headerCell)\n      .concat(this._footerCell)\n      .filter(cell => cell);\n  }\n\n  constructor() {\n    super();\n\n    this._templateObserver = new FlattenedNodesObserver(this, info => {\n      this._headerTemplate = this._prepareHeaderTemplate();\n      this._footerTemplate = this._prepareFooterTemplate();\n      this._bodyTemplate = this._prepareBodyTemplate();\n    });\n  }\n\n  _prepareHeaderTemplate() {\n    return this._prepareTemplatizer(this._findTemplate(true) || null, {});\n  }\n\n  _prepareFooterTemplate() {\n    return this._prepareTemplatizer(this._findTemplate(false, true) || null, {});\n  }\n\n  _prepareBodyTemplate() {\n    return this._prepareTemplatizer(this._findTemplate() || null);\n  }\n\n  _prepareTemplatizer(template, instanceProps) {\n    if (template && !template.templatizer) {\n      const templatizer = new Templatizer();\n      templatizer._grid = this._grid;\n      templatizer.dataHost = this.dataHost;\n      templatizer._instanceProps = instanceProps || templatizer._instanceProps;\n      templatizer.template = template;\n      template.templatizer = templatizer;\n    }\n\n    return template;\n  }\n\n  _renderHeaderAndFooter() {\n    if (this.headerRenderer && this._headerCell) {\n      this.__runRenderer(this.headerRenderer, this._headerCell);\n    }\n    if (this.footerRenderer && this._footerCell) {\n      this.__runRenderer(this.footerRenderer, this._footerCell);\n    }\n  }\n\n  __runRenderer(renderer, cell, rowData) {\n    const args = [cell._content, this];\n    if (rowData && rowData.item) {\n      args.push(rowData);\n    }\n    renderer.apply(this, args);\n  }\n\n  __setColumnTemplateOrRenderer(template, renderer, cells) {\n    if (template && renderer) {\n      throw new Error('You should only use either a renderer or a template');\n    }\n\n    cells.forEach(cell => {\n      const model = this._grid.__getRowModel(cell.parentElement);\n\n      if (renderer) {\n        cell._renderer = renderer;\n\n        if (model.item || renderer === this.headerRenderer || renderer === this.footerRenderer) {\n          this.__runRenderer(renderer, cell, model);\n        }\n      } else if (cell._template !== template) {\n        cell._template = template;\n\n        cell._content.innerHTML = '';\n        template.templatizer._grid = template.templatizer._grid || this._grid;\n        const inst = template.templatizer.createInstance();\n        cell._content.appendChild(inst.root);\n        cell._instance = inst;\n        if (model.item) {\n          cell._instance.setProperties(model);\n        }\n      }\n    });\n  }\n\n  _setBodyTemplateOrRenderer(template, renderer, cells, splices) {\n    if ((template || renderer) && cells) {\n      this.__setColumnTemplateOrRenderer(template, renderer, cells);\n    }\n  }\n\n  _setHeaderTemplateOrRenderer(headerTemplate, headerRenderer, headerCell) {\n    if ((headerTemplate || headerRenderer) && headerCell) {\n      this.__setColumnTemplateOrRenderer(headerTemplate, headerRenderer, [headerCell]);\n    }\n  }\n\n  _setFooterTemplateOrRenderer(footerTemplate, footerRenderer, footerCell) {\n    if ((footerTemplate || footerRenderer) && footerCell) {\n      this.__setColumnTemplateOrRenderer(footerTemplate, footerRenderer, [footerCell]);\n      this._grid.__updateHeaderFooterRowVisibility(footerCell.parentElement);\n    }\n  }\n\n  _selectFirstTemplate(header = false, footer = false) {\n    return FlattenedNodesObserver.getFlattenedNodes(this)\n      .filter(node =>\n        node.localName === 'template'\n        && node.classList.contains('header') === header\n        && node.classList.contains('footer') === footer\n      )[0];\n  }\n\n  _findTemplate(header, footer) {\n    const template = this._selectFirstTemplate(header, footer);\n    if (template) {\n      if (this.dataHost) {\n        // set dataHost to the context where template has been defined\n        template._rootDataHost = this.dataHost._rootDataHost || this.dataHost;\n      }\n    }\n    return template;\n  }\n\n  _flexGrowChanged(flexGrow, headerCell, footerCell, cells) {\n    if (this.parentElement && this.parentElement._columnPropChanged) {\n      this.parentElement._columnPropChanged('flexGrow');\n    }\n\n    this._allCells.forEach(cell => cell.style.flexGrow = flexGrow);\n  }\n\n  _orderChanged(order, headerCell, footerCell, cells) {\n    this._allCells.forEach(cell => cell.style.order = order);\n  }\n\n  _widthChanged(width, headerCell, footerCell, cells) {\n    if (this.parentElement && this.parentElement._columnPropChanged) {\n      this.parentElement._columnPropChanged('width');\n    }\n\n    this._allCells.forEach(cell => cell.style.width = width);\n\n    // Force a reflow to workaround browser issues causing double scrollbars to grid\n    // https://github.com/vaadin/vaadin-grid/issues/1586\n    if (this._grid && this._grid.__forceReflow) {\n      this._grid.__forceReflow();\n    }\n  }\n\n  _frozenChanged(frozen, headerCell, footerCell, cells) {\n    if (this.parentElement && this.parentElement._columnPropChanged) {\n      this.parentElement._columnPropChanged('frozen', frozen);\n    }\n\n    this._allCells.forEach(cell => this._toggleAttribute('frozen', frozen, cell));\n\n    this._grid && this._grid._frozenCellsChanged && this._grid._frozenCellsChanged();\n  }\n\n  _lastFrozenChanged(lastFrozen) {\n    this._allCells.forEach(cell => this._toggleAttribute('last-frozen', lastFrozen, cell));\n\n    if (this.parentElement && this.parentElement._columnPropChanged) {\n      this.parentElement._lastFrozen = lastFrozen;\n    }\n  }\n\n  _pathOrHeaderChanged(path, header, headerCell, footerCell, cells, renderer, headerRenderer, bodyTemplate, headerTemplate) {\n    const hasHeaderText = header !== undefined;\n    if (!headerRenderer && !headerTemplate && hasHeaderText && headerCell) {\n      this.__setTextContent(headerCell._content, header);\n    }\n\n    if (path && cells.value) {\n      if (!renderer && !bodyTemplate) {\n        const pathRenderer = (root, owner, {item}) => this.__setTextContent(root, this.get(path, item));\n        this.__setColumnTemplateOrRenderer(undefined, pathRenderer, cells.value);\n      }\n\n      if (!headerRenderer && !headerTemplate && !hasHeaderText && headerCell && header !== null) {\n        this.__setTextContent(headerCell._content, this._generateHeader(path));\n      }\n    }\n\n    if (headerCell) {\n      this._grid.__updateHeaderFooterRowVisibility(headerCell.parentElement);\n    }\n  }\n\n  __setTextContent(node, textContent) {\n    node.textContent !== textContent && (node.textContent = textContent);\n  }\n\n  _generateHeader(path) {\n    return path\n      .substr(path.lastIndexOf('.') + 1)\n      .replace(/([A-Z])/g, '-$1').toLowerCase()\n      .replace(/-/g, ' ')\n      .replace(/^./, match => match.toUpperCase());\n  }\n\n  _toggleAttribute(name, bool, node) {\n    if (node.hasAttribute(name) === !bool) {\n      if (bool) {\n        node.setAttribute(name, '');\n      } else {\n        node.removeAttribute(name);\n      }\n    }\n  }\n\n  _reorderStatusChanged(reorderStatus, headerCell, footerCell, cells) {\n    this._allCells.forEach(cell => cell.setAttribute('reorder-status', reorderStatus));\n  }\n\n  _resizableChanged(resizable, headerCell) {\n    if (resizable === undefined || headerCell === undefined) {\n      return;\n    }\n\n    if (headerCell) {\n      [headerCell].concat(this._emptyCells).forEach(cell => {\n        if (cell) {\n          const existingHandle = cell.querySelector('[part~=\"resize-handle\"]');\n          if (existingHandle) {\n            cell.removeChild(existingHandle);\n          }\n\n          if (resizable) {\n            const handle = document.createElement('div');\n            handle.setAttribute('part', 'resize-handle');\n            cell.appendChild(handle);\n          }\n        }\n      });\n    }\n  }\n\n  _textAlignChanged(textAlign, _cells, _headerCell, _footerCell) {\n    if (textAlign === undefined) {\n      return;\n    }\n    if (['start', 'end', 'center'].indexOf(textAlign) === -1) {\n      console.warn('textAlign can only be set as \"start\", \"end\" or \"center\"');\n      return;\n    }\n\n    let textAlignFallback;\n    if (getComputedStyle(this._grid).direction === 'ltr') {\n      if (textAlign === 'start') {\n        textAlignFallback = 'left';\n      } else if (textAlign === 'end') {\n        textAlignFallback = 'right';\n      }\n    } else {\n      if (textAlign === 'start') {\n        textAlignFallback = 'right';\n      } else if (textAlign === 'end') {\n        textAlignFallback = 'left';\n      }\n    }\n\n    this._allCells.forEach(cell => {\n      cell._content.style.textAlign = textAlign;\n      if (getComputedStyle(cell._content).textAlign !== textAlign) {\n        cell._content.style.textAlign = textAlignFallback;\n      }\n    });\n  }\n\n  _hiddenChanged(hidden, headerCell, footerCell, cells) {\n    if (this.parentElement && this.parentElement._columnPropChanged) {\n      this.parentElement._columnPropChanged('hidden', hidden);\n    }\n\n    if (!!hidden !== !!this._previousHidden && this._grid) {\n      if (hidden === true) {\n        this._allCells.forEach(cell => {\n          if (cell._content.parentNode) {\n            cell._content.parentNode.removeChild(cell._content);\n          }\n        });\n      }\n      this._grid._debouncerHiddenChanged = Debouncer.debounce(\n        this._grid._debouncerHiddenChanged,\n        animationFrame,\n        () => {\n          if (this._grid && this._grid._renderColumnTree) {\n            this._grid._renderColumnTree(this._grid._columnTree);\n          }\n        }\n      );\n\n      this._grid._updateLastFrozen && this._grid._updateLastFrozen();\n      this._grid.notifyResize && this._grid.notifyResize();\n      this._grid._resetKeyboardNavigation && this._grid._resetKeyboardNavigation();\n    }\n    this._previousHidden = hidden;\n  }\n\n};\n\n/**\n * A `<vaadin-grid-column>` is used to configure how a column in `<vaadin-grid>`\n * should look like.\n *\n * See `<vaadin-grid>` documentation and demos for instructions and examples on how\n * to configure the `<vaadin-grid-column>`.\n * ```\n *\n * @extends PolymerElement\n * @mixes Grid.ColumnBaseMixin\n */\nclass GridColumnElement extends ColumnBaseMixin(DirMixin(PolymerElement)) {\n  static get is() {\n    return 'vaadin-grid-column';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * Width of the cells for this column.\n       */\n      width: {\n        type: String,\n        value: '100px'\n      },\n\n      /**\n       * Flex grow ratio for the cell widths. When set to 0, cell width is fixed.\n       */\n      flexGrow: {\n        type: Number,\n        value: 1\n      },\n\n      /**\n       * Custom function for rendering the cell content.\n       * Receives three arguments:\n       *\n       * - `root` The cell content DOM element. Append your content to it.\n       * - `column` The `<vaadin-grid-column>` element.\n       * - `rowData` The object with the properties related with\n       *   the rendered item, contains:\n       *   - `rowData.index` The index of the item.\n       *   - `rowData.item` The item.\n       *   - `rowData.expanded` Sublevel toggle state.\n       *   - `rowData.level` Level of the tree represented with a horizontal offset of the toggle button.\n       *   - `rowData.selected` Selected state.\n       */\n      renderer: Function,\n\n      /**\n       * Path to an item sub-property whose value gets displayed in the column body cells.\n       * The property name is also shown in the column header if an explicit header or renderer isn't defined.\n       */\n      path: {\n        type: String\n      },\n\n      /**\n       * Automatically sets the width of the column based on the column contents when this is set to `true`.\n       *\n       * For performance reasons the column width is calculated automatically only once when the grid items\n       * are rendered for the first time and the calculation only considers the rows which are currently\n       * rendered in DOM (a bit more than what is currently visible). If the grid is scrolled, or the cell\n       * content changes, the column width might not match the contents anymore.\n       *\n       * Hidden columns are ignored in the calculation and their widths are not automatically updated when\n       * you show a column that was initially hidden.\n       *\n       * You can manually trigger the auto sizing behavior again by calling `grid.recalculateColumnWidths()`.\n       *\n       * The column width may still grow larger when `flexGrow` is not 0.\n       */\n      autoWidth: {\n        type: Boolean,\n        value: false\n      },\n\n      _bodyTemplate: {\n        type: Object\n      },\n\n      _cells: Array\n\n    };\n  }\n\n}\n\ncustomElements.define(GridColumnElement.is, GridColumnElement);\nexport { GridColumnElement };\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport {dom} from '@polymer/polymer/lib/legacy/polymer.dom.js';\n\n/**\n * `Polymer.IronScrollTargetBehavior` allows an element to respond to scroll\n * events from a designated scroll target.\n *\n * Elements that consume this behavior can override the `_scrollHandler`\n * method to add logic on the scroll event.\n *\n * @demo demo/scrolling-region.html Scrolling Region\n * @demo demo/document.html Document Element\n * @polymerBehavior\n */\nexport const IronScrollTargetBehavior = {\n\n  properties: {\n\n    /**\n     * Specifies the element that will handle the scroll event\n     * on the behalf of the current element. This is typically a reference to an\n     *element, but there are a few more posibilities:\n     *\n     * ### Elements id\n     *\n     *```html\n     * <div id=\"scrollable-element\" style=\"overflow: auto;\">\n     *  <x-element scroll-target=\"scrollable-element\">\n     *    <!-- Content-->\n     *  </x-element>\n     * </div>\n     *```\n     * In this case, the `scrollTarget` will point to the outer div element.\n     *\n     * ### Document scrolling\n     *\n     * For document scrolling, you can use the reserved word `document`:\n     *\n     *```html\n     * <x-element scroll-target=\"document\">\n     *   <!-- Content -->\n     * </x-element>\n     *```\n     *\n     * ### Elements reference\n     *\n     *```js\n     * appHeader.scrollTarget = document.querySelector('#scrollable-element');\n     *```\n     *\n     * @type {HTMLElement}\n     * @default document\n     */\n    scrollTarget: {\n      type: HTMLElement,\n      value: function() {\n        return this._defaultScrollTarget;\n      }\n    }\n  },\n\n  observers: ['_scrollTargetChanged(scrollTarget, isAttached)'],\n\n  /**\n   * True if the event listener should be installed.\n   */\n  _shouldHaveListener: true,\n\n  _scrollTargetChanged: function(scrollTarget, isAttached) {\n    var eventTarget;\n\n    if (this._oldScrollTarget) {\n      this._toggleScrollListener(false, this._oldScrollTarget);\n      this._oldScrollTarget = null;\n    }\n    if (!isAttached) {\n      return;\n    }\n    // Support element id references\n    if (scrollTarget === 'document') {\n      this.scrollTarget = this._doc;\n\n    } else if (typeof scrollTarget === 'string') {\n      var domHost = this.domHost;\n\n      this.scrollTarget = domHost && domHost.$ ?\n          domHost.$[scrollTarget] :\n          dom(this.ownerDocument).querySelector('#' + scrollTarget);\n\n    } else if (this._isValidScrollTarget()) {\n      this._oldScrollTarget = scrollTarget;\n      this._toggleScrollListener(this._shouldHaveListener, scrollTarget);\n    }\n  },\n\n  /**\n   * Runs on every scroll event. Consumer of this behavior may override this\n   * method.\n   *\n   * @protected\n   */\n  _scrollHandler: function scrollHandler() {},\n\n  /**\n   * The default scroll target. Consumers of this behavior may want to customize\n   * the default scroll target.\n   *\n   * @type {Element}\n   */\n  get _defaultScrollTarget() {\n    return this._doc;\n  },\n\n  /**\n   * Shortcut for the document element\n   *\n   * @type {Element}\n   */\n  get _doc() {\n    return this.ownerDocument.documentElement;\n  },\n\n  /**\n   * Gets the number of pixels that the content of an element is scrolled\n   * upward.\n   *\n   * @type {number}\n   */\n  get _scrollTop() {\n    if (this._isValidScrollTarget()) {\n      return this.scrollTarget === this._doc ? window.pageYOffset :\n                                               this.scrollTarget.scrollTop;\n    }\n    return 0;\n  },\n\n  /**\n   * Gets the number of pixels that the content of an element is scrolled to the\n   * left.\n   *\n   * @type {number}\n   */\n  get _scrollLeft() {\n    if (this._isValidScrollTarget()) {\n      return this.scrollTarget === this._doc ? window.pageXOffset :\n                                               this.scrollTarget.scrollLeft;\n    }\n    return 0;\n  },\n\n  /**\n   * Sets the number of pixels that the content of an element is scrolled\n   * upward.\n   *\n   * @type {number}\n   */\n  set _scrollTop(top) {\n    if (this.scrollTarget === this._doc) {\n      window.scrollTo(window.pageXOffset, top);\n    } else if (this._isValidScrollTarget()) {\n      this.scrollTarget.scrollTop = top;\n    }\n  },\n\n  /**\n   * Sets the number of pixels that the content of an element is scrolled to the\n   * left.\n   *\n   * @type {number}\n   */\n  set _scrollLeft(left) {\n    if (this.scrollTarget === this._doc) {\n      window.scrollTo(left, window.pageYOffset);\n    } else if (this._isValidScrollTarget()) {\n      this.scrollTarget.scrollLeft = left;\n    }\n  },\n\n  /**\n   * Scrolls the content to a particular place.\n   *\n   * @method scroll\n   * @param {number|!{left: number, top: number}} leftOrOptions The left position or scroll options\n   * @param {number=} top The top position\n   * @return {void}\n   */\n  scroll: function(leftOrOptions, top) {\n    var left;\n\n    if (typeof leftOrOptions === 'object') {\n      left = leftOrOptions.left;\n      top = leftOrOptions.top;\n    } else {\n      left = leftOrOptions;\n    }\n\n    left = left || 0;\n    top = top || 0;\n    if (this.scrollTarget === this._doc) {\n      window.scrollTo(left, top);\n    } else if (this._isValidScrollTarget()) {\n      this.scrollTarget.scrollLeft = left;\n      this.scrollTarget.scrollTop = top;\n    }\n  },\n\n  /**\n   * Gets the width of the scroll target.\n   *\n   * @type {number}\n   */\n  get _scrollTargetWidth() {\n    if (this._isValidScrollTarget()) {\n      return this.scrollTarget === this._doc ? window.innerWidth :\n                                               this.scrollTarget.offsetWidth;\n    }\n    return 0;\n  },\n\n  /**\n   * Gets the height of the scroll target.\n   *\n   * @type {number}\n   */\n  get _scrollTargetHeight() {\n    if (this._isValidScrollTarget()) {\n      return this.scrollTarget === this._doc ? window.innerHeight :\n                                               this.scrollTarget.offsetHeight;\n    }\n    return 0;\n  },\n\n  /**\n   * Returns true if the scroll target is a valid HTMLElement.\n   *\n   * @return {boolean}\n   */\n  _isValidScrollTarget: function() {\n    return this.scrollTarget instanceof HTMLElement;\n  },\n\n  _toggleScrollListener: function(yes, scrollTarget) {\n    var eventTarget = scrollTarget === this._doc ? window : scrollTarget;\n    if (yes) {\n      if (!this._boundScrollHandler) {\n        this._boundScrollHandler = this._scrollHandler.bind(this);\n        eventTarget.addEventListener('scroll', this._boundScrollHandler);\n      }\n    } else {\n      if (this._boundScrollHandler) {\n        eventTarget.removeEventListener('scroll', this._boundScrollHandler);\n        this._boundScrollHandler = null;\n      }\n    }\n  },\n\n  /**\n   * Enables or disables the scroll event listener.\n   *\n   * @param {boolean} yes True to add the event, False to remove it.\n   */\n  toggleScrollListener: function(yes) {\n    this._shouldHaveListener = yes;\n    this._toggleScrollListener(yes, this.scrollTarget);\n  }\n\n};\n","/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport { templatize } from '@polymer/polymer/lib/utils/templatize.js';\n/**\n * `vaadin-grid-templatizer` is a helper element for the `vaadin-grid` that is preparing and\n * stamping instances of cells and columns templates\n *\n * @extends PolymerElement\n * @private\n */\nclass GridTemplatizer extends (class extends PolymerElement {}) {\n  static get is() {\n    return 'vaadin-grid-templatizer';\n  }\n\n  static get properties() {\n    return {\n      dataHost: Object,\n\n      template: Object,\n\n      _templateInstances: {\n        type: Array,\n        value: function() {\n          return [];\n        }\n      },\n\n      _parentPathValues: {\n        value: function() {\n          return {};\n        }\n      },\n\n      _grid: Object\n    };\n  }\n\n  static get observers() {\n    return [\n      '_templateInstancesChanged(_templateInstances.*, _parentPathValues.*)'\n    ];\n  }\n\n  constructor() {\n    super();\n\n    this._instanceProps = {\n      detailsOpened: true,\n      index: true,\n      item: true,\n      selected: true,\n      expanded: true,\n      level: true\n    };\n  }\n\n  createInstance() {\n    this._ensureTemplatized();\n    const instance = new this._TemplateClass({});\n    this.addInstance(instance);\n\n    return instance;\n  }\n\n  addInstance(instance) {\n    if (this._templateInstances.indexOf(instance) === -1) {\n      this._templateInstances.push(instance);\n      requestAnimationFrame(() => this.notifyPath('_templateInstances.*', this._templateInstances));\n    }\n  }\n\n  removeInstance(instance) {\n    const index = this._templateInstances.indexOf(instance);\n    this.splice('_templateInstances', index, 1);\n  }\n\n  _ensureTemplatized() {\n    if (!this._TemplateClass) {\n      this._TemplateClass = templatize(this.template, this, {\n        instanceProps: this._instanceProps,\n        parentModel: true,\n\n        forwardHostProp: function(prop, value) {\n          this._forwardParentProp(prop, value);\n\n          if (this._templateInstances) {\n            this._templateInstances.forEach(inst => inst.notifyPath(prop, value));\n          }\n        },\n\n        notifyInstanceProp: function(inst, prop, value) {\n          if (prop === 'index' || prop === 'item') {\n            // We don’t need a change notification for these.\n            return;\n          }\n\n          const originalProp = `__${prop}__`;\n\n          // Notify for only user-action changes, not for scrolling updates. E. g.,\n          // if `detailsOpened` is different from `__detailsOpened__`, which was set during render.\n          if (inst[originalProp] === value) {\n            return;\n          }\n          inst[originalProp] = value;\n\n          const row = Array.from(this._grid.$.items.children).filter(row => this._grid._itemsEqual(row._item, inst.item))[0];\n          if (row) {\n            Array.from(row.children).forEach(cell => {\n              if (cell._instance) {\n                cell._instance[originalProp] = value;\n                cell._instance.notifyPath(prop, value);\n              }\n            });\n          }\n\n          const itemPrefix = 'item.';\n          if (Array.isArray(this._grid.items) && prop.indexOf(itemPrefix) === 0) {\n            const itemsIndex = this._grid.items.indexOf(inst.item);\n            const path = prop.slice(itemPrefix.length);\n            this._grid.notifyPath(`items.${itemsIndex}.${path}`, value);\n          }\n\n          const gridCallback = `_${prop}InstanceChangedCallback`;\n          if (this._grid && this._grid[gridCallback]) {\n            this._grid[gridCallback](inst, value);\n          }\n        }\n\n      });\n    }\n  }\n\n  _forwardParentProp(prop, value) {\n    this._parentPathValues[prop] = value;\n    this._templateInstances.forEach(inst => inst.notifyPath(prop, value));\n  }\n\n  _templateInstancesChanged(t, p) {\n    let index, count;\n    if (t.path === '_templateInstances') {\n      // Iterate all instances\n      index = 0;\n      count = this._templateInstances.length;\n    } else if (t.path === '_templateInstances.splices') {\n      // Iterate only new instances\n      index = t.value.index;\n      count = t.value.addedCount;\n    } else {\n      return;\n    }\n    Object.keys(this._parentPathValues || {}).forEach(keyName => {\n      for (var i = index; i < index + count; i++) {\n        this._templateInstances[i].set(keyName, this._parentPathValues[keyName]);\n      }\n    });\n  }\n\n}\n\ncustomElements.define(GridTemplatizer.is, GridTemplatizer);\n\nexport { GridTemplatizer as Templatizer };\n"],"sourceRoot":""}