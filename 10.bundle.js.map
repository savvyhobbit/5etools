{"version":3,"sources":["webpack:///./js/backgrounds.js","webpack:///./js/races.js","webpack:///./components/views/character/dnd-character-builder-background-race.js"],"names":["renderer","stats_wrapper","renderSelection","curbg","rootEl","allBgs","querySelector","innerHTML","source","sourceAbv","sourceJsonToAbv","sourceFull","sourceJsonToFull","sourceEl","classList","add","setAttribute","entries","length","n","entry","outStack","recursiveEntryRender","texthtml","join","name","remove","collapseList","traitTables","statsEl","window","setTimeout","list","style","race","size","sizeAbvToFull","display","ability","speed","walk","climb","fly","traitlist","trait","statsText","header","text","renderStack","faux","type","DndCharacterBuilderBackgroundRace","selectedBackground","String","value","backgroundSkillProfOptions","Object","defaultBackgroundSkillProf","selectedRace","raceAttributeOptions","defaultRaceAttribute","isEditMode","Boolean","backgroundName","raceName","super","connectedCallback","this","characterChangeHandler","e","character","detail","updateFromCharacter","addEventListener","editModeHandler","disconnectedCallback","removeEventListener","background","backgroundSkills","choose","from","backgroundSkillProfChoices","count","backgroundSkillProfSelections","backgroundSkillProficiencies","undefined","map","raceAttributes","i","toUpperCase","raceAttributeChoices","raceAttributeSelections","attribute","toLowerCase","mod","backgroundRef","$","backgroundDetails","raceRef","raceDetails","shadowRoot","dispatchEvent","CustomEvent","bubbles","composed","skills","attr","arg","arguments","constructor","Array","isArray","customElements","define"],"mappings":"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","file":"10.bundle.js","sourcesContent":["import {parseHTML, jqHeight, jqPrepend } from \"../js/utils.js\";\r\nimport Parser from \"../util/Parser.js\";\r\nimport EntryRenderer from \"../util/entryrender.js\";\r\n\r\nconst renderer = new EntryRenderer();\r\n\r\nconst stats_wrapper = `\r\n\t<div class=\"stats-wrapper margin-bottom_large\">\r\n\t\t<div class=\"source margin-bottom_small\"></div>\r\n\t\t<div class=\"stats margin-bottom_small\"></div>\r\n\t\t<div class=\"table-container collapse collapse--left-arrow disabled\">\r\n\t\t\t<div class=\"collapse-toggle\">\r\n\t\t\t\t<div class=\"mdc-list-item stat-name\">Suggested Characteristics</div>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"collapse-wrapper\">\r\n\t\t\t\t<div class=\"collapse-list\"></div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>`;\r\n\r\nfunction renderSelection(curbg, rootEl, allBgs) {\r\n  if (rootEl.querySelector(\".selection-wrapper\")) {\r\n    rootEl.querySelector(\".selection-wrapper\").innerHTML = stats_wrapper;\r\n  } else {\r\n    rootEl.innerHTML = stats_wrapper;\r\n  }\r\n  const source = curbg.source;\r\n  const sourceAbv = Parser.sourceJsonToAbv(source);\r\n  const sourceFull = Parser.sourceJsonToFull(source);\r\n\r\n  const sourceEl = rootEl.querySelector(\".stats-wrapper .source\");\r\n  sourceEl.classList.add(`source${sourceAbv}`);\r\n\tsourceEl.setAttribute(\"title\", sourceFull);\r\n\tsourceEl.innerHTML = sourceAbv;\r\n\r\n  const entries = curbg.entries;\r\n\r\n  if (entries.length) {\r\n    for (let n = entries.length - 1; n >= 0; n--) {\r\n      let entry = entries[n],\r\n        outStack = [];\r\n      renderer.recursiveEntryRender(entry, outStack, 0);\r\n      let texthtml = outStack.join(' ');\r\n\r\n      if (entry.name === \"Suggested Characteristics\") {\r\n        rootEl.querySelector(\".stats-wrapper .table-container\").classList.remove(\"disabled\");\r\n        const collapseList = rootEl.querySelector(\".stats-wrapper .table-container .collapse-list\");\r\n        const traitTables = parseHTML(texthtml);\r\n        traitTables.querySelector(\".stat-name\").remove();\r\n        jqPrepend(collapseList, traitTables);\r\n      } else {\r\n        const statsEl = rootEl.querySelector(\".stats-wrapper .stats\");\r\n        jqPrepend(statsEl, parseHTML(texthtml));\r\n      }\r\n    }\r\n  }\r\n\r\n  window.setTimeout(() => {\r\n    let list = rootEl.querySelector(\".stats-wrapper .table-container .collapse-list\");\r\n    list.style[\"margin-top\"] = \"-\" + jqHeight(list) + \"px\";\r\n  }, 0);\r\n}\r\n\r\nexport { renderSelection };\r\n","import { utils_combineText } from \"../js/utils.js\";\r\nimport EntryRenderer from \"../util/entryrender.js\";\r\nimport Parser from \"../util/Parser.js\";\r\nimport { parse_abilityShort } from \"../util/ability.js\";\r\n\r\nconst stats_wrapper = `\r\n\t<div class=\"stats-wrapper margin-bottom_large\">\r\n\t\t<div class=\"source margin-bottom_small\"></div>\r\n\t\t<div class=\"size margin-bottom_small\"></div>\r\n\t\t<div class=\"ability margin-bottom_small\"></div>\r\n\t\t<div class=\"speed margin-bottom_small\"></div>\r\n\t\t<div class=\"stats\"></div>\r\n\t</div>`;\r\n\r\nfunction renderSelection(race, rootEl) {\r\n  if (rootEl.querySelector(\".selection-wrapper\")) {\r\n    rootEl.querySelector(\".selection-wrapper\").innerHTML = stats_wrapper;\r\n  } else {\r\n    rootEl.innerHTML = stats_wrapper;\r\n  }\r\n  const sourceEl = rootEl.querySelector(\".stats-wrapper .source\");\r\n  sourceEl.classList.add(`source${race.source}`);\r\n  sourceEl.setAttribute(\"title\", Parser.sourceJsonToFull(race.source));\r\n  sourceEl.innerHTML = `${Parser.sourceJsonToAbv(race.source)}`;\r\n\r\n  const size = Parser.sizeAbvToFull(race.size);\r\n  rootEl.querySelector(\".stats-wrapper .size\").innerHTML = size;\r\n  if (size === \"\") {\r\n    rootEl.querySelector(\".stats-wrapper .size\").style.display = \"none\";\r\n  }\r\n\r\n  const ability = parse_abilityShort(race.ability);\r\n  rootEl.querySelector(\".stats-wrapper .ability\").innerHTML = ability;\r\n\r\n  let speed;\r\n  if (race.speed) {\r\n    if (race.speed.walk) {\r\n      speed = race.speed.walk + \" ft.\";\r\n      if (race.speed.climb) speed += `, climb ${race.speed.climb} ft.`;\r\n      if (race.speed.fly) speed += `, fly ${race.speed.fly} ft.`;\r\n    } else {\r\n      speed = race.speed + (race.speed === \"Varies\" ? \"\" : \" ft. \");\r\n    }\r\n  }\r\n  rootEl.querySelector(\".stats-wrapper .speed\").innerHTML = speed;\r\n  if (speed === \"\") {\r\n    rootEl.querySelector(\".stats-wrapper .speed\").style.display = \"none\";\r\n  }\r\n\r\n  const traitlist = race.trait;\r\n  if (traitlist) {\r\n    let statsText = \"<div class='stat-item'>\";\r\n    for (let n = 0; n < traitlist.length; ++n) {\r\n      const trait = traitlist[n];\r\n\r\n      const header = `<span class='stat-name'>${trait.name}.</span> `;\r\n      statsText += utils_combineText(traitlist[n].text, \"p\", header);\r\n    }\r\n    statsText += \"</div>\";\r\n    rootEl.querySelector(\".stats-wrapper .stats\").innerHTML = statsText;\r\n  } else if (race.entries) {\r\n    const renderStack = [];\r\n    const faux = { type: \"entries\", entries: race.entries };\r\n\r\n    // Grung to test with\r\n    new EntryRenderer().recursiveEntryRender(faux, renderStack, 1, \"<div class='renderer-output'>\", \"</div>\", true);\r\n\r\n    rootEl.querySelector(\".stats-wrapper .stats\").innerHTML = renderStack.join(\"\");\r\n  }\r\n}\r\n\r\nexport { renderSelection };\r\n","import { PolymerElement, html } from \"@polymer/polymer\";\nimport {\n  getCharacterChannel,\n  getSelectedCharacter,\n  getRaceAttributeOptions,\n  getRaceAttributeDefaults,\n  setRaceAttributes,\n  getBackgroundSkillProfOptions,\n  getBackgroundSkillProfDefaults,\n  setBackgroundSkillProficiencies,\n  getBackgroundReference,\n  getRaceReference,\n} from \"../../../util/charBuilder\";\nimport { renderSelection as renderRace  } from \"../../../js/races\";\nimport { renderSelection as renderBackground } from \"../../../js/backgrounds\";\nimport { getEditModeChannel, isEditMode } from \"../../../util/editMode\";\nimport { util_capitalizeAll, absInt, initCollapseToggles } from \"../../../js/utils\"; \n\nclass DndCharacterBuilderBackgroundRace extends PolymerElement {\n  \n  static get properties() {\n    return {\n      selectedBackground: {\n        type: String,\n        value: \"\"\n      },\n      backgroundSkillProfOptions: {\n        type: Object,\n        value: []\n      },\n      defaultBackgroundSkillProf: {\n        type: String,\n        value: \"\"\n      },\n      selectedRace: {\n        type: String,\n        value: \"\"\n      },\n      raceAttributeOptions: {\n        type: Object,\n        value: []\n      },\n      defaultRaceAttribute: {\n        type: String,\n        value: \"\"\n      },\n      isEditMode: {\n        type: Boolean,\n        value: false\n      },\n      backgroundName: {\n        type: String,\n        value: ''\n      },\n      raceName: {\n        type: String,\n        value: ''\n      }\n    };\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    this.characterChangeHandler = (e) => {\n      let character = e.detail.character;\n      this.updateFromCharacter(character);\n    };\n    \n    this.updateFromCharacter(getSelectedCharacter());\n    getCharacterChannel().addEventListener(\"character-selected\", this.characterChangeHandler);\n\n    this.editModeHandler = (e) => {\n      this.isEditMode = e.detail.isEditMode;\n    }\n    getEditModeChannel().addEventListener('editModeChange', this.editModeHandler);\n    this.isEditMode = isEditMode();\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n\n    getCharacterChannel().removeEventListener(\"character-selected\", this.characterChangeHandler);\n    getEditModeChannel().removeEventListener('editModeChange', this.editModeHandler);\n  }\n\n  async updateFromCharacter(character) {\n    this.selectedBackground = character.background;\n    this.backgroundName = this.selectedBackground.name;\n    this.selectedRace = character.race;\n    this.raceName = this.selectedRace.name;\n    // Skills from Background\n    let backgroundSkills = await getBackgroundSkillProfOptions();\n    if (backgroundSkills && backgroundSkills.choose) {\n      this.backgroundSkillProfOptions = backgroundSkills.choose.from;\n      this.backgroundSkillProfChoices = backgroundSkills.choose.count || 1;\n      this.backgroundSkillProfSelections = character.backgroundSkillProficiencies;\n    } else {\n      this.backgroundSkillProfOptions = undefined;\n      this.backgroundSkillProfChoices = undefined;\n      this.backgroundSkillProfSelections = undefined;\n    }\n    let defaultBackgroundSkillProf = await getBackgroundSkillProfDefaults(backgroundSkills);\n    this.defaultBackgroundSkillProf = defaultBackgroundSkillProf.map(e => { return util_capitalizeAll(e) }).join(', ');\n\n    // Attributes from Race\n    let raceAttributes = await getRaceAttributeOptions();\n    if (raceAttributes && raceAttributes.choose) {\n      this.raceAttributeOptions = raceAttributes.choose.from.map(i => { return i.toUpperCase() });\n      this.raceAttributeChoices = raceAttributes.choose.count || 1;\n      this.raceAttributeSelections = character.raceAttributes;\n    } else {\n      this.raceAttributeOptions = undefined;\n      this.raceAttributeChoices = undefined;\n      this.raceAttributeSelections = undefined;\n    }\n    let defaultRaceAttribute = await getRaceAttributeDefaults(raceAttributes);\n    this.defaultRaceAttribute = defaultRaceAttribute\n      .map(e => {\n        let attribute = e[0].toLowerCase(),\n          mod = e[1];\n        return attribute.toUpperCase() + ' ' + absInt(mod);\n      }).join(', ');\n\n    const backgroundRef = await getBackgroundReference();\n    if (backgroundRef) {\n      renderBackground(backgroundRef, this.$.backgroundDetails)\n    }\n\n    const raceRef = await getRaceReference();\n    if (raceRef) {\n      renderRace(raceRef, this.$.raceDetails)\n    }\n\n    initCollapseToggles(this.shadowRoot);\n    \n    this.dispatchEvent(new CustomEvent(\"loadingChange\", { bubbles: true, composed: true }));\n  }\n\n  _backgroundSkillAddCallback(skills) {\n    setBackgroundSkillProficiencies(skills);\n  }\n\n  _raceAttributeAddCallback(attr) {\n    setRaceAttributes(attr);\n  }\n\n  _showEmpty(isEditMode, value) {\n    return !isEditMode && !value;\n  }\n\n  _exists() {\n    for (let arg of arguments) {\n      if (!!arg && (arg.constructor !== Object || Object.entries(arg).length > 0) && (!Array.isArray(arg) || arg.length > 0)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  static get template() {\n    return html`\n      <style include=\"material-styles my-styles\">\n        body {}\n        :host {\n          display: block;\n          padding: 14px;\n        }\n        [hidden] {\n          display: none !important;\n        }\n\n        .col-wrap {\n          display: flex; \n          justify-content: space-between;\n          flex-wrap: wrap;\n        }\n\n        .row-wrap {\n          width: 100%;\n        }\n        .row-wrap:first-child {\n          margin-bottom: 24px;\n        }\n\n        .row-wrap > *:not(h2):not(:last-child) {\n          margin-bottom: 10px;\n        }\n\n        .default-selection {\n          font-size: 14px;\n          margin-bottom: 0 !important;\n        }\n\n        .default-selection span {\n          color: var(--mdc-theme-secondary)\n        }\n\n        .missing-text {\n          font-style: italic;\n          font-size: 14px;\n        }\n\n        @media(min-width: 921px) {\n          .row-wrap {\n            width: calc(50% - 10px);\n          }\n          .row-wrap:first-child {\n            margin-bottom: 0;\n          }\n        }\n\n        h2 {\n          display: block;\n          font-size: 1.5em;\n          margin-block-start: 0.83em;\n          margin-block-end: 0.83em;\n          margin-inline-start: 0px;\n          margin-inline-end: 0px;\n          font-weight: bold;\n        }\n\n        h3 {\n          font-size: 24px;\n          font-weight: bold;\n          margin-bottom: 8px;\n        }\n        .details-container  {\n          background: var(--lumo-contrast-10pct);\n          padding: 14px;\n          border-radius: 4px;\n          font-size: 14px;\n        }\n        .stats-wrapper.margin-bottom_large {\n          margin-bottom: 0px !important;\n        }\n      </style>\n\n      <div class=\"col-wrap\">\n        <div class=\"row-wrap\">\n          <h2>Race</h2>\n          <dnd-select-add model=\"races\" value=\"[[selectedRace]]\" placeholder=\"<Choose Race>\" disabled$=\"[[!isEditMode]]\" hidden$=\"[[_showEmpty(isEditMode, selectedRace)]]\"></dnd-select-add>\n          <div class=\"missing-text\" hidden$=\"[[_exists(raceAttributeOptions, defaultRaceAttribute)]]\">Select Race to add Attribute Bonuses</div>\n          <div hidden$=\"[[!_exists(raceAttributeOptions, defaultRaceAttribute)]]\">Attribute Bonuses from Race:</div>\n          <div hidden$=\"[[!_exists(defaultRaceAttribute)]]\" class=\"default-selection\">Default Attributes: <span>[[defaultRaceAttribute]]</span></div>\n          <dnd-select-add hidden$=\"[[!_exists(raceAttributeOptions)]]\" choices=\"[[raceAttributeChoices]]\" placeholder=\"<Choose Attribute>\" label=\"Chosen Attribute(s)\"\n            options=\"[[raceAttributeOptions]]\" value=\"[[raceAttributeSelections]]\" add-callback=\"[[_raceAttributeAddCallback]]\"></dnd-select-add>\n\n          <div class=\"collapse collapse--left-arrow\" hidden$=\"[[!raceName]]\">\n            <div class=\"collapse-toggle\">\n              <div class=\"mdc-list-item stat-name\">Race Details</div>\n            </div>\n            <div class=\"collapse-wrapper\">\n              <div class=\"details-container collapse-list\">\n                <h3>[[raceName]]</h3>\n                <div class=\"details\" id=\"raceDetails\">\n                  [[raceDetails]]\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"row-wrap\">\n          <h2>Background</h2>\n          <dnd-select-add model=\"backgrounds\" value=\"[[selectedBackground]]\" placeholder=\"<Choose Background>\" disabled$=\"[[!isEditMode]]\" hidden$=\"[[_showEmpty(isEditMode, selectedBackground)]]\"></dnd-select-add>\n          <div class=\"missing-text\" hidden$=\"[[_exists(backgroundSkillProfOptions, defaultBackgroundSkillProf)]]\">Select Background to add Skill Proficiencies</div>\n          <div hidden$=\"[[!_exists(backgroundSkillProfOptions, defaultBackgroundSkillProf)]]\">Skill Proficiencies from Background:</div>\n          <div hidden$=\"[[!_exists(defaultBackgroundSkillProf)]]\" class=\"default-selection\">Default Skills: <span>[[defaultBackgroundSkillProf]]</span></div>\n          <dnd-select-add hidden$=\"[[!_exists(backgroundSkillProfOptions)]]\" choices=\"[[backgroundSkillProfChoices]]\" placeholder=\"<Choose Skills>\" label=\"Chosen Skill(s)\" disabled$=\"[[!isEditMode]]\"\n            options=\"[[backgroundSkillProfOptions]]\" value=\"[[backgroundSkillProfSelections]]\" add-callback=\"[[_backgroundSkillAddCallback]]\"></dnd-select-add>\n          \n          <div class=\"collapse collapse--left-arrow\" hidden$=\"[[!backgroundName]]\">\n            <div class=\"collapse-toggle\">\n              <div class=\"mdc-list-item stat-name\">Background Details</div>\n            </div>\n            <div class=\"collapse-wrapper\">\n              <div class=\"details-container collapse-list\">\n                <h3>[[backgroundName]]</h3>\n                <div class=\"details\" id=\"backgroundDetails\">\n                  [[backgroundDetails]]\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    `;\n  }\n}\n\ncustomElements.define(\"dnd-character-builder-background-race\", DndCharacterBuilderBackgroundRace);"],"sourceRoot":""}