{"version":3,"sources":["webpack:///./components/dnd-button.js","webpack:///./node_modules/@vaadin/vaadin-text-field/theme/lumo/vaadin-number-field-styles.js","webpack:///./node_modules/@vaadin/vaadin-text-field/src/vaadin-number-field.js","webpack:///./node_modules/@vaadin/vaadin-text-field/src/vaadin-integer-field.js","webpack:///./components/dnd-select-add.js","webpack:///./components/views/character/dnd-character-builder-attributes.js"],"names":["DndButton","label","type","String","value","icon","svg","background","border","svgFill","svgStroke","setTimeout","this","button","$","i","result","fill","stroke","customElements","define","$_documentContainer","document","head","appendChild","content","createElement","memoizedTemplate","innerHTML","hasControls","Boolean","reflectToAttribute","min","Number","observer","max","step","super","ready","__previousValidInput","inputElement","addEventListener","__onInputChange","bind","e","preventDefault","_decreaseValue","_increaseValue","template","cloneNode","thisTemplate","import","is","decreaseButton","querySelector","increaseButton","styles","inputField","prefixSlot","insertBefore","_createMethodObserver","required","minlength","maxlength","pattern","invalid","isNumUnset","n","_constraintsChanged","validate","_incrementValue","incr","disabled","readonly","parseFloat","_getIncrement","newValue","_incrementIsInsideTheLimits","_setValue","dispatchEvent","CustomEvent","bubbles","currentValue","multiplier","Math","_getMultiplier","margin","round","number","s","indexOf","length","isNaN","pow","_getDecimalCount","sign","__validateByStep","__stepChangedCalled","getAttribute","setAttribute","newVal","oldVal","_valueChanged","keyCode","_onKeyDown","undefined","checkValidity","window","preventInvalidInput","_enabledCharPattern","__isInteger","console","warn","__hasOnlyDigits","_stepChanged","test","DndSelectAdd","options","Array","model","addCallback","Function","choices","paren","placeholder","multiValue","listBox","remove","select","render","isArray","choiceArray","map","v","findIndex","o","name","source","filter","selectedValues","join","async","renderer","root","opened","wasPreviouslySelected","srcElement","splice","selectedOptions","option","item","optionName","_assignMenuElement","valueUpdated","connectedCallback","selectChangeHandler","val","selected","disconnectedCallback","removeEventListener","a","DndCharacterBuilderAttributes","str","dex","con","int","wis","cha","strAdj","dexAdj","conAdj","intAdj","wisAdj","chaAdj","skillProfs","saves","classSkillProfOptions","Object","backgroundSkillProfOptions","defaultBackgroundSkillProf","maxHP","tempHP","isEditMode","initiative","customInitiative","customInitiativeVal","customACVal","customACHealth","customHealthVal","hpField","focusElement","blur","parsedVal","parseInt","characterChangeHandler","character","detail","updateAttributesFromCharacter","editModeHandler","attr","setProperties","attributeAdj","customHealth","currentHP","hitDicePerClass","hitDicePerDice","hitDiceClass","hitDiceDice","find","hitDiceInArray","die","current","className","total","push","hitDice","sort","customAC","ac","speed","proficiencyBonus","composed","adj","b","intA","intB","base","floor","_total","arg","arguments","constructor","entries","element","target","closest","isOpen","classList","contains","isTemp","intField","buttonComp","toggle","changeVal","focus","modifier","key","_toggleButtonField","__data","_maxHP","dataset","add","search","match","RegExp","profEl","innerText","toLowerCase","attrEl","initEl","mod","isProficient","isExpertise","hasAttribute","rollForm"],"mappings":"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","file":"10.bundle.js","sourcesContent":["import { PolymerElement, html } from '@polymer/polymer';\nimport { MDCRipple } from '@material/ripple';\nimport { } from '@polymer/polymer/lib/elements/dom-if.js';\nimport \"./dnd-svg\";\n\nclass DndButton extends PolymerElement {\n  static get properties() {\n    return {\n      label: {\n        type: String,\n        value: ''\n      },\n      icon: {\n        type: String,\n        value: ''\n      },\n      svg: {\n        type: String,\n        value: ''\n      },\n      background: {\n        type: String,\n        value: ''\n      },\n      border: {\n        type: String,\n        value: ''\n      },\n      svgFill: {\n        type: String,\n        value: ''\n      },\n      svgStroke: {\n        type: String,\n        value: ''\n      }\n    }\n  }\n\n  connectedCallback() {\n    setTimeout(()=> {\n      this.button = new MDCRipple(this.$.button);\n    }, 10)\n  }\n\n  _exists(i) {\n    return !!i;\n  }\n\n  _styleStr(background, border, label) {\n    let result = '';\n    if (background) {\n      result+= `background: ${background}; `\n    }\n    if (border) {\n      result+= `border: ${border}; `\n    }\n    return result;\n  }\n\n  _svgStyleStr(fill, stroke) {\n    let result = '';\n    if (fill) {\n      result+= `fill: ${fill}; `\n    }\n    if (stroke) {\n      result+= `stroke: ${stroke}; `\n    }\n    return result;\n  }\n\n  static get template() {\n    return html`\n      <style include=\"material-styles\">\n        .mdc-tab-scroller__scroll-area--scroll {\n          overflow-x: auto;\n          background-color: var(--mdc-theme-surface);\n          border: 1px solid var(--mdc-theme-text-divider-on-background);\n          border-bottom: none;\n        }\n        :host {\n          display: inline;\n          overflow: hidden;\n          white-space: nowrap;\n          border-radius: 6px;\n        }\n        .mdc-button {\n          display: inline-flex;\n          justify-content: center;\n          align-items: center;\n          width: 100%;\n        }\n        .mdc-button .mdc-button__icon {\n          margin-right: 0px;\n          margin-left: 8px;\n        }\n        .mdc-button [background] {\n          background: var(--lumo-contrast-10pct);\n        }\n        dnd-svg {\n          height: 20px;\n          width: 20px;\n          flex-shrink: 0;\n          flex-grow: 0;\n          padding-left: 8px;\n          fill: var(--mdc-theme-primary);\n          stroke: var(--mdc-theme-primary);\n        }\n        i {\n          flex-shrink: 0;\n          flex-grow: 0;\n        }\n\n        \n        :host(.btn-field__btn) dnd-svg {\n          padding-left: 0;\n        }\n        :host(.btn-field__btn) i {\n          margin-left: 0;\n        }\n\n        :host(.icon-only) dnd-svg {\n          margin-left: -24px;\n          padding-left: 0;\n        }\n        :host(.icon-only) i {\n          margin-left: 0;\n          padding-left: 0;\n        }\n        :host(.hard-left) i {\n          margin-left: -24px;\n        }\n\n        :host(.link) .mdc-button__label {\n          text-transform: none;\n          color: var(--lumo-body-text-color);\n          letter-spacing: normal;\n        }\n        :host(.link) i {\n          color: var(--lumo-body-text-color);\n        }\n        :host(.link) button:hover::before {\n          background: none;\n        }\n        :host(.link) button:hover i,\n        :host(.link) button:hover .mdc-button__label {\n          color: var(--mdc-theme-secondary);\n        }\n\n        :host([edit-mode]) button {\n          background-color: var(--mdc-theme-secondary);\n          color: var(--mdc-theme-on-secondary)\n        }\n        :host([edit-mode]) .mdc-button__label {\n          color: var(--mdc-theme-on-primary);\n        }\n        :host([edit-mode]) i {\n          color: var(--mdc-theme-on-primary);\n        }\n        :host([edit-mode]) button:hover i,\n        :host([edit-mode]) button:hover .mdc-button__label {\n          color: var(--mdc-theme-on-secondary);\n        }\n\n        :host([not-edit-mode]) button {\n          background-color: var(--mdc-theme-primary);\n          color: var(--mdc-theme-on-primary);\n        }\n        :host([not-edit-mode]) .mdc-button__label {\n          color: var(--mdc-theme-on-primary);\n        }\n        :host([not-edit-mode]) i {\n          color: var(--mdc-theme-on-primary);\n        }\n        :host([not-edit-mode]) button:hover i,\n        :host([not-edit-mode]) button:hover .mdc-button__label {\n          color: var(--mdc-theme-on-primary);\n        }\n\n      </style>\n      <button id=\"button\" class=\"mdc-button\" style$=\"[[_styleStr(background, border, label)]]\">\n        <div class=\"mdc-button__ripple\"></div>\n        <span class=\"mdc-button__label\">[[label]]</span>\n        <slot name=\"label\"></slot>\n        <template is=\"dom-if\" if=\"[[_exists(icon)]]\">\n          <i class=\"material-icons mdc-button__icon\" aria-hidden=\"true\">[[icon]]</i>\n        </template>\n        <template is=\"dom-if\" if=\"[[_exists(svg)]]\">\n          <dnd-svg id=\"[[svg]]\" style$=\"[[_svgStyleStr(svgFill, svgStroke)]]\"></dnd-svg>\n        </template>\n      </button>\n    `;\n  }\n\n}\ncustomElements.define('dnd-button', DndButton);","import '@vaadin/vaadin-lumo-styles/font-icons.js';\nimport '@vaadin/vaadin-lumo-styles/sizing.js';\nimport '@vaadin/vaadin-lumo-styles/mixins/field-button.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\n\nconst $_documentContainer = html`<dom-module id=\"lumo-number-field\" theme-for=\"vaadin-number-field\">\n  <template>\n    <style include=\"lumo-field-button\">\n      :host {\n        width: 8em;\n      }\n\n      :host([has-controls]:not([theme~=\"align-right\"])) [part=\"value\"] {\n        text-align: center;\n      }\n\n      [part=\"decrease-button\"][disabled],\n      [part=\"increase-button\"][disabled] {\n        opacity: 0.2;\n      }\n\n      :host([has-controls]) [part=\"input-field\"] {\n        padding: 0;\n      }\n\n      [part=\"decrease-button\"],\n      [part=\"increase-button\"] {\n        cursor: pointer;\n        font-size: var(--lumo-icon-size-s);\n        width: 1.6em;\n        height: 1.6em;\n      }\n\n      [part=\"decrease-button\"]::before,\n      [part=\"increase-button\"]::before {\n        margin-top: 0.2em;\n      }\n\n      /* RTL specific styles */\n\n      :host([dir=\"rtl\"]) [part=\"value\"],\n      :host([dir=\"rtl\"]) [part=\"input-field\"] ::slotted(input) {\n        --_lumo-text-field-overflow-mask-image: linear-gradient(to left, transparent, #000 1.25em);\n      }\n    </style>\n  </template>\n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\n","/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport '@polymer/polymer/polymer-element.js';\n\nimport '@polymer/polymer/lib/elements/custom-style.js';\nimport { TextFieldElement } from './vaadin-text-field.js';\nimport { DomModule } from '@polymer/polymer/lib/elements/dom-module.js';\nconst $_documentContainer = document.createElement('template');\n\n$_documentContainer.innerHTML = `<dom-module id=\"vaadin-number-field-template\">\n  <template>\n    <style>\n      :host([readonly]) [part\\$=\"button\"] {\n        pointer-events: none;\n      }\n\n      [part=\"decrease-button\"]::before {\n        content: \"−\";\n      }\n\n      [part=\"increase-button\"]::before {\n        content: \"+\";\n      }\n\n      [part=\"decrease-button\"],\n      [part=\"increase-button\"] {\n        -webkit-user-select: none;\n        -moz-user-select: none;\n        -ms-user-select: none;\n        user-select: none;\n      }\n\n      /* Hide the native arrow icons */\n      [part=\"value\"]::-webkit-outer-spin-button,\n      [part=\"value\"]::-webkit-inner-spin-button {\n        -webkit-appearance: none;\n        margin: 0;\n      }\n\n      [part=\"value\"] {\n        /* Older Firefox versions (v47.0) requires !important */\n        -moz-appearance: textfield !important;\n      }\n\n      :host([dir=\"rtl\"]) [part=\"input-field\"] {\n        direction: ltr;\n      }\n\n      :host([dir=\"rtl\"]) [part=\"value\"]::placeholder {\n        direction: rtl;\n      }\n\n      :host([dir=\"rtl\"]) [part=\"input-field\"] ::slotted(input)::placeholder {\n        direction: rtl;\n      }\n\n      :host([dir=\"rtl\"]) [part=\"value\"]:-ms-input-placeholder,\n      :host([dir=\"rtl\"]) [part=\"input-field\"] ::slotted(input):-ms-input-placeholder {\n        direction: rtl;\n      }\n\n      :host([dir=\"rtl\"]:not([has-controls])) [part=\"value\"]::placeholder {\n        text-align: left;\n      }\n\n      :host([dir=\"rtl\"]:not([has-controls])) [part=\"input-field\"] ::slotted(input)::placeholder {\n        text-align: left;\n      }\n\n      :host([dir=\"rtl\"]:not([has-controls])) [part=\"value\"]:-ms-input-placeholder,\n      :host([dir=\"rtl\"]:not([has-controls])) [part=\"input-field\"] ::slotted(input):-ms-input-placeholder {\n        text-align: left;\n      }\n    </style>\n\n    <div disabled\\$=\"[[!_allowed(-1, value, min, max, step)]]\" part=\"decrease-button\" on-click=\"_decreaseValue\" on-touchend=\"_decreaseButtonTouchend\" hidden\\$=\"[[!hasControls]]\">\n    </div>\n\n    <div disabled\\$=\"[[!_allowed(1, value, min, max, step)]]\" part=\"increase-button\" on-click=\"_increaseValue\" on-touchend=\"_increaseButtonTouchend\" hidden\\$=\"[[!hasControls]]\">\n    </div>\n  </template>\n\n  \n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\nlet memoizedTemplate;\n\n/**\n* `<vaadin-number-field>` is a Web Component for number field control in forms.\n*\n* ```html\n* <vaadin-number-field label=\"Number\">\n* </vaadin-number-field>\n* ```\n*\n* @extends PolymerElement\n* @demo demo/index.html\n*/\nclass NumberFieldElement extends TextFieldElement {\n  static get is() {\n    return 'vaadin-number-field';\n  }\n\n  static get version() {\n    return '2.6.2';\n  }\n\n  static get properties() {\n    return {\n      /**\n      * Set to true to display value increase/decrease controls.\n      */\n      hasControls: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n\n      /**\n      * The minimum value of the field.\n      */\n      min: {\n        type: Number,\n        reflectToAttribute: true,\n        observer: '_minChanged'\n      },\n\n      /**\n       * The maximum value of the field.\n       */\n      max: {\n        type: Number,\n        reflectToAttribute: true,\n        observer: '_maxChanged'\n      },\n\n      /**\n       * Specifies the allowed number intervals of the field.\n       */\n      step: {\n        type: Number,\n        value: 1,\n        observer: '_stepChanged'\n      }\n\n    };\n  }\n\n  ready() {\n    super.ready();\n    this.__previousValidInput = this.value || '';\n    this.inputElement.type = 'number';\n    this.inputElement.addEventListener('change', this.__onInputChange.bind(this));\n  }\n\n  _decreaseButtonTouchend(e) {\n    // Cancel the following click and focus events\n    e.preventDefault();\n    this._decreaseValue();\n  }\n\n  _increaseButtonTouchend(e) {\n    // Cancel the following click and focus events\n    e.preventDefault();\n    this._increaseValue();\n  }\n\n  static get template() {\n    if (!memoizedTemplate) {\n      // Clone the superclass template\n      memoizedTemplate = super.template.cloneNode(true);\n\n      // Retrieve this element's dom-module template\n      const thisTemplate = DomModule.import(this.is + '-template', 'template');\n      const decreaseButton = thisTemplate.content.querySelector('[part=\"decrease-button\"]');\n      const increaseButton = thisTemplate.content.querySelector('[part=\"increase-button\"]');\n      const styles = thisTemplate.content.querySelector('style');\n\n      // Add the buttons and styles to the text-field template\n      const inputField = memoizedTemplate.content.querySelector('[part=\"input-field\"]');\n      const prefixSlot = memoizedTemplate.content.querySelector('[name=\"prefix\"]');\n      inputField.insertBefore(decreaseButton, prefixSlot);\n      inputField.appendChild(increaseButton);\n      memoizedTemplate.content.appendChild(styles);\n    }\n\n    return memoizedTemplate;\n  }\n\n  _createConstraintsObserver() {\n    // NOTE: do not call \"super\" but instead override the method to add extra arguments\n    this._createMethodObserver('_constraintsChanged(required, minlength, maxlength, pattern, min, max, step)');\n  }\n\n  _constraintsChanged(required, minlength, maxlength, pattern, min, max, step) {\n    if (!this.invalid) {\n      return;\n    }\n\n    const isNumUnset = n => (!n && n !== 0);\n\n    if (!isNumUnset(min) || !isNumUnset(max)) {\n      this.validate();\n    } else {\n      super._constraintsChanged(required, minlength, maxlength, pattern);\n    }\n  }\n\n  _decreaseValue() {\n    this._incrementValue(-1);\n  }\n\n  _increaseValue() {\n    this._incrementValue(1);\n  }\n\n  _incrementValue(incr) {\n    if (this.disabled || this.readonly) {\n      return;\n    }\n\n    let value = parseFloat(this.value);\n\n    if (!this.value) {\n      if (this.min == 0 && incr < 0 ||\n          this.max == 0 && incr > 0 ||\n          this.max == 0 && this.min == 0) {\n        incr = 0;\n        value = 0;\n      } else if ((this.max == null || this.max >= 0) &&\n                 (this.min == null || this.min <= 0)) {\n        value = 0;\n      } else if (this.min > 0) {\n        value = this.min;\n        if (this.max < 0 && incr < 0) {\n          value = this.max;\n        }\n        incr = 0;\n      } else if (this.max < 0) {\n        value = this.max;\n        if (incr < 0) {\n          incr = 0;\n        } else {\n          // FIXME(yuriy): find a proper solution to make correct step back\n          if (this._getIncrement(1, value - this.step) > this.max) {\n            value -= 2 * this.step;\n          } else {\n            value -= this.step;\n          }\n        }\n      }\n    } else if (value < this.min) {\n      incr = 0;\n      value = this.min;\n    } else if (value > this.max) {\n      incr = 0;\n      value = this.max;\n    }\n\n    const newValue = this._getIncrement(incr, value);\n    if (!this.value || incr == 0 || this._incrementIsInsideTheLimits(incr, value)) {\n      this._setValue(newValue);\n    }\n  }\n\n  _setValue(value) {\n    this.value = this.inputElement.value = String(parseFloat(value));\n    this.dispatchEvent(new CustomEvent('change', {bubbles: true}));\n  }\n\n  _getIncrement(incr, currentValue) {\n    let step = this.step || 1,\n      min = this.min || 0;\n\n    // To avoid problems with decimal math, multiplying to operate with integers.\n    const multiplier = Math.max(this._getMultiplier(currentValue),\n      this._getMultiplier(step),\n      this._getMultiplier(min));\n\n    step *= multiplier;\n    currentValue = Math.round(currentValue * multiplier);\n    min *= multiplier;\n\n    const margin = (currentValue - min) % step;\n\n    if (incr > 0) {\n      return (currentValue - margin + step) / multiplier;\n    } else if (incr < 0) {\n      return (currentValue - (margin || step)) / multiplier;\n    } else {\n      return currentValue / multiplier;\n    }\n  }\n\n  _getDecimalCount(number) {\n    const s = String(number);\n    const i = s.indexOf('.');\n    return i === -1 ? 1 : s.length - i - 1;\n  }\n\n  _getMultiplier(number) {\n    if (!isNaN(number)) {\n      return Math.pow(10, this._getDecimalCount(number));\n    }\n  }\n\n  _incrementIsInsideTheLimits(incr, value) {\n    if (incr < 0) {\n      return this.min == null || this._getIncrement(incr, value) >= this.min;\n    } else if (incr > 0) {\n      return this.max == null || this._getIncrement(incr, value) <= this.max;\n    } else {\n      return this._getIncrement(incr, value) <= this.max && this._getIncrement(incr, value) >= this.min;\n    }\n  }\n\n  _allowed(sign) {\n    const incr = sign * (this.step || 1);\n    const value = parseFloat(this.value);\n    return !this.value || (!this.disabled && this._incrementIsInsideTheLimits(incr, value));\n  }\n\n  _stepChanged(step) {\n    // Avoid using initial value in validation\n    this.__validateByStep = this.__stepChangedCalled || this.getAttribute('step') !== null;\n    this.inputElement.step = this.__validateByStep ? step : 'any';\n\n    this.__stepChangedCalled = true;\n    this.setAttribute('step', step);\n  }\n\n  _minChanged(min) {\n    this.inputElement.min = min;\n  }\n\n  _maxChanged(max) {\n    this.inputElement.max = max;\n  }\n\n  _valueChanged(newVal, oldVal) {\n    // Validate value to be numeric\n    if (newVal && isNaN(parseFloat(newVal))) {\n      this.value = '';\n    } else if (typeof this.value !== 'string') {\n      this.value = String(this.value);\n    }\n\n    super._valueChanged(this.value, oldVal);\n  }\n\n  _onKeyDown(e) {\n    if (e.keyCode == 38) {\n      e.preventDefault();\n      this._increaseValue();\n    } else if (e.keyCode == 40) {\n      e.preventDefault();\n      this._decreaseValue();\n    }\n    super._onKeyDown(e);\n  }\n\n  __onInputChange() {\n    this.validate();\n  }\n\n  checkValidity() {\n    // text-field mixin does not check against `min`, `max` and `step`\n    if (this.min !== undefined || this.max !== undefined || this.__validateByStep) {\n      return this.inputElement.checkValidity();\n    }\n\n    return super.checkValidity();\n  }\n}\n\nwindow.customElements.define(NumberFieldElement.is, NumberFieldElement);\n\nexport { NumberFieldElement };\n","/**\n@license\nCopyright (c) 2019 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport '@polymer/polymer/polymer-element.js';\n\nimport '@polymer/polymer/lib/elements/custom-style.js';\nimport { NumberFieldElement } from './vaadin-number-field.js';\nconst $_documentContainer = document.createElement('template');\n\n$_documentContainer.innerHTML = `<dom-module id=\"vaadin-integer-field-template\">\n\n  \n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\n\n/**\n* `<vaadin-integer-field>` is a Web Component for integer field control in forms.\n*\n* ```html\n* <vaadin-integer-field label=\"Number\">\n* </vaadin-integer-field>\n* ```\n*\n* @extends PolymerElement\n* @demo demo/index.html\n*/\nclass IntegerFieldElement extends NumberFieldElement {\n  static get is() {\n    return 'vaadin-integer-field';\n  }\n\n  static get version() {\n    return '2.6.2';\n  }\n\n  static get properties() {\n    // Hide inherited props that don't work with <input type=\"number\"> from JSDoc.\n    return {\n      /**\n       * @private\n       */\n      pattern: String,\n      /**\n       * @private\n       */\n      preventInvalidInput: Boolean,\n      /**\n       * @private\n       */\n      minlength: Number,\n      /**\n       * @private\n       */\n      maxlength: Number\n    };\n  }\n\n  ready() {\n    super.ready();\n    this._enabledCharPattern = '[-+\\\\d]';\n  }\n\n  _valueChanged(newVal, oldVal) {\n    if (newVal !== '' && !this.__isInteger(newVal)) {\n      console.warn(`Trying to set non-integer value \"${newVal}\" to <vaadin-integer-field>.`\n        + ` Clearing the value.`);\n      this.value = '';\n      return;\n    }\n    super._valueChanged(newVal, oldVal);\n  }\n\n  _stepChanged(newVal, oldVal) {\n    if (!this.__hasOnlyDigits(newVal)) {\n      console.warn(`Trying to set invalid step size \"${newVal}\",`\n        + ` which is not a positive integer, to <vaadin-integer-field>.`\n        + ` Resetting the default value 1.`);\n      this.step = 1;\n      return;\n    }\n    super._stepChanged(newVal, oldVal);\n  }\n\n  __isInteger(value) {\n    return /^(-\\d)?\\d*$/.test(String(value));\n  }\n\n  __hasOnlyDigits(value) {\n    return /^\\d*$/.test(String(value));\n  }\n}\n\nwindow.customElements.define(IntegerFieldElement.is, IntegerFieldElement);\n\nexport { IntegerFieldElement };\n","import { PolymerElement, html } from '@polymer/polymer';\nimport { mergeFeature } from '../util/charBuilder';\nimport { jqEmpty, util_capitalizeAll } from \"../js/utils\";\nimport \"@vaadin/vaadin-select\";\nimport {loadModel} from \"../util/data\";\n\nclass DndSelectAdd extends PolymerElement {\n  static get properties() {\n    return {\n      test: {\n        type: Boolean,\n        reflectToAttribute: true,\n        value: false\n      },\n      options: {\n        type: Array,\n        observer: \"optionsUpdated\"\n      },\n      model: {\n        type: String\n      },\n      addCallback: {\n        type: Function\n      },\n      value: {\n        type: String,\n        value: \"\",\n        observer: \"valueUpdated\"\n      },\n      choices: {\n        type: Number,\n        observer: \"choicesUpdated\"\n      },\n      paren: {\n        type: String,\n      },\n      label: {\n        type: String\n      },\n      placeholder: {\n        type: String,\n      },\n      multiValue: {\n        type: String,\n        value: \"\"\n      },\n      disabled: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      }\n    }\n  }\n\n  choicesUpdated() {\n    if (this.listBox) {\n      this.listBox.remove();\n      delete this.listBox;\n    }\n    this.$.select.render();\n  }\n\n  optionsUpdated() {\n    if (this.listBox) {\n      this.listBox.remove();\n      delete this.listBox;\n    }\n    this.$.select.render();\n  }\n\n  valueUpdated() {\n    if (this.choices) {\n      if (Array.isArray(this.value) && this.options) {\n        const choiceArray = this.value\n          .map(v => {\n            if (this.options.indexOf(v) !== -1) {\n              return this.options.indexOf(v);\n            } else {\n              return this.options.findIndex((o) => {\n                return o.name === v.name && o.source === v.source;\n              });\n            }\n          })\n          .filter(v => { return v !== -1 });\n\n        if (this.listBox) {\n          this.listBox.selectedValues = choiceArray;\n        }\n        this.multiValue = choiceArray.map(i => {\n          let value = this.options[i];\n          return value.name ? value.name : util_capitalizeAll(value) \n        }).join(\", \");\n      } else {\n        if (this.listBox) {\n          this.listBox.selectedValues = [];\n        }\n        this.multiValue = \"\";\n      }\n    } else {\n      if (this.value && this.options) {\n        if (this.value.source) {\n          this.$.select.value = this.options.findIndex(i => { return i.name === this.value.name && i.source === this.value.source || i === this.value.name }) + \"\";\n        } else if (this.value.name) {\n          this.$.select.value = this.options.findIndex(i => { return i.name === this.value.name || i === this.value.name }) + \"\";\n        } else {\n          this.$.select.value = this.options.findIndex(i => { return i.name === this.value || i === this.value }) + \"\";\n        }\n      } else {\n        this.$.select.value = \"\";\n      }\n    }\n  }\n\n  ready() {\n    super.ready();\n\n    setTimeout(async () => {\n      if (this.model) {\n        this.options = await loadModel(this.model);\n      }\n\n      this.$.select.renderer = (root, select) => {\n        if (!this.listBox) {\n          this.listBox = document.createElement('vaadin-list-box');\n\n          // setting up for multi-select\n          if (this.choices) {\n            this.listBox.setAttribute(\"multiple\", true);\n\n            this.listBox.addEventListener(\"click\", (e) => {\n              select.opened = true;\n              let wasPreviouslySelected = e.srcElement.getAttribute(\"selected\") !== null\n              setTimeout(() => {\n                if (this.listBox.selectedValues.length > this.choices\n                    && !wasPreviouslySelected) {\n                  this.listBox.selectedValues.splice(this.listBox.selectedValues.length - 2, 1)\n                }\n                let selectedOptions = this.listBox.selectedValues.map(v => { return this.options[v] });\n                this.multiValue = selectedOptions.map(o => { return o.name ? o.name : util_capitalizeAll(o) }).join(', ');\n                if (this.addCallback) {\n                  this.addCallback(selectedOptions);\n                }\n              }, 0);\n            });\n\n          }\n\n          // Adding options\n          if (this.options && this.options.length) {\n            for (let i = 0; i < this.options.length; i ++) {\n              const option = this.options[i],\n                item = document.createElement('vaadin-item');\n              const optionName = option.name || util_capitalizeAll(option);\n              item.innerHTML = `<span>${optionName}</span> ${option.name ? `<span style='font-size: 14px;color: var(--lumo-primary-color-50pct);'>${option.source}</span>` : ''}`\n              item.setAttribute(\"value\", i);\n              this.listBox.appendChild(item);\n            }\n          }\n          root.appendChild(this.listBox);\n          this.$.select._assignMenuElement();\n\n          this.valueUpdated();\n        }\n      };\n    }, 0);\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    this.selectChangeHandler = () => {\n      const val = this.$.select.value;\n      if (val) {\n        if (!this.choices) {\n          const selected = this.options[val];\n          if (this.addCallback) {\n            this.addCallback(selected, this.model);\n          } else {\n            mergeFeature(undefined, selected, this.model);\n          }\n          if (!this.value) {\n            this.$.select.value = \"\";\n          }\n        }\n      }\n    };\n\n    this.$.select.addEventListener(\"change\", this.selectChangeHandler);\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n\n    this.$.select.removeEventListener(\"change\", this.selectChangeHandler);\n  }\n\n  _exists(a) {\n    return !!a;\n  }\n\n  _label(label, choices, paren) {\n    let result = '';\n    if (label) {\n      result = label;\n      if (choices && choices !== 1 && choices !== 100) {\n        result += ` (pick ${choices})`;\n      }\n      if (paren) {\n        result += ` (${paren})`;\n      }\n    }\n    return result;\n  }\n  \n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: inline-block;\n        }\n        [slot=\"prefix\"] {\n          width: calc(100% - 46px);\n          padding: 12px;\n          line-height: 1.4;\n        }\n        vaadin-select {\n          width: 100%;\n        }\n        .prefix {\n          white-space: normal;\n          color: var(--lumo-body-text-color);\n        }\n      </style>\n      <vaadin-select test$=\"[[test]]\" theme=\"dark\" add id=\"select\" label=\"[[_label(label, choices, paren)]]\" placeholder=\"[[placeholder]]\" disabled$=\"[[disabled]]\">\n        <div hidden$=\"[[!_exists(multiValue)]]\" slot=\"prefix\">\n          <span class=\"prefix\">[[multiValue]]</span>\n        </div>\n      </vaadin-select>\n      \n    `;\n  }\n}\ncustomElements.define('dnd-select-add', DndSelectAdd);","import {PolymerElement, html} from \"@polymer/polymer\";\nimport \"@vaadin/vaadin-text-field/vaadin-integer-field\";\nimport \"../../dnd-select-add\";\nimport \"../../dnd-button\";\nimport \"../../dnd-svg\";\nimport { \n  getCharacterChannel,\n  getSelectedCharacter,\n  updateAttr,\n  getClassSaves,\n  getSkillProfs,\n  toggleCustomSkill,\n  getRaceAttributeDefaults,\n  getAttributeScoreModifiers,\n  getMaxHP,\n  getCurrentHP, getTempHp, setCurrentHp,\n  getHitDice,\n  resetHitDice,\n  addTempHp,\n  useHitDice,\n  getCharacterAC,\n  getCharacterInitiative,\n  getCharacterSpeed,\n  getCharacterProficiencyBonus,\n  toggleCustomInitiative,\n  setCustomInitiativeVal,\n  toggleCustomAC,\n  toggleCustomHealth,\n  setCustomACVal,\n  setCustomHealthVal\n} from \"../../../util/charBuilder\";\nimport { getEditModeChannel, isEditMode } from \"../../../util/editMode\";\nimport { util_capitalizeAll, absInt, findInPath } from \"../../../js/utils\";\nimport { rollDice } from \"../../../util/roll\";\n\nclass DndCharacterBuilderAttributes extends PolymerElement {\n  \n  static get properties() {\n    return {\n      str: {\n        type: Number\n      },\n      dex: {\n        type: Number\n      },\n      con: {\n        type: Number\n      },\n      int: {\n        type: Number\n      },\n      wis: {\n        type: Number\n      },\n      cha: {\n        type: Number\n      },\n      strAdj: {\n        type: Number,\n        value: 0\n      },\n      dexAdj: {\n        type: Number,\n        value: 0\n      },\n      conAdj: {\n        type: Number,\n        value: 0\n      },\n      intAdj: {\n        type: Number,\n        value: 0\n      },\n      wisAdj: {\n        type: Number,\n        value: 0\n      },\n      chaAdj: {\n        type: Number,\n        value: 0\n      },\n      skillProfs: {\n        type: String,\n        value: \"\"\n      },\n\n      saves: {\n        type: Array,\n        value: []\n      },\n      classSkillProfOptions: {\n        type: Object,\n        value: {}\n      },\n      backgroundSkillProfOptions: {\n        type: Object,\n        value: []\n      },\n      defaultBackgroundSkillProf: {\n        type: String,\n        value: \"\"\n      },\n      maxHP: {\n        type: Number\n      },\n      tempHP: {\n        type: Number,\n        value: 0\n      },\n      isEditMode: {\n        type: Boolean,\n        value: false\n      },\n      initiative: {\n        type: String,\n        value: \"\"\n      },\n      customInitiative: {\n        type: Boolean,\n        value: false\n      },\n      customInitiativeVal: {\n        type: Number\n      },\n      customACVal: {\n        type: Number\n      },\n      customACHealth: {\n        type: Number\n      }\n    };\n  }\n\n  static get observers() {\n    return [\n      \"updateCharAttr(str, dex, con, int, wis, cha)\",\n      \"updateCustomInitiative(customInitiativeVal)\",\n      \"updateCustomAC(customACVal)\",\n      \"updateCustomHealth(customHealthVal)\"\n    ]\n  }\n\n  updateCharAttr(str, dex, con, int, wis, cha) {\n    if (str && dex && con && int && wis && cha) {\n      updateAttr({str, dex, con, int, wis, cha});\n    }\n  }\n\n  updateCustomInitiative(customInitiativeVal) {\n    if (customInitiativeVal !== undefined && customInitiativeVal !== \"\") {\n      setCustomInitiativeVal(customInitiativeVal);\n    }\n  }\n\n  updateCustomAC(customACVal) {\n    if (customACVal !== undefined && customACVal !== \"\") {\n      setCustomACVal(customACVal);\n    }\n  }\n\n  updateCustomHealth(customHealthVal) {\n    if (customHealthVal !== undefined && customHealthVal !== \"\") {\n      setCustomHealthVal(customHealthVal);\n    }\n  }\n\n  hpChangeHandler(e) {\n    this.$.hpField.focusElement.blur();\n  }\n\n  hpBlurHandler(e) {\n    const parsedVal = parseInt(this.$.hpField.value);\n    \n    if (Number.isNaN(parsedVal)) {\n      this.$.hpField.value = getCurrentHP;\n    } else {\n      setCurrentHp(parsedVal);\n    }\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    this.characterChangeHandler = (e) => {\n      let character = e.detail.character;\n      this.updateAttributesFromCharacter(character);\n    };\n    \n    this.updateAttributesFromCharacter(getSelectedCharacter());\n    getCharacterChannel().addEventListener(\"character-selected\", this.characterChangeHandler);\n\n    this.editModeHandler = (e) => {\n      this.isEditMode = e.detail.isEditMode;\n    }\n    getEditModeChannel().addEventListener('editModeChange', this.editModeHandler);\n    this.isEditMode = isEditMode();\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n\n    getCharacterChannel().removeEventListener(\"character-selected\", this.characterChangeHandler);\n    getEditModeChannel().removeEventListener('editModeChange', this.editModeHandler);\n  }\n\n  async updateAttributesFromCharacter(character) {\n    if (character && character.attr) {\n      const attr = character.attr;\n      if (attr.str !== this.str || attr.dex !== this.dex || attr.con !== this.con \n          || attr.int !== this.int || attr.wis !== this.wis || attr.cha !== this.cha) {\n        this.setProperties({\n          str: character.attr.str,\n          dex: character.attr.dex,\n          con: character.attr.con,\n          int: character.attr.int,\n          wis: character.attr.wis,\n          cha: character.attr.cha\n        });\n      }\n\n      this.saves = await getClassSaves();\n\n      // Attributes from Race\n      let attributeAdj = await getAttributeScoreModifiers();\n\n      this.strAdj = attributeAdj.str;\n      this.dexAdj = attributeAdj.dex;\n      this.conAdj = attributeAdj.con;\n      this.intAdj = attributeAdj.int;\n      this.wisAdj = attributeAdj.wis;\n      this.chaAdj = attributeAdj.cha;\n\n      this.skillProfs = (await getSkillProfs()).join(',');\n\n      this.customHealth = !!character.customHealth;\n      this.customHealthVal = character.customHealthVal;\n      this.maxHP = await getMaxHP();\n      this.currentHP = await getCurrentHP();\n      this.tempHP = await getTempHp();\n\n      const hitDicePerClass = await getHitDice();\n      const hitDicePerDice = [];\n      for (let hitDiceClass of hitDicePerClass) {\n        const hitDiceDice = hitDicePerDice.find(hitDiceInArray => hitDiceInArray.die === hitDiceClass.die)\n        if (hitDiceDice) {\n          if (hitDiceDice.current === 0) {\n            hitDiceDice.className = hitDiceClass.className;\n          }\n          hitDiceDice.current += hitDiceClass.current;\n          hitDiceDice.total += hitDiceClass.total;\n        } else {\n          hitDicePerDice.push(hitDiceClass);\n        }\n      }\n      this.hitDice = hitDicePerDice.sort();\n\n      this.customAC = !!character.customAC;\n      this.customACVal = character.customACVal;\n      this.ac = await getCharacterAC();\n\n      this.customInitiative = !!character.customInitiative;\n      this.customInitiativeVal = character.customInitiativeVal;\n      this.initiative = await getCharacterInitiative();\n\n      this.speed = await getCharacterSpeed();\n\n      this.proficiencyBonus = await getCharacterProficiencyBonus();\n\n      this.dispatchEvent(new CustomEvent(\"loadingChange\", { bubbles: true, composed: true }));\n    }\n  }\n\n  _adjustString(adj) {\n    if (adj !== 0 && adj !== undefined) {\n      return absInt(adj);\n    }\n    return \"\";\n  }\n\n  _total(a, b) {\n    let intA = parseInt(a),\n      intB = parseInt(b);\n\n    intA = isNaN(intA) ? 0 : intA;\n    intB = isNaN(intB) ? 0 : intB;\n\n    return intA + intB;\n  }\n\n  _mod(base, adj) {\n    return absInt(Math.floor((this._total(base, adj) - 10) / 2));\n  }\n\n  _contains(saves, str) {\n    return saves.indexOf(str) > -1;\n  }\n\n  _exists() {\n    for (let arg of arguments) {\n      if (!!arg && (arg.constructor !== Object || Object.entries(arg).length > 0) && (!Array.isArray(arg) || arg.length > 0)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  _editModeClass(isEditMode) {\n    return isEditMode ? 'edit-mode' : 'not-edit-mode';\n  }\n\n  _tempHpStr(tempHP) {\n    return tempHP && typeof tempHP === 'number' && tempHP > 0 ? ` + ${tempHP}` : '';\n  }\n\n  _toggleButtonField(e) {\n    const element = e.target.closest('.btn-field');\n    const isOpen = element.classList.contains('btn-field--open');\n    const isTemp = element.classList.contains('btn-field--temp');\n    const intField = element.querySelector('vaadin-integer-field');\n    const buttonComp = element.querySelector('dnd-button');\n    element.classList.toggle('btn-field--open');\n    buttonComp.classList.toggle('icon-only');\n    buttonComp.classList.toggle('hard-left');\n\n    if (isTemp) {\n      if (isOpen) {\n        const changeVal = parseInt(intField.value);\n        if (changeVal) {\n          addTempHp(parseInt(this.tempHP) + changeVal);\n          intField.value = '';\n        }\n      } else {\n        intField.focus();\n      }\n\n    } else {\n      if (isOpen) {\n        const changeVal = parseInt(intField.value);\n        if (changeVal) {\n          const modifier = element.classList.contains('btn-field--heal') ? 1 : -1;\n          setCurrentHp(parseInt(this.currentHP) + (modifier * changeVal));\n          intField.value = '';\n        }\n      } else {\n        intField.focus();\n      }\n    }\n  }\n\n  _submitButtonField(e) {\n    if (e.key === 'Enter') {\n      this._toggleButtonField(e);\n    }\n  }\n\n  _blurButtonField(e) {\n    this._toggleButtonField(e);\n  }\n\n  _useHitDice(e) {\n    const element = e.target.closest('.hit-dice__item');\n    if (e.model.__data.item.current > 0 && this.currentHP < this._maxHP(this.customHealthVal, this.maxHP, this.customHealth)) {\n      const className = element.dataset.className;\n      useHitDice(className);\n    } else {\n      // flash error\n      element.classList.add('hit-dice__item--error');\n      setTimeout(() => {\n        element.classList.remove('hit-dice__item--error');\n      }, 500);\n    }\n  }\n\n  _strContains(str, search) {\n    return str.indexOf(search) > -1;\n  }\n\n  _strContainsTwo(str, search) {\n    const count = (str.match(new RegExp(search, 'g')) || []).length;\n    return count >= 2;\n  }\n\n  _resetHitDice(e) {\n    resetHitDice();\n  }\n\n  async _roll(e) {\n    const profEl = findInPath('.proficiency-item', e);\n    if (!this.isEditMode) {\n      const attrEl = findInPath('.stat-box', e);\n      const initEl = findInPath('.initiative', e);\n      let mod, isProficient, name, isExpertise;\n\n      if (profEl) {\n        isProficient = profEl.hasAttribute('enabled');\n        isExpertise = profEl.hasAttribute('expertise');\n        mod = parseInt(profEl.closest('.attribute-wrap').querySelector('.stat-box__mod').innerText, 10);\n        name = profEl.innerText;\n\n      } else if (attrEl) {\n        isProficient = attrEl.querySelector('.stat-box__save').hasAttribute('enabled');\n        mod = parseInt(attrEl.querySelector('.stat-box__mod').innerText, 10);\n        name = attrEl.querySelector('vaadin-integer-field').label + ' Save';\n\n      } else if (initEl) {\n        isProficient = false;\n        mod = this.customInitiative ? this.customInitiativeVal : parseInt(this.initiative, 10);\n        name = \"Initiative\";\n      }\n\n      if (name) {\n        let rollForm = '1d20';\n  \n        if (isProficient) {\n          mod = mod + this.proficiencyBonus;\n        }\n        if (isExpertise) {\n          mod = mod + this.proficiencyBonus;\n        }\n        if (mod > 0) {\n          rollForm += `+${mod}`\n        } else if (mod < 0) {\n          rollForm += mod;\n        }\n        rollDice(name, rollForm);\n      }\n    } else if (profEl) {\n      await toggleCustomSkill(profEl.innerText.toLowerCase());\n    }\n  }\n\n  _swapCustomInitiative(e) {\n    toggleCustomInitiative();\n  }\n\n  _swapCustomAC(e) {\n    toggleCustomAC();\n  }\n\n  _swapCustomHealth(e) {\n    toggleCustomHealth();\n  }\n\n  _plusMinus(val) {\n    if (val) {\n      if (val > 0) { \n        return \"+\";\n      }\n    }\n  }\n\n  _triggerShortRest(e) {\n\n  }\n\n  _triggerLongRest(e) {\n\n  }\n\n  _maxHP(customHealthVal, maxHP, customHealth) {\n    return customHealth ? customHealthVal : maxHP;\n  }\n\n  static get template() {\n    return html`\n      <style include=\"material-styles\">\n        :host {\n          display: block;\n          padding: 14px;\n        }\n\n        [hidden] {\n          display: none !important;\n        }\n\n        .wrap {\n          display: flex;\n          flex-direction: column;\n          justify-content: space-between;\n          padding-bottom: 50px;\n        }\n\n        .stats {\n          display: flex;\n          flex-direction: column;\n          min-width: 0;\n        }\n        .attribute-wrap {\n          display: flex;\n          flex-direction: row;\n          min-width: 0;\n        }\n        .health-wrap {\n          display: flex;\n          flex-direction: row;\n          flex-wrap: wrap;\n          min-width: 0;\n          flex-shrink: 0;\n          justify-content: space-between;\n          margin-bottom: 16px;      \n        }\n        .health-wrap > div {\n          width: calc(33% - 8px);\n          max-width: 120px;\n        }\n        .health-wrap > * {\n          margin-bottom: 16px;\n        }\n\n\n        /* Proficiencies */\n        .proficiencies {\n          margin-left: 8px;\n          line-height: 1.4;\n          min-width: 0;\n          position: relative;\n          top: -2px;\n        }\n        .proficiency-item {\n          font-size: 14px;\n          white-space: nowrap;\n          overflow: hidden;\n          text-overflow: ellipsis;\n          position: relative;\n          cursor: pointer;\n        }\n\n        .proficiency-item::before,\n        .proficiency-item[expertise]::after {\n          content: '';\n          display: inline-block;\n          height: 10px;\n          width: 10px;\n          border: 1px solid var(--mdc-theme-primary);\n          border-radius: 50%;\n          background-color: transparent;\n          margin-right: 8px;\n          position: relative;\n          top: 1px;\n          box-shadow: 0px 0px 10px -4px rgba(0,0,0,0.75);\n        }\n        .proficiency-item[expertise]::after {\n          position: absolute;\n          left: 13px;\n          top: 3px;\n          margin-right: 0;\n          background-color: var(--mdc-theme-primary);\n        }\n        .proficiency-item[expertise]::before {\n          margin-right: 20px;\n        }\n        .proficiency-item[enabled]::before {\n          background-color: var(--mdc-theme-primary);\n        }\n\n\n        /* Stat Box */\n        .stat-box {\n          cursor: pointer;\n          position: relative;\n          display: inline-flex;\n          flex-direction: column;\n          justify-content: center;\n          align-items: center;\n          background: var(--lumo-contrast-10pct);\n          border-radius: 4px;\n        }\n        .stat-box:not(:last-child) {\n          margin-bottom:16px;\n        }\n        .stat-box__save {\n          position: absolute;\n          height: 12px;\n          width: 12px;\n          border: 2px solid var(--mdc-theme-primary);\n          border-radius: 50%;\n          top: -8px;\n          background-color: #33383C;\n          display: none;\n        }\n        .stat-box__save[enabled] {\n          background-color: var(--mdc-theme-primary);\n          display: block;\n        }\n        .stat-box__mod {\n          font-size: 32px;\n          font-weight: normal;\n          margin: 8px 8px 2px;\n          line-height: 1;\n          position: relative;\n          left: 1px;\n        }\n        .stat-box__footer {\n          display: inline-block;\n        }\n        .stat-box__adj {\n          position: relative;\n          right: 0px;\n        }\n        .not-edit-mode .stat-box__adj {\n          right: 15px;\n          color: var(--lumo-body-text-color);\n          -webkit-text-fill-color: var(--lumo-body-text-color);\n        }\n        .stat-box__side {\n          padding: 8px 0;\n        }\n\n        /* Stat Box HP  */\n        .stat-box--hp {\n          width: calc(66% - 2px) !important;\n          max-width: 236px !important;\n          flex-direction: row;\n          min-width: 160px;\n          justify-content: space-between;\n          flex-wrap: wrap;\n          height: fit-content;\n          height: 148px;\n          cursor: unset;\n        }\n        .stat-box__total {\n          font-size: 14px;\n        }\n        .stat-box--hp .stat-box__adj--hp {\n          position: absolute;\n          bottom: -10px;\n          right: 5px;\n          font-size: 16px;\n        }\n        .stat-box--hp .stat-box__footer {\n          width: 100%;\n        }\n        .stat-box__side {\n            flex-wrap: wrap;\n            justify-content: space-between;\n            width: 100%;\n            margin: 8px;\n        }\n        .stat-box--hp .btn-field {\n          margin-top: 12px;\n          width: auto;\n        }\n\n        .stat-box--hp .btn-field:not(:last-child) {\n          margin-bottom: 0px\n        }\n        .stat-box__side {\n          max-width: 80px;\n          margin: 0 8px 0 0;\n        }\n        .stat-box--hp .btn-field {\n          margin-top: 0;\n          width: 100%;\n        }\n        .stat-box--hp .btn-field:not(:last-child) {\n          margin-bottom: 12px\n        }\n        .edit-mode .stat-box--hp {\n          justify-content: center;\n          align-items: center;\n        }\n        .stat-box--hp-edit {\n          height: 100%;\n          width: 100%;\n          margin-top: 4px;\n          align-items: center;\n          justify-content: center;\n          display: flex;\n          flex-direction: column;\n          position: relative;\n          font-size: 18px;\n        }\n        .stat-box--hp-edit .custom-val__swap {\n          top: 0px;\n          right: 0;\n          position: absolute;\n        }\n\n\n        /* Button Field */\n        .btn-field {\n          display: inline-flex;\n          flex-direction: row;\n          flex-wrap: nowrap;\n          width: 100%;\n          height: 36px;\n          background: var(--lumo-contrast-10pct);\n          border-radius: 4px;\n        }\n        .btn-field:not(:last-child){\n          margin-bottom: 12px;\n        }\n        .btn-field__btn {\n          display: block;\n          width: 100%;\n        }\n        .btn-field__input {\n          display: none;\n        }\n        .btn-field .btn-field__btn-label {\n          display: none;\n        }\n        .btn-field--open .btn-field__btn {\n          width: calc(100% - 50px);\n        }\n        .btn-field--open .btn-field__btn-label {\n          width: 0;\n          overflow: hidden;\n        }\n        .btn-field--open .btn-field__input {\n          display: block;\n          width: 50px;\n          margin-top: -40px;\n        }\n        .btn-field--heal.btn-field--open .btn-field__btn-label {\n          margin-left: -16px;\n        }\n        .btn-field vaadin-integer-field {\n          --lumo-contrast-10pct: transparent;\n        }\n        .btn-field__btn-label--temp,\n        .btn-field__btn-label--damage {\n          font-size: 12px;\n        }\n        .btn-field--heal dnd-button {\n          --mdc-theme-primary: #83f675;\n        }\n        .btn-field--dmg dnd-button {\n          --mdc-theme-primary: #f83c42;\n        }\n        .btn-field--temp dnd-button {\n          --mdc-theme-primary: #2069c9;\n        }\n\n\n        /* Hit Dice */\n        .hit-dice {\n          display: flex;\n          flex-direction: column;\n          border-radius: 4px;\n          padding: 6px 0 0;\n          background: var(--lumo-contrast-10pct);\n          margin-bottom: 16px;\n        }\n        .hit-dice__heading {\n          display: inline-block;\n          text-align: center;\n          margin-bottom: 8px;\n          color: var(--mdc-theme-primary);\n          font-size: 14px;\n        }\n        .hit-dice__item {\n          width: 100%;\n          display: flex;\n          flex-direction: row;\n          flex-wrap: nowrap;\n        }\n        .hit-dice__item dnd-button {\n          width: 100%;\n        }\n        .hit-dice__item--error dnd-button {\n          --mdc-theme-primary: var(--lumo-error-color-50pct);\n        }\n        .hit-dice__item-label {\n          width: 100%;\n          display: flex;\n          justify-content: space-around;\n          align-items: center;\n          padding: 4px 0 0;\n        }\n        .hit-dice__item-label dnd-svg {\n          stroke: var(--mdc-theme-on-primary);\n          fill: var(--mdc-theme-primary);\n          width: 30px;\n        }\n        .hit-dice__reset {\n          margin-top: auto;\n        }\n\n        .basic-box {\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n          padding: 4px 0;\n          background: var(--lumo-contrast-10pct);\n          border-radius: 4px;\n          height: min-content;\n        }\n        .basic-box--short {\n          height: fit-content;\n        }\n        .basic-box__label {\n          color: var(--mdc-theme-primary);\n          font-size: 14px;\n        }\n        .basic-box__value {\n          font-size: 18px;\n          width: 100%;\n          display: flex;\n          flex-direction: column;\n          text-align: center;\n        }\n        .not-edit-mode .initiative {\n          cursor: pointer;\n        }\n\n        .custom-val__swap {\n          font-size: 10px;\n          margin: -4px 0 8px auto;\n          background-color: var(--lumo-contrast-10pct);\n          /* background-color: var(--mdc-theme-secondary-lighter); */\n          padding: 5px 5px 4px;\n          line-height: 1;\n          border-radius: 4px;\n          cursor: pointer;\n        }\n        .custom-val__swap .material-icons {\n          font-size: 11px;\n        }\n\n        /* Rest Buttons */\n        .rest-btn {\n          margin-bottom: 16px;\n        }\n\n        @media(min-width: 420px) {\n          .wrap {\n            padding-bottom: 0;\n          }\n        }\n      </style>\n\n      <div class$=\"[[_editModeClass(isEditMode)]]\">\n        <div class=\"wrap\">\n          <div class=\"health-wrap\">\n            <!-- Hit Points -->\n            <div class=\"stat-box stat-box--hp\">\n\n              <vaadin-integer-field hidden$=[[isEditMode]] id=\"hpField\" theme=\"hp\" value={{currentHP}} on-change=\"hpBlurHandler\" on-blur=\"hpChangeHandler\" min=\"0\" max=\"[[_maxHP(customHealthVal, maxHP, customHealth)]]\" has-controls label=\"Hit Points\">\n                <span class=\"stat-box__adj--hp\" slot=\"suffix\">/ [[_maxHP(customHealthVal, maxHP, customHealth)]] [[_tempHpStr(tempHP)]]</span>\n              </vaadin-integer-field>\n\n              <div class=\"stat-box--hp-edit\" hidden$=[[!isEditMode]]>\n                <div class=\"custom-val__swap\" on-click=\"_swapCustomHealth\" hidden$=[[!isEditMode]]>\n                  <span class=\"custom-val__option\" hidden$=[[customHealth]]><span class=\"material-icons\">edit</span> Edit</span>\n                  <span class=\"custom-val__option\" hidden$=[[!customHealth]]><span class=\"material-icons\">restart_alt</span> Use Standard</span>\n                </div>\n                <div class=\"basic-box__label\">Max HP</div>\n\n                <div hidden$=[[!customHealth]]>\n                  <vaadin-integer-field  value={{customHealthVal}} min=\"0\" has-controls hidden$=\"[[!isEditMode]]\"></vaadin-integer-field>\n                  <span hidden$=\"[[isEditMode]]\">[[customHealthVal]]</span>\n                </div>\n                <div hidden$=[[customHealth]]>[[maxHP]]</div>\n              </div>\n\n              <div class=\"stat-box__side\" hidden$=[[isEditMode]]>\n                <!--  Healing / Damage -->\n                <div class=\"btn-field btn-field--heal\">\n                    <dnd-button icon=\"favorite\" background=\"none\" class=\"btn-field__btn\" on-click=\"_toggleButtonField\"></dnd-button>\n                    <vaadin-integer-field class=\"btn-field__input\" min=\"0\" on-keydown=\"_submitButtonField\" on-blur=\"_blurButtonField\">\n                      <span slot=\"prefix\">+</span>\n                    </vaadin-integer-field>\n                </div>\n                <div class=\"btn-field btn-field--dmg\">\n                    <dnd-button svg=\"swords\" background=\"none\" class=\"btn-field__btn\" on-click=\"_toggleButtonField\"></dnd-button>\n                    <vaadin-integer-field class=\"btn-field__input\" min=\"0\" on-keydown=\"_submitButtonField\" on-blur=\"_blurButtonField\">\n                      <span slot=\"prefix\">-</span>\n                    </vaadin-integer-field>\n                </div>\n                <div class=\"btn-field btn-field--temp\">\n                    <dnd-button svg=\"paladin\" background=\"none\" class=\"btn-field__btn\" on-click=\"_toggleButtonField\"></dnd-button>\n                    <vaadin-integer-field class=\"btn-field__input\" min=\"0\" on-keydown=\"_submitButtonField\" on-blur=\"_blurButtonField\">\n                      <span slot=\"prefix\">+</span>\n                    </vaadin-integer-field>\n                </div>\n              </div>\n            </div>\n\n\n            <!--  Hit Dice -->\n            <div class=\"hit-dice\">\n              <div class=\"hit-dice__heading\">Hit Dice</div>\n              <template is=\"dom-repeat\" items=\"[[hitDice]]\">\n                <div class=\"hit-dice__item\" data-class-name$=\"[[item.className]]\">\n                  <dnd-button on-click=\"_useHitDice\">\n                    <div class=\"hit-dice__item-label\" slot=\"label\">\n                      <dnd-svg id=\"[[item.die]]\"></dnd-svg>\n                      <div class=\"hit-dice__count\">[[item.current]] / [[item.total]]</div>\n                    </div>\n                  </dnd-button>\n                </div>\n              </template>\n              <dnd-button class=\"hit-dice__reset\" label=\"Reset\" on-click=\"_resetHitDice\"></dnd-button>\n            </div>\n\n            <div class=\"basic-box basic-box--short ac\">\n              <div class=\"basic-box__value\">\n                <div class=\"custom-val__swap\" on-click=\"_swapCustomAC\" hidden$=[[!isEditMode]]>\n                  <span class=\"custom-val__option\" hidden$=[[customAC]]><span class=\"material-icons\">edit</span> Edit</span>\n                  <span class=\"custom-val__option\" hidden$=[[!customAC]]><span class=\"material-icons\">restart_alt</span> Use Standard</span>\n                </div>\n\n                <div hidden$=[[!customAC]]>\n                  <vaadin-integer-field theme=\"mini\" value={{customACVal}} min=\"0\" max=\"40\" has-controls hidden$=\"[[!isEditMode]]\"></vaadin-integer-field>\n                  <div hidden$=\"[[isEditMode]]\">[[customACVal]]</div>\n                </div>\n                <div hidden$=[[customAC]]>[[ac]]</div>\n              </div>\n              <div class=\"basic-box__label\">AC</div>\n            </div>\n\n            <div class=\"basic-box basic-box--short initiative\" on-click=\"_roll\">\n              <div class=\"basic-box__value\">\n                <div class=\"custom-val__swap\" on-click=\"_swapCustomInitiative\" hidden$=[[!isEditMode]]>\n                  <span class=\"custom-val__option\" hidden$=[[customInitiative]]><span class=\"material-icons\">edit</span> Edit</span>\n                  <span class=\"custom-val__option\" hidden$=[[!customInitiative]]><span class=\"material-icons\">restart_alt</span> Use Standard</span>\n                </div>\n\n                <div hidden$=[[!customInitiative]]>\n                  <vaadin-integer-field theme=\"mini\" value={{customInitiativeVal}} min=\"-20\" max=\"20\" has-controls hidden$=\"[[!isEditMode]]\"></vaadin-integer-field>\n                  <div hidden$=\"[[isEditMode]]\">[[_plusMinus(customInitiativeVal)]][[customInitiativeVal]]</div>\n                </div>\n                <div hidden$=[[customInitiative]]>[[initiative]]</div>\n              </div>\n              <div class=\"basic-box__label\">Initiative</div>\n            </div>\n\n            <div class=\"basic-box basic-box--short speed\">\n              <div class=\"basic-box__value\" inner-h-t-m-l=[[speed]]></div>\n              <div class=\"basic-box__label\">Speed</div>\n            </div>\n\n            <!--  Short Rest -->\n            <!-- <dnd-button icon=\"watch\" class=\"rest-btn rest-btn--short\" background=\"var(--lumo-contrast-10pct)\" label=\"Short\" on-click=\"_triggerShortRest\"></dnd-button> -->\n\n            <!--  Long Rest -->\n            <!-- <dnd-button icon=\"watch_later\" class=\"rest-btn rest-btn--long\" background=\"var(--lumo-contrast-10pct)\" label=\"Long\" on-click=\"_triggerLongRest\"></dnd-button> -->\n\n            \n          </div>\n\n          <div class=\"stats\">\n            <!--  Attributes -->\n            <div class=\"attribute-wrap\">\n              <div class=\"stat-box\" on-click=\"_roll\">\n                <div class=\"stat-box__save\" enabled$=\"[[_contains(saves, 'str')]]\"></div>\n                <div class=\"stat-box__mod\">[[_mod(strAdj, str)]]</div>\n                <div class=\"stat-box__footer\">\n                  <vaadin-integer-field theme=\"mini\" value={{str}} min=\"1\" max=\"20\" has-controls label=\"Strength\" disabled$=\"[[!isEditMode]]\">\n                    <span class=\"stat-box__adj\" slot=\"suffix\">[[_adjustString(strAdj)]]</span>\n                  </vaadin-integer-field>\n                </div>\n              </div>\n              <div class=\"proficiencies\">\n                <div class=\"proficiency-item\" on-click=\"_roll\" enabled$=\"[[_strContains(skillProfs, 'athletics')]]\" expertise$=\"[[_strContainsTwo(skillProfs, 'athletics')]]\">Athletics</div>\n              </div>\n            </div>\n            <div class=\"attribute-wrap\">\n              <div class=\"stat-box\" on-click=\"_roll\">\n                <div class=\"stat-box__save\" enabled$=\"[[_contains(saves, 'dex')]]\"></div>\n                <div class=\"stat-box__mod\">[[_mod(dexAdj, dex)]]</div>\n                <div class=\"stat-box__footer\">\n                  <vaadin-integer-field theme=\"mini\" value={{dex}} min=\"1\" max=\"20\" has-controls label=\"Dexterity\" disabled$=\"[[!isEditMode]]\">\n                    <span class=\"stat-box__adj\" slot=\"suffix\">[[_adjustString(dexAdj)]]</span>\n                  </vaadin-integer-field>\n                </div>\n              </div>\n              <div class=\"proficiencies\">\n                <div class=\"proficiency-item\" on-click=\"_roll\" expertise$=\"[[_strContainsTwo(skillProfs, 'acrobatics')]]\" enabled$=\"[[_strContains(skillProfs, 'acrobatics')]]\">Acrobatics</div>\n                <div class=\"proficiency-item\" on-click=\"_roll\" expertise$=\"[[_strContainsTwo(skillProfs, 'sleight of hand')]]\" enabled$=\"[[_strContains(skillProfs, 'sleight of hand')]]\">Sleight of Hand</div>\n                <div class=\"proficiency-item\" on-click=\"_roll\" expertise$=\"[[_strContainsTwo(skillProfs, 'stealth')]]\" enabled$=\"[[_strContains(skillProfs, 'stealth')]]\">Stealth</div>\n              </div>\n            </div>\n            <div class=\"attribute-wrap\">\n              <div class=\"stat-box\" on-click=\"_roll\">\n                <div class=\"stat-box__save\" enabled$=\"[[_contains(saves, 'con')]]\"></div>\n                <div class=\"stat-box__mod\">[[_mod(conAdj, con)]]</div>\n                <div class=\"stat-box__footer\">\n                  <vaadin-integer-field theme=\"mini\" value={{con}} min=\"1\" max=\"20\" has-controls label=\"Constitution\" disabled$=\"[[!isEditMode]]\">\n                    <span class=\"stat-box__adj\" slot=\"suffix\">[[_adjustString(conAdj)]]</span>\n                  </vaadin-integer-field>\n                </div>\n              </div>\n              <div class=\"proficiencies\">\n              \n              </div>\n            </div>\n            <div class=\"attribute-wrap\">\n              <div class=\"stat-box\" on-click=\"_roll\">\n                <div class=\"stat-box__save\" enabled$=\"[[_contains(saves, 'int')]]\"></div>\n                <div class=\"stat-box__mod\">[[_mod(intAdj, int)]]</div>\n                <div class=\"stat-box__footer\">\n                  <vaadin-integer-field theme=\"mini\" value={{int}} min=\"1\" max=\"20\" has-controls label=\"Intelligence\" disabled$=\"[[!isEditMode]]\">\n                    <span class=\"stat-box__adj\" slot=\"suffix\">[[_adjustString(intAdj)]]</span>\n                  </vaadin-integer-field>\n                </div>\n              </div>\n              <div class=\"proficiencies\">\n                <div class=\"proficiency-item\" on-click=\"_roll\" expertise$=\"[[_strContainsTwo(skillProfs, 'arcana')]]\" enabled$=\"[[_strContains(skillProfs, 'arcana')]]\">Arcana</div>\n                <div class=\"proficiency-item\" on-click=\"_roll\" expertise$=\"[[_strContainsTwo(skillProfs, 'history')]]\" enabled$=\"[[_strContains(skillProfs, 'history')]]\">History</div>\n                <div class=\"proficiency-item\" on-click=\"_roll\" expertise$=\"[[_strContainsTwo(skillProfs, 'investigation')]]\" enabled$=\"[[_strContains(skillProfs, 'investigation')]]\">Investigation</div>\n                <div class=\"proficiency-item\" on-click=\"_roll\" expertise$=\"[[_strContainsTwo(skillProfs, 'nature')]]\" enabled$=\"[[_strContains(skillProfs, 'nature')]]\">Nature</div>\n                <div class=\"proficiency-item\" on-click=\"_roll\" expertise$=\"[[_strContainsTwo(skillProfs, 'religion')]]\" enabled$=\"[[_strContains(skillProfs, 'religion')]]\">Religion</div>\n              </div>\n            </div>\n            <div class=\"attribute-wrap\">\n              <div class=\"stat-box\" on-click=\"_roll\">\n                <div class=\"stat-box__save\" enabled$=\"[[_contains(saves, 'wis')]]\"></div>\n                <div class=\"stat-box__mod\">[[_mod(wisAdj, wis)]]</div>\n                <div class=\"stat-box__footer\">\n                  <vaadin-integer-field theme=\"mini\" value={{wis}} min=\"1\" max=\"20\" has-controls label=\"Wisdom\" disabled$=\"[[!isEditMode]]\">\n                    <span class=\"stat-box__adj\" slot=\"suffix\">[[_adjustString(wisAdj)]]</span>\n                  </vaadin-integer-field>\n                </div>\n              </div>\n              <div class=\"proficiencies\">\n                <div class=\"proficiency-item\" on-click=\"_roll\" expertise$=\"[[_strContainsTwo(skillProfs, 'animal handling')]]\" enabled$=\"[[_strContains(skillProfs, 'animal handling')]]\">Animal Handling</div>\n                <div class=\"proficiency-item\" on-click=\"_roll\" expertise$=\"[[_strContainsTwo(skillProfs, 'insight')]]\" enabled$=\"[[_strContains(skillProfs, 'insight')]]\">Insight</div>\n                <div class=\"proficiency-item\" on-click=\"_roll\" expertise$=\"[[_strContainsTwo(skillProfs, 'medicine')]]\" enabled$=\"[[_strContains(skillProfs, 'medicine')]]\">Medicine</div>\n                <div class=\"proficiency-item\" on-click=\"_roll\" expertise$=\"[[_strContainsTwo(skillProfs, 'perception')]]\" enabled$=\"[[_strContains(skillProfs, 'perception')]]\">Perception</div>\n                <div class=\"proficiency-item\" on-click=\"_roll\" expertise$=\"[[_strContainsTwo(skillProfs, 'survival')]]\" enabled$=\"[[_strContains(skillProfs, 'survival')]]\">Survival</div>\n              </div>\n            </div>\n            <div class=\"attribute-wrap\">\n              <div class=\"stat-box\" on-click=\"_roll\">\n                <div class=\"stat-box__save\" enabled$=\"[[_contains(saves, 'cha')]]\"></div>\n                <div class=\"stat-box__mod\">[[_mod(chaAdj, cha)]]</div>\n                <div class=\"stat-box__footer\">\n                  <vaadin-integer-field theme=\"mini\" value={{cha}} min=\"1\" max=\"20\" has-controls label=\"Charisma\" disabled$=\"[[!isEditMode]]\">\n                    <span class=\"stat-box__adj\" slot=\"suffix\">[[_adjustString(chaAdj)]]</span>\n                  </vaadin-integer-field>\n                </div>\n              </div>\n              <div class=\"proficiencies\">\n                <div class=\"proficiency-item\" on-click=\"_roll\" expertise$=\"[[_strContainsTwo(skillProfs, 'deception')]]\" enabled$=\"[[_strContains(skillProfs, 'deception')]]\">Deception</div>\n                <div class=\"proficiency-item\" on-click=\"_roll\" expertise$=\"[[_strContainsTwo(skillProfs, 'intimidation')]]\" enabled$=\"[[_strContains(skillProfs, 'intimidation')]]\">Intimidation</div>\n                <div class=\"proficiency-item\" on-click=\"_roll\" expertise$=\"[[_strContainsTwo(skillProfs, 'performance')]]\" enabled$=\"[[_strContains(skillProfs, 'performance')]]\">Performance</div>\n                <div class=\"proficiency-item\" on-click=\"_roll\" expertise$=\"[[_strContainsTwo(skillProfs, 'persuasion')]]\" enabled$=\"[[_strContains(skillProfs, 'persuasion')]]\">Persuasion</div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    `;\n  }\n}\n\ncustomElements.define(\"dnd-character-builder-attributes\", DndCharacterBuilderAttributes);"],"sourceRoot":""}