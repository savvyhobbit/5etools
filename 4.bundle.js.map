{"version":3,"sources":["webpack:///./js/bestiary.js","webpack:///./components/dnd-select-add.js","webpack:///./components/views/character/dnd-character-builder-suboptions.js"],"names":["getProfBonusFromCr","cr","CR_TO_PROF","SKILL_TO_ATB_ABV","athletics","acrobatics","stealth","arcana","history","investigation","nature","religion","insight","medicine","perception","survival","deception","intimidation","performance","persuasion","renderer","renderSelection","mon","rootEl","querySelector","innerHTML","renderStack","entryList","name","window","monsterName","source","type","_pTypes","asText","sourceJsonToAbv","sourceJsonToFull","sizeAbvToFull","size","getAbilityModifier","str","dex","con","int","wis","cha","saves","save","parentElement","style","display","skills","skill","obj","Object","keys","map","k","uppercaseFirst","join","parseInt","dmgvuln","vulnerable","dmgres","resist","dmgimm","immune","conimm","conditionImmune","senses","passive","toString","languages","undefined","crToXp","traits","trait","length","i","traitname","traittext","text","traittexthtml","renderedcount","n","firstsecond","spells","indexOf","replace","newTrait","spellLinks","querySelectorAll","spellLink","spellslist","split","encodeURIComponent","toLowerCase","actions","action","actionname","actiontext","actiontexthtml","newAction","reactions","reaction","reactionname","reactiontext","reactiontexthtml","newNonReaction","newReaction","legendaries","legendary","shouldAddCap","legendaryname","legendarytext","legendarytexthtml","newLegendary","trim","legendaryActions","legendaryName","newLegendaryCap","renderSection","sectionClass","sectionEntries","entries","recursiveEntryRender","newThing","renderSkillOrSaveRoller","itemName","profBonusString","profDiceString","isSave","lairActions","regionalEffects","element","$this","s","out","spl","match","skillName","skillString","b","bonus","Number","fromAbility","getAbilityModNumber","pB","expert","push","makeSkillRoller","pBonusStr","pDiceStr","makeSaveRoller","statPEls","statPEl","addNonD20Rollers","titleMaybe","attemptToGetTitle","mode","expectedPB","withoutPB","capture","dc","ele","substring","statsRollerEls","statsRollerEl","addEventListener","roll","rollResult","getAttribute","multi","res2","rolls","concat","total","outputRollResult","statsDCRollerEls","statsDCRollerEl","$ele","newResult","outputEl","MAX_ROLLS","children","remove","DndSelectAdd","test","Boolean","reflectToAttribute","value","options","Array","observer","model","String","addCallback","Function","choices","paren","label","placeholder","multiValue","disabled","this","listBox","$","select","render","isArray","choiceArray","v","findIndex","o","filter","selectedValues","super","ready","setTimeout","async","root","document","createElement","setAttribute","e","opened","wasPreviouslySelected","srcElement","splice","selectedOptions","option","item","optionName","appendChild","_assignMenuElement","valueUpdated","connectedCallback","selectChangeHandler","val","selected","disconnectedCallback","removeEventListener","a","result","customElements","define","DndCharacterBuilderSuboptions","storageKey","selectedItem","skillProfOptions","skillProfChoices","selectedSkillProfs","defaultSkillProfs","attributeOptions","attributeChoices","attributeMod","selectedAttributes","defaultAttributes","featOptions","featChoices","selectedFeat","isEditMode","characterChangeHandler","character","detail","set","updateOptions","editModeHandler","storageKeys","storedItem","isNaN","ability","choose","from","toUpperCase","count","amount","attribute","mod","skillProficiencies","skillProficiency","any","feats","dispatchEvent","CustomEvent","bubbles","composed","bind","attr","feat","arg","arguments","constructor","num","console","error"],"mappings":"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","file":"4.bundle.js","sourcesContent":["import { parseHTML, utils_makeRoller, jqAfter, jqPrepend} from \"../js/utils.js\";\r\nimport EntryRenderer from \"../util/entryrender.js\";\r\nimport Parser from \"../util/Parser.js\"\r\nimport droll from \"../lib/droll.js\"\r\n\r\nconst MAX_ROLLS = 5\r\n\r\nconst stats_wrapper = `\r\n\t<div class=\"margin-bottom_large stats-wrapper\">\r\n\t\t<div id=\"stats\" class=\"monster\">\r\n\t\t\t<div id=\"name\">\r\n\t\t\t\tName <span class=\"source\" title=\"Source book\">SRC</span>\r\n\t\t\t</div>\r\n\t\t\t<div id=\"sizetypealignment\">\r\n\t\t\t\t<span id=\"size\">Size</span> <span id=\"type\">type</span>, <span id=\"alignment\">alignment</span>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"divider\"></div>\r\n\t\t\t<div>\r\n\t\t\t\t<strong>Armor Class</strong> <span id=\"ac\">## (source)</span>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<strong>Hit Points</strong> <span id=\"hp\">hp</span>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<strong>Speed</strong> <span id=\"speed\">30 ft.</span>\r\n\t\t\t</div>\r\n\t\t\t<div id=\"abilitynames\">\r\n\t\t\t\t<div>STR</div>\r\n\t\t\t\t<div>DEX</div>\r\n\t\t\t\t<div>CON</div>\r\n\t\t\t\t<div>INT</div>\r\n\t\t\t\t<div>WIS</div>\r\n\t\t\t\t<div>CHA</div>\r\n\t\t\t</div>\r\n\t\t\t<div id=\"abilityscores\">\r\n\t\t\t\t<div id=\"str\"><span class=\"score\">10</span> (<span class=\"mod\">0</span>)</div>\r\n\t\t\t\t<div id=\"dex\"><span class=\"score\">10</span> (<span class=\"mod\">0</span>)</div>\r\n\t\t\t\t<div id=\"con\"><span class=\"score\">10</span> (<span class=\"mod\">0</span>)</div>\r\n\t\t\t\t<div id=\"int\"><span class=\"score\">10</span> (<span class=\"mod\">0</span>)</div>\r\n\t\t\t\t<div id=\"wis\"><span class=\"score\">10</span> (<span class=\"mod\">0</span>)</div>\r\n\t\t\t\t<div id=\"cha\"><span class=\"score\">10</span> (<span class=\"mod\">0</span>)</div>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<strong>Saving Throws</strong> <span id=\"saves\">Str +0</span>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<strong>Skills</strong> <span id=\"skills\">Perception +0</span>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<strong>Damage Vulnerabilities</strong> <span id=\"dmgvuln\">fire</span>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<strong>Damage Resistances</strong> <span id=\"dmgres\">cold</span>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<strong>Damage Immunities</strong> <span id=\"dmgimm\">lightning</span>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<strong>Condition Immunities</strong> <span id=\"conimm\">exhaustion</span>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<strong>Senses</strong> <span id=\"senses\">darkvision 30 ft.</span> passive Perception <span id=\"pp\">10</span>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<strong>Languages</strong> <span id=\"languages\">Common</span>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<strong>Challenge</strong> <span id=\"cr\">1</span> (<span id=\"xp\">450</span> XP)\r\n\t\t\t</div>\r\n\t\t\t<div id=\"traits\">\r\n\t\t\t</div>\r\n\t\t\t<div id=\"actions\">\r\n\t\t\t\t<span>Actions</span>\r\n\t\t\t</div>\r\n\t\t\t<div id=\"reactions\">\r\n\t\t\t\t<span>Reactions</span>\r\n\t\t\t</div>\r\n\t\t\t<div id=\"legendaries\">\r\n\t\t\t\t<span>Legendary Actions</span>\r\n\t\t\t</div>\r\n\t\t\t<div id=\"lairactions\">\r\n\t\t\t\t<span>Lair Actions</span>\r\n\t\t\t</div>\r\n\t\t\t<div id=\"regionaleffects\">\r\n\t\t\t\t<span>Regional Effects</span>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div id=\"output\"></div>\r\n\t</div>`;\r\n\r\nfunction objToTitleCaseStringWithCommas(obj) {\r\n  return Object.keys(obj)\r\n    .map(function(k) {\r\n      return k.uppercaseFirst() + \" \" + obj[k];\r\n    })\r\n    .join(\", \");\r\n}\r\nconst ATB_PROF_MODE = \"mode\";\r\nconst ATB_PROF_BONUS_STR = \"profBonusStr\";\r\nconst ATB_PROF_DICE_STR = \"profDiceStr\";\r\nconst PROF_MODE_BONUS = \"bonus\";\r\nconst PROF_MODE_DICE = \"dice\";\r\nfunction getProfBonusFromCr(cr) {\r\n  if (CR_TO_PROF[cr]) return CR_TO_PROF[cr];\r\n  return 0;\r\n}\r\nconst CR_TO_PROF = {\r\n  \"0\": 2,\r\n  \"1/8\": 2,\r\n  \"1/4\": 2,\r\n  \"1/2\": 2,\r\n  \"1\": 2,\r\n  \"2\": 2,\r\n  \"3\": 2,\r\n  \"4\": 2,\r\n  \"5\": 3,\r\n  \"6\": 3,\r\n  \"7\": 3,\r\n  \"8\": 3,\r\n  \"9\": 4,\r\n  \"10\": 4,\r\n  \"11\": 4,\r\n  \"12\": 4,\r\n  \"13\": 5,\r\n  \"14\": 5,\r\n  \"15\": 5,\r\n  \"16\": 5,\r\n  \"17\": 6,\r\n  \"18\": 6,\r\n  \"19\": 6,\r\n  \"20\": 6,\r\n  \"21\": 7,\r\n  \"22\": 7,\r\n  \"23\": 7,\r\n  \"24\": 7,\r\n  \"25\": 8,\r\n  \"26\": 8,\r\n  \"27\": 8,\r\n  \"28\": 8,\r\n  \"29\": 9,\r\n  \"30\": 9\r\n};\r\nconst SKILL_TO_ATB_ABV = {\r\n  athletics: \"dex\",\r\n  acrobatics: \"dex\",\r\n  \"sleight of hand\": \"dex\",\r\n  stealth: \"dex\",\r\n  arcana: \"int\",\r\n  history: \"int\",\r\n  investigation: \"int\",\r\n  nature: \"int\",\r\n  religion: \"int\",\r\n  \"animal handling\": \"wis\",\r\n  insight: \"wis\",\r\n  medicine: \"wis\",\r\n  perception: \"wis\",\r\n  survival: \"wis\",\r\n  deception: \"cha\",\r\n  intimidation: \"cha\",\r\n  performance: \"cha\",\r\n  persuasion: \"cha\"\r\n};\r\nfunction getAttribute(skill) {\r\n  return SKILL_TO_ATB_ABV[skill.toLowerCase().trim()];\r\n}\r\n\r\nconst renderer = new EntryRenderer();\r\nfunction renderSelection(mon, rootEl) {\r\n  rootEl.querySelector(\".selection-wrapper\").innerHTML = stats_wrapper;\r\n\tlet renderStack = [];\r\n\tlet entryList = {};\r\n\tvar name = mon.name;\r\n\twindow.monsterName = name;\r\n\tvar source = mon.source;\r\n\tvar type = mon._pTypes.asText;\r\n\tsource = Parser.sourceJsonToAbv(source);\r\n\r\n\trootEl.querySelector(\"#name\").innerHTML = (\r\n\t\t`<span class=\"stats-source source${source}\" title=\"${Parser.sourceJsonToFull(source)}\">${Parser.sourceJsonToAbv(source)}</span>`\r\n\t);\r\n\trootEl.querySelector(\"#size\").innerHTML = (Parser.sizeAbvToFull(mon.size));\r\n\trootEl.querySelector(\"#type\").innerHTML = (type);\r\n\trootEl.querySelector(\"#alignment\").innerHTML = (mon.alignment);\r\n\trootEl.querySelector(\"#ac\").innerHTML = (mon.ac);\r\n\trootEl.querySelector(\"#hp\").innerHTML = (mon.hp);\r\n\trootEl.querySelector(\"#speed\").innerHTML = (mon.speed);\r\n\trootEl.querySelector(\"#str span.score\").innerHTML = (mon.str);\r\n\trootEl.querySelector(\"#str span.mod\").innerHTML = (Parser.getAbilityModifier(mon.str));\r\n\trootEl.querySelector(\"#dex span.score\").innerHTML = (mon.dex);\r\n\trootEl.querySelector(\"#dex span.mod\").innerHTML = (Parser.getAbilityModifier(mon.dex));\r\n\trootEl.querySelector(\"#con span.score\").innerHTML = (mon.con);\r\n\trootEl.querySelector(\"#con span.mod\").innerHTML = (Parser.getAbilityModifier(mon.con));\r\n\trootEl.querySelector(\"#int span.score\").innerHTML = (mon.int);\r\n\trootEl.querySelector(\"#int span.mod\").innerHTML = (Parser.getAbilityModifier(mon.int));\r\n\trootEl.querySelector(\"#wis span.score\").innerHTML = (mon.wis);\r\n\trootEl.querySelector(\"#wis span.mod\").innerHTML = (Parser.getAbilityModifier(mon.wis));\r\n\trootEl.querySelector(\"#cha span.score\").innerHTML = (mon.cha);\r\n\trootEl.querySelector(\"#cha span.mod\").innerHTML = (Parser.getAbilityModifier(mon.cha));\r\n\r\n\tvar saves = mon.save;\r\n\tif (saves) {\r\n\t\trootEl.querySelector(\"#saves\").parentElement.style.display = 'block';\r\n\t\trootEl.querySelector(\"#saves\").innerHTML = (saves);\r\n\t} else {\r\n\t\trootEl.querySelector(\"#saves\").parentElement.style.display = 'none';\r\n\t}\r\n\r\n\tvar skills = mon.skill;\r\n\tlet perception = 0;\r\n\tif (skills) {\r\n\t\trootEl.querySelector(\"#skills\").parentElement.style.display = 'block';\r\n\t\trootEl.querySelector(\"#skills\").innerHTML = (objToTitleCaseStringWithCommas(skills));\r\n\t\tif (skills.perception) perception = parseInt(skills.perception);\r\n\t} else {\r\n\t\trootEl.querySelector(\"#skills\").parentElement.style.display = 'none';\r\n\t}\r\n\r\n\tvar dmgvuln = mon.vulnerable;\r\n\tif (dmgvuln) {\r\n\t\trootEl.querySelector(\"#dmgvuln\").parentElement.style.display = 'block';\r\n\t\trootEl.querySelector(\"#dmgvuln\").innerHTML = (dmgvuln);\r\n\t} else {\r\n\t\trootEl.querySelector(\"#dmgvuln\").parentElement.style.display = 'none';\r\n\t}\r\n\r\n\tvar dmgres = mon.resist;\r\n\tif (dmgres) {\r\n\t\trootEl.querySelector(\"#dmgres\").parentElement.style.display = 'block';\r\n\t\trootEl.querySelector(\"#dmgres\").innerHTML = (dmgres);\r\n\t} else {\r\n\t\trootEl.querySelector(\"#dmgres\").parentElement.style.display = 'none';\r\n\t}\r\n\r\n\tvar dmgimm = mon.immune;\r\n\tif (dmgimm) {\r\n\t\trootEl.querySelector(\"#dmgimm\").parentElement.style.display = 'block';\r\n\t\trootEl.querySelector(\"#dmgimm\").innerHTML = (dmgimm);\r\n\t} else {\r\n\t\trootEl.querySelector(\"#dmgimm\").parentElement.style.display = 'none';\r\n\t}\r\n\r\n\tvar conimm = mon.conditionImmune;\r\n\tif (conimm) {\r\n\t\trootEl.querySelector(\"#conimm\").parentElement.style.display = 'block';\r\n\t\trootEl.querySelector(\"#conimm\").innerHTML = (conimm);\r\n\t} else {\r\n\t\trootEl.querySelector(\"#conimm\").parentElement.style.display = 'none';\r\n\t}\r\n\r\n\tvar senses = mon.senses;\r\n\tif (senses) {\r\n\t\trootEl.querySelector(\"#senses\").innerHTML = (senses + \", \");\r\n\t} else {\r\n\t\trootEl.querySelector(\"#senses\").innerHTML = (\"\");\r\n\t}\r\n\r\n\tvar passive = mon.passive || (10 + perception).toString;\r\n\trootEl.querySelector(\"#pp\").innerHTML = (passive)\r\n\r\n\tvar languages = mon.languages;\r\n\tif (languages) {\r\n\t\trootEl.querySelector(\"#languages\").innerHTML = (languages);\r\n\t} else {\r\n\t\trootEl.querySelector(\"#languages\").innerHTML = (\"\\u2014\");\r\n\t}\r\n\r\n\tvar cr = mon.cr === undefined ? \"Unknown\" : mon.cr;\r\n\trootEl.querySelector(\"#cr\").innerHTML = (cr);\r\n\trootEl.querySelector(\"#xp\").innerHTML = (Parser.crToXp(cr));\r\n\r\n\tvar traits = mon.trait;\r\n\trootEl.querySelector(\"#traits\").style.display = 'none';\r\n\r\n\tif (traits && traits.length > 0) {\r\n\t\trootEl.querySelector(\"#traits\").style.display = 'block';\r\n\t\tfor (var i = traits.length - 1; i >= 0; i--) {\r\n\t\t\tvar traitname = traits[i].name;\r\n\t\t\tvar traittext = traits[i].text;\r\n\t\t\tvar traittexthtml = \"\";\r\n\t\t\tvar renderedcount = 0;\r\n\t\t\tfor (var n = 0; n < traittext.length; n++) {\r\n\t\t\t\tif (!traittext[n]) continue;\r\n\r\n\t\t\t\trenderedcount++;\r\n\t\t\t\tvar firstsecond = \"\";\r\n\t\t\t\tif (renderedcount === 1) firstsecond = \"first \";\r\n\t\t\t\tif (renderedcount === 2) firstsecond = \"second \";\r\n\r\n\t\t\t\tvar spells = \"\";\r\n\t\t\t\tif (traitname.indexOf(\"Spellcasting\") !== -1 && traittext[n].indexOf(\": \") !== -1) spells = \"spells\";\r\n\t\t\t\tif (traitname.indexOf(\"Variant\") !== -1 && traitname.indexOf(\"Coven\") !== -1 && traittext[n].indexOf(\": \") !== -1) spells = \"spells\";\r\n\r\n\t\t\t\ttraittexthtml = traittexthtml + \"<p class='\" + firstsecond + spells + \"'>\" + traittext[n].replace(/\\u2022\\s?(?=C|\\d|At\\swill)/g, \"\")+\"</p>\";\r\n\t\t\t}\r\n\t\t\tconst newTrait = parseHTML(\"<div class='trait'><div class='trait\" + i + \"'><span class='name'>\" + traitname + \".</span> \" + traittexthtml + \"</div></div>\");\r\n\t\t\tjqAfter(rootEl.querySelector(\"#traits\"), newTrait);\r\n\r\n\t\t\t// parse spells, make hyperlinks\r\n\t\t\tconst spellLinks = rootEl.querySelectorAll('.trait div p.spells');\r\n\t\t\tfor (let spellLink of spellLinks) {\r\n\t\t\t\tlet spellslist = spellLink.innerHTML;\r\n\t\t\t\tif (spellslist[0] === \"*\") return;\r\n\t\t\t\tspellslist = spellslist.split(\": \")[1].split(/\\, (?!\\+|\\dd|appears|inside gems)/g);\r\n\t\t\t\tfor (let i = 0; i < spellslist.length; i++) {\r\n\t\t\t\t\tspellslist[i] = \"<a href='#/spells/\" + encodeURIComponent((spellslist[i].replace(/(\\*)| \\(([^\\)]+)\\)/g, \"\"))).toLowerCase().replace(\"'\", \"%27\") + \"_\" + \"phb'>\" + spellslist[i] + \"</a>\";\r\n\t\t\t\t\tif (i !== spellslist.length - 1) spellslist[i] = spellslist[i] + \", \";\r\n\t\t\t\t}\r\n\r\n\t\t\t\tspellLink.innerHTML = (spellLink.innerHTML.split(\": \")[0] + \": \" + spellslist.join(\"\"));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconst actions = mon.action;\r\n\r\n\tif (actions && actions.length) for (let i = actions.length - 1; i >= 0; i--) {\r\n\t\tconst actionname = actions[i].name;\r\n\t\tconst actiontext = actions[i].text;\r\n\t\tlet actiontexthtml = \"\";\r\n\t\tlet renderedcount = 0;\r\n\t\tfor (let n = 0; n < actiontext.length; n++) {\r\n\t\t\tif (!actiontext[n]) continue;\r\n\r\n\t\t\trenderedcount++;\r\n\t\t\tlet firstsecond = \"\";\r\n\t\t\tif (renderedcount === 1) firstsecond = \"first \";\r\n\t\t\tif (renderedcount === 2) firstsecond = \"second \";\r\n\r\n\t\t\tactiontexthtml = actiontexthtml + \"<p class='\"+firstsecond+\"'>\"+actiontext[n]+\"</p>\";\r\n\t\t}\r\n\t\tconst newAction = parseHTML(\"<div class='action'><div class='action\"+i+\"'><span class='name'>\"+actionname+\".</span> \"+actiontexthtml+\"</div></div>\")\r\n\t\tjqAfter(rootEl.querySelector('#actions'), newAction);\r\n\t}\r\n\r\n\tconst reactions = mon.reaction;\r\n\trootEl.querySelector(\"#reactions\").style.display = 'none';\r\n\r\n\tif (reactions && (reactions.text || reactions.length)) {\r\n\r\n\t\trootEl.querySelector(\"#reactions\").style.display = 'block';\r\n\r\n\t\tif (!reactions.length) {\r\n\t\t\tconst reactionname = reactions.name;\r\n\t\t\tconst reactiontext = reactions.text;\r\n\t\t\tlet reactiontexthtml = \"\";\r\n\t\t\tlet renderedcount = 0;\r\n\t\t\tfor (let n = 0; n < reactiontext.length; n++) {\r\n\t\t\t\tif (!reactiontext[n]) continue;\r\n\r\n\t\t\t\trenderedcount++;\r\n\t\t\t\tlet firstsecond = \"\";\r\n\t\t\t\tif (renderedcount === 1) firstsecond = \"first \";\r\n\t\t\t\tif (renderedcount === 2) firstsecond = \"second \";\r\n\r\n\t\t\t\treactiontexthtml = reactiontexthtml + \"<p class='\" + firstsecond + \"'>\" + reactiontext[n] + \"</p>\";\r\n\t\t\t}\r\n\r\n\t\t\tconst newNonReaction = parseHTML(\"<div class='reaction'><div class='reaction0'><span class='name'>\" + reactionname + \".</span> \" + reactiontexthtml + \"</div></div>\")\r\n\t\t\tjqAfter(rootEl.querySelector(\"#reactions\"), newNonReaction);\r\n\t\t}\r\n\r\n\t\tif (reactions.length) for (let i = reactions.length - 1; i >= 0; i--) {\r\n\t\t\tconst reactionname = reactions[i].name;\r\n\r\n\t\t\tconst reactiontext = reactions[i].text;\r\n\t\t\tlet reactiontexthtml = \"<span>\" + reactiontext + \"</span>\";\r\n\t\t\tfor (let n = 1; n < reactiontext.length; n++) {\r\n\t\t\t\tif (!reactiontext[n]) continue;\r\n\t\t\t\treactiontexthtml = reactiontexthtml + \"<p>\" + reactiontext[n] + \"</p>\";\r\n\t\t\t}\r\n\r\n\t\t\tconst newReaction = parseHTML(\"<div class='reaction'><div class='reaction\" + i + \"'><span class='name'>\" + reactionname + \".</span> \" + reactiontexthtml + \"</div></div>\")\r\n\t\t\tjqAfter(rootEl.querySelector(\"#reactions\"), newReaction);\r\n\t\t}\r\n\t}\r\n\r\n\tconst legendaries = mon.legendary;\r\n\trootEl.querySelector(\"#legendaries\").style.display = 'none';\r\n\tif (legendaries) {\r\n\t\trootEl.querySelector(\"#legendaries\").style.display = 'block';\r\n\t\tlet shouldAddCap = legendaries.length > 0;\r\n\t\tfor (let i = legendaries.length - 1; i >= 0; i--) {\r\n\t\t\tconst legendaryname = legendaries[i].name ? legendaries[i].name + \".\" : \"\";\r\n\t\t\tconst legendarytext = legendaries[i].text;\r\n\t\t\tlet legendarytexthtml = \"\";\r\n\t\t\tlet renderedcount = 0;\r\n\t\t\tfor (let n = 0; n < legendarytext.length; n++) {\r\n\t\t\t\tif (!legendarytext[n]) continue;\r\n\t\t\t\trenderedcount++;\r\n\t\t\t\tlet firstsecond = \"\";\r\n\t\t\t\tif (renderedcount === 1) firstsecond = \"first \";\r\n\t\t\t\tif (renderedcount === 2) firstsecond = \"second \";\r\n\t\t\t\tlegendarytexthtml += `<p class='${firstsecond}'>${legendarytext[n]}</p>`;\r\n\t\t\t}\r\n\t\t\tconst newLegendary = parseHTML(`<div class='legendary'><div class='legendary'><span class='name'>${legendaryname}</span> ${legendarytexthtml}</div></div>`)\r\n\t\t\tjqAfter(rootEl.querySelector(\"#legendaries\"), newLegendary);\r\n\t\t\tif (legendaryname.trim() === '' || legendaryname.indexOf('Legendary Actions') > -1) {\r\n\t\t\t\tshouldAddCap = false;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (shouldAddCap) {\r\n\t\t\tconst legendaryActions = mon.legendaryActions || 3;\r\n\t\t\tconst legendaryName = name.split(\",\");\r\n\t\t\tconst newLegendaryCap = parseHTML(`<div class='legendary'><div class='legendary'><span class='name'></span> <span>${legendaryName[0]} can take ${legendaryActions} legendary action${legendaryActions > 1 ? \"s\" : \"\"}, choosing from the options below. Only one legendary action can be used at a time and only at the end of another creature's turn. ${legendaryName[0]} regains spent legendary actions at the start of its turn.</span></div></div>`)\r\n\t\t\tjqAfter(rootEl.querySelector(\"#legendaries\"), newLegendaryCap);\r\n\t\t}\r\n\t}\r\n\r\n\trootEl.querySelector(\"#lairactions\").style.display = 'none';\r\n\trootEl.querySelector(\"#regionaleffects\").style.display = 'none';\r\n\tif (mon.lairActions) renderSection(\"lairaction\", mon.lairActions);\r\n\tif (mon.regionalEffects) renderSection(\"regionaleffect\", mon.regionalEffects);\r\n\r\n\tfunction renderSection(sectionClass, sectionEntries) {\r\n\t\trootEl.querySelector(`#${sectionClass}s`).style.display = 'block';\r\n\t\tentryList = {type: \"entries\", entries: sectionEntries};\r\n\t\trenderStack = [];\r\n\t\trenderer.recursiveEntryRender(entryList, renderStack);\r\n\t\tconst newThing = parseHTML(`<div class='${sectionClass}'><div class='legendary'>${utils_makeRoller(renderStack.join(\"\"))}</div></div>`)\r\n\t\tjqAfter(rootEl.querySelector(`#${sectionClass}s`), newThing);\r\n\t}\r\n\r\n\tif (mon.skill) {\r\n\t\tmakeSkillRoller(rootEl.querySelector(\"#skills\"));\r\n\t}\r\n\tif (mon.save) {\r\n\t\tmakeSaveRoller(rootEl.querySelector(\"#saves\"));\r\n\t}\r\n\tfunction makeSkillRoller(element) {\r\n\t\tconst $this = element;\r\n\r\n\t\tconst re = /,\\s*(?![^()]*\\))/g; // Don't split commas within parentheses\r\n\t\tconst skills = $this.innerHTML.split(re).map(s => s.trim());\r\n\t\tconst out = [];\r\n\r\n\t\tskills.map(s => {\r\n\t\t\tconst re = /(\\-|\\+)?\\d+|(?:[^\\+]|\\n(?!\\+))+/g; // Split before and after each bonus\r\n\t\t\tconst spl = s.match(re);\r\n\r\n\t\t\tconst skillName = spl[0].trim();\r\n\r\n\t\t\tvar skillString = \"\";\r\n\t\t\tspl.map(b => {\r\n\t\t\t\tconst re = /(\\-|\\+)?\\d+/;\r\n\r\n\t\t\t\tif (b.match(re)){\r\n\t\t\t\t\tconst bonus = Number(b);\r\n\t\t\t\t\tconst fromAbility = Parser.getAbilityModNumber(mon[getAttribute(skillName)]);\r\n\t\t\t\t\tconst expectedPB = getProfBonusFromCr(mon.cr);\r\n\t\t\t\t\tconst pB = bonus - fromAbility;\r\n\t\t\r\n\t\t\t\t\tconst expert = (pB === expectedPB * 2) ? 2 : 1;\r\n\t\t\t\t\tconst pBonusStr = `+${bonus}`;\r\n\t\t\t\t\tconst pDiceStr = `${expert}d${pB*(3-expert)}${fromAbility >= 0 ? \"+\" : \"\"}${fromAbility}`;\r\n\t\t\r\n\t\t\t\t\tskillString += renderSkillOrSaveRoller(skillName, pBonusStr, pDiceStr, false);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tskillString += b;\r\n\t\t\t\t}\t\t\t\t\r\n\t\t\t});\r\n\r\n\t\t\tout.push(skillString);\r\n\t\t});\t\t\r\n\r\n\t\t$this.innerHTML = (out.join(\", \"));\r\n\t}\r\n\tfunction makeSaveRoller(element) {\r\n\t\tconst $this = element;\r\n\t\tconst saves = $this.innerHTML.split(\",\").map(s => s.trim());\r\n\t\tconst out = [];\r\n\t\tsaves.map(s => {\r\n\t\t\tconst spl = s.split(\"+\").map(s => s.trim());\r\n\t\t\tconst bonus = Number(spl[1]);\r\n\t\t\tconst fromAbility = Parser.getAbilityModNumber(mon[spl[0].toLowerCase()]);\r\n\t\t\tconst expectedPB = getProfBonusFromCr(mon.cr);\r\n\t\t\tconst pB = bonus - fromAbility;\r\n\r\n\t\t\tconst expert = (pB === expectedPB * 2) ? 2 : 1;\r\n\t\t\tconst pBonusStr = `+${bonus}`;\r\n\t\t\tconst pDiceStr = `${expert}d${pB*(3-expert)}${fromAbility >= 0 ? \"+\" : \"\"}${fromAbility}`;\r\n\r\n\t\t\tout.push(spl[0] + ' ' + renderSkillOrSaveRoller(spl[0], pBonusStr, pDiceStr, true));\r\n\t\t});\r\n\t\t$this.innerHTML = (out.join(\", \"));\r\n\t}\r\n\tfunction renderSkillOrSaveRoller(itemName, profBonusString, profDiceString, isSave) {\r\n\t\tconst mode = PROF_MODE_BONUS;\r\n\t\treturn `<span class='roller' title=\"${itemName} ${isSave ? \" save\" : \"\"}\" data-roll-alt=\"1d20;${profDiceString}\" data-roll='1d20${profBonusString}' ${ATB_PROF_MODE}='${mode}' ${ATB_PROF_DICE_STR}=\"+${profDiceString}\" ${ATB_PROF_BONUS_STR}=\"${profBonusString}\">${profBonusString}</span>`;\r\n\t}\r\n\r\n\t// inline rollers\r\n\tconst statPEls = rootEl.querySelectorAll(\"#stats p\");\r\n\tfor (let statPEl of statPEls) {\r\n\t\taddNonD20Rollers(statPEl);\r\n\r\n\t\t// add proficiency dice stuff for attack rolls, since those _generally_ have proficiency\r\n\t\t// this is not 100% accurate; for example, ghouls don't get their prof bonus on bite attacks\r\n\t\t// fixing it would probably involve machine learning though; we need an AI to figure it out on-the-fly\r\n\t\t// (Siri integration forthcoming)\r\n\t\tconst titleMaybe = attemptToGetTitle(statPEl);\r\n\t\tconst mode = PROF_MODE_BONUS;\r\n\r\n\t\tstatPEl.innerHTML = (statPEl.innerHTML.replace(/(\\-|\\+)?\\d+(?= to hit)/g, function(match) {\r\n\t\t\tconst bonus = Number(match);\r\n\r\n\t\t\tconst expectedPB = getProfBonusFromCr(mon.cr);\r\n\t\t\tconst withoutPB = bonus - expectedPB;\r\n\r\n\t\t\tif (expectedPB > 0) {\r\n\t\t\t\tconst profDiceString = `1d${expectedPB*2}${withoutPB >= 0 ? \"+\" : \"\"}${withoutPB}`;\r\n\r\n\t\t\t\treturn `<span class='roller' ${titleMaybe ? `title=\"${titleMaybe}\"` : \"\"} data-roll-alt='1d20;${profDiceString}' data-roll='1d20${match}' ${ATB_PROF_MODE}='${mode}' ${ATB_PROF_DICE_STR}=\"+${profDiceString}\" ${ATB_PROF_BONUS_STR}=\"${match}\">${match}</span>`\r\n\t\t\t} else {\r\n\t\t\t\treturn `<span class='roller' data-roll='1d20${match}'>${match}</span>`; // if there was no proficiency bonus to work with, fall back on this\r\n\t\t\t}\r\n\t\t}));\r\n\r\n\t\tstatPEl.innerHTML = (statPEl.innerHTML.replace(/DC\\s*(\\d+)/g, function(match, capture) {\r\n\t\t\tconst dc = Number(capture);\r\n\r\n\t\t\tconst expectedPB = getProfBonusFromCr(mon.cr);\r\n\r\n\t\t\tif (expectedPB > 0) {\r\n\t\t\t\tconst withoutPB = dc - expectedPB;\r\n\t\t\t\tconst profDiceString = `1d${(expectedPB*2)}${withoutPB >= 0 ? \"+\" : \"\"}${withoutPB}`;\r\n\r\n\t\t\t\treturn `DC <span class=\"dc-roller\" ${titleMaybe ? `title=\"${titleMaybe}\"` : \"\"} ${ATB_PROF_MODE}=\"${mode}\" data-roll-alt=\"${profDiceString}\" data-bonus=\"${capture}\" ${ATB_PROF_DICE_STR}=\"+${profDiceString}\" ${ATB_PROF_BONUS_STR}=\"${capture}\">${capture}</span>`;\r\n\t\t\t} else {\r\n\t\t\t\treturn match; // if there was no proficiency bonus to work with, fall back on this\r\n\t\t\t}\r\n\t\t}));\r\n\t}\r\n\taddNonD20Rollers(rootEl.querySelector(\"#stats #hp\"));\r\n\tfunction addNonD20Rollers (ele) {\r\n\t\tele.innerHTML = ele.innerHTML.replace(/\\d+d\\d+(\\s?(\\-|\\+)\\s?\\d+\\s?)?/g, function(match) {\r\n      const titleMaybe = attemptToGetTitle(ele);\r\n      return `<span class='roller' ${titleMaybe ? `title=\"${titleMaybe}\"` : \"\"} data-roll='${match}'>${match}</span>`;\r\n    });\r\n\t}\r\n\tfunction attemptToGetTitle(ele) {\r\n\t\tlet titleMaybe = ele.parentElement.querySelector(\".name\");\r\n\t\tif (titleMaybe) {\r\n\t\t\ttitleMaybe = titleMaybe.innerHTML;\r\n\t\t\tif (titleMaybe) {\r\n\t\t\t\ttitleMaybe = titleMaybe.substring(0, titleMaybe.length-1).trim();\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn titleMaybe;\r\n\t}\r\n\r\n\t//$(\".spells span.roller\").contents().unwrap();\r\n\tlet statsRollerEls = rootEl.querySelectorAll(\"#stats span.roller\");\r\n\tfor (let statsRollerEl of statsRollerEls) {\r\n\t\tstatsRollerEl.addEventListener('click', () => {\r\n\t\t\tconst $this = statsRollerEl;\r\n\t\t\tlet roll;\r\n\t\t\tlet rollResult;\r\n\t\t\tif ($this.getAttribute(ATB_PROF_MODE) === PROF_MODE_DICE) {\r\n\t\t\t\troll = $this.getAttribute(\"data-roll-alt\").replace(/\\s+/g, \"\");\r\n\t\t\t\t// hacks because droll doesn't support e.g. \"1d20+1d4+2\" :joy: :ok_hand:\r\n\t\t\t\tconst multi = roll.split(\";\");\r\n\t\t\t\troll = roll.replace(\";\", \"+\");\r\n\t\t\t\trollResult = droll.roll(multi[0]);\r\n\t\t\t\tconst res2 = droll.roll(multi[1]);\r\n\t\t\t\trollResult.rolls = rollResult.rolls.concat(res2.rolls);\r\n\t\t\t\trollResult.total += res2.total;\r\n\t\t\t} else {\r\n\t\t\t\troll = $this.getAttribute(\"data-roll\").replace(/\\s+/g, \"\");\r\n\t\t\t\trollResult = droll.roll(roll);\r\n\t\t\t}\r\n\t\t\toutputRollResult($this, roll, rollResult);\r\n\t\t});\r\n\t}\r\n\t\r\n\tlet statsDCRollerEls = rootEl.querySelectorAll(\"#stats span.roller\");\r\n\tfor (let statsDCRollerEl of statsDCRollerEls) {\r\n\t\tconst $this = statsDCRollerEl;\r\n    let roll;\r\n    let rollResult;\r\n    if ($this.getAttribute(ATB_PROF_MODE) === PROF_MODE_DICE) {\r\n      roll = $this.getAttribute(\"data-roll-alt\").replace(/\\s+/g, \"\");\r\n      rollResult = droll.roll(roll);\r\n      outputRollResult($this, roll, rollResult);\r\n    }\r\n\t}\r\n\r\n\tfunction outputRollResult($ele, roll, rollResult) {\r\n\t\tconst name = window.monsterName;\r\n\t\tconst newResult = parseHTML(\r\n      `<span>${name}: <em>${roll}</em> rolled ${\r\n        $ele.getAttribute(\"title\") ? `${$ele.getAttribute(\"title\")} ` : \"\"\r\n      }for <strong>${rollResult.total}</strong> (<em>${rollResult.rolls.join(\", \")}</em>)<br></span>`\r\n\t\t);\r\n\t\tconst outputEl = rootEl.querySelector(\"#output\");\r\n\t\tjqPrepend(outputEl, newResult);\r\n\t\toutputEl.style.display = 'block';\r\n\t\tif (outputEl.children.length === MAX_ROLLS + 1) {\r\n\t\t\toutputEl.children[MAX_ROLLS].remove();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport { renderSelection, SKILL_TO_ATB_ABV };\r\n","import { PolymerElement, html } from '@polymer/polymer';\nimport { mergeFeature } from '../util/charBuilder';\nimport { jqEmpty, util_capitalizeAll } from \"../js/utils\";\nimport \"@vaadin/vaadin-select\";\nimport {loadModel} from \"../util/data\";\n\nclass DndSelectAdd extends PolymerElement {\n  static get properties() {\n    return {\n      test: {\n        type: Boolean,\n        reflectToAttribute: true,\n        value: false\n      },\n      options: {\n        type: Array,\n        observer: \"optionsUpdated\"\n      },\n      model: {\n        type: String\n      },\n      addCallback: {\n        type: Function\n      },\n      value: {\n        type: String,\n        value: \"\",\n        observer: \"valueUpdated\"\n      },\n      choices: {\n        type: Number,\n        observer: \"choicesUpdated\"\n      },\n      paren: {\n        type: String,\n      },\n      label: {\n        type: String\n      },\n      placeholder: {\n        type: String,\n      },\n      multiValue: {\n        type: String,\n        value: \"\"\n      },\n      disabled: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      }\n    }\n  }\n\n  choicesUpdated() {\n    if (this.listBox) {\n      this.listBox.remove();\n      delete this.listBox;\n    }\n    this.$.select.render();\n  }\n\n  optionsUpdated() {\n    if (this.listBox) {\n      this.listBox.remove();\n      delete this.listBox;\n    }\n    this.$.select.render();\n  }\n\n  valueUpdated() {\n    if (this.choices) {\n      if (Array.isArray(this.value) && this.options) {\n        const choiceArray = this.value\n          .map(v => {\n            if (this.options.indexOf(v) !== -1) {\n              return this.options.indexOf(v);\n            } else {\n              return this.options.findIndex((o) => {\n                return o.name === v.name && o.source === v.source;\n              });\n            }\n          })\n          .filter(v => { return v !== -1 });\n\n        if (this.listBox) {\n          this.listBox.selectedValues = choiceArray;\n        }\n        this.multiValue = choiceArray.map(i => {\n          let value = this.options[i];\n          return value.name ? value.name : util_capitalizeAll(value) \n        }).join(\", \");\n      } else {\n        if (this.listBox) {\n          this.listBox.selectedValues = [];\n        }\n        this.multiValue = \"\";\n      }\n    } else {\n      if (this.value && this.options) {\n        if (this.value.source) {\n          this.$.select.value = this.options.findIndex(i => { return i.name === this.value.name && i.source === this.value.source || i === this.value.name }) + \"\";\n        } else if (this.value.name) {\n          this.$.select.value = this.options.findIndex(i => { return i.name === this.value.name || i === this.value.name }) + \"\";\n        } else {\n          this.$.select.value = this.options.findIndex(i => { return i.name === this.value || i === this.value }) + \"\";\n        }\n      } else {\n        this.$.select.value = \"\";\n      }\n    }\n  }\n\n  ready() {\n    super.ready();\n\n    setTimeout(async () => {\n      if (this.model) {\n        this.options = await loadModel(this.model);\n      }\n\n      this.$.select.renderer = (root, select) => {\n        if (!this.listBox) {\n          this.listBox = document.createElement('vaadin-list-box');\n\n          // setting up for multi-select\n          if (this.choices) {\n            this.listBox.setAttribute(\"multiple\", true);\n\n            this.listBox.addEventListener(\"click\", (e) => {\n              select.opened = true;\n              let wasPreviouslySelected = e.srcElement.getAttribute(\"selected\") !== null\n              setTimeout(() => {\n                if (this.listBox.selectedValues.length > this.choices\n                    && !wasPreviouslySelected) {\n                  this.listBox.selectedValues.splice(this.listBox.selectedValues.length - 2, 1)\n                }\n                let selectedOptions = this.listBox.selectedValues.map(v => { return this.options[v] });\n                this.multiValue = selectedOptions.map(o => { return o.name ? o.name : util_capitalizeAll(o) }).join(', ');\n                if (this.addCallback) {\n                  this.addCallback(selectedOptions);\n                }\n              }, 0);\n            });\n\n          }\n\n          // Adding options\n          if (this.options && this.options.length) {\n            for (let i = 0; i < this.options.length; i ++) {\n              const option = this.options[i],\n                item = document.createElement('vaadin-item');\n              const optionName = option.name || util_capitalizeAll(option);\n              item.innerHTML = `<span>${optionName}</span> ${option.name ? `<span style='font-size: 14px;color: var(--lumo-primary-color-50pct);'>${option.source}</span>` : ''}`\n              item.setAttribute(\"value\", i);\n              this.listBox.appendChild(item);\n            }\n          }\n          root.appendChild(this.listBox);\n          this.$.select._assignMenuElement();\n\n          this.valueUpdated();\n        }\n      };\n    }, 0);\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    this.selectChangeHandler = () => {\n      const val = this.$.select.value;\n      if (val) {\n        if (!this.choices) {\n          const selected = this.options[val];\n          if (this.addCallback) {\n            this.addCallback(selected, this.model);\n          } else {\n            mergeFeature(undefined, selected, this.model);\n          }\n          if (!this.value) {\n            this.$.select.value = \"\";\n          }\n        }\n      }\n    };\n\n    this.$.select.addEventListener(\"change\", this.selectChangeHandler);\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n\n    this.$.select.removeEventListener(\"change\", this.selectChangeHandler);\n  }\n\n  _exists(a) {\n    return !!a;\n  }\n\n  _label(label, choices, paren) {\n    let result = '';\n    if (label) {\n      result = label;\n      if (choices && choices !== 1) {\n        result += ` (${choices})`;\n      }\n       if (paren) {\n        result += ` (${paren})`;\n      }\n    }\n    return result;\n  }\n  \n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: inline-block;\n        }\n        [slot=\"prefix\"] {\n          width: calc(100% - 46px);\n          padding: 12px;\n          line-height: 1.4;\n        }\n        vaadin-select {\n          width: 100%;\n        }\n        .prefix {\n          white-space: normal;\n          color: var(--lumo-body-text-color);\n        }\n      </style>\n      <vaadin-select test$=\"[[test]]\" theme=\"dark\" add id=\"select\" label=\"[[_label(label, choices, paren)]]\" placeholder=\"[[placeholder]]\" disabled$=\"[[disabled]]\">\n        <div hidden$=\"[[!_exists(multiValue)]]\" slot=\"prefix\">\n          <span class=\"prefix\">[[multiValue]]</span>\n        </div>\n      </vaadin-select>\n    `;\n  }\n}\ncustomElements.define('dnd-select-add', DndSelectAdd);","import { PolymerElement, html } from \"@polymer/polymer\";\nimport {\n    getCharacterChannel,\n    getSelectedCharacter,\n    saveCharacter,\n} from \"../../../util/charBuilder\";\nimport { getEditModeChannel, isEditMode } from \"../../../util/editMode\";\nimport { util_capitalizeAll, absInt, cloneDeep } from \"../../../js/utils\"; \nimport { loadModel } from \"../../../util/data\";\nimport '../../dnd-select-add';\nimport { SKILL_TO_ATB_ABV } from \"../../../js/bestiary\";\nimport { } from '@polymer/polymer/lib/elements/dom-if.js';\n    \nclass DndCharacterBuilderSuboptions extends PolymerElement {\n    static get properties() {\n        return {\n            storageKey: {\n                type: String\n            },\n            // This selectedItem provided is used to populate the sub option fields using the option data structure setup in data\n            selectedItem: {\n                type: Object\n            },\n\n            skillProfOptions: {\n                type: Array,\n                value: []\n            },\n            skillProfChoices: {\n                type: Number,\n            },\n            selectedSkillProfs: {\n                type: Array,\n            },\n            defaultSkillProfs: {\n                type: String,\n                value: \"\"\n            },\n\n            attributeOptions: {\n                type: Array,\n                value: []\n            },\n            attributeChoices: {\n                type: Number,\n            },\n            attributeMod: {\n                type: Number,\n            },\n            selectedAttributes: {\n                type: Array,\n            },\n            defaultAttributes: {\n                type: String,\n                value: \"\"\n            },\n\n            featOptions: {\n                type: Array,\n                value: []\n            },\n            featChoices: {\n                type: Number\n            },\n            selectedFeat: {\n                type: Array,\n            },\n\n            isEditMode: {\n                type: Boolean,\n                value: false\n            },\n        };\n    }\n\n    static get observers() {\n        return ['updateOptions(selectedItem, storageKey, character)']\n    }\n\n    connectedCallback() {\n        super.connectedCallback();\n\n        this.characterChangeHandler = (e) => {\n            // let character = cloneDeep(e.detail.character);\n            let character = e.detail.character;\n            this.set('character', character);\n            this.updateOptions();\n        };\n        \n        this.set('character', getSelectedCharacter());\n        getCharacterChannel().addEventListener(\"character-selected\", this.characterChangeHandler);\n\n        this.editModeHandler = (e) => {\n            this.isEditMode = e.detail.isEditMode;\n        }\n        getEditModeChannel().addEventListener('editModeChange', this.editModeHandler);\n        this.isEditMode = isEditMode();\n    }\n\n    disconnectedCallback() {\n        super.disconnectedCallback();\n\n        getCharacterChannel().removeEventListener(\"character-selected\", this.characterChangeHandler);\n        getEditModeChannel().removeEventListener('editModeChange', this.editModeHandler);\n    }\n\n    async updateOptions() {\n        if (this.character && this.storageKey && this.selectedItem) {\n            // Finding the storedItem from the character's choices at storageKey \n            const storageKeys = this.storageKey.split('.');\n            if (!this.character.choices) {\n                this.character.choices = {};\n            }\n            let storedItem = this.character.choices;\n\n            for (let i = 0; i < storageKeys.length; i++) {\n                const storageKey = storageKeys[i];\n                if (!storedItem[storageKey]) {\n                    if (storageKeys.length < i + 1 && !isNaN(parseInt(storageKeys[i + 1], 10))) {\n                        storedItem[storageKey] = new Array(20);\n                    } else {\n                        storedItem[storageKey] = {};\n                    }\n                }\n                storedItem = storedItem[storageKey];\n            }\n            this.storedItem = storedItem;\n\n\n            // Retrieving the selected choices for attribute, feat, or proficiency off of the storedItem\n\n            // Populating Attribute choice field\n            this.attributeOptions = [];\n            this.attributeChoices = null;\n            this.attributeMod = 1;\n            this.selectedAttributes = null;\n            this.defaultAttributes = null;\n            if (this.selectedItem.ability && this.selectedItem.ability.length) {\n                const ability = this.selectedItem.ability[0];\n                if (ability.choose) {\n                    this.attributeOptions = ability.choose.from.map(i => { return i.toUpperCase() });\n                    this.attributeChoices = ability.choose.count || 1;\n                    this.attributeMod = ability.choose.amount || 1;\n                    this.selectedAttributes = this.storedItem.selectedAttributes ? this.storedItem.selectedAttributes.split(',') : null;\n                }\n                this.defaultAttributes = Object.entries(ability).map(e => {\n                    if (e[0] !== 'choose' && e[0] !== 'any') {\n                        let attribute = e[0].toLowerCase(),\n                            mod = e[1];\n                        return attribute.toUpperCase() + ' ' + absInt(mod);\n                    }\n                }).filter(e => !!e).join(', ');\n                // store defaults on character to avoid future look-ups\n                this.storedItem.defaultAttributes = this.defaultAttributes;\n                this.storedItem.attributeMod = this.attributeMod;\n            }\n\n            // Populating Skill Proficiency choice field\n            this.skillProfOptions = [];\n            this.skillProfChoices = null;\n            this.selectedSkillProfs = null;\n            this.defaultSkillProfs = null;\n            if (this.selectedItem.skillProficiencies && this.selectedItem.skillProficiencies.length) {\n                const skillProficiency = this.selectedItem.skillProficiencies[0];\n                if (skillProficiency.choose) {\n                    this.skillProfOptions = skillProficiency.choose.from;\n                    this.skillProfChoices = skillProficiency.choose.count || 1;\n                    this.selectedSkillProfs = this.storedItem.selectedSkillProfs ? this.storedItem.selectedSkillProfs.split(',') : null;\n                }\n                if (skillProficiency.any) {\n                    this.skillProfOptions = Object.keys(SKILL_TO_ATB_ABV);\n                    this.skillProfChoices = skillProficiency.any;\n                    this.selectedSkillProfs = this.storedItem.selectedSkillProfs ? this.storedItem.selectedSkillProfs.split(',') : null;\n                }\n                this.defaultSkillProfs = Object.keys(skillProficiency).map(e => {\n                    if (e !== 'choose' && e !== 'any') {\n                        return util_capitalizeAll(e) \n                    }\n                }).filter(e => !!e).join(', ');\n                // store defaults on character to avoid future look-ups\n                this.storedItem.defaultSkillProfs = this.defaultSkillProfs;\n            }\n\n            // Populating Feat choice field\n            this.featOptions = [];\n            this.featChoices = null;\n            this.selectedFeat = null;\n            if (this.selectedItem.feats) {\n                this.featOptions = await loadModel('feats');\n                this.featChoices = this.selectedItem.feats;\n                this.selectedFeat = this.storedItem.selectedFeat;\n            }\n            \n            this.dispatchEvent(new CustomEvent(\"loadingChange\", { bubbles: true, composed: true }));\n        }\n    }\n\n    _skillProficiencyAddCallback() {\n        return ((skills) => {\n            this.storedItem.selectedSkillProfs = skills.join(',');\n            saveCharacter(this.character);\n        }).bind(this);\n    }\n\n    _attributeAddCallback() {\n        return ((attr) => {\n            this.storedItem.selectedAttributes = attr.join(',');\n            saveCharacter(this.character);\n        }).bind(this);\n    }\n\n    _featAddCallback() {\n        return ((feat) => {\n            this.storedItem.selectedFeat = feat;\n            saveCharacter(this.character);\n        }).bind(this);\n    }\n\n    _suboptionStorageKey(storageKey) {\n        return `${storageKey}.suboptions`\n    }\n\n    _showEmpty(isEditMode, value) {\n        return !isEditMode && !value;\n    }\n\n    _exists() {\n        for (let arg of arguments) {\n            if (!!arg && (arg.constructor !== Object || Object.entries(arg).length > 0) && (!Array.isArray(arg) || arg.length > 0)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    _plusPrefix(num) {\n        console.error(num)\n        return `+${num}`\n    }\n\n    _plural(str, num) {\n        if (num > 1) {\n            return str + 's'\n        }\n        return str;\n    }\n\n    static get template() {\n        return html`\n            <style include=\"material-styles\">\n                [hidden] {\n                    display: none !important;\n                }\n                dnd-select-add {\n                    width: 100%;\n                }\n                @media(min-width: 420px) {\n                    dnd-select-add {\n                        width: calc(50% - 20px);\n                    }\n                }\n\n                @media(min-width: 921px) {\n                }\n            </style>\n\n            <div class=\"col-wrap\">\n                <div hidden$=\"[[!_exists(defaultAttributes)]]\" class=\"default-selection\">Default Attributes: <span>[[defaultAttributes]]</span></div>\n\n                <div hidden$=\"[[!_exists(defaultSkillProfs)]]\" class=\"default-selection\">Default Skills: <span>[[defaultSkillProfs]]</span></div>\n\n                <template is=\"dom-if\" if=\"[[_exists(attributeOptions)]]\">\n                    <dnd-select-add disabled$=\"[[!isEditMode]]\" \n                        placeholder=\"<Select Attribute>\" label='[[_plural(\"Selected Attribute\", attributeChoices)]]'\n                        choices=\"[[attributeChoices]]\" paren=\"[[_plusPrefix(attributeMod)]]\" options=\"[[attributeOptions]]\"\n                        value=\"[[selectedAttributes]]\" add-callback=\"[[_attributeAddCallback()]]\">\n                    </dnd-select-add>\n                </template>\n\n                <template is=\"dom-if\" if=\"[[_exists(skillProfOptions)]]\">\n                    <dnd-select-add disabled$=\"[[!isEditMode]]\"\n                        placeholder=\"<Select Skill>\" label='[[_plural(\"Selected Skill\", skillProfChoices)]]'\n                        choices=\"[[skillProfChoices]]\" options=\"[[skillProfOptions]]\"\n                        value=\"[[selectedSkillProfs]]\" add-callback=\"[[_skillProficiencyAddCallback()]]\">\n                    </dnd-select-add>\n                </template>\n\n                <!-- Todo: add language and tool proficiencies -->\n\n                <template is=\"dom-if\" if=\"[[_exists(featOptions)]]\">\n                    <dnd-select-add disabled$=\"[[!isEditMode]]\"\n                        placeholder=\"<Select Feat>\" label=\"Selected Feat\"\n                        options=\"[[featOptions]]\" value=\"[[selectedFeat]]\"\n                        add-callback=\"[[_featAddCallback()]]\">\n                    </dnd-select-add>\n                    \n                    <template is=\"dom-if\" if=\"[[_exists(selectedFeat)]]\"></template>\n                        <dnd-character-builder-suboptions storage-key=\"[[_suboptionStorageKey(storageKey)]]\" selected-item=\"[[selectedFeat]]\"></dnd-character-builder-suboptions>\n                    </template>\n                </template>\n            </div>\n        `;\n    }\n}\n\ncustomElements.define(\"dnd-character-builder-suboptions\", DndCharacterBuilderSuboptions);\n"],"sourceRoot":""}