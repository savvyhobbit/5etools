/*! droll v0.2.1  http://github.com/thebinarypenguin/droll */
var droll={};function DrollFormula(){this.numDice=0,this.numSides=0,this.modifier=0,this.minResult=0,this.maxResult=0,this.avgResult=0}function DrollResult(){this.rolls=[],this.modifier=0,this.total=0}DrollResult.prototype.toString=function(){return 1===this.rolls.length&&0===this.modifier?this.rolls[0]+"":1<this.rolls.length&&0===this.modifier?this.rolls.join(" + ")+" = "+this.total:1===this.rolls.length&&0<this.modifier?this.rolls[0]+" + "+this.modifier+" = "+this.total:1<this.rolls.length&&0<this.modifier?this.rolls.join(" + ")+" + "+this.modifier+" = "+this.total:1===this.rolls.length&&this.modifier<0?this.rolls[0]+" - "+Math.abs(this.modifier)+" = "+this.total:1<this.rolls.length&&this.modifier<0?this.rolls.join(" + ")+" - "+Math.abs(this.modifier)+" = "+this.total:void 0},droll.parse=function(i){var t,l=new DrollFormula;return!!(t=i.match(/^([1-9]\d*)?d([1-9]\d*)([+-]\d+)?$/i))&&(l.numDice=+t[1]||1,l.numSides=+t[2],l.modifier=+t[3]||0,l.minResult=+l.numDice+l.modifier,l.maxResult=l.numDice*l.numSides+l.modifier,l.avgResult=(l.maxResult+l.minResult)/2,l)},droll.validate=function(i){return!!droll.parse(i)},droll.roll=function(i){var t,l=new DrollResult;if(!(t=droll.parse(i)))return!1;for(var o=0;o<t.numDice;o++)l.rolls[o]=1+Math.floor(Math.random()*t.numSides);l.modifier=t.modifier;for(var r=0;r<l.rolls.length;r++)l.total+=l.rolls[r];return l.total+=l.modifier,l};
export default droll;