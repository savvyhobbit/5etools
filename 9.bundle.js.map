{"version":3,"sources":["webpack:///./components/views/character/dnd-character-builder-background-race.js"],"names":["DndCharacterBuilderBackgroundRace","selectedBackground","type","String","value","selectedBackgroundRef","Object","selectedRace","selectedRaceRef","isEditMode","Boolean","backgroundName","raceName","super","this","additionalOptionAddOptions","connectedCallback","characterChangeHandler","e","character","detail","updateFromCharacter","addEventListener","editModeHandler","disconnectedCallback","removeEventListener","maxAdditionalOptionsIndex","additionalOptions","entries","choices","filter","key","includes","index","parseInt","substring","indexOf","map","set","background","name","undefined","race","dispatchEvent","CustomEvent","bubbles","composed","linkData","source","push","dataLink","bg","isBackground","target","classList","contains","selectedItem","viewId","optionChoice","$","optionAdd","optionKey","model","__data","item","arg","arguments","constructor","length","Array","isArray","customElements","define"],"mappings":"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","file":"9.bundle.js","sourcesContent":["import { PolymerElement, html } from \"@polymer/polymer\";\nimport {\n  addAdditionalChoice,\n  deleteAdditionalChoice,\n  getBackgroundReference,\n  getCharacterChannel,\n  getRaceReference,\n  getSelectedCharacter,\n} from \"../../../util/charBuilder\";\nimport './dnd-character-builder-suboptions';\nimport \"@vaadin/vaadin-select\";\nimport { getEditModeChannel, isEditMode } from \"../../../util/editMode\";\nimport { encodeForHash } from \"../../../js/utils\"; \n\nclass DndCharacterBuilderBackgroundRace extends PolymerElement {\n  \n  static get properties() {\n    return {\n      selectedBackground: {\n        type: String,\n        value: \"\"\n      },\n      selectedBackgroundRef: {\n        type: Object,\n      },\n      selectedRace: {\n        type: String,\n        value: \"\"\n      },\n      selectedRaceRef: {\n        type: Object,\n      },\n      isEditMode: {\n        type: Boolean,\n        value: false\n      },\n      backgroundName: {\n        type: String,\n        value: ''\n      },\n      raceName: {\n        type: String,\n        value: ''\n      }\n    };\n  }\n\n  constructor() {\n    super();\n    \n    this.additionalOptionAddOptions = [\"Feat\", \"Attribute +1\", \"Attribute +2\", \"Skill\", \"Language\", \"Tool\", \"Weapon\", \"Armor\"];\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    this.characterChangeHandler = (e) => {\n      let character = e.detail.character;\n      this.updateFromCharacter(character);\n    };\n    \n    this.updateFromCharacter(getSelectedCharacter());\n    getCharacterChannel().addEventListener(\"character-selected\", this.characterChangeHandler);\n\n    this.editModeHandler = (e) => {\n      this.isEditMode = e.detail.isEditMode;\n    }\n    getEditModeChannel().addEventListener('editModeChange', this.editModeHandler);\n    this.isEditMode = isEditMode();\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n\n    getCharacterChannel().removeEventListener(\"character-selected\", this.characterChangeHandler);\n    getEditModeChannel().removeEventListener('editModeChange', this.editModeHandler);\n  }\n\n  async updateFromCharacter(character) {\n    if (character) {\n      let maxAdditionalOptionsIndex = 0;\n      let additionalOptions = Object.entries(character.choices)\n        .filter(([key, value]) => {\n          if (key.includes(\"additionalChoice\") && !key.includes(\"suboptions\")) {\n            const index = parseInt(key.substring(key.indexOf('_') + 1));\n            if (index > maxAdditionalOptionsIndex) {\n              maxAdditionalOptionsIndex = index;\n            }\n            if (value) {\n              value.index = index;\n            } else {\n              return false;\n            }\n            return true;\n          }\n          return false;\n        })\n        .map(([key, value]) => {\n          value.key = key;\n          return value;\n        });\n      this.maxAdditionalOptionsIndex = maxAdditionalOptionsIndex;\n      this.set('additionalOptions', additionalOptions);\n\n      if (character.background) {\n        this.selectedBackground = character.background;\n        this.selectedBackgroundRef = await getBackgroundReference();\n        this.backgroundName = this.selectedBackground.name;\n      } else {\n        this.selectedBackground = {};\n        this.selectedBackgroundRef = undefined;\n        this.backgroundName = \"\";\n      }\n\n      if (character.race) {\n        this.selectedRace = character.race;\n        this.selectedRaceRef = await getRaceReference();\n        this.raceName = this.selectedRace.name;\n      } else {\n        this.selectedRace = {};\n        this.selectedRaceRef = undefined;\n        this.raceName = \"\";\n      }\n    }\n    \n    this.dispatchEvent(new CustomEvent(\"loadingChange\", { bubbles: true, composed: true }));\n  }\n\n  _getRaceLink(race) {\n    let linkData = [race.name];\n    if (race.source) {\n      linkData.push(race.source);\n    }\n    let dataLink = encodeForHash(linkData);\n    return race ? `#/races/${dataLink}` : '#/races'\n  }\n\n  _getBackgroundLink(bg) {\n    let linkData = [bg.name];\n    if (bg.source) {\n      linkData.push(bg.source);\n    }\n    let dataLink = encodeForHash(linkData);\n    return bg ? `#/backgrounds/${dataLink}` : '#/backgrounds'\n  }\n\n  _linkClick(e) {\n    const isBackground = e.target.classList.contains('background');\n    this.dispatchEvent(new CustomEvent(\"open-drawer\", {\n      bubbles: true,\n      composed: true,\n      detail: {\n        selectedItem: isBackground ? this.selectedBackground : this.selectedRace,\n        viewId: isBackground ? 'backgrounds' : 'races'\n      }\n    }));\n  }\n\n  _addAdditionalOption(e) {\n    const optionChoice = this.$.optionAdd.value;\n    addAdditionalChoice(optionChoice, this.maxAdditionalOptionsIndex + 1);\n    this.$.optionAdd.value = \"\";\n  }\n\n  _deleteAdditionalOption(e) {\n    const optionKey = e.model.__data.item.key;\n    deleteAdditionalChoice(optionKey);\n  }\n\n  _showEmpty(isEditMode, value) {\n    return !isEditMode && !value;\n  }\n\n  _exists() {\n    for (let arg of arguments) {\n      if (!!arg && (arg.constructor !== Object || Object.entries(arg).length > 0) && (!Array.isArray(arg) || arg.length > 0)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  static get template() {\n    return html`\n      <style include=\"material-styles my-styles\">\n        body {}\n        :host {\n          display: block;\n          padding: 14px;\n        }\n        [hidden] {\n          display: none !important;\n        }\n\n        .col-wrap {\n          display: flex;\n          justify-content: space-between;\n          flex-wrap: wrap;\n          margin-bottom: var(--tab-bottom-margin);\n        }\n\n        .row-wrap {\n          width: 100%;\n          margin-bottom: 32px;\n        }\n\n        .row-wrap > *:not(h2):not(:last-child) {\n          margin-bottom: 10px;\n        }\n\n        .heading {\n          display: flex;\n          flex-direction: row;\n          align-items: center;\n          justify-content: space-between;\n          border-bottom: 1px solid var(--lumo-contrast-10pct);\n        }\n        .reference-link:hover {\n          color: var(--mdc-theme-secondary);\n        }\n\n        .missing-text {\n          font-style: italic;\n          font-size: 14px;\n        }\n\n        @media(min-width: 420px) {\n          .heading {\n            justify-content: flex-start;\n          }\n          .reference-link {\n            margin-left: 8px;\n          }\n        }\n\n        @media(min-width: 921px) {\n          .row-wrap {\n            width: calc(50% - 10px);\n          }\n        }\n\n        h2 {\n          display: block;\n          font-size: 1.5em;\n          margin-block-start: 0.83em;\n          margin-block-end: 0.83em;\n          margin-inline-start: 0px;\n          margin-inline-end: 0px;\n          font-weight: bold;\n        }\n\n        h3 {\n          font-size: 24px;\n          font-weight: bold;\n          margin-bottom: 8px;\n        }\n        .details-container  {\n          background: var(--lumo-contrast-10pct);\n          padding: 14px;\n          border-radius: 4px;\n          font-size: 14px;\n        }\n        .stats-wrapper.margin-bottom_large {\n          margin-bottom: 0px !important;\n        }\n        vaadin-select {\n          cursor: pointer;\n          margin-left: 20px;\n          --lumo-font-size-m: 20px;\n          --vaadin-text-field-default-width: 0;\n          position: relative;\n          left: -50px;\n        }\n        \n        dnd-select-add {\n          --lumo-font-size-m: 20px;\n          width: 100%;\n        }\n\n        dnd-character-builder-suboptions {\n          display: block;\n          margin-left: 30px;\n        }\n\n        @media(min-width: 420px) {\n          vaadin-select {\n            left: 0;\n          }\n        }\n      </style>\n\n      <div class=\"col-wrap\">\n        <div class=\"row-wrap\">\n          <div class=\"heading\">\n            <h2>Race</h2>\n            <button class=\"mdc-icon-button material-icons\" on-click=\"_linkClick\">logout</button>\n          </div>\n          <div class=\"missing-text\" hidden$=\"[[_exists(selectedRaceRef)]]\">Enter edit mode to select a Race.</div>\n          <dnd-select-add model=\"races\" value=\"[[selectedRace]]\" placeholder=\"<Choose Race>\" disabled$=\"[[!isEditMode]]\" hidden$=\"[[_showEmpty(isEditMode, selectedRace)]]\"></dnd-select-add>\n          <dnd-character-builder-suboptions label=\"Race\" storage-key=\"race\" selected-item=\"[[selectedRaceRef]]\"></dnd-character-builder-suboptions>\n        </div>\n\n        <div class=\"row-wrap\">\n          <div class=\"heading\">\n            <h2>Background</h2>\n            <button class=\"mdc-icon-button material-icons background\" on-click=\"_linkClick\">logout</button>\n          </div>\n          <div class=\"missing-text\" hidden$=\"[[_exists(selectedBackgroundRef)]]\">Enter edit mode to select a Background.</div>\n          <dnd-select-add model=\"backgrounds\" value=\"[[selectedBackground]]\" placeholder=\"<Choose Background>\" disabled$=\"[[!isEditMode]]\" hidden$=\"[[_showEmpty(isEditMode, selectedBackground)]]\"></dnd-select-add>\n          <dnd-character-builder-suboptions label=\"Background\" storage-key=\"background\" selected-item=\"[[selectedBackgroundRef]]\"></dnd-character-builder-suboptions>\n        </div>\n\n        <div class=\"row-wrap\">\n          <div class=\"heading\">\n            <h2>Extra Features</h2>\n            <vaadin-select add-button id=\"optionAdd\" class=\"label--secondary\" on-change=\"_addAdditionalOption\" placeholder=\"<Add Additional Feature>\" disabled$=\"[[!isEditMode]]\" hidden$=\"[[!isEditMode]]\">\n              <template>\n                <vaadin-list-box>\n                  <template is=\"dom-repeat\" items=\"[[additionalOptionAddOptions]]\">\n                    <vaadin-item>[[item]]</vaadin-item>\n                  </template>\n                </vaadin-list-box>\n              </template>\n            </vaadin-select>\n          </div>\n\n          <div class=\"added-options\">\n            <template is=\"dom-repeat\" items=\"[[additionalOptions]]\">\n              <div>\n                Extra [[item.choiceKey]]\n                <button class=\"mdc-icon-button material-icons\" on-click=\"_deleteAdditionalOption\">delete</button>\n                <dnd-character-builder-suboptions label=\"Extra [[item.choiceKey]]\" dont-create-if-missing storage-key=\"[[item.key]]\" selected-item=\"[[item]]\"></dnd-character-builder-suboptions>\n              </div>\n            </template>\n          </div>\n        </div>\n      </div>\n    `;\n  }\n}\n\ncustomElements.define(\"dnd-character-builder-background-race\", DndCharacterBuilderBackgroundRace);"],"sourceRoot":""}