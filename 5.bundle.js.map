{"version":3,"sources":["webpack:///./components/dnd-select-add.js","webpack:///./js/bestiary.js","webpack:///./components/views/character/dnd-character-builder-suboptions.js"],"names":["DndSelectAdd","test","type","Boolean","reflectToAttribute","value","options","Array","observer","model","String","addCallback","Function","choices","Number","paren","label","placeholder","multiValue","disabled","this","listBox","remove","$","select","render","isArray","choiceArray","map","v","indexOf","findIndex","o","name","source","filter","selectedValues","i","join","super","ready","setTimeout","async","renderer","root","document","createElement","setAttribute","addEventListener","e","opened","wasPreviouslySelected","srcElement","getAttribute","length","splice","selectedOptions","option","item","optionName","innerHTML","appendChild","_assignMenuElement","valueUpdated","connectedCallback","selectChangeHandler","val","selected","undefined","disconnectedCallback","removeEventListener","a","result","customElements","define","getProfBonusFromCr","cr","CR_TO_PROF","SKILL_TO_ATB_ABV","athletics","acrobatics","stealth","arcana","history","investigation","nature","religion","insight","medicine","perception","survival","deception","intimidation","performance","persuasion","renderSelection","mon","rootEl","querySelector","renderStack","entryList","window","monsterName","_pTypes","asText","sourceJsonToAbv","sourceJsonToFull","sizeAbvToFull","size","getAbilityModifier","str","dex","con","int","wis","cha","saves","save","parentElement","style","display","skills","skill","obj","Object","keys","k","uppercaseFirst","parseInt","dmgvuln","vulnerable","dmgres","resist","dmgimm","immune","conimm","conditionImmune","senses","passive","toString","languages","crToXp","traits","trait","traitname","traittext","text","traittexthtml","renderedcount","n","firstsecond","spells","replace","newTrait","spellLinks","querySelectorAll","spellLink","spellslist","split","encodeURIComponent","toLowerCase","actions","action","actionname","actiontext","actiontexthtml","newAction","reactions","reaction","reactionname","reactiontext","reactiontexthtml","newNonReaction","newReaction","legendaries","legendary","shouldAddCap","legendaryname","legendarytext","legendarytexthtml","newLegendary","trim","legendaryActions","legendaryName","newLegendaryCap","renderSection","sectionClass","sectionEntries","entries","recursiveEntryRender","newThing","renderSkillOrSaveRoller","itemName","profBonusString","profDiceString","isSave","lairActions","regionalEffects","element","$this","s","out","spl","match","skillName","skillString","b","bonus","fromAbility","getAbilityModNumber","pB","expert","push","makeSkillRoller","pBonusStr","pDiceStr","makeSaveRoller","statPEls","statPEl","addNonD20Rollers","titleMaybe","attemptToGetTitle","mode","expectedPB","withoutPB","capture","dc","ele","substring","statsRollerEls","statsRollerEl","roll","rollResult","multi","res2","rolls","concat","total","outputRollResult","statsDCRollerEls","statsDCRollerEl","$ele","newResult","outputEl","MAX_ROLLS","children","DndCharacterBuilderSuboptions","storageKey","selectedItem","skillProfOptions","skillProfChoices","selectedSkillProfs","defaultSkillProfs","attributeOptions","attributeChoices","attributeMod","selectedAttributes","defaultAttributes","featOptions","featChoices","selectedFeat","isEditMode","characterChangeHandler","character","detail","set","updateOptions","editModeHandler","storageKeys","storedItem","isNaN","ability","choose","from","toUpperCase","count","amount","attribute","mod","skillProficiencies","skillProficiency","any","feats","dispatchEvent","CustomEvent","bubbles","composed","bind","attr","feat","arg","arguments","constructor","num","console","error"],"mappings":"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","file":"5.bundle.js","sourcesContent":["import { PolymerElement, html } from '@polymer/polymer';\nimport { mergeFeature } from '../util/charBuilder';\nimport { jqEmpty, util_capitalizeAll } from \"../js/utils\";\nimport \"@vaadin/vaadin-select\";\nimport {loadModel} from \"../util/data\";\n\nclass DndSelectAdd extends PolymerElement {\n  static get properties() {\n    return {\n      test: {\n        type: Boolean,\n        reflectToAttribute: true,\n        value: false\n      },\n      options: {\n        type: Array,\n        observer: \"optionsUpdated\"\n      },\n      model: {\n        type: String\n      },\n      addCallback: {\n        type: Function\n      },\n      value: {\n        type: String,\n        value: \"\",\n        observer: \"valueUpdated\"\n      },\n      choices: {\n        type: Number,\n        observer: \"choicesUpdated\"\n      },\n      paren: {\n        type: String,\n      },\n      label: {\n        type: String\n      },\n      placeholder: {\n        type: String,\n      },\n      multiValue: {\n        type: String,\n        value: \"\"\n      },\n      disabled: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      }\n    }\n  }\n\n  choicesUpdated() {\n    if (this.listBox) {\n      this.listBox.remove();\n      delete this.listBox;\n    }\n    this.$.select.render();\n  }\n\n  optionsUpdated() {\n    if (this.listBox) {\n      this.listBox.remove();\n      delete this.listBox;\n    }\n    this.$.select.render();\n  }\n\n  valueUpdated() {\n    if (this.choices) {\n      if (Array.isArray(this.value) && this.options) {\n        const choiceArray = this.value\n          .map(v => {\n            if (this.options.indexOf(v) !== -1) {\n              return this.options.indexOf(v);\n            } else {\n              return this.options.findIndex((o) => {\n                return o.name === v.name && o.source === v.source;\n              });\n            }\n          })\n          .filter(v => { return v !== -1 });\n\n        if (this.listBox) {\n          this.listBox.selectedValues = choiceArray;\n        }\n        this.multiValue = choiceArray.map(i => {\n          let value = this.options[i];\n          return value.name ? value.name : util_capitalizeAll(value) \n        }).join(\", \");\n      } else {\n        if (this.listBox) {\n          this.listBox.selectedValues = [];\n        }\n        this.multiValue = \"\";\n      }\n    } else {\n      if (this.value && this.options) {\n        if (this.value.source) {\n          this.$.select.value = this.options.findIndex(i => { return i.name === this.value.name && i.source === this.value.source || i === this.value.name }) + \"\";\n        } else if (this.value.name) {\n          this.$.select.value = this.options.findIndex(i => { return i.name === this.value.name || i === this.value.name }) + \"\";\n        } else {\n          this.$.select.value = this.options.findIndex(i => { return i.name === this.value || i === this.value }) + \"\";\n        }\n      } else {\n        this.$.select.value = \"\";\n      }\n    }\n  }\n\n  ready() {\n    super.ready();\n\n    setTimeout(async () => {\n      if (this.model) {\n        this.options = await loadModel(this.model);\n      }\n\n      this.$.select.renderer = (root, select) => {\n        if (!this.listBox) {\n          this.listBox = document.createElement('vaadin-list-box');\n\n          // setting up for multi-select\n          if (this.choices) {\n            this.listBox.setAttribute(\"multiple\", true);\n\n            this.listBox.addEventListener(\"click\", (e) => {\n              select.opened = true;\n              let wasPreviouslySelected = e.srcElement.getAttribute(\"selected\") !== null\n              setTimeout(() => {\n                if (this.listBox.selectedValues.length > this.choices\n                    && !wasPreviouslySelected) {\n                  this.listBox.selectedValues.splice(this.listBox.selectedValues.length - 2, 1)\n                }\n                let selectedOptions = this.listBox.selectedValues.map(v => { return this.options[v] });\n                this.multiValue = selectedOptions.map(o => { return o.name ? o.name : util_capitalizeAll(o) }).join(', ');\n                if (this.addCallback) {\n                  this.addCallback(selectedOptions);\n                }\n              }, 0);\n            });\n\n          }\n\n          // Adding options\n          if (this.options && this.options.length) {\n            for (let i = 0; i < this.options.length; i ++) {\n              const option = this.options[i],\n                item = document.createElement('vaadin-item');\n              const optionName = option.name || util_capitalizeAll(option);\n              item.innerHTML = `<span>${optionName}</span> ${option.name ? `<span style='font-size: 14px;color: var(--lumo-primary-color-50pct);'>${option.source}</span>` : ''}`\n              item.setAttribute(\"value\", i);\n              this.listBox.appendChild(item);\n            }\n          }\n          root.appendChild(this.listBox);\n          this.$.select._assignMenuElement();\n\n          this.valueUpdated();\n        }\n      };\n    }, 0);\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    this.selectChangeHandler = () => {\n      const val = this.$.select.value;\n      if (val) {\n        if (!this.choices) {\n          const selected = this.options[val];\n          if (this.addCallback) {\n            this.addCallback(selected, this.model);\n          } else {\n            mergeFeature(undefined, selected, this.model);\n          }\n          if (!this.value) {\n            this.$.select.value = \"\";\n          }\n        }\n      }\n    };\n\n    this.$.select.addEventListener(\"change\", this.selectChangeHandler);\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n\n    this.$.select.removeEventListener(\"change\", this.selectChangeHandler);\n  }\n\n  _exists(a) {\n    return !!a;\n  }\n\n  _label(label, choices, paren) {\n    let result = '';\n    if (label) {\n      result = label;\n      if (choices && choices !== 1) {\n        result += ` (${choices})`;\n      }\n       if (paren) {\n        result += ` (${paren})`;\n      }\n    }\n    return result;\n  }\n  \n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: inline-block;\n        }\n        [slot=\"prefix\"] {\n          width: calc(100% - 46px);\n          padding: 12px;\n          line-height: 1.4;\n        }\n        vaadin-select {\n          width: 100%;\n        }\n        .prefix {\n          white-space: normal;\n          color: var(--lumo-body-text-color);\n        }\n      </style>\n      <vaadin-select test$=\"[[test]]\" theme=\"dark\" add id=\"select\" label=\"[[_label(label, choices, paren)]]\" placeholder=\"[[placeholder]]\" disabled$=\"[[disabled]]\">\n        <div hidden$=\"[[!_exists(multiValue)]]\" slot=\"prefix\">\n          <span class=\"prefix\">[[multiValue]]</span>\n        </div>\n      </vaadin-select>\n    `;\n  }\n}\ncustomElements.define('dnd-select-add', DndSelectAdd);","import { parseHTML, utils_makeRoller, jqAfter, jqPrepend} from \"../js/utils.js\";\r\nimport EntryRenderer from \"../util/entryrender.js\";\r\nimport Parser from \"../util/Parser.js\"\r\nimport droll from \"../lib/droll.js\"\r\n\r\nconst MAX_ROLLS = 5\r\n\r\nconst stats_wrapper = `\r\n\t<div class=\"margin-bottom_large stats-wrapper\">\r\n\t\t<div id=\"stats\" class=\"monster\">\r\n\t\t\t<div id=\"name\">\r\n\t\t\t\tName <span class=\"source\" title=\"Source book\">SRC</span>\r\n\t\t\t</div>\r\n\t\t\t<div id=\"sizetypealignment\">\r\n\t\t\t\t<span id=\"size\">Size</span> <span id=\"type\">type</span>, <span id=\"alignment\">alignment</span>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"divider\"></div>\r\n\t\t\t<div>\r\n\t\t\t\t<strong>Armor Class</strong> <span id=\"ac\">## (source)</span>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<strong>Hit Points</strong> <span id=\"hp\">hp</span>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<strong>Speed</strong> <span id=\"speed\">30 ft.</span>\r\n\t\t\t</div>\r\n\t\t\t<div id=\"abilitynames\">\r\n\t\t\t\t<div>STR</div>\r\n\t\t\t\t<div>DEX</div>\r\n\t\t\t\t<div>CON</div>\r\n\t\t\t\t<div>INT</div>\r\n\t\t\t\t<div>WIS</div>\r\n\t\t\t\t<div>CHA</div>\r\n\t\t\t</div>\r\n\t\t\t<div id=\"abilityscores\">\r\n\t\t\t\t<div id=\"str\"><span class=\"score\">10</span> (<span class=\"mod\">0</span>)</div>\r\n\t\t\t\t<div id=\"dex\"><span class=\"score\">10</span> (<span class=\"mod\">0</span>)</div>\r\n\t\t\t\t<div id=\"con\"><span class=\"score\">10</span> (<span class=\"mod\">0</span>)</div>\r\n\t\t\t\t<div id=\"int\"><span class=\"score\">10</span> (<span class=\"mod\">0</span>)</div>\r\n\t\t\t\t<div id=\"wis\"><span class=\"score\">10</span> (<span class=\"mod\">0</span>)</div>\r\n\t\t\t\t<div id=\"cha\"><span class=\"score\">10</span> (<span class=\"mod\">0</span>)</div>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<strong>Saving Throws</strong> <span id=\"saves\">Str +0</span>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<strong>Skills</strong> <span id=\"skills\">Perception +0</span>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<strong>Damage Vulnerabilities</strong> <span id=\"dmgvuln\">fire</span>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<strong>Damage Resistances</strong> <span id=\"dmgres\">cold</span>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<strong>Damage Immunities</strong> <span id=\"dmgimm\">lightning</span>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<strong>Condition Immunities</strong> <span id=\"conimm\">exhaustion</span>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<strong>Senses</strong> <span id=\"senses\">darkvision 30 ft.</span> passive Perception <span id=\"pp\">10</span>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<strong>Languages</strong> <span id=\"languages\">Common</span>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<strong>Challenge</strong> <span id=\"cr\">1</span> (<span id=\"xp\">450</span> XP)\r\n\t\t\t</div>\r\n\t\t\t<div id=\"traits\">\r\n\t\t\t</div>\r\n\t\t\t<div id=\"actions\">\r\n\t\t\t\t<span>Actions</span>\r\n\t\t\t</div>\r\n\t\t\t<div id=\"reactions\">\r\n\t\t\t\t<span>Reactions</span>\r\n\t\t\t</div>\r\n\t\t\t<div id=\"legendaries\">\r\n\t\t\t\t<span>Legendary Actions</span>\r\n\t\t\t</div>\r\n\t\t\t<div id=\"lairactions\">\r\n\t\t\t\t<span>Lair Actions</span>\r\n\t\t\t</div>\r\n\t\t\t<div id=\"regionaleffects\">\r\n\t\t\t\t<span>Regional Effects</span>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div id=\"output\"></div>\r\n\t</div>`;\r\n\r\nfunction objToTitleCaseStringWithCommas(obj) {\r\n  return Object.keys(obj)\r\n    .map(function(k) {\r\n      return k.uppercaseFirst() + \" \" + obj[k];\r\n    })\r\n    .join(\", \");\r\n}\r\nconst ATB_PROF_MODE = \"mode\";\r\nconst ATB_PROF_BONUS_STR = \"profBonusStr\";\r\nconst ATB_PROF_DICE_STR = \"profDiceStr\";\r\nconst PROF_MODE_BONUS = \"bonus\";\r\nconst PROF_MODE_DICE = \"dice\";\r\nfunction getProfBonusFromCr(cr) {\r\n  if (CR_TO_PROF[cr]) return CR_TO_PROF[cr];\r\n  return 0;\r\n}\r\nconst CR_TO_PROF = {\r\n  \"0\": 2,\r\n  \"1/8\": 2,\r\n  \"1/4\": 2,\r\n  \"1/2\": 2,\r\n  \"1\": 2,\r\n  \"2\": 2,\r\n  \"3\": 2,\r\n  \"4\": 2,\r\n  \"5\": 3,\r\n  \"6\": 3,\r\n  \"7\": 3,\r\n  \"8\": 3,\r\n  \"9\": 4,\r\n  \"10\": 4,\r\n  \"11\": 4,\r\n  \"12\": 4,\r\n  \"13\": 5,\r\n  \"14\": 5,\r\n  \"15\": 5,\r\n  \"16\": 5,\r\n  \"17\": 6,\r\n  \"18\": 6,\r\n  \"19\": 6,\r\n  \"20\": 6,\r\n  \"21\": 7,\r\n  \"22\": 7,\r\n  \"23\": 7,\r\n  \"24\": 7,\r\n  \"25\": 8,\r\n  \"26\": 8,\r\n  \"27\": 8,\r\n  \"28\": 8,\r\n  \"29\": 9,\r\n  \"30\": 9\r\n};\r\nconst SKILL_TO_ATB_ABV = {\r\n  athletics: \"dex\",\r\n  acrobatics: \"dex\",\r\n  \"sleight of hand\": \"dex\",\r\n  stealth: \"dex\",\r\n  arcana: \"int\",\r\n  history: \"int\",\r\n  investigation: \"int\",\r\n  nature: \"int\",\r\n  religion: \"int\",\r\n  \"animal handling\": \"wis\",\r\n  insight: \"wis\",\r\n  medicine: \"wis\",\r\n  perception: \"wis\",\r\n  survival: \"wis\",\r\n  deception: \"cha\",\r\n  intimidation: \"cha\",\r\n  performance: \"cha\",\r\n  persuasion: \"cha\"\r\n};\r\nfunction getAttribute(skill) {\r\n  return SKILL_TO_ATB_ABV[skill.toLowerCase().trim()];\r\n}\r\n\r\nconst renderer = new EntryRenderer();\r\nfunction renderSelection(mon, rootEl) {\r\n  rootEl.querySelector(\".selection-wrapper\").innerHTML = stats_wrapper;\r\n\tlet renderStack = [];\r\n\tlet entryList = {};\r\n\tvar name = mon.name;\r\n\twindow.monsterName = name;\r\n\tvar source = mon.source;\r\n\tvar type = mon._pTypes.asText;\r\n\tsource = Parser.sourceJsonToAbv(source);\r\n\r\n\trootEl.querySelector(\"#name\").innerHTML = (\r\n\t\t`<span class=\"stats-source source${source}\" title=\"${Parser.sourceJsonToFull(source)}\">${Parser.sourceJsonToAbv(source)}</span>`\r\n\t);\r\n\trootEl.querySelector(\"#size\").innerHTML = (Parser.sizeAbvToFull(mon.size));\r\n\trootEl.querySelector(\"#type\").innerHTML = (type);\r\n\trootEl.querySelector(\"#alignment\").innerHTML = (mon.alignment);\r\n\trootEl.querySelector(\"#ac\").innerHTML = (mon.ac);\r\n\trootEl.querySelector(\"#hp\").innerHTML = (mon.hp);\r\n\trootEl.querySelector(\"#speed\").innerHTML = (mon.speed);\r\n\trootEl.querySelector(\"#str span.score\").innerHTML = (mon.str);\r\n\trootEl.querySelector(\"#str span.mod\").innerHTML = (Parser.getAbilityModifier(mon.str));\r\n\trootEl.querySelector(\"#dex span.score\").innerHTML = (mon.dex);\r\n\trootEl.querySelector(\"#dex span.mod\").innerHTML = (Parser.getAbilityModifier(mon.dex));\r\n\trootEl.querySelector(\"#con span.score\").innerHTML = (mon.con);\r\n\trootEl.querySelector(\"#con span.mod\").innerHTML = (Parser.getAbilityModifier(mon.con));\r\n\trootEl.querySelector(\"#int span.score\").innerHTML = (mon.int);\r\n\trootEl.querySelector(\"#int span.mod\").innerHTML = (Parser.getAbilityModifier(mon.int));\r\n\trootEl.querySelector(\"#wis span.score\").innerHTML = (mon.wis);\r\n\trootEl.querySelector(\"#wis span.mod\").innerHTML = (Parser.getAbilityModifier(mon.wis));\r\n\trootEl.querySelector(\"#cha span.score\").innerHTML = (mon.cha);\r\n\trootEl.querySelector(\"#cha span.mod\").innerHTML = (Parser.getAbilityModifier(mon.cha));\r\n\r\n\tvar saves = mon.save;\r\n\tif (saves) {\r\n\t\trootEl.querySelector(\"#saves\").parentElement.style.display = 'block';\r\n\t\trootEl.querySelector(\"#saves\").innerHTML = (saves);\r\n\t} else {\r\n\t\trootEl.querySelector(\"#saves\").parentElement.style.display = 'none';\r\n\t}\r\n\r\n\tvar skills = mon.skill;\r\n\tlet perception = 0;\r\n\tif (skills) {\r\n\t\trootEl.querySelector(\"#skills\").parentElement.style.display = 'block';\r\n\t\trootEl.querySelector(\"#skills\").innerHTML = (objToTitleCaseStringWithCommas(skills));\r\n\t\tif (skills.perception) perception = parseInt(skills.perception);\r\n\t} else {\r\n\t\trootEl.querySelector(\"#skills\").parentElement.style.display = 'none';\r\n\t}\r\n\r\n\tvar dmgvuln = mon.vulnerable;\r\n\tif (dmgvuln) {\r\n\t\trootEl.querySelector(\"#dmgvuln\").parentElement.style.display = 'block';\r\n\t\trootEl.querySelector(\"#dmgvuln\").innerHTML = (dmgvuln);\r\n\t} else {\r\n\t\trootEl.querySelector(\"#dmgvuln\").parentElement.style.display = 'none';\r\n\t}\r\n\r\n\tvar dmgres = mon.resist;\r\n\tif (dmgres) {\r\n\t\trootEl.querySelector(\"#dmgres\").parentElement.style.display = 'block';\r\n\t\trootEl.querySelector(\"#dmgres\").innerHTML = (dmgres);\r\n\t} else {\r\n\t\trootEl.querySelector(\"#dmgres\").parentElement.style.display = 'none';\r\n\t}\r\n\r\n\tvar dmgimm = mon.immune;\r\n\tif (dmgimm) {\r\n\t\trootEl.querySelector(\"#dmgimm\").parentElement.style.display = 'block';\r\n\t\trootEl.querySelector(\"#dmgimm\").innerHTML = (dmgimm);\r\n\t} else {\r\n\t\trootEl.querySelector(\"#dmgimm\").parentElement.style.display = 'none';\r\n\t}\r\n\r\n\tvar conimm = mon.conditionImmune;\r\n\tif (conimm) {\r\n\t\trootEl.querySelector(\"#conimm\").parentElement.style.display = 'block';\r\n\t\trootEl.querySelector(\"#conimm\").innerHTML = (conimm);\r\n\t} else {\r\n\t\trootEl.querySelector(\"#conimm\").parentElement.style.display = 'none';\r\n\t}\r\n\r\n\tvar senses = mon.senses;\r\n\tif (senses) {\r\n\t\trootEl.querySelector(\"#senses\").innerHTML = (senses + \", \");\r\n\t} else {\r\n\t\trootEl.querySelector(\"#senses\").innerHTML = (\"\");\r\n\t}\r\n\r\n\tvar passive = mon.passive || (10 + perception).toString;\r\n\trootEl.querySelector(\"#pp\").innerHTML = (passive)\r\n\r\n\tvar languages = mon.languages;\r\n\tif (languages) {\r\n\t\trootEl.querySelector(\"#languages\").innerHTML = (languages);\r\n\t} else {\r\n\t\trootEl.querySelector(\"#languages\").innerHTML = (\"\\u2014\");\r\n\t}\r\n\r\n\tvar cr = mon.cr === undefined ? \"Unknown\" : mon.cr;\r\n\trootEl.querySelector(\"#cr\").innerHTML = (cr);\r\n\trootEl.querySelector(\"#xp\").innerHTML = (Parser.crToXp(cr));\r\n\r\n\tvar traits = mon.trait;\r\n\trootEl.querySelector(\"#traits\").style.display = 'none';\r\n\r\n\tif (traits && traits.length > 0) {\r\n\t\trootEl.querySelector(\"#traits\").style.display = 'block';\r\n\t\tfor (var i = traits.length - 1; i >= 0; i--) {\r\n\t\t\tvar traitname = traits[i].name;\r\n\t\t\tvar traittext = traits[i].text;\r\n\t\t\tvar traittexthtml = \"\";\r\n\t\t\tvar renderedcount = 0;\r\n\t\t\tfor (var n = 0; n < traittext.length; n++) {\r\n\t\t\t\tif (!traittext[n]) continue;\r\n\r\n\t\t\t\trenderedcount++;\r\n\t\t\t\tvar firstsecond = \"\";\r\n\t\t\t\tif (renderedcount === 1) firstsecond = \"first \";\r\n\t\t\t\tif (renderedcount === 2) firstsecond = \"second \";\r\n\r\n\t\t\t\tvar spells = \"\";\r\n\t\t\t\tif (traitname.indexOf(\"Spellcasting\") !== -1 && traittext[n].indexOf(\": \") !== -1) spells = \"spells\";\r\n\t\t\t\tif (traitname.indexOf(\"Variant\") !== -1 && traitname.indexOf(\"Coven\") !== -1 && traittext[n].indexOf(\": \") !== -1) spells = \"spells\";\r\n\r\n\t\t\t\ttraittexthtml = traittexthtml + \"<p class='\" + firstsecond + spells + \"'>\" + traittext[n].replace(/\\u2022\\s?(?=C|\\d|At\\swill)/g, \"\")+\"</p>\";\r\n\t\t\t}\r\n\t\t\tconst newTrait = parseHTML(\"<div class='trait'><div class='trait\" + i + \"'><span class='name'>\" + traitname + \".</span> \" + traittexthtml + \"</div></div>\");\r\n\t\t\tjqAfter(rootEl.querySelector(\"#traits\"), newTrait);\r\n\r\n\t\t\t// parse spells, make hyperlinks\r\n\t\t\tconst spellLinks = rootEl.querySelectorAll('.trait div p.spells');\r\n\t\t\tfor (let spellLink of spellLinks) {\r\n\t\t\t\tlet spellslist = spellLink.innerHTML;\r\n\t\t\t\tif (spellslist[0] === \"*\") return;\r\n\t\t\t\tspellslist = spellslist.split(\": \")[1].split(/\\, (?!\\+|\\dd|appears|inside gems)/g);\r\n\t\t\t\tfor (let i = 0; i < spellslist.length; i++) {\r\n\t\t\t\t\tspellslist[i] = \"<a href='#/spells/\" + encodeURIComponent((spellslist[i].replace(/(\\*)| \\(([^\\)]+)\\)/g, \"\"))).toLowerCase().replace(\"'\", \"%27\") + \"_\" + \"phb'>\" + spellslist[i] + \"</a>\";\r\n\t\t\t\t\tif (i !== spellslist.length - 1) spellslist[i] = spellslist[i] + \", \";\r\n\t\t\t\t}\r\n\r\n\t\t\t\tspellLink.innerHTML = (spellLink.innerHTML.split(\": \")[0] + \": \" + spellslist.join(\"\"));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconst actions = mon.action;\r\n\r\n\tif (actions && actions.length) for (let i = actions.length - 1; i >= 0; i--) {\r\n\t\tconst actionname = actions[i].name;\r\n\t\tconst actiontext = actions[i].text;\r\n\t\tlet actiontexthtml = \"\";\r\n\t\tlet renderedcount = 0;\r\n\t\tfor (let n = 0; n < actiontext.length; n++) {\r\n\t\t\tif (!actiontext[n]) continue;\r\n\r\n\t\t\trenderedcount++;\r\n\t\t\tlet firstsecond = \"\";\r\n\t\t\tif (renderedcount === 1) firstsecond = \"first \";\r\n\t\t\tif (renderedcount === 2) firstsecond = \"second \";\r\n\r\n\t\t\tactiontexthtml = actiontexthtml + \"<p class='\"+firstsecond+\"'>\"+actiontext[n]+\"</p>\";\r\n\t\t}\r\n\t\tconst newAction = parseHTML(\"<div class='action'><div class='action\"+i+\"'><span class='name'>\"+actionname+\".</span> \"+actiontexthtml+\"</div></div>\")\r\n\t\tjqAfter(rootEl.querySelector('#actions'), newAction);\r\n\t}\r\n\r\n\tconst reactions = mon.reaction;\r\n\trootEl.querySelector(\"#reactions\").style.display = 'none';\r\n\r\n\tif (reactions && (reactions.text || reactions.length)) {\r\n\r\n\t\trootEl.querySelector(\"#reactions\").style.display = 'block';\r\n\r\n\t\tif (!reactions.length) {\r\n\t\t\tconst reactionname = reactions.name;\r\n\t\t\tconst reactiontext = reactions.text;\r\n\t\t\tlet reactiontexthtml = \"\";\r\n\t\t\tlet renderedcount = 0;\r\n\t\t\tfor (let n = 0; n < reactiontext.length; n++) {\r\n\t\t\t\tif (!reactiontext[n]) continue;\r\n\r\n\t\t\t\trenderedcount++;\r\n\t\t\t\tlet firstsecond = \"\";\r\n\t\t\t\tif (renderedcount === 1) firstsecond = \"first \";\r\n\t\t\t\tif (renderedcount === 2) firstsecond = \"second \";\r\n\r\n\t\t\t\treactiontexthtml = reactiontexthtml + \"<p class='\" + firstsecond + \"'>\" + reactiontext[n] + \"</p>\";\r\n\t\t\t}\r\n\r\n\t\t\tconst newNonReaction = parseHTML(\"<div class='reaction'><div class='reaction0'><span class='name'>\" + reactionname + \".</span> \" + reactiontexthtml + \"</div></div>\")\r\n\t\t\tjqAfter(rootEl.querySelector(\"#reactions\"), newNonReaction);\r\n\t\t}\r\n\r\n\t\tif (reactions.length) for (let i = reactions.length - 1; i >= 0; i--) {\r\n\t\t\tconst reactionname = reactions[i].name;\r\n\r\n\t\t\tconst reactiontext = reactions[i].text;\r\n\t\t\tlet reactiontexthtml = \"<span>\" + reactiontext + \"</span>\";\r\n\t\t\tfor (let n = 1; n < reactiontext.length; n++) {\r\n\t\t\t\tif (!reactiontext[n]) continue;\r\n\t\t\t\treactiontexthtml = reactiontexthtml + \"<p>\" + reactiontext[n] + \"</p>\";\r\n\t\t\t}\r\n\r\n\t\t\tconst newReaction = parseHTML(\"<div class='reaction'><div class='reaction\" + i + \"'><span class='name'>\" + reactionname + \".</span> \" + reactiontexthtml + \"</div></div>\")\r\n\t\t\tjqAfter(rootEl.querySelector(\"#reactions\"), newReaction);\r\n\t\t}\r\n\t}\r\n\r\n\tconst legendaries = mon.legendary;\r\n\trootEl.querySelector(\"#legendaries\").style.display = 'none';\r\n\tif (legendaries) {\r\n\t\trootEl.querySelector(\"#legendaries\").style.display = 'block';\r\n\t\tlet shouldAddCap = legendaries.length > 0;\r\n\t\tfor (let i = legendaries.length - 1; i >= 0; i--) {\r\n\t\t\tconst legendaryname = legendaries[i].name ? legendaries[i].name + \".\" : \"\";\r\n\t\t\tconst legendarytext = legendaries[i].text;\r\n\t\t\tlet legendarytexthtml = \"\";\r\n\t\t\tlet renderedcount = 0;\r\n\t\t\tfor (let n = 0; n < legendarytext.length; n++) {\r\n\t\t\t\tif (!legendarytext[n]) continue;\r\n\t\t\t\trenderedcount++;\r\n\t\t\t\tlet firstsecond = \"\";\r\n\t\t\t\tif (renderedcount === 1) firstsecond = \"first \";\r\n\t\t\t\tif (renderedcount === 2) firstsecond = \"second \";\r\n\t\t\t\tlegendarytexthtml += `<p class='${firstsecond}'>${legendarytext[n]}</p>`;\r\n\t\t\t}\r\n\t\t\tconst newLegendary = parseHTML(`<div class='legendary'><div class='legendary'><span class='name'>${legendaryname}</span> ${legendarytexthtml}</div></div>`)\r\n\t\t\tjqAfter(rootEl.querySelector(\"#legendaries\"), newLegendary);\r\n\t\t\tif (legendaryname.trim() === '' || legendaryname.indexOf('Legendary Actions') > -1) {\r\n\t\t\t\tshouldAddCap = false;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (shouldAddCap) {\r\n\t\t\tconst legendaryActions = mon.legendaryActions || 3;\r\n\t\t\tconst legendaryName = name.split(\",\");\r\n\t\t\tconst newLegendaryCap = parseHTML(`<div class='legendary'><div class='legendary'><span class='name'></span> <span>${legendaryName[0]} can take ${legendaryActions} legendary action${legendaryActions > 1 ? \"s\" : \"\"}, choosing from the options below. Only one legendary action can be used at a time and only at the end of another creature's turn. ${legendaryName[0]} regains spent legendary actions at the start of its turn.</span></div></div>`)\r\n\t\t\tjqAfter(rootEl.querySelector(\"#legendaries\"), newLegendaryCap);\r\n\t\t}\r\n\t}\r\n\r\n\trootEl.querySelector(\"#lairactions\").style.display = 'none';\r\n\trootEl.querySelector(\"#regionaleffects\").style.display = 'none';\r\n\tif (mon.lairActions) renderSection(\"lairaction\", mon.lairActions);\r\n\tif (mon.regionalEffects) renderSection(\"regionaleffect\", mon.regionalEffects);\r\n\r\n\tfunction renderSection(sectionClass, sectionEntries) {\r\n\t\trootEl.querySelector(`#${sectionClass}s`).style.display = 'block';\r\n\t\tentryList = {type: \"entries\", entries: sectionEntries};\r\n\t\trenderStack = [];\r\n\t\trenderer.recursiveEntryRender(entryList, renderStack);\r\n\t\tconst newThing = parseHTML(`<div class='${sectionClass}'><div class='legendary'>${utils_makeRoller(renderStack.join(\"\"))}</div></div>`)\r\n\t\tjqAfter(rootEl.querySelector(`#${sectionClass}s`), newThing);\r\n\t}\r\n\r\n\tif (mon.skill) {\r\n\t\tmakeSkillRoller(rootEl.querySelector(\"#skills\"));\r\n\t}\r\n\tif (mon.save) {\r\n\t\tmakeSaveRoller(rootEl.querySelector(\"#saves\"));\r\n\t}\r\n\tfunction makeSkillRoller(element) {\r\n\t\tconst $this = element;\r\n\r\n\t\tconst re = /,\\s*(?![^()]*\\))/g; // Don't split commas within parentheses\r\n\t\tconst skills = $this.innerHTML.split(re).map(s => s.trim());\r\n\t\tconst out = [];\r\n\r\n\t\tskills.map(s => {\r\n\t\t\tconst re = /(\\-|\\+)?\\d+|(?:[^\\+]|\\n(?!\\+))+/g; // Split before and after each bonus\r\n\t\t\tconst spl = s.match(re);\r\n\r\n\t\t\tconst skillName = spl[0].trim();\r\n\r\n\t\t\tvar skillString = \"\";\r\n\t\t\tspl.map(b => {\r\n\t\t\t\tconst re = /(\\-|\\+)?\\d+/;\r\n\r\n\t\t\t\tif (b.match(re)){\r\n\t\t\t\t\tconst bonus = Number(b);\r\n\t\t\t\t\tconst fromAbility = Parser.getAbilityModNumber(mon[getAttribute(skillName)]);\r\n\t\t\t\t\tconst expectedPB = getProfBonusFromCr(mon.cr);\r\n\t\t\t\t\tconst pB = bonus - fromAbility;\r\n\t\t\r\n\t\t\t\t\tconst expert = (pB === expectedPB * 2) ? 2 : 1;\r\n\t\t\t\t\tconst pBonusStr = `+${bonus}`;\r\n\t\t\t\t\tconst pDiceStr = `${expert}d${pB*(3-expert)}${fromAbility >= 0 ? \"+\" : \"\"}${fromAbility}`;\r\n\t\t\r\n\t\t\t\t\tskillString += renderSkillOrSaveRoller(skillName, pBonusStr, pDiceStr, false);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tskillString += b;\r\n\t\t\t\t}\t\t\t\t\r\n\t\t\t});\r\n\r\n\t\t\tout.push(skillString);\r\n\t\t});\t\t\r\n\r\n\t\t$this.innerHTML = (out.join(\", \"));\r\n\t}\r\n\tfunction makeSaveRoller(element) {\r\n\t\tconst $this = element;\r\n\t\tconst saves = $this.innerHTML.split(\",\").map(s => s.trim());\r\n\t\tconst out = [];\r\n\t\tsaves.map(s => {\r\n\t\t\tconst spl = s.split(\"+\").map(s => s.trim());\r\n\t\t\tconst bonus = Number(spl[1]);\r\n\t\t\tconst fromAbility = Parser.getAbilityModNumber(mon[spl[0].toLowerCase()]);\r\n\t\t\tconst expectedPB = getProfBonusFromCr(mon.cr);\r\n\t\t\tconst pB = bonus - fromAbility;\r\n\r\n\t\t\tconst expert = (pB === expectedPB * 2) ? 2 : 1;\r\n\t\t\tconst pBonusStr = `+${bonus}`;\r\n\t\t\tconst pDiceStr = `${expert}d${pB*(3-expert)}${fromAbility >= 0 ? \"+\" : \"\"}${fromAbility}`;\r\n\r\n\t\t\tout.push(spl[0] + ' ' + renderSkillOrSaveRoller(spl[0], pBonusStr, pDiceStr, true));\r\n\t\t});\r\n\t\t$this.innerHTML = (out.join(\", \"));\r\n\t}\r\n\tfunction renderSkillOrSaveRoller(itemName, profBonusString, profDiceString, isSave) {\r\n\t\tconst mode = PROF_MODE_BONUS;\r\n\t\treturn `<span class='roller' title=\"${itemName} ${isSave ? \" save\" : \"\"}\" data-roll-alt=\"1d20;${profDiceString}\" data-roll='1d20${profBonusString}' ${ATB_PROF_MODE}='${mode}' ${ATB_PROF_DICE_STR}=\"+${profDiceString}\" ${ATB_PROF_BONUS_STR}=\"${profBonusString}\">${profBonusString}</span>`;\r\n\t}\r\n\r\n\t// inline rollers\r\n\tconst statPEls = rootEl.querySelectorAll(\"#stats p\");\r\n\tfor (let statPEl of statPEls) {\r\n\t\taddNonD20Rollers(statPEl);\r\n\r\n\t\t// add proficiency dice stuff for attack rolls, since those _generally_ have proficiency\r\n\t\t// this is not 100% accurate; for example, ghouls don't get their prof bonus on bite attacks\r\n\t\t// fixing it would probably involve machine learning though; we need an AI to figure it out on-the-fly\r\n\t\t// (Siri integration forthcoming)\r\n\t\tconst titleMaybe = attemptToGetTitle(statPEl);\r\n\t\tconst mode = PROF_MODE_BONUS;\r\n\r\n\t\tstatPEl.innerHTML = (statPEl.innerHTML.replace(/(\\-|\\+)?\\d+(?= to hit)/g, function(match) {\r\n\t\t\tconst bonus = Number(match);\r\n\r\n\t\t\tconst expectedPB = getProfBonusFromCr(mon.cr);\r\n\t\t\tconst withoutPB = bonus - expectedPB;\r\n\r\n\t\t\tif (expectedPB > 0) {\r\n\t\t\t\tconst profDiceString = `1d${expectedPB*2}${withoutPB >= 0 ? \"+\" : \"\"}${withoutPB}`;\r\n\r\n\t\t\t\treturn `<span class='roller' ${titleMaybe ? `title=\"${titleMaybe}\"` : \"\"} data-roll-alt='1d20;${profDiceString}' data-roll='1d20${match}' ${ATB_PROF_MODE}='${mode}' ${ATB_PROF_DICE_STR}=\"+${profDiceString}\" ${ATB_PROF_BONUS_STR}=\"${match}\">${match}</span>`\r\n\t\t\t} else {\r\n\t\t\t\treturn `<span class='roller' data-roll='1d20${match}'>${match}</span>`; // if there was no proficiency bonus to work with, fall back on this\r\n\t\t\t}\r\n\t\t}));\r\n\r\n\t\tstatPEl.innerHTML = (statPEl.innerHTML.replace(/DC\\s*(\\d+)/g, function(match, capture) {\r\n\t\t\tconst dc = Number(capture);\r\n\r\n\t\t\tconst expectedPB = getProfBonusFromCr(mon.cr);\r\n\r\n\t\t\tif (expectedPB > 0) {\r\n\t\t\t\tconst withoutPB = dc - expectedPB;\r\n\t\t\t\tconst profDiceString = `1d${(expectedPB*2)}${withoutPB >= 0 ? \"+\" : \"\"}${withoutPB}`;\r\n\r\n\t\t\t\treturn `DC <span class=\"dc-roller\" ${titleMaybe ? `title=\"${titleMaybe}\"` : \"\"} ${ATB_PROF_MODE}=\"${mode}\" data-roll-alt=\"${profDiceString}\" data-bonus=\"${capture}\" ${ATB_PROF_DICE_STR}=\"+${profDiceString}\" ${ATB_PROF_BONUS_STR}=\"${capture}\">${capture}</span>`;\r\n\t\t\t} else {\r\n\t\t\t\treturn match; // if there was no proficiency bonus to work with, fall back on this\r\n\t\t\t}\r\n\t\t}));\r\n\t}\r\n\taddNonD20Rollers(rootEl.querySelector(\"#stats #hp\"));\r\n\tfunction addNonD20Rollers (ele) {\r\n\t\tele.innerHTML = ele.innerHTML.replace(/\\d+d\\d+(\\s?(\\-|\\+)\\s?\\d+\\s?)?/g, function(match) {\r\n      const titleMaybe = attemptToGetTitle(ele);\r\n      return `<span class='roller' ${titleMaybe ? `title=\"${titleMaybe}\"` : \"\"} data-roll='${match}'>${match}</span>`;\r\n    });\r\n\t}\r\n\tfunction attemptToGetTitle(ele) {\r\n\t\tlet titleMaybe = ele.parentElement.querySelector(\".name\");\r\n\t\tif (titleMaybe) {\r\n\t\t\ttitleMaybe = titleMaybe.innerHTML;\r\n\t\t\tif (titleMaybe) {\r\n\t\t\t\ttitleMaybe = titleMaybe.substring(0, titleMaybe.length-1).trim();\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn titleMaybe;\r\n\t}\r\n\r\n\t//$(\".spells span.roller\").contents().unwrap();\r\n\tlet statsRollerEls = rootEl.querySelectorAll(\"#stats span.roller\");\r\n\tfor (let statsRollerEl of statsRollerEls) {\r\n\t\tstatsRollerEl.addEventListener('click', () => {\r\n\t\t\tconst $this = statsRollerEl;\r\n\t\t\tlet roll;\r\n\t\t\tlet rollResult;\r\n\t\t\tif ($this.getAttribute(ATB_PROF_MODE) === PROF_MODE_DICE) {\r\n\t\t\t\troll = $this.getAttribute(\"data-roll-alt\").replace(/\\s+/g, \"\");\r\n\t\t\t\t// hacks because droll doesn't support e.g. \"1d20+1d4+2\" :joy: :ok_hand:\r\n\t\t\t\tconst multi = roll.split(\";\");\r\n\t\t\t\troll = roll.replace(\";\", \"+\");\r\n\t\t\t\trollResult = droll.roll(multi[0]);\r\n\t\t\t\tconst res2 = droll.roll(multi[1]);\r\n\t\t\t\trollResult.rolls = rollResult.rolls.concat(res2.rolls);\r\n\t\t\t\trollResult.total += res2.total;\r\n\t\t\t} else {\r\n\t\t\t\troll = $this.getAttribute(\"data-roll\").replace(/\\s+/g, \"\");\r\n\t\t\t\trollResult = droll.roll(roll);\r\n\t\t\t}\r\n\t\t\toutputRollResult($this, roll, rollResult);\r\n\t\t});\r\n\t}\r\n\t\r\n\tlet statsDCRollerEls = rootEl.querySelectorAll(\"#stats span.roller\");\r\n\tfor (let statsDCRollerEl of statsDCRollerEls) {\r\n\t\tconst $this = statsDCRollerEl;\r\n    let roll;\r\n    let rollResult;\r\n    if ($this.getAttribute(ATB_PROF_MODE) === PROF_MODE_DICE) {\r\n      roll = $this.getAttribute(\"data-roll-alt\").replace(/\\s+/g, \"\");\r\n      rollResult = droll.roll(roll);\r\n      outputRollResult($this, roll, rollResult);\r\n    }\r\n\t}\r\n\r\n\tfunction outputRollResult($ele, roll, rollResult) {\r\n\t\tconst name = window.monsterName;\r\n\t\tconst newResult = parseHTML(\r\n      `<span>${name}: <em>${roll}</em> rolled ${\r\n        $ele.getAttribute(\"title\") ? `${$ele.getAttribute(\"title\")} ` : \"\"\r\n      }for <strong>${rollResult.total}</strong> (<em>${rollResult.rolls.join(\", \")}</em>)<br></span>`\r\n\t\t);\r\n\t\tconst outputEl = rootEl.querySelector(\"#output\");\r\n\t\tjqPrepend(outputEl, newResult);\r\n\t\toutputEl.style.display = 'block';\r\n\t\tif (outputEl.children.length === MAX_ROLLS + 1) {\r\n\t\t\toutputEl.children[MAX_ROLLS].remove();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport { renderSelection, SKILL_TO_ATB_ABV };\r\n","import { PolymerElement, html } from \"@polymer/polymer\";\nimport {\n    getCharacterChannel,\n    getSelectedCharacter,\n    saveCharacter,\n} from \"../../../util/charBuilder\";\nimport { getEditModeChannel, isEditMode } from \"../../../util/editMode\";\nimport { util_capitalizeAll, absInt, cloneDeep } from \"../../../js/utils\"; \nimport { loadModel } from \"../../../util/data\";\nimport '../../dnd-select-add';\nimport { SKILL_TO_ATB_ABV } from \"../../../js/bestiary\";\nimport { } from '@polymer/polymer/lib/elements/dom-if.js';\n    \nclass DndCharacterBuilderSuboptions extends PolymerElement {\n    static get properties() {\n        return {\n            storageKey: {\n                type: String\n            },\n            // This selectedItem provided is used to populate the sub option fields using the option data structure setup in data\n            selectedItem: {\n                type: Object\n            },\n\n            skillProfOptions: {\n                type: Array,\n                value: []\n            },\n            skillProfChoices: {\n                type: Number,\n            },\n            selectedSkillProfs: {\n                type: Array,\n            },\n            defaultSkillProfs: {\n                type: String,\n                value: \"\"\n            },\n\n            attributeOptions: {\n                type: Array,\n                value: []\n            },\n            attributeChoices: {\n                type: Number,\n            },\n            attributeMod: {\n                type: Number,\n            },\n            selectedAttributes: {\n                type: Array,\n            },\n            defaultAttributes: {\n                type: String,\n                value: \"\"\n            },\n\n            featOptions: {\n                type: Array,\n                value: []\n            },\n            featChoices: {\n                type: Number\n            },\n            selectedFeat: {\n                type: Array,\n            },\n\n            isEditMode: {\n                type: Boolean,\n                value: false\n            },\n        };\n    }\n\n    static get observers() {\n        return ['updateOptions(selectedItem, storageKey, character)']\n    }\n\n    connectedCallback() {\n        super.connectedCallback();\n\n        this.characterChangeHandler = (e) => {\n            // let character = cloneDeep(e.detail.character);\n            let character = e.detail.character;\n            this.set('character', character);\n            this.updateOptions();\n        };\n        \n        this.set('character', getSelectedCharacter());\n        getCharacterChannel().addEventListener(\"character-selected\", this.characterChangeHandler);\n\n        this.editModeHandler = (e) => {\n            this.isEditMode = e.detail.isEditMode;\n        }\n        getEditModeChannel().addEventListener('editModeChange', this.editModeHandler);\n        this.isEditMode = isEditMode();\n    }\n\n    disconnectedCallback() {\n        super.disconnectedCallback();\n\n        getCharacterChannel().removeEventListener(\"character-selected\", this.characterChangeHandler);\n        getEditModeChannel().removeEventListener('editModeChange', this.editModeHandler);\n    }\n\n    async updateOptions() {\n        if (this.character && this.storageKey && this.selectedItem) {\n            // Finding the storedItem from the character's choices at storageKey \n            const storageKeys = this.storageKey.split('.');\n            if (!this.character.choices) {\n                this.character.choices = {};\n            }\n            let storedItem = this.character.choices;\n\n            for (let i = 0; i < storageKeys.length; i++) {\n                const storageKey = storageKeys[i];\n                if (!storedItem[storageKey]) {\n                    if (storageKeys.length < i + 1 && !isNaN(parseInt(storageKeys[i + 1], 10))) {\n                        storedItem[storageKey] = new Array(20);\n                    } else {\n                        storedItem[storageKey] = {};\n                    }\n                }\n                storedItem = storedItem[storageKey];\n            }\n            this.storedItem = storedItem;\n\n\n            // Retrieving the selected choices for attribute, feat, or proficiency off of the storedItem\n\n            // Populating Attribute choice field\n            this.attributeOptions = [];\n            this.attributeChoices = null;\n            this.attributeMod = 1;\n            this.selectedAttributes = null;\n            this.defaultAttributes = null;\n            if (this.selectedItem.ability && this.selectedItem.ability.length) {\n                const ability = this.selectedItem.ability[0];\n                if (ability.choose) {\n                    this.attributeOptions = ability.choose.from.map(i => { return i.toUpperCase() });\n                    this.attributeChoices = ability.choose.count || 1;\n                    this.attributeMod = ability.choose.amount || 1;\n                    this.selectedAttributes = this.storedItem.selectedAttributes ? this.storedItem.selectedAttributes.split(',') : null;\n                }\n                this.defaultAttributes = Object.entries(ability).map(e => {\n                    if (e[0] !== 'choose' && e[0] !== 'any') {\n                        let attribute = e[0].toLowerCase(),\n                            mod = e[1];\n                        return attribute.toUpperCase() + ' ' + absInt(mod);\n                    }\n                }).filter(e => !!e).join(', ');\n                // store defaults on character to avoid future look-ups\n                this.storedItem.defaultAttributes = this.defaultAttributes;\n                this.storedItem.attributeMod = this.attributeMod;\n            }\n\n            // Populating Skill Proficiency choice field\n            this.skillProfOptions = [];\n            this.skillProfChoices = null;\n            this.selectedSkillProfs = null;\n            this.defaultSkillProfs = null;\n            if (this.selectedItem.skillProficiencies && this.selectedItem.skillProficiencies.length) {\n                const skillProficiency = this.selectedItem.skillProficiencies[0];\n                if (skillProficiency.choose) {\n                    this.skillProfOptions = skillProficiency.choose.from;\n                    this.skillProfChoices = skillProficiency.choose.count || 1;\n                    this.selectedSkillProfs = this.storedItem.selectedSkillProfs ? this.storedItem.selectedSkillProfs.split(',') : null;\n                }\n                if (skillProficiency.any) {\n                    this.skillProfOptions = Object.keys(SKILL_TO_ATB_ABV);\n                    this.skillProfChoices = skillProficiency.any;\n                    this.selectedSkillProfs = this.storedItem.selectedSkillProfs ? this.storedItem.selectedSkillProfs.split(',') : null;\n                }\n                this.defaultSkillProfs = Object.keys(skillProficiency).map(e => {\n                    if (e !== 'choose' && e !== 'any') {\n                        return util_capitalizeAll(e) \n                    }\n                }).filter(e => !!e).join(', ');\n                // store defaults on character to avoid future look-ups\n                this.storedItem.defaultSkillProfs = this.defaultSkillProfs;\n            }\n\n            // Populating Feat choice field\n            this.featOptions = [];\n            this.featChoices = null;\n            this.selectedFeat = null;\n            if (this.selectedItem.feats) {\n                this.featOptions = await loadModel('feats');\n                this.featChoices = this.selectedItem.feats;\n                this.selectedFeat = this.storedItem.selectedFeat;\n            }\n            \n            this.dispatchEvent(new CustomEvent(\"loadingChange\", { bubbles: true, composed: true }));\n        }\n    }\n\n    _skillProficiencyAddCallback() {\n        return ((skills) => {\n            this.storedItem.selectedSkillProfs = skills.join(',');\n            saveCharacter(this.character);\n        }).bind(this);\n    }\n\n    _attributeAddCallback() {\n        return ((attr) => {\n            this.storedItem.selectedAttributes = attr.join(',');\n            saveCharacter(this.character);\n        }).bind(this);\n    }\n\n    _featAddCallback() {\n        return ((feat) => {\n            this.storedItem.selectedFeat = feat;\n            saveCharacter(this.character);\n        }).bind(this);\n    }\n\n    _suboptionStorageKey(storageKey) {\n        return `${storageKey}.suboptions`\n    }\n\n    _showEmpty(isEditMode, value) {\n        return !isEditMode && !value;\n    }\n\n    _exists() {\n        for (let arg of arguments) {\n            if (!!arg && (arg.constructor !== Object || Object.entries(arg).length > 0) && (!Array.isArray(arg) || arg.length > 0)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    _plusPrefix(num) {\n        console.error(num)\n        return `+${num}`\n    }\n\n    _plural(str, num) {\n        if (num > 1) {\n            return str + 's'\n        }\n        return str;\n    }\n\n    static get template() {\n        return html`\n            <style include=\"material-styles\">\n                [hidden] {\n                    display: none !important;\n                }\n                dnd-select-add {\n                    width: 100%;\n                }\n                @media(min-width: 420px) {\n                    dnd-select-add {\n                        width: calc(50% - 20px);\n                    }\n                }\n\n                @media(min-width: 921px) {\n                }\n            </style>\n\n            <div class=\"col-wrap\">\n                <div hidden$=\"[[!_exists(defaultAttributes)]]\" class=\"default-selection\">Default Attributes: <span>[[defaultAttributes]]</span></div>\n\n                <div hidden$=\"[[!_exists(defaultSkillProfs)]]\" class=\"default-selection\">Default Skill Proficiencies: <span>[[defaultSkillProfs]]</span></div>\n\n                <template is=\"dom-if\" if=\"[[_exists(attributeOptions)]]\">\n                    <dnd-select-add disabled$=\"[[!isEditMode]]\" \n                        placeholder=\"<Select Attribute>\" label='[[_plural(\"Selected Attribute\", attributeChoices)]]'\n                        choices=\"[[attributeChoices]]\" paren=\"[[_plusPrefix(attributeMod)]]\" options=\"[[attributeOptions]]\"\n                        value=\"[[selectedAttributes]]\" add-callback=\"[[_attributeAddCallback()]]\">\n                    </dnd-select-add>\n                </template>\n\n                <template is=\"dom-if\" if=\"[[_exists(skillProfOptions)]]\">\n                    <dnd-select-add disabled$=\"[[!isEditMode]]\"\n                        placeholder=\"<Select Skill>\" label='[[_plural(\"Selected Skill\", skillProfChoices)]]'\n                        choices=\"[[skillProfChoices]]\" options=\"[[skillProfOptions]]\"\n                        value=\"[[selectedSkillProfs]]\" add-callback=\"[[_skillProficiencyAddCallback()]]\">\n                    </dnd-select-add>\n                </template>\n\n                <!-- Todo: add language and tool proficiencies -->\n\n                <template is=\"dom-if\" if=\"[[_exists(featOptions)]]\">\n                    <dnd-select-add disabled$=\"[[!isEditMode]]\"\n                        placeholder=\"<Select Feat>\" label=\"Selected Feat\"\n                        options=\"[[featOptions]]\" value=\"[[selectedFeat]]\"\n                        add-callback=\"[[_featAddCallback()]]\">\n                    </dnd-select-add>\n                    \n                    <template is=\"dom-if\" if=\"[[_exists(selectedFeat)]]\"></template>\n                        <dnd-character-builder-suboptions storage-key=\"[[_suboptionStorageKey(storageKey)]]\" selected-item=\"[[selectedFeat]]\"></dnd-character-builder-suboptions>\n                    </template>\n                </template>\n            </div>\n        `;\n    }\n}\n\ncustomElements.define(\"dnd-character-builder-suboptions\", DndCharacterBuilderSuboptions);\n"],"sourceRoot":""}