{"version":3,"sources":["webpack:///./js/items.js","webpack:///./node_modules/@vaadin/vaadin-text-field/vaadin-text-field.js","webpack:///./node_modules/@vaadin/vaadin-checkbox/vaadin-checkbox.js","webpack:///./node_modules/@vaadin/vaadin-text-field/theme/lumo/vaadin-text-area-styles.js","webpack:///./node_modules/@vaadin/vaadin-text-field/src/vaadin-text-area.js","webpack:///./components/views/character/dnd-character-builder-equipment-item-detail.js","webpack:///./node_modules/@vaadin/vaadin-grid/theme/lumo/vaadin-grid-tree-toggle-styles.js","webpack:///./node_modules/@vaadin/vaadin-grid/src/vaadin-grid-tree-toggle.js","webpack:///./components/views/character/dnd-character-builder-equipment.js"],"names":["renderer","renderSelection","item","rootEl","hideFirstLine","querySelector","innerHTML","source","sourceFull","sourceJsonToFull","page","value","weight","tier","rarity","reqAttune","type","weaponCategory","dmg1","dmgType","dmgTypeToFull","ac","speed","capacity","carryingcapacity","append","indexOf","property","properties","split","i","length","prop","a","window","itemPropertyList","name","dmg2","range","reload","entryList","entries","renderStack","recursiveEntryRender","join","toLowerCase","remove","$_documentContainer","document","head","appendChild","content","super","ready","this","_updateHeight","addEventListener","_onAnimationEnd","e","animationName","inputField","root","scrollTop","input","inputElement","inputWidth","getComputedStyle","width","valueLength","_oldValueLength","style","maxWidth","height","display","inputHeight","scrollHeight","clientHeight","removeProperty","_dispatchIronResizeEventIfNeeded","customElements","define","is","isEditMode","Boolean","hasRenderedOutput","Object","storedItem","itemType","String","itemTypes","console","error","itemRef","lookupFailed","$","renderedOutput","_getItemType","armor","container","newType","typeSelect","undefined","wondrous","connectedCallback","editModeHandler","detail","disconnectedCallback","removeEventListener","bools","bool","createElement","level","Number","observer","leaf","reflectToAttribute","expanded","notify","_onClick","preventDefault","toString","_debouncerUpdateLevel","debounce","updateStyles","inventory","Array","character","characterChangeHandler","updateFromCharacter","grid","setTimeout","notifyResize","draggedItem","rowDetailsRenderer","rowData","firstElementChild","bind","draggedItems","dropMode","dropTargetItem","isChild","uniqueId","removeId","itemCounter","dropLocation","children","push","dropTargetId","id","finalAddIndex","parseInt","substring","lastIndexOf","parentItemREF","splice","dataProvider","params","callback","startIndex","pageSize","parentItem","slice","clearCache","dispatchEvent","CustomEvent","bubbles","composed","data","model","__data","stayClosed","detailsOpenedItems","closeItemDetails","openItemDetails","checkboxEl","classList","add","stopPropagation","itemModel","isEquipped","checkbox","target","_flashCheckbox","isAttuned","fromBackground","fromClass","className","isEdited"],"mappings":"6FAAA,iFAIA,MAkBMA,EAAW,IAAI,IACrB,SAASC,EAAgBC,EAAMC,EAAQC,IACzBD,EAAOE,cAAc,uBAAyBF,GACtDG,UArBgB,imBAuBrB,MAAMC,EAASL,EAAKK,OACdC,EAAa,IAAOC,iBAAiBF,GAC3CJ,EAAOE,cAAc,0BAA0BC,UAAY,GAAIE,WAAoBN,EAAKQ,OAExFP,EAAOE,cAAc,yBAAyBC,UAAaJ,EAAKS,MAAQT,EAAKS,OAAOT,EAAKU,OAAS,KAAO,IAAM,GAC/GT,EAAOE,cAAc,0BAA0BC,UAAaJ,EAAKU,OAASV,EAAKU,QAAuB,GAAfV,EAAKU,OAAc,OAAS,SAAW,GAC9HT,EAAOE,cAAc,0BAA0BC,WAAcJ,EAAKW,KAAO,KAAKX,EAAKW,KAAO,KAAKX,EAAKY,OAAS,KAAKZ,EAAKY,OAAS,IAChIX,EAAOE,cAAc,8BAA8BC,UAAaJ,EAAKa,UAAYb,EAAKa,UAAY,GAClGZ,EAAOE,cAAc,wBAAwBC,UAAaJ,EAAa,SAEvEC,EAAOE,cAAc,0BAA0BC,UAAY,GAC3DH,EAAOE,cAAc,8BAA8BC,UAAY,GAC/D,MAAMU,EAAOd,EAAKc,MAAQ,GAC1B,GAAId,EAAKe,eACLf,EAAKgB,OAAMf,EAAOE,cAAc,0BAA0BC,UAAa,0BAAD,CAAkBJ,EAAKgB,OAC7FhB,EAAKiB,UAAShB,EAAOE,cAAc,8BAA8BC,UAAa,IAAOc,cAAclB,EAAKiB,eACrG,GAAa,OAATH,GAAyB,OAATA,GAAyB,OAATA,EAC1Cb,EAAOE,cAAc,0BAA0BC,UAAa,MAAMJ,EAAKmB,IAAa,OAATL,EAAgB,SAAoB,OAATA,EAAgB,iBAAmB,SACnI,GAAa,MAATA,EACVb,EAAOE,cAAc,0BAA0BC,UAAa,OAAOJ,EAAKmB,QAClE,GAAa,QAATL,GAA2B,QAATA,EAAgB,CAC5C,MAAMM,EAAMpB,EAAKoB,MACXC,EAASrB,EAAKsB,iBAChBF,GAAOnB,EAAOE,cAAc,0BAA0BoB,OAAO,SAASH,GACtEA,GAASC,GAAUpB,EAAOE,cAAc,0BAA0BoB,OAAgB,QAATT,EAAiB,KAAO,QACjGO,IACHpB,EAAOE,cAAc,0BAA0BoB,OAAO,qBAAqBF,IAC1C,IAA7BA,EAASG,QAAQ,SAAoD,IAAnCH,EAASG,QAAQ,cAAqBvB,EAAOE,cAAc,0BAA0BoB,OAAmB,GAAZF,EAAgB,OAAS,UAK7J,GADApB,EAAOE,cAAc,8BAA8BC,UAAY,GAC3DJ,EAAKyB,SAAU,CAClB,MAAMC,EAAa1B,EAAKyB,SAASE,MAAM,KACvC,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAWG,OAAQD,IAAK,CAC3C,MAAME,EAAOJ,EAAWE,GACxB,IAAIG,EAAIC,OAAOC,iBAAiBH,GAAMI,KACzB,MAATJ,IAAcC,EAAI,GAAGA,MAAM,2BAAiB/B,EAAKmC,UACxC,MAATL,GAAyB,MAATA,GAAyB,OAATA,IAAeC,EAAI,GAAGA,MAAM/B,EAAKoC,aACxD,QAATN,IAAgBC,EAAI,GAAGA,MAAM/B,EAAKqC,iBACtCN,GAAKH,EAAI,EAAI,KAAO5B,EAAKgB,KAAO,KAAO,IAAMe,EAC7C9B,EAAOE,cAAc,8BAA8BoB,OAAOQ,IAI5D,MAAMO,EAAY,CAACxB,KAAM,UAAWyB,QAASvC,EAAKuC,SAC5CC,EAAc,GACpB1C,EAAS2C,qBAAqBH,EAAWE,EAAa,GACtDvC,EAAOE,cAAc,wBAAwBC,UAAa,2BAAiBoC,EAAYE,KAAK,KAAKf,MAAM3B,EAAKkC,KAAKS,eAAeD,KAAK,MAAM1C,EAAKkC,KAAKS,cAAc,QAC/JzC,GACHD,EAAOE,cAAc,wBAAwByC,W,iCC7E/C,O,iCCAA,e,gHCKA,MAAMC,EAAsB,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eA4DhCC,SAASC,KAAKC,YAAYH,EAAoBI,S;;;;;;ACF9C,MAAM,UAAwB,YAAa,YAAe,YAAc,QACtE,sBACE,OAAO,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA8Db,gBACE,MAAO,mBAGT,qBACE,MAAO,QAGT,uBACE,MAAO,CACL,gCAIJ,QACEC,MAAMC,QACNC,KAAKC,gBACLD,KAAKE,iBAAiB,eAAgBF,KAAKG,iBAG7C,gBAAgBC,GAC6C,IAAvDA,EAAEC,cAAcjC,QAAQ,4BAC1B4B,KAAKC,gBAIT,sBACE,MAAO,WAGT,sBAAsB5C,GACpB2C,KAAKC,gBAGP,gBACE,MAAMK,EAAaN,KAAKO,KAAKxD,cAAc,sBACrCyD,EAAYF,EAAWE,UACvBC,EAAQT,KAAKU,aAEbC,EAAaC,iBAAiBH,GAAOI,MAErCC,EAAcd,KAAK3C,MAAQ2C,KAAK3C,MAAMoB,OAAS,EAEjDuB,KAAKe,iBAAmBD,IAE1BL,EAAMO,MAAMC,SAAWN,EACvBF,EAAMO,MAAME,OAAS,OAErBZ,EAAWU,MAAMG,QAAU,SAE7BnB,KAAKe,gBAAkBD,EAEvB,MAAMM,EAAcX,EAAMY,aACtBD,EAAcX,EAAMa,eACtBb,EAAMO,MAAME,OAASE,EAAc,MAIrCX,EAAMO,MAAMO,eAAe,aAC3BjB,EAAWU,MAAMO,eAAe,WAChCjB,EAAWE,UAAYA,EAEvBR,KAAKwB,iCAAiC,cAAeJ,IAUzDK,eAAeC,OAAO,EAAgBC,GAAI,GC9L1C,MAAM,UAA+C,IAEnD,wBACE,MAAO,CACLC,WAAY,CACVlE,KAAMmE,QACNxE,OAAO,GAETyE,kBAAmB,CACjBpE,KAAMmE,QACNxE,OAAO,GAETT,KAAM,CACJc,KAAMqE,QAERC,WAAY,CACVtE,KAAMqE,QAERE,SAAU,CACRvE,KAAMwE,OACN7E,MAAO,KAKb,uBACE,MAAO,CACL,sBAIJ,cACEyC,QAEAE,KAAKmC,UAAY,CACf,QACA,gBACA,iBACA,SACA,gBACA,mBACA,aAIJ,eACEC,QAAQC,MAAM,cAAerC,KAAKpD,MAE9BoD,KAAKpD,KAAKoF,aACZhC,KAAKgC,WAAahC,KAAKpD,KAAKoF,YAG1BhC,KAAKpD,KAAK0F,UAAYtC,KAAKpD,KAAK2F,cAClCvC,KAAK8B,mBAAoB,EACzB,0BAAgB9B,KAAKpD,KAAMoD,KAAKwC,EAAEC,gBAAgB,IAElDzC,KAAK8B,mBAAoB,EAE3B9B,KAAKiC,SAAWjC,KAAK0C,eAGvB,eACE,GAAI1C,KAAKpD,KAAM,CACb,GAAIoD,KAAKpD,KAAK+F,MACZ,MAAO,QAET,GAAiC,WAA7B3C,KAAKpD,KAAKe,eACZ,MAAO,gBAET,GAAiC,YAA7BqC,KAAKpD,KAAKe,eACZ,MAAO,iBAET,GAAuB,MAAnBqC,KAAKpD,KAAKc,KACZ,MAAO,SAET,GAAIsC,KAAKpD,KAAKgG,UACZ,MAAO,YAET,GAAuB,MAAnB5C,KAAKpD,KAAKc,KACZ,MAAO,mBAGX,MAAO,GAGT,kBACE,MAAMmF,EAAU7C,KAAKwC,EAAEM,WAAWzF,MAKlC,OAJA2C,KAAKgC,WAAWW,OAAQ,EACxB3C,KAAKgC,WAAWrE,oBAAiBoF,EACjC/C,KAAKgC,WAAWgB,UAAW,EAEnBH,GACN,IAAK,QACH7C,KAAKgC,WAAWW,OAAQ,EACxB,MACF,IAAK,gBACH3C,KAAKgC,WAAWrE,eAAiB,SACjC,MACF,IAAK,iBACHqC,KAAKgC,WAAWrE,eAAiB,UACjC,MACF,IAAK,SACHqC,KAAKgC,WAAWtE,KAAO,IACvB,MACF,IAAK,WACHsC,KAAKgC,WAAWgB,UAAW,EAC3B,MACF,IAAK,mBACHhD,KAAKgC,WAAWtE,KAAO,IACvB,MACF,IAAK,YACHsC,KAAKgC,WAAWY,WAAY,EAGhC,aAAQ5C,KAAKpD,MAGf,oBACEkD,MAAMmD,oBAENjD,KAAKkD,gBAAmB9C,IACtBJ,KAAK4B,WAAaxB,EAAE+C,OAAOvB,YAE7B,cAAqB1B,iBAAiB,iBAAkBF,KAAKkD,iBAC7DlD,KAAK4B,WAAa,cAGpB,uBACE9B,MAAMsD,uBAEN,cAAqBC,oBAAoB,iBAAkBrD,KAAKkD,iBAGlE,cACE,aAAQlD,KAAKpD,MAGf,OAAO0G,GACL,IAAK,IAAIC,KAAQD,EACf,GAAIC,EACF,OAAO,EAGX,OAAO,EAGT,sBACE,OAAO,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAyDf9B,eAAeC,OAAO,8CAA+C,I,yDCjNrE,MAAMjC,EAAsB,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eAmGhCC,SAASC,KAAKC,YAAYH,EAAoBI,S;;;;;;AC1F9C,MAAM,EAAsBH,SAAS8D,cAAc,YAEnD,EAAoBxG,UAAY,mpDAWhC0C,SAASC,KAAKC,YAAY,EAAoBC,SA6C9C,MAAM,UAA8B,YAAc,YAAS,OACzD,sBACE,OAAO,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA8Db,gBACE,MAAO,0BAGT,wBACE,MAAO,CAKL4D,MAAO,CACL/F,KAAMgG,OACNrG,MAAO,EACPsG,SAAU,iBAMZC,KAAM,CACJlG,KAAMmE,QACNxE,OAAO,EACPwG,oBAAoB,GAMtBC,SAAU,CACRpG,KAAMmE,QACNxE,OAAO,EACPwG,oBAAoB,EACpBE,QAAQ,IAKd,QACEjE,MAAMC,QAENC,KAAKE,iBAAiB,QAASE,GAAKJ,KAAKgE,SAAS5D,IAGpD,SAASA,GACHJ,KAAK4D,OAITxD,EAAE6D,iBACFjE,KAAK8D,UAAY9D,KAAK8D,UAGxB,cAAcL,GACZ,MAAMpG,EAAQqG,OAAOD,GAAOS,WAC5BlE,KAAKgB,MAAM,YAAc3D,EAGzB2C,KAAKmE,sBAAwB,IAAUC,SACrCpE,KAAKmE,sBACL,IACA,IAAMnE,KAAKqE,aAAa,CAAC,WAAYhH,MAK3CoE,eAAeC,OAAO,EAAsBC,GAAI,I,uGCnLhD,MAAM,UAAqC,IAEzC,wBACE,MAAO,CACL2C,UAAW,CACT5G,KAAM6G,OAER3C,WAAY,CACVlE,KAAMmE,QACNxE,OAAO,GAETmH,UAAW,CACT9G,KAAMqE,SAKZ,oBACEjC,MAAMmD,oBAENjD,KAAKyE,uBAA0BrE,IAC7B,IAAIoE,EAAYpE,EAAE+C,OAAOqB,UACzBxE,KAAK0E,oBAAoBF,IAG3BxE,KAAK0E,oBAAoB,eACzB,cAAsBxE,iBAAiB,qBAAsBF,KAAKyE,wBAElEzE,KAAKkD,gBAAmB9C,IACtBJ,KAAK4B,WAAaxB,EAAE+C,OAAOvB,WACvB5B,KAAKwC,EAAEmC,MACTC,WAAW,KACT5E,KAAKwC,EAAEmC,KAAKE,gBACX,IAGP,cAAqB3E,iBAAiB,iBAAkBF,KAAKkD,iBAC7DlD,KAAK4B,WAAa,cAGpB,uBACE9B,MAAMsD,uBAEN,cAAsBC,oBAAoB,qBAAsBrD,KAAKyE,wBACrE,cAAqBpB,oBAAoB,iBAAkBrD,KAAKkD,iBAGlE,QACEpD,MAAMC,QAEN6E,WAAW,KACT,MAAMD,EAAO3E,KAAKwC,EAAEmC,KAepB,IAAIG,EAZJH,EAAKI,oBAAqB,CAAExE,EAAMoE,EAAMK,KACjCzE,EAAK0E,oBACR1E,EAAKvD,UACL,+JAIeuD,EAAKxD,cAAc,+CAC3BH,KAAOoI,EAAQpI,OACvBsI,KAAKlF,MAKR2E,EAAKzE,iBAAiB,kBAAkB,SAASE,GAC/C0E,EAAc1E,EAAE+C,OAAOgC,aAAa,GACpCR,EAAKS,SAAW,uBAGlBT,EAAKzE,iBAAiB,gBAAgB,SAASE,GAC7C0E,EAAcH,EAAKS,SAAW,QAGhCT,EAAKzE,iBAAiB,YAAcE,IAClC,MAAMiF,EAAiBjF,EAAE+C,OAAOkC,eAChC,GAAIP,GAAeA,IAAgBO,EAAgB,CAGjD,MAAMC,EAAU,YAAYR,EAAaO,EAAeE,UACxD,GAAIT,EAAYlC,WAAa0C,EAC3B,OAGF,MAAME,EAAWV,EAAY9C,WAAWuD,SAIxC,GAHAT,EAAY9C,WAAWuD,SAAWvF,KAAKwE,UAAUiB,cAGnB,WAA1BrF,EAAE+C,OAAOuC,cACPL,EAAezC,UAQjB,YAPIyC,EAAerD,YAAcqD,EAAerD,WAAW2D,WAEzDN,EAAerD,WAAW2D,SAASC,KAAKd,EAAY9C,YACpD,aAAQqD,OAAgBtC,GAAW,GAEnC,YAAWyC,KAOjB,GAAIxF,KAAKsE,UAAW,CAElB,MAAMuB,EAAe,GAAGR,EAAeS,GACvC,IAAIC,EAAgBC,SAASH,EAAaI,UAAUJ,EAAaK,YAAY,MAAO,IACtD,UAA1B9F,EAAE+C,OAAOuC,cACXK,IAGEV,EAAec,eAEjBd,EAAec,cAAcnE,WAAW2D,SAASS,OAAOL,EAAe,EAAGjB,EAAY9C,YACtF,aAAQqD,EAAec,mBAAepD,GAAW,IAGjD,aAAYgD,EAAejB,EAAY9C,YAIzC,YAAWwD,OAMjBb,EAAK0B,cAAe,CAAEC,EAAQC,KAC5B,MAAMC,EAAaF,EAAOlJ,KAAOkJ,EAAOG,SACxC,IAAId,EAAWW,EAAOI,WAAaJ,EAAOI,WAAWf,SAAW3F,KAAKsE,UACrE,GAAIqB,GAAYA,EAASlH,OAAQ,CAE/B8H,EADaZ,EAASgB,MAAMH,EAAYA,EAAaF,EAAOG,UAC7Cd,EAASlH,WAEzByG,KAAKlF,OACP,GAIL,0BAA0BwE,GACpBA,IACFxE,KAAKwE,UAAYA,EACjBxE,KAAKsE,gBAAkB,YAASE,GAChCpC,QAAQC,MAAM,aAAcrC,KAAKsE,WACjCtE,KAAKwC,EAAEmC,KAAKiC,aACZ5G,KAAK6G,cAAc,IAAIC,YAAY,gBAAiB,CAAEC,SAAS,EAAMC,UAAU,MAInF,eAAe5G,GACb,IAAI6G,EAAO7G,EAAE8G,MAAMC,OAAOvK,KACxBwK,EAAapH,KAAKwC,EAAEmC,KAAK0C,mBAAmBjJ,QAAQ6I,IAAS,EAE/D,IAAK,IAAIrK,KAAQoD,KAAKwC,EAAEmC,KAAK0C,mBAC3BrH,KAAKwC,EAAEmC,KAAK2C,iBAAiB1K,GAG3BwK,EACFpH,KAAKwC,EAAEmC,KAAK2C,iBAAiBL,GAE7BjH,KAAKwC,EAAEmC,KAAK4C,gBAAgBN,GAE9BjH,KAAKwC,EAAEmC,KAAKE,eAGd,eAAe2C,GACTA,IACFA,EAAWC,UAAUC,IAAI,iBACzBF,EAAWC,UAAUC,IAAI,eACzB9C,WAAW,KACT4C,EAAWC,UAAUjI,OAAO,eAC5BoF,WAAW,KACT4C,EAAWC,UAAUjI,OAAO,kBAC3B,MACF,MAIP,YAAYY,GACV,IAAImF,EAAWnF,EAAE8G,MAAMC,OAAOvK,WAAyCmG,IAAjC3C,EAAE8G,MAAMC,OAAOvK,KAAK2I,SAAyBnF,EAAE8G,MAAMC,OAAOvK,KAAK2I,cAAWxC,EAClH,YAAWwC,GAGb,uBAAuBnF,GACrBA,EAAE6D,iBACF7D,EAAEuH,kBACF,IAAIC,EAAYxH,EAAE8G,MAAMC,OAAOvK,KAC3B2I,EAAWqC,EAAYA,EAAUrC,cAAWxC,EAGhD,KAFiB6E,GAAYA,EAAUC,WAGrC,aAAmBtC,QACd,SAAU,YAAaqC,GAC5B,aAAmBrC,OACd,CACL,IAAIuC,EAAW1H,EAAE2H,OAAOhL,cAAc,mBACtCiD,KAAKgI,eAAeF,IAIxB,sBAAsB1H,GACpBA,EAAE6D,iBACF7D,EAAEuH,kBACF,IAAIC,EAAYxH,EAAE8G,MAAMC,OAAOvK,KAC3B2I,EAAWqC,EAAYA,EAAUrC,cAAWxC,EAGhD,KAFgB6E,GAAYA,EAAUK,UAGpC,aAAkB1C,QACb,SAAU,YAAcqC,GAC7B,aAAkBrC,OACb,CACL,IAAIuC,EAAW1H,EAAE2H,OAAOhL,cAAc,mBACtCiD,KAAKgI,eAAeF,IAIxB,gBAAgB1H,GACdA,EAAE6D,iBACF7D,EAAEuH,kBAGJ,OAAOrE,GACL,IAAK,IAAIC,KAAQD,EACf,GAAIC,EACF,OAAO,EAGX,OAAO,EAGT,uBAAuB2E,EAAgBC,GACrC,IAAIC,EAAY,mBAOhB,OANIF,IACFE,GAAa,mCAEXD,IACFC,GAAa,8BAERA,EAGT,uBAAuBC,GACrB,IAAID,EAAY,mBAIhB,OAHIC,IACFD,GAAa,2BAERA,EAGT,UAAU5K,GACR,OAAQA,GAAqB,SAAXA,EAGpB,sBACE,OAAO,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAyPfiE,eAAeC,OAAO,kCAAmC","file":"5.bundle.js","sourcesContent":["import EntryRenderer from '../util/entryrender.js';\r\nimport Parser from '../util/Parser.js';\r\nimport { utils_makeRoller } from '../js/utils.js';\r\n\r\nconst stats_wrapper = `\r\n\t<div class=\"stats-wrapper margin-bottom_large\">\r\n\t\t<div class=\"margin-bottom_small\">\r\n\t\t\t<span class=\"type\"></span><span class=\"rarity\"></span>\r\n\t\t\t<span class=\"attunement\"></span>\r\n\t\t</div>\r\n\t\t<div class=\"margin-bottom_small\">\r\n\t\t\t<span class=\"value\"></span><span class=\"weight\"></span>\r\n\t\t</div>\r\n\t\t<div class=\"margin-bottom_small\">\r\n\t\t\t<span class=\"damage\"></span>\r\n\t\t\t<span class=\"damageType\"></span>\r\n\t\t\t<span class=\"properties\"></span>\r\n\t\t</div>\r\n\t\t<div class=\"text\"></div>\r\n\t\t<div class=\"margin-bottom_small\">Source: <span class=\"source\"></span></div>\r\n\t</div>`;\r\n\r\nconst renderer = new EntryRenderer();\r\nfunction renderSelection(item, rootEl, hideFirstLine) {\r\n\tconst wrap = rootEl.querySelector(\".selection-wrapper\") || rootEl;\r\n\twrap.innerHTML = stats_wrapper;\r\n\t\r\n\tconst source = item.source;\r\n\tconst sourceFull = Parser.sourceJsonToFull(source);\r\n\trootEl.querySelector(\".stats-wrapper .source\").innerHTML = (`${sourceFull}, page ${item.page}`);\r\n\r\n\trootEl.querySelector(\".stats-wrapper .value\").innerHTML = (item.value ? item.value+(item.weight ? \", \" : \"\") : \"\");\r\n\trootEl.querySelector(\".stats-wrapper .weight\").innerHTML = (item.weight ? item.weight+(item.weight == 1 ? \" lb.\" : \" lbs.\") : \"\");\r\n\trootEl.querySelector(\".stats-wrapper .rarity\").innerHTML = ((item.tier ? \", \"+item.tier : \"\")+(item.rarity ? \", \"+item.rarity : \"\"));\r\n\trootEl.querySelector(\".stats-wrapper .attunement\").innerHTML = (item.reqAttune ? item.reqAttune : \"\");\r\n\trootEl.querySelector(\".stats-wrapper .type\").innerHTML = (item.typeText);\r\n\r\n\trootEl.querySelector(\".stats-wrapper .damage\").innerHTML = (\"\");\r\n\trootEl.querySelector(\".stats-wrapper .damageType\").innerHTML = (\"\");\r\n\tconst type = item.type || \"\";\r\n\tif (item.weaponCategory) {\r\n\t\tif(item.dmg1) rootEl.querySelector(\".stats-wrapper .damage\").innerHTML = (utils_makeRoller(item.dmg1));\r\n\t\tif(item.dmgType) rootEl.querySelector(\".stats-wrapper .damageType\").innerHTML = (Parser.dmgTypeToFull(item.dmgType));\r\n\t} else if (type === \"LA\" ||type === \"MA\"|| type === \"HA\") {\r\n\t\trootEl.querySelector(\".stats-wrapper .damage\").innerHTML = (\"AC \"+item.ac+(type === \"LA\" ? \" + Dex\" : type === \"MA\" ? \" + Dex (max 2)\" : \"\"));\r\n\t} else if (type === \"S\") {\r\n\t\trootEl.querySelector(\".stats-wrapper .damage\").innerHTML = (\"AC +\"+item.ac);\r\n\t} else if (type === \"MNT\" || type === \"VEH\") {\r\n\t\tconst speed=item.speed;\r\n\t\tconst capacity=item.carryingcapacity;\r\n\t\tif (speed) rootEl.querySelector(\".stats-wrapper .damage\").append(\"Speed=\"+speed);\r\n\t\tif (speed && capacity) rootEl.querySelector(\".stats-wrapper .damage\").append(type === \"MNT\" ? \", \" : \"<br>\");\r\n\t\tif (capacity) {\r\n\t\t\trootEl.querySelector(\".stats-wrapper .damage\").append(\"Carrying Capacity=\"+capacity);\r\n\t\t\tif (capacity.indexOf(\"ton\") === -1 && capacity.indexOf(\"passenger\") === -1) rootEl.querySelector(\".stats-wrapper .damage\").append(capacity == 1 ? \" lb.\" : \" lbs.\");\r\n\t\t}\r\n\t}\r\n\r\n\trootEl.querySelector(\".stats-wrapper .properties\").innerHTML = (\"\");\r\n\tif (item.property) {\r\n\t\tconst properties = item.property.split(\",\");\r\n\t\tfor (let i = 0; i < properties.length; i++) {\r\n\t\t\tconst prop = properties[i];\r\n\t\t\tlet a = window.itemPropertyList[prop].name;\r\n\t\t\tif (prop === \"V\") a = `${a} (${utils_makeRoller(item.dmg2)})`;\r\n\t\t\tif (prop === \"T\" || prop === \"A\" || prop === \"AF\") a = `${a} (${item.range}ft.)`;\r\n\t\t\tif (prop === \"RLD\") a = `${a} (${item.reload} shots)`;\r\n\t\t\ta = (i > 0 ? \", \" : item.dmg1 ? \"- \" : \"\") + a;\r\n\t\t\trootEl.querySelector(\".stats-wrapper .properties\").append(a);\r\n\t\t}\r\n\t}\r\n\r\n\tconst entryList = {type: \"entries\", entries: item.entries};\r\n\tconst renderStack = [];\r\n\trenderer.recursiveEntryRender(entryList, renderStack, 1);\r\n\trootEl.querySelector(\".stats-wrapper .text\").innerHTML = (utils_makeRoller(renderStack.join(\"\")).split(item.name.toLowerCase()).join(\"<i>\"+item.name.toLowerCase()+\"</i>\"));\r\n\tif (hideFirstLine) {\r\n\t\trootEl.querySelector(\".margin-bottom_small\").remove();\r\n\t}\r\n}\r\n\r\nexport { renderSelection };","import './theme/lumo/vaadin-text-field.js';\n","import './theme/lumo/vaadin-checkbox.js';\nexport * from './src/vaadin-checkbox.js';\n","import '@vaadin/vaadin-lumo-styles/color.js';\nimport '@vaadin/vaadin-lumo-styles/sizing.js';\nimport '@vaadin/vaadin-lumo-styles/typography.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\n\nconst $_documentContainer = html`<dom-module id=\"lumo-text-area\" theme-for=\"vaadin-text-area\">\n  <template>\n    <style include=\"lumo-text-field\">\n      [part=\"input-field\"],\n      [part=\"input-field\"] ::slotted(textarea) {\n        /* Equal to the implicit padding in vaadin-text-field */\n        padding-top: calc((var(--lumo-text-field-size) - 1em * var(--lumo-line-height-s)) / 2);\n        padding-bottom: calc((var(--lumo-text-field-size) - 1em * var(--lumo-line-height-s)) / 2);\n        height: auto;\n        box-sizing: border-box;\n        transition: background-color 0.1s;\n        line-height: var(--lumo-line-height-s);\n      }\n\n      :host(:not([readonly])) [part=\"input-field\"]::after {\n        display: none;\n      }\n\n      :host([readonly]) [part=\"input-field\"] {\n        border: 1px dashed var(--lumo-contrast-30pct);\n      }\n\n      :host([readonly]) [part=\"input-field\"]::after {\n        border: none;\n      }\n\n      :host(:hover:not([readonly]):not([focused])) [part=\"input-field\"] {\n        background-color: var(--lumo-contrast-20pct);\n      }\n\n      @media (pointer: coarse) {\n        :host(:hover:not([readonly]):not([focused])) [part=\"input-field\"] {\n          background-color: var(--lumo-contrast-10pct);\n        }\n\n        :host(:active:not([readonly]):not([focused])) [part=\"input-field\"] {\n          background-color: var(--lumo-contrast-20pct);\n        }\n      }\n\n      [part=\"value\"],\n      [part=\"input-field\"] ::slotted(textarea) {\n        line-height: inherit;\n        --_lumo-text-field-overflow-mask-image: none;\n      }\n\n      /* Vertically align icon prefix/suffix with the first line of text */\n      [part=\"input-field\"] ::slotted(iron-icon) {\n        margin-top: calc((var(--lumo-icon-size-m) - 1em * var(--lumo-line-height-s)) / -2);\n      }\n\n      [part=\"input-field\"] [part=\"value\"],\n      [part=\"input-field\"] ::slotted(textarea) {\n        white-space: pre-wrap; /* override \\`nowrap\\` from <vaadin-text-field> */\n        align-self: stretch; /* override \\`baseline\\` from <vaadin-text-field> */\n      }\n    </style>\n  </template>\n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\n","/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport { TextFieldMixin } from './vaadin-text-field-mixin.js';\nimport { ElementMixin } from '@vaadin/vaadin-element-mixin/vaadin-element-mixin.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n/**\n * `<vaadin-text-area>` is a Web Component for text area control in forms.\n *\n * ```html\n * <vaadin-text-area label=\"Add description\">\n * </vaadin-text-area>\n * ```\n *\n * ### Prefixes and suffixes\n *\n * These are child elements of a `<vaadin-text-area>` that are displayed\n * inline with the input, before or after.\n * In order for an element to be considered as a prefix, it must have the slot\n * attribute set to `prefix` (and similarly for `suffix`).\n *\n * ```html\n * <vaadin-text-area label=\"Add description\">\n *   <div slot=\"prefix\">Details:</div>\n *   <div slot=\"suffix\">The end!</div>\n * </vaadin-text-area>\n * ```\n *\n * ### Styling\n *\n * The following shadow DOM parts are available for styling:\n *\n * Part name | Description\n * ----------------|----------------\n * `label` | The label element\n * `input-field` | The element that wraps prefix, value and suffix\n * `value` | The text value element inside the `input-field` element\n * `error-message` | The error message element\n *\n * The following state attributes are available for styling:\n *\n * Attribute    | Description | Part name\n * -------------|-------------|------------\n * `disabled` | Set to a disabled text field | :host\n * `has-value` | Set when the element has a value | :host\n * `has-label` | Set when the element has a label | :host\n * `invalid` | Set when the element is invalid | :host\n * `focused` | Set when the element is focused | :host\n * `focus-ring` | Set when the element is keyboard focused | :host\n * `readonly` | Set to a readonly text field | :host\n *\n * See [ThemableMixin – how to apply styles for shadow parts](https://github.com/vaadin/vaadin-themable-mixin/wiki)\n *\n * @extends PolymerElement\n * @mixes TextFieldMixin\n * @mixes ThemableMixin\n * @demo demo/index.html\n */\nclass TextAreaElement extends ElementMixin(TextFieldMixin(ThemableMixin(PolymerElement))) {\n  static get template() {\n    return html`\n    <style include=\"vaadin-text-field-shared-styles\">\n      .vaadin-text-area-container {\n        flex: auto;\n        max-height: inherit; /* MSIE 11 */\n        min-height: inherit; /* MSIE 11 */\n      }\n\n      /* The label and the error message should neither grow nor shrink. */\n      [part=\"label\"],\n      [part=\"error-message\"] {\n        flex: none;\n      }\n\n      [part=\"input-field\"] {\n        overflow: auto;\n        -webkit-overflow-scrolling: touch;\n      }\n\n      [part=\"value\"] {\n        resize: none;\n      }\n\n      [part=\"value\"],\n      [part=\"input-field\"] ::slotted(*) {\n        align-self: flex-start;\n      }\n\n      @keyframes vaadin-text-area-appear {\n        to {\n          opacity: 1;\n        }\n      }\n\n      :host {\n        animation: 1ms vaadin-text-area-appear;\n      }\n    </style>\n\n    <div class=\"vaadin-text-area-container\">\n\n      <label part=\"label\" on-click=\"focus\" id=\"[[_labelId]]\">[[label]]</label>\n\n      <div part=\"input-field\" id=\"[[_inputId]]\">\n\n        <slot name=\"prefix\"></slot>\n\n        <slot name=\"textarea\">\n          <textarea part=\"value\"></textarea>\n        </slot>\n\n        <div part=\"clear-button\" id=\"clearButton\" role=\"button\" aria-label\\$=\"[[i18n.clear]]\"></div>\n        <slot name=\"suffix\"></slot>\n\n      </div>\n\n      <div part=\"error-message\" id=\"[[_errorId]]\" aria-live=\"assertive\" aria-hidden\\$=\"[[_getErrorMessageAriaHidden(invalid, errorMessage, _errorId)]]\">[[errorMessage]]</div>\n\n    </div>\n`;\n  }\n\n  static get is() {\n    return 'vaadin-text-area';\n  }\n\n  static get version() {\n    return '2.6.2';\n  }\n\n  static get observers() {\n    return [\n      '_textAreaValueChanged(value)'\n    ];\n  }\n\n  ready() {\n    super.ready();\n    this._updateHeight();\n    this.addEventListener('animationend', this._onAnimationEnd);\n  }\n\n  _onAnimationEnd(e) {\n    if (e.animationName.indexOf('vaadin-text-area-appear') === 0) {\n      this._updateHeight();\n    }\n  }\n\n  get _slottedTagName() {\n    return 'textarea';\n  }\n\n  _textAreaValueChanged(value) {\n    this._updateHeight();\n  }\n\n  _updateHeight() {\n    const inputField = this.root.querySelector('[part=input-field]');\n    const scrollTop = inputField.scrollTop;\n    const input = this.inputElement;\n\n    const inputWidth = getComputedStyle(input).width;\n\n    const valueLength = this.value ? this.value.length : 0;\n    // Only clear the height when the content shortens to minimize scrollbar flickering.\n    if (this._oldValueLength >= valueLength) {\n      // Fix the input element width so its scroll height isn't affected by host's disappearing scrollbars\n      input.style.maxWidth = inputWidth;\n      input.style.height = 'auto';\n      // Avoid a jumpy Safari rendering issue\n      inputField.style.display = 'block';\n    }\n    this._oldValueLength = valueLength;\n\n    const inputHeight = input.scrollHeight;\n    if (inputHeight > input.clientHeight) {\n      input.style.height = inputHeight + 'px';\n    }\n\n    // Restore\n    input.style.removeProperty('max-width');\n    inputField.style.removeProperty('display');\n    inputField.scrollTop = scrollTop;\n\n    this._dispatchIronResizeEventIfNeeded('InputHeight', inputHeight);\n  }\n\n  /**\n   * Fired when the text-area height changes.\n   *\n   * @event iron-resize\n   */\n}\n\ncustomElements.define(TextAreaElement.is, TextAreaElement);\n\nexport { TextAreaElement };\n","import { PolymerElement, html } from \"@polymer/polymer\";\nimport {\n  setItem\n} from \"../../../util/charBuilder\";\nimport { getEditModeChannel, isEditMode } from \"../../../util/editMode\";\nimport { renderSelection } from \"../../../js/items\";\nimport \"@vaadin/vaadin-text-field/vaadin-text-field\";\nimport \"@vaadin/vaadin-text-field/vaadin-text-area\";\n\nclass DndCharacterBuilderEquipmentItemDetail extends PolymerElement {\n  \n  static get properties() {\n    return {\n      isEditMode: {\n        type: Boolean,\n        value: false\n      },\n      hasRenderedOutput: {\n        type: Boolean,\n        value: false\n      },\n      item: {\n        type: Object\n      },\n      storedItem: {\n        type: Object\n      },\n      itemType: {\n        type: String,\n        value: ''\n      }\n    };\n  }\n\n  static get observers() {\n    return [\n      '_itemChanged(item)'\n    ]\n  }\n\n  constructor() {\n    super();\n\n    this.itemTypes = [\n      'Armor',\n      'Simple Weapon',\n      'Martial Weapon',\n      'Shield',\n      'Wondrous Item',\n      'Adventuring Gear',\n      'Container'\n    ];\n  }\n\n  _itemChanged() {\n    console.error('itemDetail:', this.item);\n\n    if (this.item.storedItem) {\n      this.storedItem = this.item.storedItem;\n    }\n\n    if (this.item.itemRef && !this.item.lookupFailed) {\n      this.hasRenderedOutput = true;\n      renderSelection(this.item, this.$.renderedOutput, true);\n    } else {\n      this.hasRenderedOutput = false;\n    }\n    this.itemType = this._getItemType();\n  }\n\n  _getItemType() {\n    if (this.item) {\n      if (this.item.armor) {\n        return 'Armor'\n      }\n      if (this.item.weaponCategory === 'Simple') {\n        return 'Simple Weapon'\n      }\n      if (this.item.weaponCategory === 'Martial') {\n        return 'Martial Weapon'\n      }\n      if (this.item.type === 'S') {\n        return 'Shield'\n      }\n      if (this.item.container) {\n        return 'Container'\n      }\n      if (this.item.type === 'G') {\n        return 'Adventuring Gear'\n      }\n    }\n    return '';\n  }\n\n  _selectItemType() {\n    const newType = this.$.typeSelect.value;\n    this.storedItem.armor = false;\n    this.storedItem.weaponCategory = undefined;\n    this.storedItem.wondrous = false;\n\n    switch (newType) {\n      case 'Armor':\n        this.storedItem.armor = true;\n        break;\n      case 'Simple Weapon':\n        this.storedItem.weaponCategory = 'Simple';\n        break;\n      case 'Martial Weapon':\n        this.storedItem.weaponCategory = 'Martial';\n        break;\n      case 'Shield':\n        this.storedItem.type = 'S'\n        break;\n      case 'Wondrous':\n        this.storedItem.wondrous = true;\n        break;\n      case 'Adventuring Gear':\n        this.storedItem.type = 'G';\n        break;\n      case 'Container':\n        this.storedItem.container = true;\n        break;\n    }\n    setItem(this.item);\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    this.editModeHandler = (e) => {\n      this.isEditMode = e.detail.isEditMode;\n    }\n    getEditModeChannel().addEventListener('editModeChange', this.editModeHandler);\n    this.isEditMode = isEditMode();\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n\n    getEditModeChannel().removeEventListener('editModeChange', this.editModeHandler);\n  }\n\n  _updateItem() {\n    setItem(this.item);\n  }\n\n  _or(...bools) {\n    for (let bool of bools) {\n      if (bool) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  static get template() {\n    return html`\n      <style include=\"material-styles\"></style>\n      <style>\n        :host {}\n        [hidden] {\n          display: none !important;\n        }\n\n        .edit__name {\n          width: 100%;\n        }\n        .edit__notes {\n          width: 100%;\n          min-height: 200px;\n        }        \n\n        @media(min-width: 921px) {\n        }\n      </style>\n\n      <div>\n        <div hidden$=\"[[isEditMode]]\">\n          <div hidden$=\"[[!hasRenderedOutput]]\">\n            <h2>[[item.name]]</h4>\n            <div>[[item.notes]]</div>\n            <div id=\"renderedOutput\"></div>\n          </div>\n\n          <div hidden$=\"[[hasRenderedOutput]]\">\n            <h2>[[item.name]]</h4>\n            <div>[[item.notes]]</div>\n          </div>\n        </div>\n\n        <div hidden$=\"[[!isEditMode]]\">\n          <vaadin-text-field class=\"edit__name\" value=\"{{storedItem.name}}\" label=\"Name\" on-change=\"_updateItem\"></vaadin-text-field>\n          \n          <vaadin-select id=\"typeSelect\" value=\"[[itemType]]\" on-change=\"_selectItemType\" label=\"Item Type\" >\n            <template>\n              <vaadin-list-box>\n                <template is=\"dom-repeat\" items=\"[[itemTypes]]\">\n                  <vaadin-item>[[item]]</vaadin-item>\n                </template>\n              </vaadin-list-box>\n            </template>\n          </vaadin-select>\n\n          <vaadin-checkbox checked=\"{{item.reqAttune}}\" on-change=\"_updateItem\">Requires Attunement?</vaadin-checkbox>\n\n          <vaadin-text-area class=\"edit__notes\" value=\"{{storedItem.notes}}\" label=\"Notes\" on-change=\"_updateItem\"></vaadin-text-area>\n        </div>\n        \n      </div>\n    `;\n  }\n}\n\ncustomElements.define(\"dnd-character-builder-equipment-item-detail\", DndCharacterBuilderEquipmentItemDetail);","import '@vaadin/vaadin-lumo-styles/color.js';\nimport '@vaadin/vaadin-lumo-styles/spacing.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\n\nconst $_documentContainer = html`<dom-module id=\"lumo-grid-tree-toggle\" theme-for=\"vaadin-grid-tree-toggle\">\n  <template>\n    <style>\n      :host {\n        --vaadin-grid-tree-toggle-level-offset: 2em;\n        align-items: center;\n        vertical-align: middle;\n        margin-left: calc(var(--lumo-space-s) * -1);\n        -webkit-tap-highlight-color: transparent;\n      }\n\n      :host(:not([leaf])) {\n        cursor: default;\n      }\n\n      [part=\"toggle\"] {\n        display: inline-block;\n        font-size: 1.5em;\n        line-height: 1;\n        width: 1em;\n        height: 1em;\n        text-align: center;\n        color: var(--lumo-contrast-50pct);\n        /* Increase touch target area */\n        padding: calc(1em / 3);\n        margin: calc(1em / -3);\n      }\n\n      :host(:not([dir=\"rtl\"])) [part=\"toggle\"] {\n        margin-right: 0;\n      }\n\n      @media (hover: hover) {\n        :host(:hover) [part=\"toggle\"] {\n          color: var(--lumo-contrast-80pct);\n        }\n      }\n\n      [part=\"toggle\"]::before {\n        font-family: \"lumo-icons\";\n        display: inline-block;\n        height: 100%;\n      }\n\n      :host(:not([expanded])) [part=\"toggle\"]::before {\n        content: var(--lumo-icons-angle-right);\n      }\n\n      :host([expanded]) [part=\"toggle\"]::before {\n        content: var(--lumo-icons-angle-right);\n        transform: rotate(90deg);\n      }\n\n      /* Experimental support for hierarchy connectors, using an unsupported selector */\n      :host([theme~=\"connectors\"]) #level-spacer {\n        position: relative;\n        z-index: -1;\n        font-size: 1em;\n        height: 1.5em;\n      }\n\n      :host([theme~=\"connectors\"]) #level-spacer::before {\n        display: block;\n        content: \"\";\n        margin-top: calc(var(--lumo-space-m) * -1);\n        height: calc(var(--lumo-space-m) + 3em);\n        background-image: linear-gradient(to right, transparent calc(var(--vaadin-grid-tree-toggle-level-offset) - 1px), var(--lumo-contrast-10pct) calc(var(--vaadin-grid-tree-toggle-level-offset) - 1px));\n        background-size: var(--vaadin-grid-tree-toggle-level-offset) var(--vaadin-grid-tree-toggle-level-offset);\n        background-position: calc(var(--vaadin-grid-tree-toggle-level-offset) / 2 - 2px) 0;\n      }\n\n      /* RTL specific styles */\n\n      :host([dir=\"rtl\"]) {\n        margin-left: 0;\n        margin-right: calc(var(--lumo-space-s) * -1);\n      }\n\n      :host([dir=\"rtl\"]) [part=\"toggle\"] {\n        margin-left: 0;\n      }\n\n      :host([dir=\"rtl\"][expanded]) [part=\"toggle\"]::before {\n        transform: rotate(-90deg);\n      }\n\n      :host([dir=\"rtl\"][theme~=\"connectors\"]) #level-spacer::before {\n        background-image: linear-gradient(to left, transparent calc(var(--vaadin-grid-tree-toggle-level-offset) - 1px), var(--lumo-contrast-10pct) calc(var(--vaadin-grid-tree-toggle-level-offset) - 1px));\n        background-position: calc(100% - (var(--vaadin-grid-tree-toggle-level-offset) / 2 - 2px)) 0;\n      }\n\n      :host([dir=\"rtl\"]:not([expanded])) [part=\"toggle\"]::before,\n      :host([dir=\"rtl\"][expanded]) [part=\"toggle\"]::before {\n        content: var(--lumo-icons-angle-left);\n      }\n    </style>\n  </template>\n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\n","/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport '@polymer/polymer/lib/elements/custom-style.js';\nimport { Debouncer } from '@polymer/polymer/lib/utils/debounce.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { DirMixin } from '@vaadin/vaadin-element-mixin/vaadin-dir-mixin.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { microTask } from '@polymer/polymer/lib/utils/async.js';\nconst $_documentContainer = document.createElement('template');\n\n$_documentContainer.innerHTML = `<custom-style>\n  <style>\n    @font-face {\n      font-family: \"vaadin-grid-tree-icons\";\n      src: url(data:application/font-woff;charset=utf-8;base64,d09GRgABAAAAAAQkAA0AAAAABrwAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAABGRlRNAAAECAAAABoAAAAcgHwa6EdERUYAAAPsAAAAHAAAAB4AJwAOT1MvMgAAAZQAAAA/AAAAYA8TBIJjbWFwAAAB8AAAAFUAAAFeGJvXWmdhc3AAAAPkAAAACAAAAAgAAAAQZ2x5ZgAAAlwAAABLAAAAhIrPOhFoZWFkAAABMAAAACsAAAA2DsJI02hoZWEAAAFcAAAAHQAAACQHAgPHaG10eAAAAdQAAAAZAAAAHAxVAgBsb2NhAAACSAAAABIAAAASAIAAVG1heHAAAAF8AAAAGAAAACAACgAFbmFtZQAAAqgAAAECAAACTwflzbdwb3N0AAADrAAAADYAAABZQ7Ajh3icY2BkYGAA4twv3Vfi+W2+MnCzMIDANSOmbGSa2YEZRHEwMIEoAAoiB6sAeJxjYGRgYD7w/wADAwsDCDA7MDAyoAI2AFEEAtIAAAB4nGNgZGBg4GBgZgDRDAxMDGgAAAGbABB4nGNgZp7JOIGBlYGBaSbTGQYGhn4IzfiawZiRkwEVMAqgCTA4MDA+38d84P8BBgdmIAapQZJVYGAEAGc/C54AeJxjYYAAxlAIzQTELAwMBxgZGB0ACy0BYwAAAHicY2BgYGaAYBkGRgYQiADyGMF8FgYbIM3FwMHABISMDArP9/3/+/8/WJXC8z0Q9v8nEp5gHVwMMMAIMo+RDYiZoQJMQIKJARUA7WBhGN4AACFKDtoAAAAAAAAAAAgACAAQABgAJgA0AEIAAHichYvBEYBADAKBVHBjBT4swl9KS2k05o0XHd/yW1hAfBFwCv9sIlJu3nZaNS3PXAaXXHI8Lge7DlzF7C1RgXc7xkK6+gvcD2URmQB4nK2RQWoCMRiFX3RUqtCli65yADModOMBLLgQSqHddRFnQghIAnEUvEA3vUUP0LP0Fj1G+yb8R5iEhO9/ef/7FwFwj28o9EthiVp4hBlehcfUP4Ur8o/wBAv8CU+xVFvhOR7UB7tUdUdlVRJ6HnHWTnhM/V24In8JT5j/KzzFSi2E53hUz7jCcrcIiDDwyKSW1JEct2HdIPH1DFytbUM0PofWdNk5E5oUqb/Q6HHBiVGZpfOXkyUMEj5IyBuNmYZQjBobfsuassvnkKLe1OuBBj0VQ8cRni2xjLWsHaM0jrjx3peYA0/vrdmUYqe9iy7bzrX6eNP7Jh1SijX+AaUVbB8AAHicY2BiwA84GBgYmRiYGJkZmBlZGFkZ2djScyoLMgzZS/MyDQwMwLSruZMzlHaB0q4A76kLlwAAAAEAAf//AA94nGNgZGBg4AFiMSBmYmAEQnYgZgHzGAAD6wA2eJxjYGBgZACCKxJigiD6mhFTNowGACmcA/8AAA==) format('woff');\n      font-weight: normal;\n      font-style: normal;\n    }\n  </style>\n</custom-style>`;\n\ndocument.head.appendChild($_documentContainer.content);\n/**\n * `<vaadin-grid-tree-toggle>` is a helper element for the `<vaadin-grid>`\n * that provides toggle and level display functionality for the item tree.\n *\n * #### Example:\n * ```html\n * <vaadin-grid-column>\n *   <template class=\"header\">Package name</template>\n *   <template>\n *     <vaadin-grid-tree-toggle\n *         leaf=\"[[!item.hasChildren]]\"\n *         expanded=\"{{expanded}}\"\n *         level=\"[[level]]\">\n *       [[item.name]]\n *     </vaadin-grid-tree-toggle>\n *   </template>\n * </vaadin-grid-column>\n * ```\n *\n * ### Styling\n *\n * The following shadow DOM parts are available for styling:\n *\n * Part name | Description\n * ---|---\n * `toggle` | The tree toggle icon\n *\n * The following state attributes are available for styling:\n *\n * Attribute    | Description | Part name\n * ---|---|---\n * `expanded` | When present, the toggle is expanded | :host\n * `leaf` | When present, the toggle is not expandable, i. e., the current item is a leaf | :host\n *\n * The following custom CSS properties are available on\n * the `<vaadin-grid-tree-toggle>` element:\n *\n * Custom CSS property | Description | Default\n * ---|---|---\n * `--vaadin-grid-tree-toggle-level-offset` | Visual offset step for each tree sublevel | `1em`\n *\n * @extends PolymerElement\n * @mixes ThemableMixin\n */\nclass GridTreeToggleElement extends ThemableMixin(DirMixin(PolymerElement)) {\n  static get template() {\n    return html`\n    <style>\n      :host {\n        display: inline-flex;\n        align-items: baseline;\n\n        /* CSS API for :host */\n        --vaadin-grid-tree-toggle-level-offset: 1em;\n\n        /*\n          ShadyCSS seems to polyfill :dir(rtl) only for :host, thus using\n          a host custom CSS property for ltr/rtl toggle icon choice.\n         */\n        ---collapsed-icon: \"\\\\e7be\\\\00a0\";\n      }\n\n      :host(:dir(rtl)) {\n        ---collapsed-icon: \"\\\\e7bd\\\\00a0\";\n      }\n\n      :host([hidden]) {\n        display: none !important;\n      }\n\n      :host(:not([leaf])) {\n        cursor: pointer;\n      }\n\n      #level-spacer,\n      [part=\"toggle\"] {\n        flex: none;\n      }\n\n      #level-spacer {\n        display: inline-block;\n        width: calc(var(---level, '0') * var(--vaadin-grid-tree-toggle-level-offset));\n      }\n\n      [part=\"toggle\"]::before {\n        font-family: \"vaadin-grid-tree-icons\";\n        line-height: 1em; /* make icon font metrics not affect baseline */\n      }\n\n      :host(:not([expanded])) [part=\"toggle\"]::before {\n        content: var(---collapsed-icon);\n      }\n\n      :host([expanded]) [part=\"toggle\"]::before {\n        content: \"\\\\e7bc\\\\00a0\"; /* icon glyph + single non-breaking space */\n      }\n\n      :host([leaf]) [part=\"toggle\"] {\n        visibility: hidden;\n      }\n    </style>\n\n    <span id=\"level-spacer\"></span>\n    <span part=\"toggle\"></span>\n    <slot></slot>\n`;\n  }\n\n  static get is() {\n    return 'vaadin-grid-tree-toggle';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * Current level of the tree represented with a horizontal offset\n       * of the toggle button.\n       */\n      level: {\n        type: Number,\n        value: 0,\n        observer: '_levelChanged'\n      },\n\n      /**\n       * Hides the toggle icon and disables toggling a tree sublevel.\n       */\n      leaf: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n\n      /**\n       * Sublevel toggle state.\n       */\n      expanded: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true,\n        notify: true\n      }\n    };\n  }\n\n  ready() {\n    super.ready();\n\n    this.addEventListener('click', e => this._onClick(e));\n  }\n\n  _onClick(e) {\n    if (this.leaf) {\n      return;\n    }\n\n    e.preventDefault();\n    this.expanded = !this.expanded;\n  }\n\n  _levelChanged(level) {\n    const value = Number(level).toString();\n    this.style['---level'] = value;\n    // Async is to make DOM updates applied before evaluating the style\n    // update, required for polyfilled RTL support in MSIE and Edge.\n    this._debouncerUpdateLevel = Debouncer.debounce(\n      this._debouncerUpdateLevel,\n      microTask,\n      () => this.updateStyles({'---level': value})\n    );\n  }\n}\n\ncustomElements.define(GridTreeToggleElement.is, GridTreeToggleElement);\n\nexport { GridTreeToggleElement };\n","import { PolymerElement, html } from \"@polymer/polymer\";\nimport { \n  getCharacterChannel,\n  getSelectedCharacter,\n  getItems,\n  removeItem,\n  canAttuneItem,\n  canEquipItem,\n  toggleItemEquipped,\n  toggleItemAttuned,\n  setItem,\n  spliceItems,\n  isChildItem\n} from \"../../../util/charBuilder\";\nimport { getEditModeChannel, isEditMode } from \"../../../util/editMode\";\nimport \"@vaadin/vaadin-checkbox\";\nimport \"@vaadin/vaadin-grid\";\nimport \"@vaadin/vaadin-grid/vaadin-grid-tree-toggle\";\nimport \"@vaadin/vaadin-grid/vaadin-grid-column\";\nimport \"./dnd-character-builder-equipment-item-detail\";\n\nclass DndCharacterBuilderEquipment extends PolymerElement {\n  \n  static get properties() {\n    return {\n      inventory: {\n        type: Array\n      },\n      isEditMode: {\n        type: Boolean,\n        value: false\n      },\n      character: {\n        type: Object,\n      }\n    };\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    this.characterChangeHandler = (e) => {\n      let character = e.detail.character;\n      this.updateFromCharacter(character);\n    };\n    \n    this.updateFromCharacter(getSelectedCharacter());\n    getCharacterChannel().addEventListener(\"character-selected\", this.characterChangeHandler);\n\n    this.editModeHandler = (e) => {\n      this.isEditMode = e.detail.isEditMode;\n      if (this.$.grid) {\n        setTimeout(() => {\n          this.$.grid.notifyResize();\n        }, 0);\n      }\n    }\n    getEditModeChannel().addEventListener('editModeChange', this.editModeHandler);\n    this.isEditMode = isEditMode();\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n\n    getCharacterChannel().removeEventListener(\"character-selected\", this.characterChangeHandler);\n    getEditModeChannel().removeEventListener('editModeChange', this.editModeHandler);\n  }\n\n  ready() {\n    super.ready();\n    \n    setTimeout(() => {\n      const grid = this.$.grid;\n\n      // Define Row Details\n      grid.rowDetailsRenderer = ((root, grid, rowData) => {\n        if (!root.firstElementChild) {\n          root.innerHTML =\n          `<div class=\"details\" id=\"stats\">\n            <dnd-character-builder-equipment-item-detail></dnd-character-builder-equipment-item-detail>\n          </div>`;\n        }\n        const detailEl = root.querySelector('dnd-character-builder-equipment-item-detail');\n        detailEl.item = rowData.item;\n      }).bind(this);\n\n      // Add Drag and Drop\n      let draggedItem;\n\n      grid.addEventListener('grid-dragstart', function(e) {\n        draggedItem = e.detail.draggedItems[0];\n        grid.dropMode = 'on-top-or-between';\n      });\n\n      grid.addEventListener('grid-dragend', function(e) {\n        draggedItem = grid.dropMode = null;\n      });\n\n      grid.addEventListener('grid-drop', (e) => {\n        const dropTargetItem = e.detail.dropTargetItem;\n        if (draggedItem && draggedItem !== dropTargetItem) {\n\n          // Prevent loops\n          const isChild = isChildItem(draggedItem, dropTargetItem.uniqueId);\n          if (draggedItem.container && isChild) {\n            return;\n          }\n\n          const removeId = draggedItem.storedItem.uniqueId;\n          draggedItem.storedItem.uniqueId = this.character.itemCounter ++;\n\n          // Dropping into container\n          if (e.detail.dropLocation === 'on-top') {\n            if (dropTargetItem.container) {\n              if (dropTargetItem.storedItem && dropTargetItem.storedItem.children) {\n                // Add child item\n                dropTargetItem.storedItem.children.push(draggedItem.storedItem);\n                setItem(dropTargetItem, undefined, true);\n                // Remove original\n                removeItem(removeId);\n              }\n              return;\n            }\n          }\n\n          // Re-ordering items, default action if 'on-top' of non-container\n          if (this.inventory) {\n            // Adjust final add index for dropLocation 'below' or 'above'\n            const dropTargetId = `${dropTargetItem.id}`;\n            let finalAddIndex = parseInt(dropTargetId.substring(dropTargetId.lastIndexOf('_')), 10);\n            if (e.detail.dropLocation === 'below') {\n              finalAddIndex++;\n            }\n\n            if (dropTargetItem.parentItemREF) {\n              // Add child item\n              dropTargetItem.parentItemREF.storedItem.children.splice(finalAddIndex, 0, draggedItem.storedItem);\n              setItem(dropTargetItem.parentItemREF, undefined, true);\n            } else {\n              // Add top-level item\n              spliceItems(finalAddIndex, draggedItem.storedItem);\n            }\n\n            // Remove original item\n            removeItem(removeId);\n          }\n        }\n      });\n\n      // Set Data Provider\n      grid.dataProvider = ((params, callback) => {\n        const startIndex = params.page * params.pageSize;\n        let children = params.parentItem ? params.parentItem.children : this.inventory;\n        if (children && children.length) {\n          const page = children.slice(startIndex, startIndex + params.pageSize);\n          callback(page, children.length);\n        }\n      }).bind(this);\n    }, 0);\n    \n  }\n\n  async updateFromCharacter(character) {\n    if (character) {\n      this.character = character;\n      this.inventory = await getItems(character);\n      console.error('inventory:', this.inventory);\n      this.$.grid.clearCache();\n      this.dispatchEvent(new CustomEvent(\"loadingChange\", { bubbles: true, composed: true }));\n    }\n  }\n\n  _expandDetails(e) {\n    let data = e.model.__data.item,\n      stayClosed = this.$.grid.detailsOpenedItems.indexOf(data) > -1;\n\n    for (let item of this.$.grid.detailsOpenedItems) {\n      this.$.grid.closeItemDetails(item);\n    }\n\n    if (stayClosed) {\n      this.$.grid.closeItemDetails(data);\n    } else {\n      this.$.grid.openItemDetails(data);\n    }\n    this.$.grid.notifyResize();\n  }\n\n  _flashCheckbox(checkboxEl) {\n    if (checkboxEl) {\n      checkboxEl.classList.add('transition-bg');\n      checkboxEl.classList.add('flash-error');\n      setTimeout(() => {\n        checkboxEl.classList.remove('flash-error');\n        setTimeout(() => {\n          checkboxEl.classList.remove('transition-bg');\n        }, 200);\n      }, 200);\n    }\n  }\n\n  _deleteItem(e) {\n    let uniqueId = e.model.__data.item && e.model.__data.item.uniqueId !== undefined ? e.model.__data.item.uniqueId : undefined;\n    removeItem(uniqueId);\n  }\n\n  async _setItemEquipped(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    let itemModel = e.model.__data.item;\n    let uniqueId = itemModel ? itemModel.uniqueId : undefined;\n    let isEquipped = itemModel ? itemModel.isEquipped : false;\n    \n    if (isEquipped) {\n      toggleItemEquipped(uniqueId);\n    } else if (await canEquipItem(itemModel)) {\n      toggleItemEquipped(uniqueId);\n    } else {\n      let checkbox = e.target.querySelector('vaadin-checkbox')\n      this._flashCheckbox(checkbox)\n    }\n  }\n\n  async _setItemAttuned(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    let itemModel = e.model.__data.item;\n    let uniqueId = itemModel ? itemModel.uniqueId : undefined;\n    let isAttuned = itemModel ? itemModel.isAttuned : false;\n\n    if (isAttuned) {\n      toggleItemAttuned(uniqueId);\n    } else if (await canAttuneItem(itemModel)) {\n      toggleItemAttuned(uniqueId);\n    } else {\n      let checkbox = e.target.querySelector('vaadin-checkbox')\n      this._flashCheckbox(checkbox)\n    }\n  }\n\n  _preventDefault(e) {\n    e.preventDefault();\n    e.stopPropagation();\n  }\n\n  _or(...bools) {\n    for (let bool of bools) {\n      if (bool) {\n        return true;\n      }\n    }\n    return false;\n  }\n  \n  _itemWrapTypeClassname(fromBackground, fromClass) {\n    let className = 'item-wrap__type ';\n    if (fromBackground) {\n      className += 'item-wrap__type--fromBackground'\n    }\n    if (fromClass) {\n      className += 'item-wrap__type--fromClass'\n    }\n    return className;\n  }\n  \n  _itemWrapNameClassname(isEdited) {\n    let className = 'item-wrap__name '\n    if (isEdited) {\n      className += 'item-wrap__name--edited'\n    }\n    return className;\n  }\n\n  _noRarity(rarity) {\n    return !rarity || rarity === 'None';\n  }\n\n  static get template() {\n    return html`\n      <style include=\"material-styles\"></style>\n      <style>\n        :host {\n          display: block;\n          padding: 14px;\n        }\n        [hidden] {\n          display: none !important;\n        }\n        a {\n          color: var(--mdc-theme-secondary);\n        }\n\n        .heading {\n          display: flex;\n          flex-direction: row;\n          align-items: center;\n          justify-content: space-between;\n        }\n\n        .col-wrap {\n          display: flex; \n          justify-content: space-between;\n          flex-wrap: wrap;\n        }\n\n        .row-wrap {\n          width: 100%;\n        }\n        .row-wrap:not(:last-child) {\n          margin-bottom: 24px;\n        }\n\n        .row-wrap > *:not(h2):not(:last-child) {\n          margin-bottom: 10px;\n        }\n\n        .no-content {\n          font-size: 14px;\n          font-style: italic;\n        }\n\n        .item-wrap {\n          display: flex;\n          flex-wrap: nowrap;\n          flex-direction: row;\n          justify-content: space-between;\n          align-items: flex-start;\n          padding: 10px 6px;\n          min-height: 28px;\n        }\n        .item-wrap__name-wrap {\n          flex-basis: 100%;\n          min-width: 0;\n          display: flex;\n          flex-direction: column;\n          cursor: pointer;\n        }\n        .item-wrap__name-wrap:hover {\n          color: var(--mdc-theme-secondary);\n        }\n        .item-wrap__name {\n          font-weight: bold;\n          overflow: hidden;\n          text-overflow: ellipsis;\n          white-space: nowrap;\n          position: relative;\n        }\n        .item-wrap__name--edited {\n          padding-right: 58px;\n        }\n        .item-wrap__edited,\n        .item-wrap__from {\n          background-color: var(--mdc-theme-text-disabled-on-background);\n          color: var(--mdc-theme-on-secondary);\n          border: none;\n          border-radius: 4px;\n          outline: none;\n          display: inline-block;\n          justify-content: center;\n          white-space: normal;\n          font-size: 10px;\n          padding: 1px 4px;\n          margin-right: 4px;\n          font-style: italic;\n        }\n        .item-wrap__edited {\n          top: 3px;\n        }\n        .item-wrap__type {\n          font-style: italic;\n          font-size: 12px;\n          overflow: hidden;\n          text-overflow: ellipsis;\n          white-space: nowrap;\n          position: relative;\n        }\n        .item-wrap__type--fromBackground {\n          padding-right: 38px;\n        }\n        .item-wrap__type--fromClass {\n          padding-right: 50px;\n        }\n        .item-wrap__close {\n          font-size: 14px;\n          margin-top: 6px;\n          cursor: pointer;\n        }\n        .item-wrap__checkboxes {\n          display: flex;\n          flex-direction: column;\n          width: 80px;\n          flex-grow: 0;\n          flex-shrink: 0;\n          margin-left: auto;\n        }\n        .item-wrap__checkboxes > span {\n          cursor: pointer;\n        }\n        vaadin-checkbox {\n          pointer-events: none;\n          font-size: 13px;\n        }\n        vaadin-checkbox.flash-error {\n          color: var(--mdc-theme-error);\n          transition: color 0.2s ease-out;\n          --lumo-contrast-20pct: var(--mdc-theme-error);\n        }\n        vaadin-checkbox.transition-bg {\n          transition: color 0.2s ease-in;\n        }\n\n        .details {\n          font-size: 14px;\n          width: calc(100% - 30px);\n          margin: 0 auto 13px !important;\n          background: var(--lumo-contrast-10pct);\n          border-radius: 4px;\n          padding: 14px;\n        }\n        #stats {\n          margin-top: 24px;\n          font-size: 12px;\n        }\n        #stats p {\n          margin-top: 4px;\n          margin-bottom: 16px;\n        }\n        #stats .table {\n          margin-bottom: 24px;\n          border-radius: 4px;\n          box-shadow: 0 0 0 1px var(--mdc-theme-text-divider-on-background);\n        }\n        #stats .subclass-feature .stat-name {\n          color: var(--mdc-theme-primary, '#6200ee');\n        }\n        #stats .statsBlockHead .stat-name {\n          display: block;\n          font-size: 1.6rem;\n          font-weight: normal;\n          line-height: 1.2;\n        }\n        #stats .statsBlockSubHead .stat-name {\n          font-size: 1.2rem;\n          font-weight: normal;\n        }\n        #stats .statsInlineHead {\n          margin-bottom: 16px;\n        }\n        #stats .statsInlineHead .stat-name {\n          font-size: .8rem;\n          font-weight: bold;\n          display: inline;\n        }\n        #stats .statsInlineHead .stat-name + p {\n          display: inline;\n        }\n        #stats .spell-ability {\n          margin: 0 24px;\n          display: block;\n        }\n        #stats .subclass-feature,\n        #stats .class-feature {\n          padding-top: 24px;\n          border-top: 1px solid var(--mdc-theme-text-divider-on-background, 'rgba(0, 0, 0, 0.12)');\n        }\n        #stats a {\n          color: var(--mdc-theme-secondary, '#018786') !important;\n        }\n        #stats ul {\n          padding-left: 24px;\n          list-style: disc;\n        }\n        #stats ul li {\n          margin-bottom: 8px;\n        }\n\n        @media(min-width: 921px) {\n          .row-wrap {\n            width: calc(50% - 10px);\n          }\n          .row-wrap:first-child {\n            margin-bottom: 0;\n          }\n        }\n      </style>\n\n      <div class=\"col-wrap\">\n\n        <div class=\"row-wrap\">\n          <div class=\"heading\">\n            <h2>Inventory</h2>\n            <a class=\"mdc-icon-button material-icons\" href=\"#/items\">launch</a>\n          </div>\n          <vaadin-grid id=\"grid\" height-by-rows rows-draggable theme=\"no-border no-row-borders no-row-padding\" >\n            <vaadin-grid-column>\n              <template>\n                <div class=\"item-wrap\">\n                  <vaadin-grid-tree-toggle level$=[[level]] leaf=\"[[!item.container]]\" expanded=\"{{expanded}}\"></vaadin-grid-tree-toggle>\n                  <div class=\"item-wrap__name-wrap\">\n                    <span class$=\"[[_itemWrapNameClassname(item.isEdited)]]\" on-click=\"_expandDetails\">[[item.name]]\n                      <span hidden$=\"[[!item.isEdited]]\" class=\"item-wrap__edited\">Edited</span>\n                    </span>\n                    <span class$=\"[[_itemWrapTypeClassname(item.fromBackground, item.fromClass)]]\">\n                      <span class=\"item-wrap__from\" hidden$=\"[[!item.fromBackground]]\">BG</span>\n                      <span class=\"item-wrap__from\" hidden$=\"[[!item.fromClass]]\">Class</span>\n                      <span>[[item.typeText]]<span hidden$=\"[[_noRarity(item.rarity)]]\">, [[item.rarity]]</span></span>\n                    </span>\n                  </div>\n                  <div class=\"item-wrap__checkboxes\">\n                    <span on-click=\"_setItemEquipped\">\n                      <vaadin-checkbox checked=\"[[item.isEquipped]]\" hidden$=\"[[!item.canEquip]]\">Equip</vaadin-checkbox>\n                    </span>\n                    <span on-click=\"_setItemAttuned\">\n                      <vaadin-checkbox checked=\"[[item.isAttuned]]\" hidden$=\"[[!item.reqAttune]]\">Attune</vaadin-checkbox>\n                    </span>\n                  </div>\n                  <div class=\"mdc-buttom-icon material-icons item-wrap__close\" on-click=\"_deleteItem\">close</div>\n                </div>\n              </template>\n            </vaadin-grid-column>\n          </vaadin-grid>\n        </div>\n      </div>\n    `;\n  }\n}\n\ncustomElements.define(\"dnd-character-builder-equipment\", DndCharacterBuilderEquipment);"],"sourceRoot":""}