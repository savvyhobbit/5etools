{"version":3,"sources":["webpack:///./node_modules/@vaadin/number-field/theme/lumo/vaadin-number-field-styles.js","webpack:///./node_modules/@vaadin/number-field/src/vaadin-number-field.js","webpack:///./node_modules/@vaadin/integer-field/src/vaadin-integer-field.js","webpack:///./node_modules/@vaadin/vaadin-text-field/src/vaadin-integer-field.js","webpack:///./components/dnd-select-add.js","webpack:///./components/views/character/dnd-character-builder-attributes.js"],"names":["numberField","moduleId","hasControls","type","Boolean","value","reflectToAttribute","stepButtonsVisible","min","Number","max","step","super","delegateProps","constraints","this","_setType","tag","localName","slotStyles","$","clearButton","ready","addController","input","_setInputElement","_setFocusElement","stateTarget","ariaTarget","inputElement","_labelController","_tooltipController","setPosition","checkValidity","invalid","e","preventDefault","_decreaseValue","_increaseValue","_incrementValue","incr","disabled","readonly","parseFloat","_getIncrement","newValue","_incrementIsInsideTheLimits","_setValue","String","dispatchEvent","CustomEvent","bubbles","currentValue","multiplier","Math","_getMultiplier","margin","round","number","s","i","indexOf","length","isNaN","_getDecimalCount","sign","newVal","oldVal","_valueChanged","event","key","_onKeyDown","target","composedPath","_hasInputValue","validity","badInput","customElements","define","is","allowedCharPattern","__isInteger","console","warn","__hasOnlyDigits","_stepChanged","test","DndSelectAdd","options","Array","model","addCallback","Function","observer","choices","paren","label","placeholder","multiValue","listBox","remove","select","requestContentUpdate","isArray","choiceArray","map","v","findIndex","o","name","source","filter","selectedValues","join","setTimeout","async","contentEl","_overlayElement","shadowRoot","querySelector","scrollHeight","addEventListener","scrollTop","passive","renderer","root","document","createElement","setAttribute","opened","wasPreviouslySelected","srcElement","getAttribute","scroll","splice","selectedOptions","option","item","optionName","innerHTML","appendChild","_assignMenuElement","valueUpdated","connectedCallback","selectChangeHandler","val","selected","undefined","disconnectedCallback","removeEventListener","a","result","DndCharacterBuilderAttributes","str","dex","con","int","wis","cha","strAdj","dexAdj","conAdj","intAdj","wisAdj","chaAdj","skillProfs","customSkillProfs","saves","maxHP","tempHP","isEditMode","initiative","customInitiative","customInitiativeVal","customACVal","customACHealth","otherProfsOpen","featuresOpen","languages","toolProfs","weaponProfs","armorProfs","feats","darkvision","resists","conditionImmunes","hasDarkvision","customHealthVal","hpField","focusElement","blur","parsedVal","parseInt","characterChangeHandler","character","detail","updateAttributesFromCharacter","editModeHandler","attr","setProperties","customSaves","negatedSaves","attributeAdj","customSkills","negatedSkillProfs","negatedSkills","customHealth","currentHP","hitDicePerClass","hitDicePerDice","hitDiceClass","hitDiceDice","find","hitDiceInArray","die","current","className","total","push","hitDice","sort","customAC","ac","customSpeed","speed","additionalCustomSpeedItems","customSpeedVal","some","toLowerCase","proficiencyBonus","spellMods","composed","adj","b","intA","intB","base","floor","_total","num","arg","arguments","constructor","Object","entries","element","closest","isOpen","classList","contains","isTemp","intField","buttonComp","toggle","changeVal","focus","modifier","_toggleButtonField","__data","_maxHP","dataset","add","search","match","RegExp","profEl","saveEl","innerText","attrEl","initEl","mod","isProficient","isExpertise","hasAttribute","rollForm","isEdit","index","newSpeedItem","currentTarget","array"],"mappings":"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","file":"5.bundle.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport '@vaadin/vaadin-lumo-styles/sizing.js';\nimport { fieldButton } from '@vaadin/vaadin-lumo-styles/mixins/field-button.js';\nimport { inputFieldShared } from '@vaadin/vaadin-lumo-styles/mixins/input-field-shared.js';\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nconst numberField = css`\n  :host {\n    width: 8em;\n  }\n\n  :host([step-buttons-visible]:not([theme~='align-right'])) ::slotted(input),\n  :host([has-controls]:not([theme~='align-right'])) ::slotted(input) {\n    text-align: center;\n  }\n\n  [part$='button'][disabled] {\n    opacity: 0.2;\n  }\n\n  :host([step-buttons-visible]) [part='input-field'],\n  :host([has-controls]) [part='input-field'] {\n    padding: 0;\n  }\n\n  [part\\$='button'] {\n    cursor: pointer;\n    font-size: var(--lumo-icon-size-s);\n    width: 1.6em;\n    height: 1.6em;\n  }\n\n  [part\\$='button']::before {\n    margin-top: 0.3em;\n  }\n\n  [part='decrease-button']::before {\n    content: var(--lumo-icons-minus);\n  }\n\n  [part='increase-button']::before {\n    content: var(--lumo-icons-plus);\n  }\n\n  /* RTL specific styles */\n  :host([dir='rtl']:not([theme~='align-right'])) ::slotted(input) {\n    --_lumo-text-field-overflow-mask-image: linear-gradient(to left, transparent, #000 1.25em);\n  }\n`;\n\nregisterStyles('vaadin-number-field', [inputFieldShared, fieldButton, numberField], {\n  moduleId: 'lumo-number-field',\n});\n","/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport '@vaadin/input-container/src/vaadin-input-container.js';\nimport { html, PolymerElement } from '@polymer/polymer';\nimport { ElementMixin } from '@vaadin/component-base/src/element-mixin.js';\nimport { TooltipController } from '@vaadin/component-base/src/tooltip-controller.js';\nimport { InputController } from '@vaadin/field-base/src/input-controller.js';\nimport { InputFieldMixin } from '@vaadin/field-base/src/input-field-mixin.js';\nimport { LabelledInputController } from '@vaadin/field-base/src/labelled-input-controller.js';\nimport { inputFieldShared } from '@vaadin/field-base/src/styles/input-field-shared-styles.js';\nimport { registerStyles, ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nregisterStyles('vaadin-number-field', inputFieldShared, { moduleId: 'vaadin-number-field-styles' });\n\n/**\n * `<vaadin-number-field>` is an input field web component that only accepts numeric input.\n *\n * ```html\n * <vaadin-number-field label=\"Balance\"></vaadin-number-field>\n * ```\n *\n * ### Styling\n *\n * `<vaadin-number-field>` provides the same set of shadow DOM parts and state attributes as `<vaadin-text-field>`.\n * See [`<vaadin-text-field>`](#/elements/vaadin-text-field) for the styling documentation.\n *\n * In addition to `<vaadin-text-field>` parts, the following parts are available for theming:\n *\n * Part name         | Description\n * ------------------|-------------------------\n * `increase-button` | Increase (\"plus\") button\n * `decrease-button` | Decrease (\"minus\") button\n *\n * Note, the `input-prevented` state attribute is only supported when `allowedCharPattern` is set.\n *\n * See [Styling Components](https://vaadin.com/docs/latest/styling/custom-theme/styling-components) documentation.\n *\n * @fires {Event} input - Fired when the value is changed by the user: on every typing keystroke, and the value is cleared using the clear button.\n * @fires {Event} change - Fired when the user commits a value change.\n * @fires {CustomEvent} invalid-changed - Fired when the `invalid` property changes.\n * @fires {CustomEvent} value-changed - Fired when the `value` property changes.\n * @fires {CustomEvent} validated - Fired whenever the field is validated.\n *\n * @extends HTMLElement\n * @mixes InputFieldMixin\n * @mixes SlotStylesMixin\n * @mixes ElementMixin\n * @mixes ThemableMixin\n */\nexport class NumberField extends InputFieldMixin(ThemableMixin(ElementMixin(PolymerElement))) {\n  static get is() {\n    return 'vaadin-number-field';\n  }\n\n  static get template() {\n    return html`\n      <style>\n        :host([readonly]) [part$='button'] {\n          pointer-events: none;\n        }\n\n        [part='decrease-button']::before {\n          content: '−';\n        }\n\n        [part='increase-button']::before {\n          content: '+';\n        }\n\n        [part='decrease-button'],\n        [part='increase-button'] {\n          -webkit-user-select: none;\n          -moz-user-select: none;\n          user-select: none;\n        }\n\n        :host([dir='rtl']) [part='input-field'] {\n          direction: ltr;\n        }\n      </style>\n\n      <div class=\"vaadin-field-container\">\n        <div part=\"label\">\n          <slot name=\"label\"></slot>\n          <span part=\"required-indicator\" aria-hidden=\"true\" on-click=\"focus\"></span>\n        </div>\n\n        <vaadin-input-container\n          part=\"input-field\"\n          readonly=\"[[readonly]]\"\n          disabled=\"[[disabled]]\"\n          invalid=\"[[invalid]]\"\n          theme$=\"[[_theme]]\"\n        >\n          <div\n            disabled$=\"[[!_allowed(-1, value, min, max, step)]]\"\n            part=\"decrease-button\"\n            on-click=\"_decreaseValue\"\n            on-touchend=\"_decreaseButtonTouchend\"\n            hidden$=\"[[!_isStepButtonVisible(hasControls, stepButtonsVisible)]]\"\n            aria-hidden=\"true\"\n            slot=\"prefix\"\n          ></div>\n          <slot name=\"prefix\" slot=\"prefix\"></slot>\n          <slot name=\"input\"></slot>\n          <slot name=\"suffix\" slot=\"suffix\"></slot>\n          <div id=\"clearButton\" part=\"clear-button\" slot=\"suffix\" aria-hidden=\"true\"></div>\n          <div\n            disabled$=\"[[!_allowed(1, value, min, max, step)]]\"\n            part=\"increase-button\"\n            on-click=\"_increaseValue\"\n            on-touchend=\"_increaseButtonTouchend\"\n            hidden$=\"[[!_isStepButtonVisible(hasControls, stepButtonsVisible)]]\"\n            aria-hidden=\"true\"\n            slot=\"suffix\"\n          ></div>\n        </vaadin-input-container>\n\n        <div part=\"helper-text\">\n          <slot name=\"helper\"></slot>\n        </div>\n\n        <div part=\"error-message\">\n          <slot name=\"error-message\"></slot>\n        </div>\n      </div>\n\n      <slot name=\"tooltip\"></slot>\n    `;\n  }\n\n  static get properties() {\n    return {\n      /**\n       * Set to true to display value increase/decrease controls.\n       * @attr {boolean} has-controls\n       * @deprecated since 23.3.\n       * Use [`stepButtonsVisible`](#/elements/vaadin-number-field#property-stepButtonsVisible) instead\n       */\n      hasControls: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true,\n      },\n\n      /**\n       * Set to true to show increase/decrease buttons.\n       * @attr {boolean} step-buttons-visible\n       */\n      stepButtonsVisible: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true,\n      },\n\n      /**\n       * The minimum value of the field.\n       */\n      min: {\n        type: Number,\n      },\n\n      /**\n       * The maximum value of the field.\n       */\n      max: {\n        type: Number,\n      },\n\n      /**\n       * Specifies the allowed number intervals of the field.\n       * @type {number}\n       */\n      step: {\n        type: Number,\n      },\n    };\n  }\n\n  static get observers() {\n    return ['_stepChanged(step, inputElement)'];\n  }\n\n  static get delegateProps() {\n    return [...super.delegateProps, 'min', 'max'];\n  }\n\n  static get constraints() {\n    return [...super.constraints, 'min', 'max', 'step'];\n  }\n\n  constructor() {\n    super();\n    this._setType('number');\n  }\n\n  /** @protected */\n  get slotStyles() {\n    const tag = this.localName;\n    return [\n      ...super.slotStyles,\n      `\n        ${tag} input[type=\"number\"]::-webkit-outer-spin-button,\n        ${tag} input[type=\"number\"]::-webkit-inner-spin-button {\n          -webkit-appearance: none;\n          margin: 0;\n        }\n\n        ${tag} input[type=\"number\"] {\n          -moz-appearance: textfield;\n        }\n\n        ${tag}[dir='rtl'] input[type=\"number\"]::placeholder {\n          direction: rtl;\n        }\n\n        ${tag}[dir='rtl']:not([step-buttons-visible]):not([has-controls]) input[type=\"number\"]::placeholder {\n          text-align: left;\n        }\n      `,\n    ];\n  }\n\n  /**\n   * Used by `InputControlMixin` as a reference to the clear button element.\n   * @protected\n   */\n  get clearElement() {\n    return this.$.clearButton;\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n\n    this.addController(\n      new InputController(this, (input) => {\n        this._setInputElement(input);\n        this._setFocusElement(input);\n        this.stateTarget = input;\n        this.ariaTarget = input;\n      }),\n    );\n\n    this.addController(new LabelledInputController(this.inputElement, this._labelController));\n\n    this._tooltipController = new TooltipController(this);\n    this.addController(this._tooltipController);\n    this._tooltipController.setPosition('top');\n  }\n\n  /**\n   * Override the method from `InputConstraintsMixin`\n   * to enforce HTML constraint validation even if\n   * the user didn't add any constraints explicitly:\n   * the field has to be regardless checked for bad input.\n   *\n   * @override\n   */\n  checkValidity() {\n    if (this.inputElement) {\n      return this.inputElement.checkValidity();\n    }\n\n    return !this.invalid;\n  }\n\n  /** @private */\n  _decreaseButtonTouchend(e) {\n    // Cancel the following click and focus events\n    e.preventDefault();\n    this._decreaseValue();\n  }\n\n  /** @private */\n  _increaseButtonTouchend(e) {\n    // Cancel the following click and focus events\n    e.preventDefault();\n    this._increaseValue();\n  }\n\n  /** @private */\n  _decreaseValue() {\n    this._incrementValue(-1);\n  }\n\n  /** @private */\n  _increaseValue() {\n    this._incrementValue(1);\n  }\n\n  /** @private */\n  _incrementValue(incr) {\n    if (this.disabled || this.readonly) {\n      return;\n    }\n\n    const step = this.step || 1;\n    let value = parseFloat(this.value);\n\n    if (!this.value) {\n      if ((this.min === 0 && incr < 0) || (this.max === 0 && incr > 0) || (this.max === 0 && this.min === 0)) {\n        incr = 0;\n        value = 0;\n      } else if ((this.max == null || this.max >= 0) && (this.min == null || this.min <= 0)) {\n        value = 0;\n      } else if (this.min > 0) {\n        value = this.min;\n        if (this.max < 0 && incr < 0) {\n          value = this.max;\n        }\n        incr = 0;\n      } else if (this.max < 0) {\n        value = this.max;\n        if (incr < 0) {\n          incr = 0;\n        } else if (this._getIncrement(1, value - step) > this.max) {\n          value -= 2 * step;\n          // FIXME(yuriy): find a proper solution to make correct step back\n        } else {\n          value -= step;\n        }\n      }\n    } else if (value < this.min) {\n      incr = 0;\n      value = this.min;\n    } else if (value > this.max) {\n      incr = 0;\n      value = this.max;\n    }\n\n    const newValue = this._getIncrement(incr, value);\n    if (!this.value || incr === 0 || this._incrementIsInsideTheLimits(incr, value)) {\n      this._setValue(newValue);\n    }\n  }\n\n  /** @private */\n  _setValue(value) {\n    this.value = this.inputElement.value = String(parseFloat(value));\n    this.dispatchEvent(new CustomEvent('change', { bubbles: true }));\n  }\n\n  /** @private */\n  _getIncrement(incr, currentValue) {\n    let step = this.step || 1,\n      min = this.min || 0;\n\n    // To avoid problems with decimal math, multiplying to operate with integers.\n    const multiplier = Math.max(this._getMultiplier(currentValue), this._getMultiplier(step), this._getMultiplier(min));\n\n    step *= multiplier;\n    currentValue = Math.round(currentValue * multiplier);\n    min *= multiplier;\n\n    const margin = (currentValue - min) % step;\n\n    if (incr > 0) {\n      return (currentValue - margin + step) / multiplier;\n    } else if (incr < 0) {\n      return (currentValue - (margin || step)) / multiplier;\n    }\n    return currentValue / multiplier;\n  }\n\n  /** @private */\n  _getDecimalCount(number) {\n    const s = String(number);\n    const i = s.indexOf('.');\n    return i === -1 ? 1 : s.length - i - 1;\n  }\n\n  /** @private */\n  _getMultiplier(number) {\n    if (!isNaN(number)) {\n      return 10 ** this._getDecimalCount(number);\n    }\n  }\n\n  /** @private */\n  _incrementIsInsideTheLimits(incr, value) {\n    if (incr < 0) {\n      return this.min == null || this._getIncrement(incr, value) >= this.min;\n    } else if (incr > 0) {\n      return this.max == null || this._getIncrement(incr, value) <= this.max;\n    }\n    return this._getIncrement(incr, value) <= this.max && this._getIncrement(incr, value) >= this.min;\n  }\n\n  /** @private */\n  _allowed(sign) {\n    const incr = sign * (this.step || 1);\n    const value = parseFloat(this.value);\n    return !this.value || (!this.disabled && this._incrementIsInsideTheLimits(incr, value));\n  }\n\n  /**\n   * @param {number} step\n   * @param {HTMLElement | undefined} inputElement\n   * @protected\n   */\n  _stepChanged(step, inputElement) {\n    if (inputElement) {\n      inputElement.step = step || 'any';\n    }\n  }\n\n  /**\n   * @param {unknown} newVal\n   * @param {unknown} oldVal\n   * @protected\n   * @override\n   */\n  _valueChanged(newVal, oldVal) {\n    // Validate value to be numeric\n    if (newVal && isNaN(parseFloat(newVal))) {\n      this.value = '';\n    } else if (typeof this.value !== 'string') {\n      this.value = String(this.value);\n    }\n\n    super._valueChanged(this.value, oldVal);\n  }\n\n  /**\n   * Override an event listener from `InputControlMixin`\n   * to avoid adding a separate listener.\n   * @param {!KeyboardEvent} event\n   * @protected\n   * @override\n   */\n  _onKeyDown(event) {\n    if (event.key === 'ArrowUp') {\n      event.preventDefault();\n      this._increaseValue();\n    } else if (event.key === 'ArrowDown') {\n      event.preventDefault();\n      this._decreaseValue();\n    }\n\n    super._onKeyDown(event);\n  }\n\n  /**\n   * Determines whether to hide the increase / decrease buttons based on the\n   * deprecated `hasControls` property, and the replacement `stepButtonsVisible`\n   * property\n   * @private\n   */\n  _isStepButtonVisible(hasControls, stepButtonsVisible) {\n    return hasControls || stepButtonsVisible;\n  }\n\n  /**\n   * Native [type=number] inputs don't update their value\n   * when you are entering input that the browser is unable to parse\n   * e.g. \"--5\", hence we have to override this method from `InputMixin`\n   * so that, when value is empty, it would additionally check\n   * for bad input based on the native `validity.badInput` property.\n   *\n   * @param {InputEvent} event\n   * @protected\n   * @override\n   */\n  _setHasInputValue(event) {\n    const target = event.composedPath()[0];\n    this._hasInputValue = target.value.length > 0 || target.validity.badInput;\n  }\n}\n\ncustomElements.define(NumberField.is, NumberField);\n","/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { NumberField } from '@vaadin/number-field/src/vaadin-number-field.js';\n\n/**\n * `<vaadin-integer-field>` is an input field web component that only accepts entering integer numbers.\n *\n * ```html\n * <vaadin-integer-field label=\"X\"></vaadin-integer-field>\n * ```\n *\n * ### Styling\n *\n * `<vaadin-integer-field>` provides the same set of shadow DOM parts and state attributes as `<vaadin-text-field>`.\n * See [`<vaadin-text-field>`](#/elements/vaadin-text-field) for the styling documentation.\n *\n * In addition to `<vaadin-text-field>` parts, the following parts are available for theming:\n *\n * Part name         | Description\n * ------------------|-------------------------\n * `increase-button` | Increase (\"plus\") button\n * `decrease-button` | Decrease (\"minus\") button\n *\n * See [Styling Components](https://vaadin.com/docs/latest/styling/custom-theme/styling-components) documentation.\n *\n * @fires {Event} input - Fired when the value is changed by the user: on every typing keystroke, and the value is cleared using the clear button.\n * @fires {Event} change - Fired when the user commits a value change.\n * @fires {CustomEvent} invalid-changed - Fired when the `invalid` property changes.\n * @fires {CustomEvent} value-changed - Fired when the `value` property changes.\n * @fires {CustomEvent} validated - Fired whenever the field is validated.\n *\n * @extends NumberField\n */\nexport class IntegerField extends NumberField {\n  static get is() {\n    return 'vaadin-integer-field';\n  }\n\n  constructor() {\n    super();\n\n    this.allowedCharPattern = '[-+\\\\d]';\n  }\n\n  /**\n   * Override an observer from `InputMixin` to clear the value\n   * when trying to type invalid characters.\n   * @param {string | undefined} newVal\n   * @param {string | undefined} oldVal\n   * @protected\n   * @override\n   */\n  _valueChanged(newVal, oldVal) {\n    if (newVal !== '' && !this.__isInteger(newVal)) {\n      console.warn(`Trying to set non-integer value \"${newVal}\" to <vaadin-integer-field>. Clearing the value.`);\n      this.value = '';\n      return;\n    }\n    super._valueChanged(newVal, oldVal);\n  }\n\n  /**\n   * Override an observer from `NumberField` to reset the step\n   * property when an invalid step is set.\n   * @param {number} newVal\n   * @param {HTMLElement | undefined} inputElement\n   * @protected\n   * @override\n   */\n  _stepChanged(step, inputElement) {\n    if (step != null && !this.__hasOnlyDigits(step)) {\n      console.warn(\n        `<vaadin-integer-field> The \\`step\\` property must be a positive integer but \\`${step}\\` was provided, so the property was reset to \\`null\\`.`,\n      );\n      this.step = null;\n      return;\n    }\n\n    super._stepChanged(step, inputElement);\n  }\n\n  /** @private */\n  __isInteger(value) {\n    return /^(-\\d)?\\d*$/.test(String(value));\n  }\n\n  /** @private */\n  __hasOnlyDigits(value) {\n    return /^\\d+$/.test(String(value));\n  }\n}\n\ncustomElements.define(IntegerField.is, IntegerField);\n","/**\n * @license\n * Copyright (c) 2017 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { IntegerField } from '@vaadin/integer-field/src/vaadin-integer-field.js';\n\n/**\n * @deprecated Import `IntegerField` from `@vaadin/integer-field` instead.\n */\nexport const IntegerFieldElement = IntegerField;\n\nexport * from '@vaadin/integer-field/src/vaadin-integer-field.js';\n\nconsole.warn(\n  'WARNING: Since Vaadin 23.2, \"@vaadin/vaadin-text-field\" is deprecated. Use \"@vaadin/integer-field\" instead.',\n);\n","import { PolymerElement, html } from '@polymer/polymer';\nimport { mergeFeature } from '../util/charBuilder';\nimport { jqEmpty, util_capitalizeAll } from \"../js/utils\";\nimport \"@vaadin/vaadin-select\";\nimport {loadModel} from \"../util/data\";\n\nclass DndSelectAdd extends PolymerElement {\n  static get properties() {\n    return {\n      options: {\n        type: Array\n      },\n      model: {\n        type: String\n      },\n      addCallback: {\n        type: Function\n      },\n      value: {\n        type: String,\n        value: \"\",\n        observer: \"valueUpdated\"\n      },\n      choices: {\n        type: Number,\n        observer: \"choicesUpdated\"\n      },\n      paren: {\n        type: String,\n      },\n      label: {\n        type: String\n      },\n      placeholder: {\n        type: String,\n      },\n      multiValue: {\n        type: String,\n        value: \"\"\n      },\n      disabled: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      }\n    }\n  }\n\n  choicesUpdated() {\n    if (this.listBox) {\n      this.listBox.remove();\n      delete this.listBox;\n    }\n    this.$.select.requestContentUpdate();\n  }\n\n  valueUpdated() {\n    if (this.choices) {\n      if (Array.isArray(this.value) && this.options) {\n        const choiceArray = this.value\n          .map(v => {\n            if (this.options.indexOf(v) !== -1) {\n              return this.options.indexOf(v);\n            } else {\n              return this.options.findIndex((o) => {\n                return o.name === v.name && o.source === v.source;\n              });\n            }\n          })\n          .filter(v => { return v !== -1 });\n\n        if (this.listBox) {\n          this.listBox.selectedValues = choiceArray;\n        }\n        this.multiValue = choiceArray.map(i => {\n          let value = this.options[i];\n          return value.name ? value.name : util_capitalizeAll(value) \n        }).join(\", \");\n      } else {\n        if (this.listBox) {\n          this.listBox.selectedValues = [];\n        }\n        this.multiValue = \"\";\n      }\n    } else {\n      if (this.value && this.options) {\n        if (this.value.source) {\n          this.$.select.value = this.options.findIndex(i => { return i.name === this.value.name && i.source === this.value.source || i === this.value.name }) + \"\";\n        } else if (this.value.name) {\n          this.$.select.value = this.options.findIndex(i => { return i.name === this.value.name || i === this.value.name }) + \"\";\n        } else {\n          this.$.select.value = this.options.findIndex(i => { return i.name === this.value || i === this.value }) + \"\";\n        }\n      } else {\n        this.$.select.value = \"\";\n      }\n    }\n  }\n\n  ready() {\n    super.ready();\n\n    setTimeout(async () => {\n      if (this.model) {\n        this.options = await loadModel(this.model);\n      }\n\n      const contentEl = this.$.select._overlayElement.shadowRoot.querySelector('#content');\n      let scrollHeight = 0;\n      \n      contentEl.addEventListener('scroll', (e) => {\n        scrollHeight = contentEl.scrollTop;\n      }, { passive: true });\n\n      this.$.select.renderer = (root, select) => {\n        if (!this.listBox) {\n          this.listBox = document.createElement('vaadin-list-box');\n\n          // setting up for multi-select\n          if (this.choices) {\n            this.listBox.setAttribute(\"multiple\", true);\n\n            this.listBox.addEventListener(\"click\", (e) => {\n              select.opened = true;\n              let wasPreviouslySelected = e.srcElement.getAttribute(\"selected\") !== null\n              contentEl.scroll(0, scrollHeight);\n              setTimeout(() => {\n                if (this.listBox.selectedValues.length > this.choices\n                    && !wasPreviouslySelected) {\n                  this.listBox.selectedValues.splice(this.listBox.selectedValues.length - 2, 1)\n                }\n                let selectedOptions = this.listBox.selectedValues.map(v => { return this.options[v] });\n                this.multiValue = selectedOptions.map(o => { return o.name ? o.name : util_capitalizeAll(o) }).join(', ');\n                if (this.addCallback) {\n                  this.addCallback(selectedOptions);\n                }\n              }, 0);\n            });\n\n          }\n\n          // Adding options\n          if (this.options && this.options.length) {\n            for (let i = 0; i < this.options.length; i ++) {\n              const option = this.options[i],\n                item = document.createElement('vaadin-item');\n              const optionName = option.name || util_capitalizeAll(option);\n              item.innerHTML = `<span style='margin-left: 10px;'>${optionName}</span> ${option.name ? `<span style='font-size: 14px;color: var(--lumo-primary-color-50pct);'>${option.source || ''}</span>` : ''}`\n              item.setAttribute(\"value\", i);\n              this.listBox.appendChild(item);\n            }\n          }\n          root.appendChild(this.listBox);\n          this.$.select._assignMenuElement();\n\n          this.valueUpdated();\n        }\n      };\n    }, 0);\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    this.selectChangeHandler = () => {\n      const val = this.$.select.value;\n      if (val) {\n        if (!this.choices) {\n          const selected = this.options[val];\n          if (this.addCallback) {\n            this.addCallback(selected, this.model);\n          } else {\n            mergeFeature(undefined, selected, this.model);\n          }\n          if (!this.value) {\n            this.$.select.value = \"\";\n          }\n        }\n      }\n    };\n\n    this.$.select.addEventListener(\"change\", this.selectChangeHandler);\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n\n    this.$.select.removeEventListener(\"change\", this.selectChangeHandler);\n  }\n\n  _exists(a) {\n    return !!a;\n  }\n\n  _label(label, choices, paren) {\n    let result = '';\n    if (label) {\n      result = label;\n      if (choices && choices !== 1 && choices !== 100) {\n        result += ` (pick ${choices})`;\n      }\n      if (paren) {\n        result += ` (${paren})`;\n      }\n    }\n    return result;\n  }\n  \n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: inline-block;\n        }\n        [slot=\"prefix\"] {\n          width: calc(100% - 46px);\n          padding: 12px;\n          line-height: 1.4;\n        }\n        vaadin-select {\n          width: 100%;\n        }\n        .prefix {\n          white-space: normal;\n          color: var(--lumo-body-text-color);\n        }\n      </style>\n      <vaadin-select add theme=\"dark add\" id=\"select\" label=\"[[_label(label, choices, paren)]]\" placeholder=\"[[placeholder]]\" disabled$=\"[[disabled]]\">\n        <div hidden$=\"[[!_exists(multiValue)]]\" slot=\"prefix\">\n          <span class=\"prefix\">[[multiValue]]</span>\n        </div>\n      </vaadin-select>\n      \n    `;\n  }\n}\ncustomElements.define('dnd-select-add', DndSelectAdd);","import {PolymerElement, html} from \"@polymer/polymer\";\nimport \"@vaadin/vaadin-text-field/vaadin-integer-field\";\nimport \"../../dnd-select-add\";\nimport \"../../dnd-button\";\nimport \"../../dnd-svg\";\nimport \"../../styles/fa-styles\";\nimport { \n  getCharacterChannel,\n  getSelectedCharacter,\n  updateAttr,\n  getSaves,\n  getSkillProfs,\n  toggleCustomSkill,\n  toggleCustomSave,\n  getAttributeScoreModifiers,\n  getMaxHP,\n  getCurrentHP, getTempHp, setCurrentHp,\n  getHitDice,\n  resetHitDice,\n  addTempHp,\n  useHitDice,\n  getCharacterAC,\n  getCharacterInitiative,\n  getCharacterSpeed,\n  getCharacterProficiencyBonus,\n  toggleCustomInitiative,\n  setCustomInitiativeVal,\n  toggleCustomAC,\n  toggleCustomSpeed,\n  toggleCustomHealth,\n  setCustomACVal,\n  setCustomHealthVal,\n  getChoiceLanguages,\n  getChoiceToolProfs,\n  getChoiceArmorProfs,\n  getChoiceWeaponProfs,\n  getChoiceFeats,\n  getChoiceDarkvision,\n  getChoiceConditionImmunes,\n  getChoiceResists,\n  getSpellCastingStats,\n  addCustomSpeedItem,\n  deleteCustomSpeedItem,\n  editCustomSpeedItem,\n} from \"../../../util/charBuilder\";\nimport { getEditModeChannel, isEditMode } from \"../../../util/editMode\";\nimport { util_capitalizeAll, absInt, findInPath, cloneDeep } from \"../../../js/utils\";\nimport { rollDice } from \"../../../util/roll\";\n\nclass DndCharacterBuilderAttributes extends PolymerElement {\n  \n  static get properties() {\n    return {\n      str: {\n        type: Number\n      },\n      dex: {\n        type: Number\n      },\n      con: {\n        type: Number\n      },\n      int: {\n        type: Number\n      },\n      wis: {\n        type: Number\n      },\n      cha: {\n        type: Number\n      },\n      strAdj: {\n        type: Number,\n        value: 0\n      },\n      dexAdj: {\n        type: Number,\n        value: 0\n      },\n      conAdj: {\n        type: Number,\n        value: 0\n      },\n      intAdj: {\n        type: Number,\n        value: 0\n      },\n      wisAdj: {\n        type: Number,\n        value: 0\n      },\n      chaAdj: {\n        type: Number,\n        value: 0\n      },\n      skillProfs: {\n        type: String,\n        value: \"\"\n      },\n      customSkillProfs: {\n        type: String,\n      },\n\n      saves: {\n        type: String,\n        value: \"\"\n      },\n\n      maxHP: {\n        type: Number\n      },\n      tempHP: {\n        type: Number,\n        value: 0\n      },\n      isEditMode: {\n        type: Boolean,\n        value: false\n      },\n      initiative: {\n        type: String,\n        value: \"\"\n      },\n      customInitiative: {\n        type: Boolean,\n        value: false\n      },\n      customInitiativeVal: {\n        type: Number\n      },\n      customACVal: {\n        type: Number\n      },\n      customACHealth: {\n        type: Number\n      },\n      otherProfsOpen: {\n        type: Boolean\n      },\n      featuresOpen: {\n        type: Boolean\n      },\n      languages: {\n        type: String,\n      },\n      toolProfs: {\n        type: String,\n      },\n      weaponProfs: {\n        type: String,\n      },\n      armorProfs: {\n        type: String,\n      },\n      feats: {\n        type: String,\n      },\n      darkvision: {\n        type: Number,\n      },\n      resists: {\n        type: String,\n      },\n      conditionImmunes: {\n        type: String,\n      },\n      hasDarkvision: {\n        type: Boolean,\n        value: false,\n      }\n    };\n  }\n\n  static get observers() {\n    return [\n      \"updateCharAttr(str, dex, con, int, wis, cha)\",\n      \"updateCustomInitiative(customInitiativeVal)\",\n      \"updateCustomAC(customACVal)\",\n      \"updateCustomHealth(customHealthVal)\"\n    ]\n  }\n\n  updateCharAttr(str, dex, con, int, wis, cha) {\n    if (str && dex && con && int && wis && cha) {\n      updateAttr({str, dex, con, int, wis, cha});\n    }\n  }\n\n  updateCustomInitiative(customInitiativeVal) {\n    if (customInitiativeVal !== undefined && customInitiativeVal !== \"\") {\n      setCustomInitiativeVal(customInitiativeVal);\n    }\n  }\n\n  updateCustomAC(customACVal) {\n    if (customACVal !== undefined && customACVal !== \"\") {\n      setCustomACVal(customACVal);\n    }\n  }\n\n  updateCustomHealth(customHealthVal) {\n    if (customHealthVal !== undefined && customHealthVal !== \"\") {\n      setCustomHealthVal(customHealthVal);\n    }\n  }\n\n  hpChangeHandler(e) {\n    this.$.hpField.focusElement.blur();\n  }\n\n  hpBlurHandler(e) {\n    const parsedVal = parseInt(this.$.hpField.value);\n    \n    if (Number.isNaN(parsedVal)) {\n      this.$.hpField.value = getCurrentHP;\n    } else {\n      setCurrentHp(parsedVal);\n    }\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    this.characterChangeHandler = (e) => {\n      let character = e.detail.character;\n      this.updateAttributesFromCharacter(character);\n    };\n    \n    this.updateAttributesFromCharacter(getSelectedCharacter());\n    getCharacterChannel().addEventListener(\"character-selected\", this.characterChangeHandler);\n\n    this.editModeHandler = (e) => {\n      this.isEditMode = e.detail.isEditMode;\n    }\n    getEditModeChannel().addEventListener('editModeChange', this.editModeHandler);\n    this.isEditMode = isEditMode();\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n\n    getCharacterChannel().removeEventListener(\"character-selected\", this.characterChangeHandler);\n    getEditModeChannel().removeEventListener('editModeChange', this.editModeHandler);\n  }\n\n  async updateAttributesFromCharacter(character) {\n    if (character && character.attr) {\n      const attr = character.attr;\n      if (attr.str !== this.str || attr.dex !== this.dex || attr.con !== this.con \n          || attr.int !== this.int || attr.wis !== this.wis || attr.cha !== this.cha) {\n        this.setProperties({\n          str: character.attr.str,\n          dex: character.attr.dex,\n          con: character.attr.con,\n          int: character.attr.int,\n          wis: character.attr.wis,\n          cha: character.attr.cha\n        });\n      }\n\n      this.saves = (await getSaves()).join(',');\n      this.customSaves = character.customSaves ? character.customSaves.join(',') : '';\n      this.negatedSaves = character.negatedSaves ? character.negatedSaves.join(',') : '';\n\n      // Attributes from Race\n      let attributeAdj = await getAttributeScoreModifiers();\n\n      this.strAdj = attributeAdj.str;\n      this.dexAdj = attributeAdj.dex;\n      this.conAdj = attributeAdj.con;\n      this.intAdj = attributeAdj.int;\n      this.wisAdj = attributeAdj.wis;\n      this.chaAdj = attributeAdj.cha;\n\n      this.skillProfs = getSkillProfs().join(',');\n      this.customSkillProfs = character.customSkills ? character.customSkills.join(',') : '';\n      this.negatedSkillProfs = character.negatedSkills ? character.negatedSkills.join(',') : '';\n\n      this.customHealth = !!character.customHealth;\n      this.customHealthVal = character.customHealthVal;\n      this.maxHP = await getMaxHP();\n      this.currentHP = await getCurrentHP();\n      this.tempHP = await getTempHp();\n\n      const hitDicePerClass = await getHitDice();\n      const hitDicePerDice = [];\n      for (let hitDiceClass of hitDicePerClass) {\n        const hitDiceDice = hitDicePerDice.find(hitDiceInArray => hitDiceInArray.die === hitDiceClass.die)\n        if (hitDiceDice) {\n          if (hitDiceDice.current === 0) {\n            hitDiceDice.className = hitDiceClass.className;\n          }\n          hitDiceDice.current += hitDiceClass.current;\n          hitDiceDice.total += hitDiceClass.total;\n        } else {\n          hitDicePerDice.push(hitDiceClass);\n        }\n      }\n      this.hitDice = hitDicePerDice.sort();\n\n      this.customAC = !!character.customAC;\n      this.customACVal = character.customACVal;\n      this.ac = await getCharacterAC();\n\n      this.customInitiative = !!character.customInitiative;\n      this.customInitiativeVal = character.customInitiativeVal;\n      this.initiative = await getCharacterInitiative();\n\n      this.customSpeed = !!character.customSpeed;\n      this.speed = cloneDeep(await getCharacterSpeed());\n      this.additionalCustomSpeedItems = [\"Fly\", \"Swim\", \"Climb\"].filter(item => !character.customSpeedVal.some((customSpeed) => customSpeed.type === item.toLowerCase()));\n\n      this.proficiencyBonus = await getCharacterProficiencyBonus();\n\n      this.weaponProfs = getChoiceWeaponProfs().map(util_capitalizeAll).join(', ');\n      this.armorProfs = getChoiceArmorProfs().map(util_capitalizeAll).join(', ');\n      this.toolProfs = getChoiceToolProfs().map(util_capitalizeAll).join(', ');\n      this.languages = getChoiceLanguages().map(util_capitalizeAll).join(', ');\n      this.feats = getChoiceFeats().map(util_capitalizeAll).join(', ');\n      this.darkvision = getChoiceDarkvision();\n      this.resists = getChoiceResists().map(util_capitalizeAll).join(', ');\n      this.conditionImmunes = getChoiceConditionImmunes().map(util_capitalizeAll).join(', ');\n      this.hasDarkvision = this.darkvision !== null;\n      \n      this.spellMods = await getSpellCastingStats(character);\n\n      this.dispatchEvent(new CustomEvent(\"loadingChange\", { bubbles: true, composed: true }));\n    }\n  }\n\n  _adjustString(adj) {\n    if (adj !== 0 && adj !== undefined) {\n      return absInt(adj);\n    }\n    return \"\";\n  }\n\n  _total(a, b) {\n    let intA = parseInt(a),\n      intB = parseInt(b);\n\n    intA = isNaN(intA) ? 0 : intA;\n    intB = isNaN(intB) ? 0 : intB;\n\n    return intA + intB;\n  }\n\n  _mod(base, adj) {\n    return absInt(Math.floor((this._total(base, adj) - 10) / 2));\n  }\n\n  _contains(saves, str) {\n    return saves.indexOf(str) > -1;\n  }\n\n  _join(a) {\n    return a.join(', ');\n  }\n\n  _abs(num) {\n    return num >= 0 ? `+${num}`: num;\n  }\n\n  _exists() {\n    for (let arg of arguments) {\n      if (!!arg && (arg.constructor !== Object || Object.entries(arg).length > 0) && (!Array.isArray(arg) || arg.length > 0)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  _editModeClass(isEditMode) {\n    return isEditMode ? 'edit-mode' : 'not-edit-mode';\n  }\n\n  _tempHpStr(tempHP) {\n    return tempHP && typeof tempHP === 'number' && tempHP > 0 ? ` + ${tempHP}` : '';\n  }\n\n  _toggleButtonField(e) {\n    const element = e.target.closest('.btn-field');\n    const isOpen = element.classList.contains('btn-field--open');\n    const isTemp = element.classList.contains('btn-field--temp');\n    const intField = element.querySelector('vaadin-integer-field');\n    const buttonComp = element.querySelector('button');\n    element.classList.toggle('btn-field--open');\n    buttonComp.classList.toggle('icon-only');\n    buttonComp.classList.toggle('hard-left');\n\n    if (isTemp) {\n      if (isOpen) {\n        const changeVal = parseInt(intField.value);\n        if (changeVal) {\n          addTempHp(parseInt(this.tempHP) + changeVal);\n          intField.value = '';\n        }\n      } else {\n        intField.focus();\n      }\n\n    } else {\n      if (isOpen) {\n        const changeVal = parseInt(intField.value);\n        if (changeVal) {\n          const modifier = element.classList.contains('btn-field--heal') ? 1 : -1;\n          setCurrentHp(parseInt(this.currentHP) + (modifier * changeVal));\n          intField.value = '';\n        }\n      } else {\n        intField.focus();\n      }\n    }\n  }\n\n  _submitButtonField(e) {\n    if (e.key === 'Enter') {\n      this._toggleButtonField(e);\n    }\n  }\n\n  _blurButtonField(e) {\n    this._toggleButtonField(e);\n  }\n\n  _useHitDice(e) {\n    const element = e.target.closest('.hit-dice__item');\n    if (e.model.__data.item.current > 0 && this.currentHP < this._maxHP(this.customHealthVal, this.maxHP, this.customHealth)) {\n      const className = element.dataset.className;\n      useHitDice(className);\n    } else {\n      // flash error\n      element.classList.add('hit-dice__item--error');\n      setTimeout(() => {\n        element.classList.remove('hit-dice__item--error');\n      }, 500);\n    }\n  }\n\n  _strContains(str, search) {\n    const count = (str.match(new RegExp(search, 'g')) || []).length;\n    return count >= 1;\n  }\n\n  _strContainsTwo(str, search) {\n    const count = (str.match(new RegExp(search, 'g')) || []).length;\n    return count >= 2;\n  }\n\n  _resetHitDice(e) {\n    resetHitDice();\n  }\n\n  async _roll(e) {\n    const profEl = findInPath('.proficiency-item', e);\n    const saveEl = findInPath('.stat-box__save', e);\n    if (!this.isEditMode) {\n      const attrEl = findInPath('.stat-box', e);\n      const initEl = findInPath('.initiative', e);\n      let mod, isProficient, name, isExpertise;\n\n      if (profEl) {\n        isProficient = profEl.hasAttribute('enabled');\n        isExpertise = profEl.hasAttribute('expertise');\n        mod = parseInt(profEl.closest('.attribute-wrap').querySelector('.stat-box__mod').innerText, 10);\n        name = profEl.innerText;\n\n      } else if (attrEl) {\n        isProficient = attrEl.querySelector('.stat-box__save').hasAttribute('enabled');\n        mod = parseInt(attrEl.querySelector('.stat-box__mod').innerText, 10);\n        name = attrEl.querySelector('vaadin-integer-field').label + ' Save';\n\n      } else if (initEl) {\n        isProficient = false;\n        mod = this.customInitiative ? this.customInitiativeVal : parseInt(this.initiative, 10);\n        name = \"Initiative\";\n      }\n\n      if (name) {\n        let rollForm = '1d20';\n  \n        if (isProficient) {\n          mod = mod + this.proficiencyBonus;\n        }\n        if (isExpertise) {\n          mod = mod + this.proficiencyBonus;\n        }\n        if (mod > 0) {\n          rollForm += `+${mod}`\n        } else if (mod < 0) {\n          rollForm += mod;\n        }\n        rollDice(name, rollForm);\n      }\n    } else if (profEl) {\n      toggleCustomSkill(profEl.innerText.toLowerCase());\n    } else if (saveEl) {\n      await toggleCustomSave(saveEl.getAttribute('attr'));\n    }\n  }\n\n  _swapCustomInitiative(e) {\n    toggleCustomInitiative();\n  }\n\n  _swapCustomAC(e) {\n    toggleCustomAC();\n  }\n\n  _swapCustomSpeed(e) {\n    toggleCustomSpeed();\n  }\n\n  _swapCustomHealth(e) {\n    toggleCustomHealth();\n  }\n\n  _plusMinus(val) {\n    if (val !== undefined) {\n      if (val > -1) { \n        return \"+\";\n      }\n    }\n  }\n\n  _triggerShortRest(e) {\n\n  }\n\n  _triggerLongRest(e) {\n\n  }\n\n  _maxHP(customHealthVal, maxHP, customHealth) {\n    return customHealth ? customHealthVal : maxHP;\n  }\n\n  _toggleOtherProfs() {\n    this.otherProfsOpen = !this.otherProfsOpen;\n  }\n\n  _toggleFeatures() {\n    this.featuresOpen = !this.featuresOpen;\n  }\n\n  _hideCustomSpeed(isEdit, customSpeed) {\n    return !isEdit || !customSpeed;\n  }\n\n  _removeSpeedItem(e) {\n    deleteCustomSpeedItem(e.model.__data.index);\n  }\n\n  _addSpeedItem(e) {\n    const newSpeedItem = { type: e.currentTarget.value.toLowerCase(), speed: 0 };\n    addCustomSpeedItem(newSpeedItem);\n  }\n\n  _speedItemChange(e) {\n    const newValue = parseInt(e.currentTarget.value);\n    const index = e.model.__data.index;\n    editCustomSpeedItem(index, newValue);\n  }\n\n  _uppercase(str) {\n    return str && typeof str === 'string' ? util_capitalizeAll(str) : '';\n  }\n\n  _arrayOfOne(array) {\n    return Array.isArray(array) && array.length === 1;\n  }\n\n  static get template() {\n    return html`\n      <style include=\"material-styles fa-styles\">\n        :host {\n          display: block;\n          padding: 14px;\n        }\n\n        [hidden] {\n          display: none !important;\n        }\n\n        .wrap {\n          display: flex;\n          flex-direction: column;\n          justify-content: space-between;\n          padding-bottom: 50px;\n          position: relative;\n        }\n        .attribute-wrap {\n          display: flex;\n          flex-direction: row;\n          min-width: 0;\n        }\n        .health-wrap {\n          display: flex;\n          flex-direction: row;\n          flex-wrap: wrap;\n          min-width: 0;\n          flex-shrink: 0;\n          justify-content: space-between;\n          max-width: 360px;\n          width: 100%;\n        }\n        .health-wrap > div {\n          width: calc(33% - 8px);\n          max-width: 120px;\n        }\n        .health-wrap > * {\n          margin-bottom: 16px;\n        }\n\n        /* Proficiencies */\n        .proficiencies {\n          margin-left: 10px;\n          line-height: 1.4;\n          min-width: 0;\n          position: relative;\n          top: 3px;\n        }\n        .proficiency-item {\n          font-size: 14px;\n          white-space: nowrap;\n          text-overflow: ellipsis;\n          position: relative;\n          cursor: pointer;\n          user-select: none;\n        }\n\n        .proficiency-item--ah,\n        .proficiency-item--soh {\n          font-size: 12px;\n        }\n        .proficiency-item {\n          padding-left: 13px;\n        }\n        .proficiency-item[expertise],\n        .edit-mode .proficiency-item[negated-expertise],\n        .edit-mode .proficiency-item[enabled][negated-enabled] {\n          padding-left: 24px;\n        }\n        .proficiency-item::before,\n        .proficiency-item[expertise]::after,\n        .proficiency-item[negated-expertise]::after,\n        .edit-mode .proficiency-item[enabled][negated-enabled]::after {\n          content: '\\\\f111';\n          display: block;\n          height: 10px;\n          width: 10px;\n          margin-right: 8px;\n          position: absolute;\n          left: -4px;\n          bottom: 8px;\n          font-size: 12px;\n          font-family: 'Font Awesome 5 Pro';\n          font-weight: 400;\n          color: var(--mdc-theme-primary);\n        }\n        .proficiency-item[enabled]::before,\n        .edit-mode .proficiency-item[negated-enabled]::before,\n        .not-edit-mode .proficiency-item[enabled][negated-enabled]::before {\n          font-weight: 900;\n        }\n        .proficiency-item[expertise]::after,\n        .proficiency-item[negated-expertise]::after,\n        .edit-mode .proficiency-item[enabled][negated-enabled]::after {\n          left: 9px;\n          font-weight: 900;\n        }\n        .proficiency-item[custom-enabled]::before,\n        .proficiency-item[custom-expertise]::after {\n          content: '\\\\f055';\n        }\n        .edit-mode .proficiency-item[negated-enabled]::before,\n        .edit-mode .proficiency-item[negated-expertise]::after {\n          content: '\\\\f056';\n          font-weight: 400;\n        }\n        .not-edit-mode .proficiency-item[custom-enabled]::before,\n        .not-edit-mode .proficiency-item[custom-expertise]::after,\n        .not-edit-mode .proficiency-item[negated-enabled]::before,\n        .not-edit-mode .proficiency-item[negated-expertise]::after {\n          content: '\\\\f111';\n        }\n        .proficiency-item[expertise]::before,\n        .proficiency-item[negated-expertise]::before {\n          margin-right: 20px;\n        }\n        .not-edit-mode .proficiency-item[negated-enabled]::before {\n          font-weight: 400;\n        }\n        .not-edit-mode .proficiency-item[negated-expertise]::after {\n          display: none;\n        }\n\n\n        .stats {\n          display: flex;\n          flex-direction: column;\n          min-width: 0;\n          flex-shrink: 0;\n        }\n\n        /* Other profs */\n        .stats-other-wrap {\n          position: relative;\n        }\n        .others {\n          margin-bottom: 130px;\n          position: absolute;\n          top: 0;\n          right: 0;\n        }\n        .other {\n          font-size: 14px;\n          flex-shrink: 1;\n          height: fit-content;\n          margin-bottom: 8px;\n          line-height: 1.5;\n          max-width: calc(100vw - 245px);\n          margin-left: auto;\n        }\n        .other[open]  .other__header .material-icons {\n          transform: rotate(180deg);\n        }\n        .other__header {\n          display: flex;\n          align-items: center;\n          justify-content: flex-end;\n          margin-bottom: 8px;\n          padding: 0;\n          cursor: pointer;\n          transition: color .1s ease-in;\n          font-size: 16px;\n          font-weight: bold;\n          text-align: left;\n          line-height: 1.6;\n          user-select: none;\n          color: var(--mdc-theme-primary);\n          background: none;\n          border: 0;\n        }\n        .other__header:hover {\n          color: var(--mdc-theme-primary-darker);\n        }\n        .other__header .material-icons {\n          font-size: 24px;\n          position: relative;\n          transition: transform .1s ease-in;\n          margin: -2px 4px 0 0;\n        }\n        .other__wrap {\n          opacity: 0;\n          height: 0;\n          overflow: hidden;\n        }\n        .other[open] .other__wrap {\n          opacity: 1;\n          height: auto;\n          transform: scale(1, 1);\n          animation-duration: .3s;\n          animation-name: scaleIn;\n          animation-timing-function: cubic-bezier(.71,.55,.62,1.57);\n        }\n\n        .other__item h4 {\n          margin: 0;\n          font-size: 14px;\n        }\n        .other__item {\n          margin-bottom: 16px;\n          margin-left: 16px;\n        }\n        .other__item div {\n          margin-left: 12px;\n        }\n\n        @keyframes scaleIn {\n          0% {\n            height: 0;\n          }\n          1% {\n            height: fit-content;\n            opacity: 0;\n            transform: scale(.9, .9);\n          }\n          100% {\n            opacity: 1;\n            height: auto;\n            transform: scale(1, 1);\n          }\n        }\n        @keyframes scaleOut {\n          0% {\n            opacity: 1;\n            transform: scale(1, 1);\n          }\n          100% {\n            opacity: 0;\n            transform: scale(.9, .9);\n          }\n        }\n\n        /* Stat Box */\n        .stat-box {\n          cursor: pointer;\n          position: relative;\n          display: inline-flex;\n          flex-direction: column;\n          justify-content: center;\n          align-items: center;\n          background: var(--lumo-contrast-10pct);\n          border-radius: 4px;\n        }\n        .stat-box:not(:last-child) {\n          margin-bottom:16px;\n        }\n        .stat-box__save {\n          display: flex;\n          justify-content: center;\n          align-items: center;\n          position: absolute;\n          top: -7px;\n        }\n        .stat-box__save::before {\n          content: '\\\\f111';\n          font-size: 16px;\n          font-family: 'Font Awesome 5 Pro';\n          font-weight: 400;\n          color: var(--mdc-theme-primary);\n          width: 16px;\n          height: 16px;\n          border-radius: 50%;\n          background: var(--mdc-theme-surface);\n          line-height: 1;\n        }\n        .stat-box__save[enabled]::before {\n          font-weight: 900;\n        }\n        .not-edit-mode .stat-box__save:not([enabled])::before {\n          display: none;\n        }\n        .edit-mode .stat-box__save[custom]::before {\n          content: '\\\\f055';\n        }\n        .edit-mode .stat-box__save[negated]::before {\n          content: '\\\\f056';\n        }\n\n        .stat-box__mod {\n          font-size: 32px;\n          font-weight: normal;\n          margin: 14px 8px 7px;\n          line-height: 1;\n          position: relative;\n          left: 1px;\n        }\n        .stat-box__footer {\n          display: inline-block;\n        }\n        .stat-box__adj {\n          position: relative;\n          right: 0px;\n        }\n        .not-edit-mode .stat-box__adj {\n          right: 15px;\n          color: var(--lumo-body-text-color);\n          -webkit-text-fill-color: var(--lumo-body-text-color);\n        }\n        .stat-box__side {\n          padding: 8px 0;\n        }\n\n        /* Stat Box HP  */\n        .stat-box--hp {\n          width: calc(66% - 2px) !important;\n          max-width: 236px !important;\n          flex-direction: row;\n          min-width: 160px;\n          justify-content: space-between;\n          flex-wrap: wrap;\n          height: fit-content;\n          height: 148px;\n          cursor: unset;\n        }\n        .stat-box__total {\n          font-size: 14px;\n        }\n        .stat-box--hp .stat-box__adj--hp {\n          position: absolute;\n          bottom: -10px;\n          right: 5px;\n          font-size: 18px;\n        }\n        .stat-box--hp .stat-box__adj--hp span {\n          transform: rotate(200deg);\n          font-size: 24px;\n          display: inline-block;\n\n        }\n        .stat-box--hp .stat-box__footer {\n          width: 100%;\n        }\n        .stat-box__side {\n            flex-wrap: wrap;\n            justify-content: space-between;\n            width: 100%;\n            margin: 8px;\n        }\n        .stat-box--hp .btn-field {\n          margin-top: 12px;\n          width: auto;\n        }\n\n        .stat-box--hp .btn-field:not(:last-child) {\n          margin-bottom: 0px\n        }\n        .stat-box__side {\n          max-width: 80px;\n          margin: 0 8px 0 0;\n        }\n        .stat-box--hp .btn-field {\n          margin-top: 0;\n          width: 100%;\n        }\n        .stat-box--hp .btn-field:not(:last-child) {\n          margin-bottom: 12px\n        }\n        .edit-mode .stat-box--hp {\n          justify-content: center;\n          align-items: center;\n        }\n        .stat-box--hp-edit {\n          height: 100%;\n          width: 100%;\n          margin-top: 4px;\n          align-items: center;\n          justify-content: center;\n          display: flex;\n          flex-direction: column;\n          position: relative;\n          font-size: 18px;\n        }\n        .stat-box--hp-edit .custom-val__swap {\n          top: 0px;\n          right: 0;\n          position: absolute;\n          margin-right: 0px;\n        }\n        .prof-bonus-box {\n          padding: 6px;\n          width: calc(2 * (100vw - 54px) / 3);\n          max-width: 200px;\n          cursor: initial;\n        }\n        .prof-bonus-box__label {\n          font-size: 15px;\n          color: var(--mdc-theme-primary);\n          text-align: center;\n          line-height: 1.2;\n          margin-top: 5px;\n        }\n        .prof-bonus-box__value {\n          font-size: 24px;\n        }\n\n        /* Button Field */\n        .btn-field {\n          display: inline-flex;\n          flex-direction: row;\n          flex-wrap: nowrap;\n          width: 100%;\n          height: 36px;\n          background: var(--lumo-contrast-10pct);\n          border-radius: 4px;\n          overflow: hidden;\n        }\n        .btn-field:not(:last-child){\n          margin-bottom: 12px;\n        }\n        .btn-field__btn {\n          display: block;\n          width: 100%;\n          cursor: pointer;\n          padding-top: 2px;\n          background: transparent;\n          border: none;\n          min-width: 0;\n        }\n        .btn-field__input {\n          display: none;\n        }\n        .btn-field .btn-field__btn-label {\n          display: none;\n        }\n        .btn-field--open .btn-field__btn {\n          width: calc(100% - 50px);\n        }\n        .btn-field--open .btn-field__btn-label {\n          width: 0;\n          overflow: hidden;\n        }\n        .btn-field--open .btn-field__input {\n          display: block;\n          width: 50px;\n          margin-top: -40px;\n        }\n        .btn-field--heal.btn-field--open .btn-field__btn-label {\n          margin-left: -16px;\n        }\n        .btn-field vaadin-integer-field {\n          --lumo-contrast-10pct: transparent;\n        }\n        .btn-field__btn-label--temp,\n        .btn-field__btn-label--damage {\n          font-size: 12px;\n        }\n        .btn-field--heal button i:before {\n          color: #83f675;\n        }\n        .btn-field--dmg button i:before {\n          color: #e34449;\n        }\n        .btn-field--temp button i:before {\n          color: #2069c9;\n        }\n\n\n        /* Hit Dice */\n        .hit-dice {\n          display: flex;\n          flex-direction: column;\n          border-radius: 4px;\n          padding: 6px 0 0;\n          background: var(--lumo-contrast-10pct);\n          margin-bottom: 16px;\n          height: min-content;\n          min-height: 143px;\n        }\n        .hit-dice__heading {\n          display: inline-block;\n          text-align: center;\n          margin-bottom: 8px;\n          color: var(--mdc-theme-primary);\n          font-size: 14px;\n        }\n        .hit-dice__item {\n          width: 100%;\n          display: flex;\n          flex-direction: row;\n          flex-wrap: nowrap;\n        }\n        .hit-dice__item dnd-button {\n          width: 100%;\n        }\n        .hit-dice__item--error dnd-button {\n          --mdc-theme-primary: var(--lumo-error-color-50pct);\n        }\n        .hit-dice__item-label {\n          width: 100%;\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n        }\n        .hit-dice__item-label dnd-svg {\n          stroke: var(--mdc-theme-on-primary);\n          fill: var(--mdc-theme-primary);\n          width: 30px;\n          height: 30px;\n        }\n        .hit-dice__count {\n          color: var(--mdc-theme-on-surface);\n        }\n        .hit-dice__reset {\n          margin-top: auto;\n        }\n\n        .basic-box__wrap {\n          display: flex;\n          justify-content: space-between;\n          margin-bottom: 16px;\n        }\n        .basic-box__wrap-wrap {\n          width: 100%;\n          max-width: 360px;\n        }\n        .basic-box__margin {\n          margin-bottom: 40px;\n        }\n        .basic-box {\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n          padding: 4px;\n          background: var(--lumo-contrast-10pct);\n          border-radius: 4px;\n          height: min-content;\n          width: calc(33% - 16px);\n          max-width: 120px;\n        }\n        .basic-box--short {\n          height: fit-content;\n        }\n        \n        .basic-box__label {\n          color: var(--mdc-theme-primary);\n          font-size: 14px;\n          text-align: center;\n        }\n        .basic-box__value {\n          font-size: 18px;\n          width: 100%;\n          display: flex;\n          flex-direction: column;\n          text-align: center;\n        }\n        .basic-box__no-flex {\n          display: block;\n        }\n        .not-edit-mode .initiative {\n          cursor: pointer;\n        }\n\n        .speed .basic-box__label {\n          display: flex;\n          align-items: center;\n        }\n        .speed .basic-box__label vaadin-select {\n          margin-left: 8px;\n        }\n        .speed-val {\n          font-size: 16px;\n          display: flex;\n          justify-content: space-between;\n        }\n        .speed-val vaadin-integer-field {\n          width: 70px;\n          padding: 0;\n          margin: -16px 4px 7px;\n        }\n        .speed-val button {\n          height: 24px;\n          border: unset;\n          background: unset;\n          cursor: pointer;\n          font-weight: 300;\n        }\n        .speed-val--center {\n          justify-content: center;\n        }\n        .speed-val--center span:last-child {\n          margin-left: 8px;\n        }\n        .speed-val[smaller] {\n          font-size: 14px;\n          line-height: 1.4;\n        }\n\n        .custom-val__swap {\n          font-size: 10px;\n          margin: -4px -4px 8px auto;\n          background-color: var(--lumo-contrast-10pct);\n          padding: 4px 5px 4px;\n          line-height: 1;\n          border-radius: 4px;\n          cursor: pointer;\n        }\n        .custom-val__swap .material-icons {\n          font-size: 11px;\n          position: relative;\n          top: 1px;\n        }\n\n        /* Rest Buttons */\n        .rest-btn {\n          margin-bottom: 16px;\n        }\n\n        .mod-val {\n          position: relative;\n        }\n        .mod-val:focus .tooltip,\n        .mod-val:hover .tooltip {\n          display: block;\n        }\n        .mod-val:focus {\n          outline: none;\n        }\n        .mod-val:not(:last-of-type)::after {\n          content: '|';\n          margin-left: 4px;\n          color: var(--lumo-contrast-30pct);\n        }\n        .tooltip {\n          position: absolute;\n          background: lightgray;\n          color: black;\n          font-size: 14px;\n          padding: 2px 10px;\n          border-radius: 4px;\n          white-space: nowrap;\n          left: 5px;\n          top: -32px;\n          display: none;\n        }\n        .tooltip::after {\n          content: '';\n          height: 0;\n          width: 0;\n          position: absolute;\n          border-left: 5px solid transparent;\n          border-right: 5px solid transparent;\n          border-top: 5px solid lightgray;\n          bottom: -4px;\n          left: 2px;\n        }\n\n        @media(max-width: 380px) {\n          .prof-bonus-box__label span {\n            display: none;\n          }\n        }\n\n        @media(min-width: 420px) {\n          .wrap {\n            padding-bottom: 0;\n          }\n          .other {\n            max-width: calc(100vw - 305px);\n          }\n          .prof-bonus-box {\n            max-width: 224px;\n          }\n        }\n        @media(min-width: 505px) {\n          .stats {\n            width: 250px;\n          }\n          .proficiency-item--ah,\n          .proficiency-item--soh {\n            font-size: 14px;\n          }\n        }\n        @media(min-width: 555px) {\n          .other {\n            max-width: 250px;\n          }\n        }\n        @media(min-width: 920px) {\n          .health-wrap-wrap {\n            display: flex;\n            justify-content: space-between;\n          }\n          .others {\n            margin-bottom: 0;\n          }\n          .other .other__header {\n            cursor: unset;\n            font-size: 18px;\n          }\n          .other .other__header:hover {\n            color: var(--mdc-theme-primary);\n          }\n          .other .other__header .material-icons {\n            display: none;\n          }\n          .other .other__wrap {\n            opacity: 1;\n            height: auto;\n            transform: scale(1, 1);\n            animation-name: none !important;\n          }\n          .other__header {\n            font-size: 18px;\n          }\n          .other__item h4 {\n            font-size: 16px;\n          }\n          .other__item div {\n            margin-left: 16px;\n          }\n        }\n      </style>\n\n      <div class$=\"[[_editModeClass(isEditMode)]]\">\n        <div class=\"wrap\">\n          <div class=\"health-wrap-wrap\">\n            <div class=\"health-wrap\">\n              <!-- Hit Points -->\n              <div class=\"stat-box stat-box--hp\">\n\n                <vaadin-integer-field hidden$=[[isEditMode]] id=\"hpField\" theme=\"hp\" value={{currentHP}} on-change=\"hpBlurHandler\" on-blur=\"hpChangeHandler\" min=\"0\" max=\"[[_maxHP(customHealthVal, maxHP, customHealth)]]\" has-controls label=\"Hit Points\">\n                  <span class=\"stat-box__adj--hp\" slot=\"suffix\"><span>/</span> [[_maxHP(customHealthVal, maxHP, customHealth)]] [[_tempHpStr(tempHP)]]</span>\n                </vaadin-integer-field>\n\n                <div class=\"stat-box--hp-edit\" hidden$=[[!isEditMode]]>\n                  <div class=\"custom-val__swap\" on-click=\"_swapCustomHealth\" hidden$=[[!isEditMode]]>\n                    <span class=\"custom-val__option\" hidden$=[[customHealth]]><span class=\"material-icons\">edit</span> Edit</span>\n                    <span class=\"custom-val__option\" hidden$=[[!customHealth]]><span class=\"material-icons\">restart_alt</span> Use Standard</span>\n                  </div>\n                  <div class=\"basic-box__label\">Max HP</div>\n\n                  <div hidden$=[[!customHealth]]>\n                    <vaadin-integer-field  value={{customHealthVal}} min=\"0\" has-controls hidden$=\"[[!isEditMode]]\"></vaadin-integer-field>\n                    <span hidden$=\"[[isEditMode]]\">[[customHealthVal]]</span>\n                  </div>\n                  <div hidden$=[[customHealth]]>[[maxHP]]</div>\n                </div>\n\n                <div class=\"stat-box__side\" hidden$=[[isEditMode]]>\n                  <!--  Healing / Damage -->\n                  <div class=\"btn-field btn-field--heal\">\n                      <button class=\"mdc-button btn-field__btn\" on-click=\"_toggleButtonField\"><i class=\"fas fa-lg fa-heart\"></i></button>\n                      <vaadin-integer-field class=\"btn-field__input\" min=\"0\" on-keydown=\"_submitButtonField\" on-blur=\"_blurButtonField\">\n                        <span slot=\"prefix\">+</span>\n                      </vaadin-integer-field>\n                  </div>\n                  <div class=\"btn-field btn-field--dmg\">\n                      <button class=\"mdc-button btn-field__btn\" on-click=\"_toggleButtonField\"><i class=\"fas fa-lg fa-swords\"></i></button>\n                      <vaadin-integer-field class=\"btn-field__input\" min=\"0\" on-keydown=\"_submitButtonField\" on-blur=\"_blurButtonField\">\n                        <span slot=\"prefix\">-</span>\n                      </vaadin-integer-field>\n                  </div>\n                  <div class=\"btn-field btn-field--temp\">\n                      <button class=\"mdc-button btn-field__btn\" on-click=\"_toggleButtonField\"><i class=\"fas fa-lg fa-shield-cross\"></i></button>\n                      <vaadin-integer-field class=\"btn-field__input\" min=\"0\" on-keydown=\"_submitButtonField\" on-blur=\"_blurButtonField\">\n                        <span slot=\"prefix\">+</span>\n                      </vaadin-integer-field>\n                  </div>\n                </div>\n              </div>\n\n\n              <!--  Hit Dice -->\n              <div class=\"hit-dice\">\n                <div class=\"hit-dice__heading\">Hit Dice</div>\n                <template is=\"dom-repeat\" items=\"[[hitDice]]\">\n                  <div class=\"hit-dice__item\" data-class-name$=\"[[item.className]]\">\n                    <dnd-button on-click=\"_useHitDice\">\n                      <div class=\"hit-dice__item-label\" slot=\"label\">\n                        <dnd-svg id=\"[[item.die]]\"></dnd-svg>\n                        <div class=\"hit-dice__count\">[[item.current]] / [[item.total]]</div>\n                      </div>\n                    </dnd-button>\n                  </div>\n                </template>\n                <dnd-button class=\"hit-dice__reset\" label=\"Reset\" on-click=\"_resetHitDice\"></dnd-button>\n              </div>\n            </div>\n\n            <div class=\"basic-box__wrap-wrap\">\n              <div class=\"basic-box__wrap\">\n                <div class=\"basic-box basic-box--short ac\">\n                  <div class=\"basic-box__value\">\n                    <div class=\"custom-val__swap\" on-click=\"_swapCustomAC\" hidden$=[[!isEditMode]]>\n                      <span class=\"custom-val__option\" hidden$=[[customAC]]><span class=\"material-icons\">edit</span> Edit</span>\n                      <span class=\"custom-val__option\" hidden$=[[!customAC]]><span class=\"material-icons\">restart_alt</span> Use Standard</span>\n                    </div>\n\n                    <div hidden$=[[!customAC]]>\n                      <vaadin-integer-field theme=\"mini\" value={{customACVal}} min=\"0\" max=\"40\" has-controls hidden$=\"[[!isEditMode]]\"></vaadin-integer-field>\n                      <div hidden$=\"[[isEditMode]]\">[[customACVal]]</div>\n                    </div>\n                    <div hidden$=[[customAC]]>[[ac]]</div>\n                  </div>\n                  <div class=\"basic-box__label\">AC</div>\n                </div>\n\n                <div class=\"basic-box basic-box--short initiative\" on-click=\"_roll\">\n                  <div class=\"basic-box__value\">\n                    <div class=\"custom-val__swap\" on-click=\"_swapCustomInitiative\" hidden$=[[!isEditMode]]>\n                      <span class=\"custom-val__option\" hidden$=[[customInitiative]]><span class=\"material-icons\">edit</span> Edit</span>\n                      <span class=\"custom-val__option\" hidden$=[[!customInitiative]]><span class=\"material-icons\">restart_alt</span> Use Standard</span>\n                    </div>\n\n                    <div hidden$=[[!customInitiative]]>\n                      <vaadin-integer-field theme=\"mini\" value={{customInitiativeVal}} min=\"-20\" max=\"20\" has-controls hidden$=\"[[!isEditMode]]\"></vaadin-integer-field>\n                      <div hidden$=\"[[isEditMode]]\">[[_plusMinus(customInitiativeVal)]][[customInitiativeVal]]</div>\n                    </div>\n                    <div hidden$=[[customInitiative]]>[[initiative]]</div>\n                  </div>\n                  <div class=\"basic-box__label\">Initiative</div>\n                </div>\n\n                <div class=\"basic-box basic-box--short speed\">\n                  <div class=\"basic-box__value\">\n                    <div class=\"custom-val__swap\" on-click=\"_swapCustomSpeed\" hidden$=[[!isEditMode]]>\n                      <span class=\"custom-val__option\" hidden$=[[customSpeed]]><span class=\"material-icons\">edit</span> Edit</span>\n                      <span class=\"custom-val__option\" hidden$=[[!customSpeed]]><span class=\"material-icons\">restart_alt</span> Use Standard</span>\n                    </div>\n\n                    <div class=\"speed__wrap\">\n                      <template is=\"dom-repeat\" items=\"[[speed]]\">\n                        <div class=\"speed-val\" hidden$=\"[[_hideCustomSpeed(isEditMode, customSpeed)]]\">\n                          <vaadin-integer-field label=[[_uppercase(item.type)]] value=\"[[item.speed]]\" on-change=\"_speedItemChange\" theme=\"mini\" min=\"0\" max=\"200\" step=\"5\" has-controls></vaadin-integer-field>\n                          <button hidden$=\"[[!_exists(index)]]\" on-click=\"_removeSpeedItem\" index=\"[[index]]\" class=\"fa fal fa-times\"></button>\n                        </div>\n                        <div class=\"speed-val speed-val--center\" smaller$=\"[[!_arrayOfOne(speed)]]\" hidden$=\"[[!_hideCustomSpeed(isEditMode, customSpeed)]]\">\n                          <span hidden$=\"[[_arrayOfOne(speed)]]\">[[_uppercase(item.type)]]:</span>\n                          <span>[[item.speed]] ft.</span>\n                        </div>\n                      </template>\n                    </div>\n                  </div>\n                  <div class=\"basic-box__label\">\n                    <span>Speed</span>\n                    <div hidden$='[[_hideCustomSpeed(isEditMode, customSpeed)]]'>\n                      <vaadin-select add-button tiny on-change=\"_addSpeedItem\">\n                        <template>\n                          <vaadin-list-box>\n                            <template is=\"dom-repeat\" items=\"[[additionalCustomSpeedItems]]\" as=\"option\">\n                              <vaadin-item value=\"[[option]]\">[[option]]</vaadin-item>\n                            </template>\n                          </vaadin-list-box>\n                        </template>\n                      </vaadin-select>\n                    </div>\n                  </div>\n                </div>\n\n                <!--  Short Rest -->\n                <!-- <dnd-button icon=\"watch\" class=\"rest-btn rest-btn--short\" background=\"var(--lumo-contrast-10pct)\" label=\"Short\" on-click=\"_triggerShortRest\"></dnd-button> -->\n\n                <!--  Long Rest -->\n                <!-- <dnd-button icon=\"watch_later\" class=\"rest-btn rest-btn--long\" background=\"var(--lumo-contrast-10pct)\" label=\"Long\" on-click=\"_triggerLongRest\"></dnd-button> -->\n              </div>\n\n              <!-- Spell Mods -->\n              <div hidden$=\"[[!_exists(spellMods)]]\" class=\"basic-box__wrap basic-box__margin\">\n                <div class=\"basic-box\">\n                  <span class=\"basic-box__value basic-box__no-flex\">\n                    <template is=\"dom-repeat\" items=\"[[spellMods]]\">\n                      <span class=\"mod-val\" tabindex=\"0\">[[_abs(item.mod)]]<span class=\"tooltip\">[[_join(item.classes)]]</span></span>\n                    </template>\n                  </span>\n                  <span class=\"basic-box__label\">Spell Mod</span>\n                </div>\n                <div class=\"basic-box\">\n                  <span class=\"basic-box__value basic-box__no-flex\">\n                    <template is=\"dom-repeat\" items=\"[[spellMods]]\">\n                      <span class=\"mod-val\" tabindex=\"0\">+[[item.spellAttackBonus]]<span class=\"tooltip\">[[_join(item.classes)]]</span></span>\n                    </template>\n                  </span>\n                  <span class=\"basic-box__label\">Spell ATK+</span>\n                </div>\n                <div class=\"basic-box\">\n                  <span class=\"basic-box__value basic-box__no-flex\">\n                    <template is=\"dom-repeat\" items=\"[[spellMods]]\">\n                      <span class=\"mod-val\" tabindex=\"0\">[[item.dc]]<span class=\"tooltip\">[[_join(item.classes)]]</span></span>\n                    </template>\n                  </span>\n                  <span class=\"basic-box__label\">Spell DC</span>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"stats-other-wrap\">\n            <div class=\"stats\">\n              <div class=\"stat-box prof-bonus-box\">\n                <span class=\"prof-bonus-box__value\">+[[proficiencyBonus]]</span>\n                <span class=\"prof-bonus-box__label\">Proficiency Bonus</span>\n              </div>\n              <!--  Attributes -->\n              <div class=\"attribute-wrap\">\n                <div class=\"stat-box\" on-click=\"_roll\">\n                  <div class=\"stat-box__save\" attr=\"str\" enabled$=\"[[_strContains(saves, 'str')]]\" custom$=\"[[_strContains(customSaves, 'str')]]\" negated$=\"[[_strContains(negatedSaves, 'str')]]\"></div>\n                  <div class=\"stat-box__mod\">[[_mod(strAdj, str)]]</div>\n                  <div class=\"stat-box__footer\">\n                    <vaadin-integer-field theme=\"mini\" value={{str}} min=\"1\" max=\"25\" has-controls label=\"Strength\" disabled$=\"[[!isEditMode]]\">\n                      <span class=\"stat-box__adj\" slot=\"suffix\">[[_adjustString(strAdj)]]</span>\n                    </vaadin-integer-field>\n                  </div>\n                </div>\n                <div class=\"proficiencies\">\n                  <div class=\"proficiency-item\" on-click=\"_roll\" negated-expertise$=\"[[_strContainsTwo(negatedSkillProfs, 'athletics')]]\" negated-enabled$=\"[[_strContains(negatedSkillProfs, 'athletics')]]\" custom-expertise$=\"[[_strContainsTwo(customSkillProfs, 'athletics')]]\" custom-enabled$=\"[[_strContains(customSkillProfs, 'athletics')]]\" enabled$=\"[[_strContains(skillProfs, 'athletics')]]\" expertise$=\"[[_strContainsTwo(skillProfs, 'athletics')]]\">Athletics</div>\n                </div>\n              </div>\n              <div class=\"attribute-wrap\">\n                <div class=\"stat-box\" on-click=\"_roll\">\n                  <div class=\"stat-box__save\" attr=\"dex\" enabled$=\"[[_strContains(saves, 'dex')]]\" custom$=\"[[_strContains(customSaves, 'dex')]]\" negated$=\"[[_strContains(negatedSaves, 'dex')]]\"></div>\n                  <div class=\"stat-box__mod\">[[_mod(dexAdj, dex)]]</div>\n                  <div class=\"stat-box__footer\">\n                    <vaadin-integer-field theme=\"mini\" value={{dex}} min=\"1\" max=\"25\" has-controls label=\"Dexterity\" disabled$=\"[[!isEditMode]]\">\n                      <span class=\"stat-box__adj\" slot=\"suffix\">[[_adjustString(dexAdj)]]</span>\n                    </vaadin-integer-field>\n                  </div>\n                </div>\n                <div class=\"proficiencies\">\n                  <div class=\"proficiency-item\" on-click=\"_roll\" negated-expertise$=\"[[_strContainsTwo(negatedSkillProfs, 'acrobatics')]]\" negated-enabled$=\"[[_strContains(negatedSkillProfs, 'acrobatics')]]\" custom-expertise$=\"[[_strContainsTwo(customSkillProfs, 'acrobatics')]]\" custom-enabled$=\"[[_strContains(customSkillProfs, 'acrobatics')]]\" expertise$=\"[[_strContainsTwo(skillProfs, 'acrobatics')]]\" enabled$=\"[[_strContains(skillProfs, 'acrobatics')]]\">Acrobatics</div>\n                  <div class=\"proficiency-item proficiency-item--soh\" on-click=\"_roll\" negated-expertise$=\"[[_strContainsTwo(negatedSkillProfs, 'sleight of hand')]]\" negated-enabled$=\"[[_strContains(negatedSkillProfs, 'sleight of hand')]]\" custom-expertise$=\"[[_strContainsTwo(customSkillProfs, 'sleight of hand')]]\" custom-enabled$=\"[[_strContains(customSkillProfs, 'sleight of hand')]]\" expertise$=\"[[_strContainsTwo(skillProfs, 'sleight of hand')]]\" enabled$=\"[[_strContains(skillProfs, 'sleight of hand')]]\">Sleight of Hand</div>\n                  <div class=\"proficiency-item\" on-click=\"_roll\" negated-expertise$=\"[[_strContainsTwo(negatedSkillProfs, 'stealth')]]\" negated-enabled$=\"[[_strContains(negatedSkillProfs, 'stealth')]]\" custom-expertise$=\"[[_strContainsTwo(customSkillProfs, 'stealth')]]\" custom-enabled$=\"[[_strContains(customSkillProfs, 'stealth')]]\" expertise$=\"[[_strContainsTwo(skillProfs, 'stealth')]]\" enabled$=\"[[_strContains(skillProfs, 'stealth')]]\">Stealth</div>\n                </div>\n              </div>\n              <div class=\"attribute-wrap\">\n                <div class=\"stat-box\" on-click=\"_roll\">\n                  <div class=\"stat-box__save\" attr=\"con\" enabled$=\"[[_strContains(saves, 'con')]]\" custom$=\"[[_strContains(customSaves, 'con')]]\" negated$=\"[[_strContains(negatedSaves, 'con')]]\"></div>\n                  <div class=\"stat-box__mod\">[[_mod(conAdj, con)]]</div>\n                  <div class=\"stat-box__footer\">\n                    <vaadin-integer-field theme=\"mini\" mini-label value={{con}} min=\"1\" max=\"25\" has-controls label=\"Constitution\" disabled$=\"[[!isEditMode]]\">\n                      <span class=\"stat-box__adj\" slot=\"suffix\">[[_adjustString(conAdj)]]</span>\n                    </vaadin-integer-field>\n                  </div>\n                </div>\n                <div class=\"proficiencies\">\n                \n                </div>\n              </div>\n              <div class=\"attribute-wrap\">\n                <div class=\"stat-box\" on-click=\"_roll\">\n                  <div class=\"stat-box__save\" attr=\"int\" enabled$=\"[[_strContains(saves, 'int')]]\" custom$=\"[[_strContains(customSaves, 'int')]]\" negated$=\"[[_strContains(negatedSaves, 'int')]]\"></div>\n                  <div class=\"stat-box__mod\">[[_mod(intAdj, int)]]</div>\n                  <div class=\"stat-box__footer\">\n                    <vaadin-integer-field theme=\"mini\" mini-ish-label value={{int}} min=\"1\" max=\"25\" has-controls label=\"Intelligence\" disabled$=\"[[!isEditMode]]\">\n                      <span class=\"stat-box__adj\" slot=\"suffix\">[[_adjustString(intAdj)]]</span>\n                    </vaadin-integer-field>\n                  </div>\n                </div>\n                <div class=\"proficiencies\">\n                  <div class=\"proficiency-item\" on-click=\"_roll\" negated-expertise$=\"[[_strContainsTwo(negatedSkillProfs, 'arcana')]]\" negated-enabled$=\"[[_strContains(negatedSkillProfs, 'arcana')]]\" custom-expertise$=\"[[_strContainsTwo(customSkillProfs, 'arcana')]]\" custom-enabled$=\"[[_strContains(customSkillProfs, 'arcana')]]\" expertise$=\"[[_strContainsTwo(skillProfs, 'arcana')]]\" enabled$=\"[[_strContains(skillProfs, 'arcana')]]\">Arcana</div>\n                  <div class=\"proficiency-item\" on-click=\"_roll\" negated-expertise$=\"[[_strContainsTwo(negatedSkillProfs, 'history')]]\" negated-enabled$=\"[[_strContains(negatedSkillProfs, 'history')]]\" custom-expertise$=\"[[_strContainsTwo(customSkillProfs, 'history')]]\" custom-enabled$=\"[[_strContains(customSkillProfs, 'history')]]\" expertise$=\"[[_strContainsTwo(skillProfs, 'history')]]\" enabled$=\"[[_strContains(skillProfs, 'history')]]\">History</div>\n                  <div class=\"proficiency-item proficiency-item--inv\" on-click=\"_roll\" negated-expertise$=\"[[_strContainsTwo(negatedSkillProfs, 'investigation')]]\" negated-enabled$=\"[[_strContains(negatedSkillProfs, 'investigation')]]\" custom-expertise$=\"[[_strContainsTwo(customSkillProfs, 'investigation')]]\" custom-enabled$=\"[[_strContains(customSkillProfs, 'investigation')]]\" expertise$=\"[[_strContainsTwo(skillProfs, 'investigation')]]\" enabled$=\"[[_strContains(skillProfs, 'investigation')]]\">Investigation</div>\n                  <div class=\"proficiency-item\" on-click=\"_roll\" negated-expertise$=\"[[_strContainsTwo(negatedSkillProfs, 'nature')]]\" negated-enabled$=\"[[_strContains(negatedSkillProfs, 'nature')]]\" custom-expertise$=\"[[_strContainsTwo(customSkillProfs, 'nature')]]\" custom-enabled$=\"[[_strContains(customSkillProfs, 'nature')]]\" expertise$=\"[[_strContainsTwo(skillProfs, 'nature')]]\" enabled$=\"[[_strContains(skillProfs, 'nature')]]\">Nature</div>\n                  <div class=\"proficiency-item\" on-click=\"_roll\" negated-expertise$=\"[[_strContainsTwo(negatedSkillProfs, 'religion')]]\" negated-enabled$=\"[[_strContains(negatedSkillProfs, 'religion')]]\" custom-expertise$=\"[[_strContainsTwo(customSkillProfs, 'religion')]]\" custom-enabled$=\"[[_strContains(customSkillProfs, 'religion')]]\" expertise$=\"[[_strContainsTwo(skillProfs, 'religion')]]\" enabled$=\"[[_strContains(skillProfs, 'religion')]]\">Religion</div>\n                </div>\n              </div>\n              <div class=\"attribute-wrap\">\n                <div class=\"stat-box\" on-click=\"_roll\">\n                  <div class=\"stat-box__save\" attr=\"wis\" enabled$=\"[[_strContains(saves, 'wis')]]\" custom$=\"[[_strContains(customSaves, 'wis')]]\" negated$=\"[[_strContains(negatedSaves, 'wis')]]\"></div>\n                  <div class=\"stat-box__mod\">[[_mod(wisAdj, wis)]]</div>\n                  <div class=\"stat-box__footer\">\n                    <vaadin-integer-field theme=\"mini\" value={{wis}} min=\"1\" max=\"25\" has-controls label=\"Wisdom\" disabled$=\"[[!isEditMode]]\">\n                      <span class=\"stat-box__adj\" slot=\"suffix\">[[_adjustString(wisAdj)]]</span>\n                    </vaadin-integer-field>\n                  </div>\n                </div>\n                <div class=\"proficiencies\">\n                  <div class=\"proficiency-item proficiency-item--ah\" on-click=\"_roll\" negated-expertise$=\"[[_strContainsTwo(negatedSkillProfs, 'animal handling')]]\" negated-enabled$=\"[[_strContains(negatedSkillProfs, 'animal handling')]]\" custom-expertise$=\"[[_strContainsTwo(customSkillProfs, 'animal handling')]]\" custom-enabled$=\"[[_strContains(customSkillProfs, 'animal handling')]]\" expertise$=\"[[_strContainsTwo(skillProfs, 'animal handling')]]\" enabled$=\"[[_strContains(skillProfs, 'animal handling')]]\">Animal Handling</div>\n                  <div class=\"proficiency-item\" on-click=\"_roll\" negated-expertise$=\"[[_strContainsTwo(negatedSkillProfs, 'insight')]]\" negated-enabled$=\"[[_strContains(negatedSkillProfs, 'insight')]]\" custom-expertise$=\"[[_strContainsTwo(customSkillProfs, 'insight')]]\" custom-enabled$=\"[[_strContains(customSkillProfs, 'insight')]]\" expertise$=\"[[_strContainsTwo(skillProfs, 'insight')]]\" enabled$=\"[[_strContains(skillProfs, 'insight')]]\">Insight</div>\n                  <div class=\"proficiency-item\" on-click=\"_roll\" negated-expertise$=\"[[_strContainsTwo(negatedSkillProfs, 'medicine')]]\" negated-enabled$=\"[[_strContains(negatedSkillProfs, 'medicine')]]\" custom-expertise$=\"[[_strContainsTwo(customSkillProfs, 'medicine')]]\" custom-enabled$=\"[[_strContains(customSkillProfs, 'medicine')]]\" expertise$=\"[[_strContainsTwo(skillProfs, 'medicine')]]\" enabled$=\"[[_strContains(skillProfs, 'medicine')]]\">Medicine</div>\n                  <div class=\"proficiency-item\" on-click=\"_roll\" negated-expertise$=\"[[_strContainsTwo(negatedSkillProfs, 'perception')]]\" negated-enabled$=\"[[_strContains(negatedSkillProfs, 'perception')]]\" custom-expertise$=\"[[_strContainsTwo(customSkillProfs, 'perception')]]\" custom-enabled$=\"[[_strContains(customSkillProfs, 'perception')]]\" expertise$=\"[[_strContainsTwo(skillProfs, 'perception')]]\" enabled$=\"[[_strContains(skillProfs, 'perception')]]\">Perception</div>\n                  <div class=\"proficiency-item\" on-click=\"_roll\" negated-expertise$=\"[[_strContainsTwo(negatedSkillProfs, 'survival')]]\" negated-enabled$=\"[[_strContains(negatedSkillProfs, 'survival')]]\" custom-expertise$=\"[[_strContainsTwo(customSkillProfs, 'survival')]]\" custom-enabled$=\"[[_strContains(customSkillProfs, 'survival')]]\" expertise$=\"[[_strContainsTwo(skillProfs, 'survival')]]\" enabled$=\"[[_strContains(skillProfs, 'survival')]]\">Survival</div>\n                </div>\n              </div>\n              <div class=\"attribute-wrap\">\n                <div class=\"stat-box\" on-click=\"_roll\">\n                  <div class=\"stat-box__save\" attr=\"cha\" enabled$=\"[[_strContains(saves, 'cha')]]\" custom$=\"[[_strContains(customSaves, 'cha')]]\" negated$=\"[[_strContains(negatedSaves, 'cha')]]\"></div>\n                  <div class=\"stat-box__mod\">[[_mod(chaAdj, cha)]]</div>\n                  <div class=\"stat-box__footer\">\n                    <vaadin-integer-field theme=\"mini\" value={{cha}} min=\"1\" max=\"25\" has-controls label=\"Charisma\" disabled$=\"[[!isEditMode]]\">\n                      <span class=\"stat-box__adj\" slot=\"suffix\">[[_adjustString(chaAdj)]]</span>\n                    </vaadin-integer-field>\n                  </div>\n                </div>\n                <div class=\"proficiencies\">\n                  <div class=\"proficiency-item\" on-click=\"_roll\" negated-expertise$=\"[[_strContainsTwo(negatedSkillProfs, 'deception')]]\" negated-enabled$=\"[[_strContains(negatedSkillProfs, 'deception')]]\" custom-expertise$=\"[[_strContainsTwo(customSkillProfs, 'deception')]]\" custom-enabled$=\"[[_strContains(customSkillProfs, 'deception')]]\" expertise$=\"[[_strContainsTwo(skillProfs, 'deception')]]\" enabled$=\"[[_strContains(skillProfs, 'deception')]]\">Deception</div>\n                  <div class=\"proficiency-item\" on-click=\"_roll\" negated-expertise$=\"[[_strContainsTwo(negatedSkillProfs, 'intimidation')]]\" negated-enabled$=\"[[_strContains(negatedSkillProfs, 'intimidation')]]\" custom-expertise$=\"[[_strContainsTwo(customSkillProfs, 'intimidation')]]\" custom-enabled$=\"[[_strContains(customSkillProfs, 'intimidation')]]\" expertise$=\"[[_strContainsTwo(skillProfs, 'intimidation')]]\" enabled$=\"[[_strContains(skillProfs, 'intimidation')]]\">Intimidation</div>\n                  <div class=\"proficiency-item\" on-click=\"_roll\" negated-expertise$=\"[[_strContainsTwo(negatedSkillProfs, 'performance')]]\" negated-enabled$=\"[[_strContains(negatedSkillProfs, 'performance')]]\" custom-expertise$=\"[[_strContainsTwo(customSkillProfs, 'performance')]]\" custom-enabled$=\"[[_strContains(customSkillProfs, 'performance')]]\" expertise$=\"[[_strContainsTwo(skillProfs, 'performance')]]\" enabled$=\"[[_strContains(skillProfs, 'performance')]]\">Performance</div>\n                  <div class=\"proficiency-item\" on-click=\"_roll\" negated-expertise$=\"[[_strContainsTwo(negatedSkillProfs, 'persuasion')]]\" negated-enabled$=\"[[_strContains(negatedSkillProfs, 'persuasion')]]\" custom-expertise$=\"[[_strContainsTwo(customSkillProfs, 'persuasion')]]\" custom-enabled$=\"[[_strContains(customSkillProfs, 'persuasion')]]\" expertise$=\"[[_strContainsTwo(skillProfs, 'persuasion')]]\" enabled$=\"[[_strContains(skillProfs, 'persuasion')]]\">Persuasion</div>\n                </div>\n              </div>\n            </div>\n  \n            <div class=\"others\">\n              <div class=\"other\" open$=\"[[featuresOpen]]\">\n                <button class=\"other__header\" on-click=\"_toggleFeatures\">\n                  <span class=\"material-icons\">expand_more</span>\n                  <span class=\"other__header-text\">Features</span>\n                </button>  \n\n                <div class=\"other__wrap\">\n                  <div class=\"other__item\" hidden$=\"[[!hasDarkvision]]\">\n                    <h4>Darkvision [[darkvision]] ft.</h4>\n                  </div>\n                  <div class=\"other__item\" hidden$=\"[[!_exists(feats)]]\">\n                    <h4>Feats</h4>\n                    <div>[[feats]]</div>\n                  </div>\n                  <div class=\"other__item\" hidden$=\"[[!_exists(resists)]]\">\n                    <h4>Resistances</h4>\n                    <div>[[resists]]</div>\n                  </div>\n                  <div class=\"other__item\" hidden$=\"[[!_exists(conditionImmunes)]]\">\n                    <h4>Condition Immunities</h4>\n                    <div>[[conditionImmunes]]</div>\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"other\" open$=\"[[otherProfsOpen]]\">\n                <button class=\"other__header\" on-click=\"_toggleOtherProfs\">\n                  <span class=\"material-icons\">expand_more</span>\n                  <span class=\"other__header-text\">Proficiencies</span>\n                </button>  \n\n                <div class=\"other__wrap\">\n                  <div class=\"other__item\" hidden$=\"[[!_exists(armorProfs)]]\">\n                    <h4>Armor</h4>\n                    <div>[[armorProfs]]</div>\n                  </div>\n                  <div class=\"other__item\" hidden$=\"[[!_exists(weaponProfs)]]\">\n                    <h4>Weapons</h4>\n                    <div>[[weaponProfs]]</div>\n                  </div>\n                  <div class=\"other__item\" hidden$=\"[[!_exists(toolProfs)]]\">\n                    <h4>Tools</h4>\n                    <div>[[toolProfs]]</div>\n                  </div>\n                  <div class=\"other__item\" hidden$=\"[[!_exists(languages)]]\">\n                    <h4>Languages</h4>\n                    <div>[[languages]]</div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    `;\n  }\n}\n\ncustomElements.define(\"dnd-character-builder-attributes\", DndCharacterBuilderAttributes);"],"sourceRoot":""}