{"version":3,"sources":["webpack:///./js/items.js","webpack:///./node_modules/@vaadin/vaadin-text-field/vaadin-text-field.js","webpack:///./node_modules/@vaadin/vaadin-text-field/theme/lumo/vaadin-text-area-styles.js","webpack:///./node_modules/@vaadin/vaadin-text-field/src/vaadin-text-area.js","webpack:///./components/views/character/dnd-character-builder-equipment-item-detail.js"],"names":["renderer","renderSelection","item","rootEl","hasParsed","noDisplay","type","category","undefined","entries","window","itemTypeList","j","length","push","property","properties","split","itemPropertyList","k","armor","resist","stealth","strength","scfType","adjustItem","querySelector","innerHTML","value","weight","tier","rarity","reqAttune","weaponCategory","damages","i","damage","isLast","roll","dmgTypeToFull","dmg1","dmgType","ac","speed","capacity","carryingcapacity","append","indexOf","prop","a","name","dmg2","range","reload","entryList","renderStack","recursiveEntryRender","join","toLowerCase","$_documentContainer","document","head","appendChild","content","super","ready","this","_updateHeight","addEventListener","_onAnimationEnd","e","animationName","inputField","root","scrollTop","input","inputElement","inputWidth","getComputedStyle","width","valueLength","_oldValueLength","style","maxWidth","height","display","inputHeight","scrollHeight","clientHeight","removeProperty","_dispatchIronResizeEventIfNeeded","customElements","define","is","isEditMode","Boolean","hasRenderedOutput","hasAC","armorAC","Number","isArmor","isMartial","weaponMagicModifier","itemRarity","String","itemName","itemWeight","weaponProperties","Array","itemResist","itemQuantity","Object","storedItem","itemType","itemTypes","rarityTypes","damageTypes","resistTypes","weaponPropertyOptions","weaponPropertyValues","connectedCallback","editModeHandler","detail","disconnectedCallback","removeEventListener","console","error","itemRef","lookupFailed","$","renderedOutput","_getItemType","weapon","parseInt","genericBonus","propStr","props","map","propObj","find","option","trim","filter","Parser","canHaveResist","canHaveQuantity","quantity","canHaveSpell","ITEM_TYPE_JSON_TO_ABV","newType","typeSelect","isEquipped","isAttuned","typeVal","key","hasQuantity","rollDamageIndexAttr","getAttribute","rollDamageIndex","splice","parsedMod","isNaN","propCodes","bind","parsedAC","parsedWeight","parseFloat","parsedQuantity","bools","bool"],"mappings":"0FAAA,iFAIA,MAiBMA,EAAW,IAAI,IACrB,SAASC,EAAgBC,EAAMC,IAsE/B,SAAoBD,GACnB,GAAIA,EAAKE,UACR,OAGD,GADAF,EAAKE,WAAY,EACbF,EAAKG,UACR,OAEiB,OAAdH,EAAKI,OACRJ,EAAKK,SAAW,wBAEKC,IAAlBN,EAAKK,WACRL,EAAKK,SAAW,cAEIC,IAAjBN,EAAKO,QACRP,EAAKO,QAAU,GAEfP,EAAKO,QAAU,oBAAUP,EAAKO,SAE/B,GAAIP,EAAKI,MAAQI,OAAOC,aAAaT,EAAKI,MACzC,IAAK,IAAIM,EAAI,EAAGA,EAAIF,OAAOC,aAAaT,EAAKI,MAAMG,QAAQI,OAAQD,IAClEV,EAAKO,QAAQK,KAAKJ,OAAOC,aAAaT,EAAKI,MAAMG,QAAQG,IAG3D,GAAIV,EAAKa,SAAU,CAClB,MAAMC,EAAad,EAAKa,SAASE,MAAM,KACvC,IAAK,IAAIL,EAAI,EAAGA,EAAII,EAAWH,OAAQD,IACtC,GAAIF,OAAOQ,iBAAiBF,EAAWJ,IAAIH,QAC1C,IAAK,IAAIU,EAAI,EAAGA,EAAIT,OAAOQ,iBAAiBF,EAAWJ,IAAIH,QAAQI,OAAQM,IAC1EjB,EAAKO,QAAQK,KAAKJ,OAAOQ,iBAAiBF,EAAWJ,IAAIH,QAAQU,IAMjEjB,EAAKkB,OACJlB,EAAKmB,QACRnB,EAAKO,QAAQK,KAAK,0BAA0BZ,EAAKmB,OAAO,sCAErDnB,EAAKkB,OAASlB,EAAKoB,SACtBpB,EAAKO,QAAQK,KAAK,8DAED,OAAdZ,EAAKI,MAAiBJ,EAAKqB,UAC9BrB,EAAKO,QAAQK,KAAK,iDAAmDZ,EAAKqB,SAAW,yCAE5ErB,EAAKmB,SACG,MAAdnB,EAAKI,MACRJ,EAAKO,QAAQK,KAAK,sDAAsDZ,EAAKmB,OAAO,uBAEnE,OAAdnB,EAAKI,MACRJ,EAAKO,QAAQK,KAAK,0BAA0BZ,EAAKmB,OAAO,qCAGxC,QAAdnB,EAAKI,OACa,WAAjBJ,EAAKsB,SACRtB,EAAKO,QAAQK,KAAK,0OAEE,UAAjBZ,EAAKsB,SACRtB,EAAKO,QAAQK,KAAK,wIAEE,SAAjBZ,EAAKsB,UACRtB,EAAKO,QAAQK,KAAK,2DAClBZ,EAAKO,QAAQK,KAAK,wPAnIpBW,CAAWvB,IACEC,EAAOuB,cAAc,uBAAyBvB,GACtDwB,UArBgB,ghBA4BrBxB,EAAOuB,cAAc,yBAAyBC,UAAazB,EAAK0B,MAAQ1B,EAAK0B,OAAO1B,EAAK2B,OAAS,KAAO,IAAM,GAC/G1B,EAAOuB,cAAc,0BAA0BC,UAAazB,EAAK2B,OAAS3B,EAAK2B,QAAuB,GAAf3B,EAAK2B,OAAc,OAAS,SAAW,GAC9H1B,EAAOuB,cAAc,0BAA0BC,WAAczB,EAAK4B,KAAO,KAAK5B,EAAK4B,KAAO,KAAK5B,EAAK6B,OAAS,KAAK7B,EAAK6B,OAAS,IAChI5B,EAAOuB,cAAc,8BAA8BC,UAAazB,EAAK8B,UAAY9B,EAAK8B,UAAY,GAClG7B,EAAOuB,cAAc,wBAAwBC,UAAazB,EAAa,SAEvEC,EAAOuB,cAAc,0BAA0BC,UAAY,GAC3DxB,EAAOuB,cAAc,8BAA8BC,UAAY,GAC/D,MAAMrB,EAAOJ,EAAKI,MAAQ,GAC1B,GAAIJ,EAAK+B,eACR,GAAI/B,EAAKgC,SAAWhC,EAAKgC,QAAQrB,OAChC,IAAK,IAAIsB,EAAI,EAAGA,EAAIjC,EAAKgC,QAAQrB,OAAQsB,IAAK,CAC7C,MAAMC,EAASlC,EAAKgC,QAAQC,GACtBE,EAASF,IAAMjC,EAAKgC,QAAQrB,OAAS,EACvCuB,EAAOE,MAAQF,EAAO9B,OACzBH,EAAOuB,cAAc,0BAA0BC,WAAa,SAAS,2BAAiBS,EAAOE,SAAS,IAAOC,cAAcH,EAAO9B,eAAe+B,EAAS,GAAI,cAI7JnC,EAAKsC,OAAMrC,EAAOuB,cAAc,0BAA0BC,UAAa,0BAAD,CAAkBzB,EAAKsC,OAC7FtC,EAAKuC,UAAStC,EAAOuB,cAAc,8BAA8BC,UAAa,IAAOY,cAAcrC,EAAKuC,eAEtG,GAAa,OAATnC,GAAyB,OAATA,GAAyB,OAATA,EAC1CH,EAAOuB,cAAc,0BAA0BC,UAAa,MAAMzB,EAAKwC,IAAa,OAATpC,EAAgB,SAAoB,OAATA,EAAgB,iBAAmB,SACnI,GAAa,MAATA,EACVH,EAAOuB,cAAc,0BAA0BC,UAAa,OAAOzB,EAAKwC,QAClE,GAAa,QAATpC,GAA2B,QAATA,EAAgB,CAC5C,MAAMqC,EAAQzC,EAAKyC,MACbC,EAAW1C,EAAK2C,iBAClBF,GAAOxC,EAAOuB,cAAc,0BAA0BoB,OAAO,SAASH,GACtEA,GAASC,GAAUzC,EAAOuB,cAAc,0BAA0BoB,OAAgB,QAATxC,EAAiB,KAAO,SACjGsC,IACHzC,EAAOuB,cAAc,0BAA0BoB,OAAO,qBAAqBF,IAE1C,IAA7BA,EAASG,QAAQ,SAAoD,IAAnCH,EAASG,QAAQ,cACtD5C,EAAOuB,cAAc,0BAA0BoB,OAAmB,GAAZF,EAAgB,OAAS,UAMlF,GADAzC,EAAOuB,cAAc,8BAA8BC,UAAY,GAC3DzB,EAAKa,SAAU,CAClB,MAAMC,EAAad,EAAKa,SAASE,MAAM,KACvC,IAAK,IAAIkB,EAAI,EAAGA,EAAInB,EAAWH,OAAQsB,IAAK,CAC3C,MAAMa,EAAOhC,EAAWmB,GACxB,IAAIc,EAAIvC,OAAOQ,iBAAiB8B,GAAME,KACzB,MAATF,GAAgB9C,EAAKiD,OAAMF,EAAI,GAAGA,MAAM/C,EAAKiD,SACpC,MAATH,GAAyB,MAATA,GAAyB,OAATA,IAAeC,EAAI,GAAGA,MAAM/C,EAAKkD,aACxD,QAATJ,IAAgBC,EAAI,GAAGA,MAAM/C,EAAKmD,iBACtCJ,GAAKd,EAAI,EAAI,KAAOjC,EAAKsC,KAAO,KAAO,IAAMS,EAC7C9C,EAAOuB,cAAc,8BAA8BoB,OAAOG,IAI5D,MAAMK,EAAY,CAAChD,KAAM,UAAWG,QAASP,EAAKO,SAC5C8C,EAAc,GACpBvD,EAASwD,qBAAqBF,EAAWC,EAAa,GACtDpD,EAAOuB,cAAc,wBAAwBC,UAAa,2BAAiB4B,EAAYE,KAAK,KAAKxC,MAAMf,EAAKgD,KAAKQ,eAAeD,KAAK,MAAMvD,EAAKgD,KAAKQ,cAAc,U,iCCzFpK,O,8HCKA,MAAMC,EAAsB,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eA4DhCC,SAASC,KAAKC,YAAYH,EAAoBI,S;;;;;;ACF9C,MAAM,UAAwB,YAAa,YAAe,YAAc,QACtE,sBACE,OAAO,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA8Db,gBACE,MAAO,mBAGT,qBACE,MAAO,QAGT,uBACE,MAAO,CACL,gCAIJ,QACEC,MAAMC,QACNC,KAAKC,gBACLD,KAAKE,iBAAiB,eAAgBF,KAAKG,iBAG7C,gBAAgBC,GAC6C,IAAvDA,EAAEC,cAAcxB,QAAQ,4BAC1BmB,KAAKC,gBAIT,sBACE,MAAO,WAGT,sBAAsBvC,GACpBsC,KAAKC,gBAGP,gBACE,MAAMK,EAAaN,KAAKO,KAAK/C,cAAc,sBACrCgD,EAAYF,EAAWE,UACvBC,EAAQT,KAAKU,aAEbC,EAAaC,iBAAiBH,GAAOI,MAErCC,EAAcd,KAAKtC,MAAQsC,KAAKtC,MAAMf,OAAS,EAEjDqD,KAAKe,iBAAmBD,IAE1BL,EAAMO,MAAMC,SAAWN,EACvBF,EAAMO,MAAME,OAAS,OAErBZ,EAAWU,MAAMG,QAAU,SAE7BnB,KAAKe,gBAAkBD,EAEvB,MAAMM,EAAcX,EAAMY,aACtBD,EAAcX,EAAMa,eACtBb,EAAMO,MAAME,OAASE,EAAc,MAIrCX,EAAMO,MAAMO,eAAe,aAC3BjB,EAAWU,MAAMO,eAAe,WAChCjB,EAAWE,UAAYA,EAEvBR,KAAKwB,iCAAiC,cAAeJ,IAUzDK,eAAeC,OAAO,EAAgBC,GAAI,G,WCrL1C,MAAM,UAA+C,IAEnD,wBACE,MAAO,CACLC,WAAY,CACVxF,KAAMyF,QACNnE,OAAO,GAEToE,kBAAmB,CACjB1F,KAAMyF,QACNnE,OAAO,GAETqE,MAAO,CACL3F,KAAMyF,QACNnE,OAAO,GAETsE,QAAS,CACP5F,KAAM6F,OACNvE,MAAO,GAETwE,QAAS,CACP9F,KAAMyF,QACNnE,OAAO,GAETyE,UAAW,CACT/F,KAAMyF,QACNnE,OAAO,GAET0E,oBAAqB,CACnBhG,KAAM6F,OACNvE,MAAO,GAET2E,WAAY,CACVjG,KAAMkG,QAERC,SAAU,CACRnG,KAAMkG,QAERE,WAAY,CACVpG,KAAM6F,OACNvE,MAAO,GAET+E,iBAAkB,CAChBrG,KAAMsG,OAERC,WAAY,CACVvG,KAAMkG,QAERM,aAAc,CACZxG,KAAM6F,OACNvE,MAAO,GAET1B,KAAM,CACJI,KAAMyG,QAERC,WAAY,CACV1G,KAAMyG,QAERE,SAAU,CACR3G,KAAMkG,OACN5E,MAAO,KAKb,uBACE,MAAO,CACL,sBAIJ,cACEoC,QAEAE,KAAKgD,UAAY,CACf,gBACA,iBACA,gBACA,eACA,gBACA,SACA,mBACA,aACA,eACA,YACA,aACA,aACA,QACA,SACA,MACA,OACA,SACA,qBACA,OACA,mBACA,aACA,UACA,QAGFhD,KAAKiD,YAAc,IACnBjD,KAAKkD,YAAc,IACnBlD,KAAKmD,YAAc,CAAC,YAAa,KACjCnD,KAAKoD,sBAAwB,CAC3B,CAAEpE,KAAM,aAActB,MAAO,MAC7B,CAAEsB,KAAM,aAActB,MAAO,KAC7B,CAAEsB,KAAM,UAAWtB,MAAO,KAC1B,CAAEsB,KAAM,QAAStB,MAAO,KACxB,CAAEsB,KAAM,QAAStB,MAAO,KACxB,CAAEsB,KAAM,UAAWtB,MAAO,MAC1B,CAAEsB,KAAM,QAAStB,MAAO,KACxB,CAAEsB,KAAM,SAAUtB,MAAO,OACzB,CAAEsB,KAAM,UAAWtB,MAAO,KAC1B,CAAEsB,KAAM,SAAUtB,MAAO,KACzB,CAAEsB,KAAM,YAAatB,MAAO,MAE9BsC,KAAKqD,qBAAuB,CAC1B,aACA,aACA,UACA,QACA,QACA,UACA,QACA,SACA,UACA,SACA,aAIJ,oBACEvD,MAAMwD,oBAENtD,KAAKuD,gBAAmBnD,IACtBJ,KAAK4B,WAAaxB,EAAEoD,OAAO5B,YAE7B,cAAqB1B,iBAAiB,iBAAkBF,KAAKuD,iBAC7DvD,KAAK4B,WAAa,cAGpB,uBACE9B,MAAM2D,uBAEN,cAAqBC,oBAAoB,iBAAkB1D,KAAKuD,iBAGlE,eAgBE,GAfAI,QAAQC,MAAM,cAAe5D,KAAKhE,MAE9BgE,KAAKhE,KAAK6H,UAAY7D,KAAKhE,KAAK8H,cAClC9D,KAAK8B,mBAAoB,EACzB,0BAAgB9B,KAAKhE,KAAMgE,KAAK+D,EAAEC,gBAAgB,IAElDhE,KAAK8B,mBAAoB,EAE3B9B,KAAK+C,SAAW/C,KAAKiE,eACrBjE,KAAK+B,MAA2B,MAAnB/B,KAAKhE,KAAKI,QAAkB4D,KAAKhE,KAAKkB,MAC/C8C,KAAK+B,QACP/B,KAAKgC,QAAUhC,KAAKhE,KAAKwC,IAE3BwB,KAAKkC,UAAYlC,KAAKhE,KAAKkB,MAC3B8C,KAAKmC,UAAyC,YAA7BnC,KAAKhE,KAAK+B,eACvBiC,KAAKhE,KAAKkI,OAAQ,CACpBlE,KAAKoC,oBAAsB+B,SAASnE,KAAKhE,KAAKoI,aAAc,IAC5D,MAAMC,EAAUrE,KAAKhE,KAAKa,SAC1B,GAAIwH,EAAS,CACX,MAAMC,EAAQD,EAAQtH,MAAM,KAAKwH,IAAIzF,IACnC,MAAM0F,EAAUxE,KAAKoD,sBAAsBqB,KAAMC,GAAWA,EAAOhH,QAAUoB,EAAK6F,QAClF,GAAIH,EACF,OAAOA,EAAQxF,OAEhB4F,OAAO9F,KAAUA,GACpBkB,KAAKyC,iBAAmB6B,EACnBtE,KAAKhE,KAAKgC,UACTgC,KAAKhE,KAAKsC,KACZ0B,KAAKhE,KAAK8G,WAAW9E,QAAU,CAAC,CAACI,KAAM4B,KAAKhE,KAAKsC,KAAMlC,KAAM,6BAAmByI,EAAA,EAAOxG,cAAc2B,KAAKhE,KAAKuC,YAE/GyB,KAAKhE,KAAK8G,WAAW9E,QAAU,KAKvCgC,KAAKqC,WAAarC,KAAKhE,KAAK6B,OAC5BmC,KAAKuC,SAAWvC,KAAKhE,KAAKgD,KAC1BgB,KAAKwC,WAAaxC,KAAKhE,KAAK2B,OAC5BqC,KAAK8E,cAAgB9E,KAAKhE,KAAKkB,OAA4B,MAAnB8C,KAAKhE,KAAKI,MAAmC,OAAnB4D,KAAKhE,KAAKI,KAC5E4D,KAAK2C,WAAa3C,KAAKhE,KAAKmB,OAC5B6C,KAAK+E,gBAAqC,MAAnB/E,KAAKhE,KAAKI,MAAmC,MAAnB4D,KAAKhE,KAAKI,MAAmC,QAAnB4D,KAAKhE,KAAKI,KACrF4D,KAAK4C,aAAe5C,KAAKhE,KAAKgJ,SAC9BhF,KAAKiF,aAAkC,OAAnBjF,KAAKhE,KAAKI,KAE1B4D,KAAKhE,KAAK8G,aACZ9C,KAAK8C,WAAa9C,KAAKhE,KAAK8G,YAIhC,eACE,OAAI9C,KAAKhE,KACA6I,EAAA,EAAOK,sBAAsBlF,KAAKhE,KAAKI,MAEzC,GAGT,kBACE,MAAM+I,EAAUnF,KAAK+D,EAAEqB,WAAW1H,MAOlC,OANAsC,KAAK8C,WAAW5F,OAAQ,EACxB8C,KAAK8C,WAAWoB,QAAS,EACzBlE,KAAK8C,WAAW1G,KAAO,GACvB4D,KAAK8C,WAAWuC,YAAa,EAC7BrF,KAAK8C,WAAWwC,WAAY,EAEpBH,GACN,IAAK,gBACHnF,KAAK8C,WAAW5F,OAAQ,EACxB8C,KAAK8C,WAAW/E,eAAiB,KACjCiC,KAAK8C,WAAW1G,KAAO,KACvB,MACF,IAAK,iBACH4D,KAAK8C,WAAW5F,OAAQ,EACxB8C,KAAK8C,WAAW/E,eAAiB,KACjCiC,KAAK8C,WAAW1G,KAAO,KACvB,MACF,IAAK,gBACH4D,KAAK8C,WAAW5F,OAAQ,EACxB8C,KAAK8C,WAAW/E,eAAiB,KACjCiC,KAAK8C,WAAW1G,KAAO,KACvB,MACF,IAAK,gBACH4D,KAAK8C,WAAWoB,QAAS,EACzBlE,KAAK8C,WAAW/E,eAAiB,SACjCiC,KAAK8C,WAAW1G,KAAO,IACvB4D,KAAK8C,WAAW3F,OAAS,KACzB,MACF,IAAK,eACH6C,KAAK8C,WAAWoB,QAAS,EACzBlE,KAAK8C,WAAW/E,eAAiB,SACjCiC,KAAK8C,WAAW1G,KAAO,IACvB4D,KAAK8C,WAAW3F,OAAS,KACzB,MACF,IAAK,SACH6C,KAAK8C,WAAW1G,KAAO,IACvB4D,KAAK8C,WAAW/E,eAAiB,KACjCiC,KAAK8C,WAAWtE,GAAK,EACrBwB,KAAK8C,WAAW3F,OAAS,KACzB,MACF,IAAK,mBACH6C,KAAK8C,WAAW/E,eAAiB,KACjCiC,KAAK8C,WAAW1G,KAAO,IACvB4D,KAAK8C,WAAW3F,OAAS,KACzB,MACF,QACE,MAAMoI,EAAU1C,OAAOtG,QAAQsI,EAAA,EAAOK,uBAAuBT,KAAK,EAAEe,EAAK9H,KAAWA,IAAUyH,GAC1FI,IACFvF,KAAK8C,WAAW1G,KAAOmJ,EAAQ,IAEjB,MAAZJ,GAA+B,OAAZA,IACrBnF,KAAK8C,WAAW3F,OAAS,MAIA,MAAzB6C,KAAK8C,WAAW1G,MAAyC,MAAzB4D,KAAK8C,WAAW1G,MAAyC,QAAzB4D,KAAK8C,WAAW1G,OACpF4D,KAAK8C,WAAW2C,aAAc,GAEhC,aAAQzF,KAAKhE,MAGf,cACE,aAAQgE,KAAKhE,MAGf,aACOgE,KAAK8C,WAAW9E,UACnBgC,KAAK8C,WAAW9E,QAAU,IAE5BgC,KAAK8C,WAAW9E,QAAQpB,KAAK,CAACwB,KAAM,GAAIhC,KAAM,KAC9C,aAAQ4D,KAAKhE,MAGf,cAAcoE,GACZ,MACMsF,EADe,qBAAW,gBAAiBtF,GACRuF,aAAa,SAChDC,EAAkBzB,SAASuB,EAAqB,IACtD1F,KAAK8C,WAAW9E,QAAQ6H,OAAOD,EAAiB,GAChD,aAAQ5F,KAAKhE,MAGf,oBACMgE,KAAKhE,KAAKkI,SACRlE,KAAKmC,UACPnC,KAAK8C,WAAW/E,eAAiB,UAEjCiC,KAAK8C,WAAW/E,eAAiB,SAEnC,aAAQiC,KAAKhE,OAIjB,6BACE,IAAI8J,EAAY3B,SAASnE,KAAKoC,oBAAqB,IAE/C2D,MAAMD,KACRA,EAAY,GAEd9F,KAAK8C,WAAWsB,aAAe0B,EAAY,EAAI,IAAIA,EAAcA,EACjE,aAAQ9F,KAAKhE,MAGf,oBACMgE,KAAKqC,aACPrC,KAAK8C,WAAWjF,OAASmC,KAAKqC,WAC9B,aAAQrC,KAAKhE,OAIjB,kBACMgE,KAAKuC,WACPvC,KAAK8C,WAAW9D,KAAOgB,KAAKuC,SAC5B,aAAQvC,KAAKhE,OAIjB,qBACE,OAASsI,IACP,GAAIA,GAASA,EAAM3H,OAAQ,CACzB,MAAMqJ,EAAY1B,EAAMC,IAAKzF,IAC3B,MAAM0F,EAAUxE,KAAKoD,sBAAsBqB,KAAMC,GAAWA,EAAO1F,OAASF,EAAK6F,QACjF,GAAIH,EACF,OAAOA,EAAQ9G,QAEhBkH,OAAO9F,KAAUA,GACpBkB,KAAK8C,WAAWjG,SAAWmJ,EAAUzG,KAAK,KAC1C,aAAQS,KAAKhE,SAEdiK,KAAKjG,MAGV,iBACE,IAAIkG,EAAW/B,SAASnE,KAAKgC,QAAS,IAElC+D,MAAMG,KACRA,EAAW,GAEblG,KAAK8C,WAAWtE,GAAK0H,EACrB,aAAQlG,KAAKhE,MAGf,oBACE,IAAImK,EAAeC,WAAWpG,KAAKwC,WAAY,IAE3CuD,MAAMI,KACRA,EAAe,GAEjBnG,KAAK8C,WAAWnF,OAASwI,EACzB,aAAQnG,KAAKhE,MAIf,oBACMgE,KAAK2C,aACP3C,KAAK8C,WAAW3F,OAA6B,WAApB6C,KAAK2C,WAA0B,KAAO3C,KAAK2C,WACpE,aAAQ3C,KAAKhE,OAIjB,sBACE,IAAIqK,EAAiBlC,SAASnE,KAAK4C,aAAc,IAE7CmD,MAAMM,KACRA,EAAiB,GAEnBrG,KAAK8C,WAAWkC,SAAWqB,EAC3BrG,KAAK8C,WAAW2C,aAAc,EAC9B,aAAQzF,KAAKhE,MAGf,OAAOsK,GACL,IAAK,IAAIC,KAAQD,EACf,GAAIC,EACF,OAAO,EAGX,OAAO,EAGT,sBACE,OAAO,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OA2Lf9E,eAAeC,OAAO,8CAA+C","file":"5.bundle.js","sourcesContent":["import EntryRenderer from '../util/entryrender.js';\r\nimport Parser from '../util/Parser.js';\r\nimport { cloneDeep, utils_makeRoller } from '../js/utils.js';\r\n\r\nconst stats_wrapper = `\r\n\t<div class=\"stats-wrapper margin-bottom_large\">\r\n\t\t<div class=\"margin-bottom_small\">\r\n\t\t\t<span class=\"type\"></span><span class=\"rarity\"></span>\r\n\t\t\t<span class=\"attunement\"></span>\r\n\t\t</div>\r\n\t\t<div class=\"margin-bottom_small\">\r\n\t\t\t<span class=\"value\"></span><span class=\"weight\"></span>\r\n\t\t</div>\r\n\t\t<div class=\"margin-bottom_small\">\r\n\t\t\t<span class=\"damage\"></span>\r\n\t\t\t<span class=\"damageType\"></span>\r\n\t\t\t<span class=\"properties\"></span>\r\n\t\t</div>\r\n\t\t<div class=\"text\"></div>\r\n\t</div>`;\r\n\r\nconst renderer = new EntryRenderer();\r\nfunction renderSelection(item, rootEl) {\r\n\tadjustItem(item);\r\n\tconst wrap = rootEl.querySelector(\".selection-wrapper\") || rootEl;\r\n\twrap.innerHTML = stats_wrapper;\r\n\t\r\n\t// const sourceEl = rootEl.querySelector(\".stats-wrapper .source\")\r\n\t// const source = item.source;\r\n\t// const sourceFull = Parser.sourceJsonToFull(source);\r\n\t// sourceEl.innerHTML = (`<span class=\"source${item.source}\">${sourceFull},</span> page ${item.page}`);\r\n\r\n\trootEl.querySelector(\".stats-wrapper .value\").innerHTML = (item.value ? item.value+(item.weight ? \", \" : \"\") : \"\");\r\n\trootEl.querySelector(\".stats-wrapper .weight\").innerHTML = (item.weight ? item.weight+(item.weight == 1 ? \" lb.\" : \" lbs.\") : \"\");\r\n\trootEl.querySelector(\".stats-wrapper .rarity\").innerHTML = ((item.tier ? \", \"+item.tier : \"\")+(item.rarity ? \", \"+item.rarity : \"\"));\r\n\trootEl.querySelector(\".stats-wrapper .attunement\").innerHTML = (item.reqAttune ? item.reqAttune : \"\");\r\n\trootEl.querySelector(\".stats-wrapper .type\").innerHTML = (item.typeText);\r\n\r\n\trootEl.querySelector(\".stats-wrapper .damage\").innerHTML = (\"\");\r\n\trootEl.querySelector(\".stats-wrapper .damageType\").innerHTML = (\"\");\r\n\tconst type = item.type || \"\";\r\n\tif (item.weaponCategory) {\r\n\t\tif (item.damages && item.damages.length) {\r\n\t\t\tfor (let i = 0; i < item.damages.length; i++) {\r\n\t\t\t\tconst damage = item.damages[i];\r\n\t\t\t\tconst isLast = i === item.damages.length - 1;\r\n\t\t\t\tif (damage.roll && damage.type) {\r\n\t\t\t\t\trootEl.querySelector(\".stats-wrapper .damage\").innerHTML += `<span>${utils_makeRoller(damage.roll)} ${Parser.dmgTypeToFull(damage.type)}</span>${isLast ? '': ' + '}`\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif(item.dmg1) rootEl.querySelector(\".stats-wrapper .damage\").innerHTML = (utils_makeRoller(item.dmg1));\r\n\t\t\tif(item.dmgType) rootEl.querySelector(\".stats-wrapper .damageType\").innerHTML = (Parser.dmgTypeToFull(item.dmgType));\r\n\t\t}\r\n\t} else if (type === \"LA\" ||type === \"MA\"|| type === \"HA\") {\r\n\t\trootEl.querySelector(\".stats-wrapper .damage\").innerHTML = (\"AC \"+item.ac+(type === \"LA\" ? \" + Dex\" : type === \"MA\" ? \" + Dex (max 2)\" : \"\"));\r\n\t} else if (type === \"S\") {\r\n\t\trootEl.querySelector(\".stats-wrapper .damage\").innerHTML = (\"AC +\"+item.ac);\r\n\t} else if (type === \"MNT\" || type === \"VEH\") {\r\n\t\tconst speed = item.speed;\r\n\t\tconst capacity = item.carryingcapacity;\r\n\t\tif (speed) rootEl.querySelector(\".stats-wrapper .damage\").append(\"Speed=\"+speed);\r\n\t\tif (speed && capacity) rootEl.querySelector(\".stats-wrapper .damage\").append(type === \"MNT\" ? \", \" : \"<br/>\");\r\n\t\tif (capacity) {\r\n\t\t\trootEl.querySelector(\".stats-wrapper .damage\").append(\"Carrying Capacity=\"+capacity);\r\n\r\n\t\t\tif (capacity.indexOf(\"ton\") === -1 && capacity.indexOf(\"passenger\") === -1) {\r\n\t\t\t\trootEl.querySelector(\".stats-wrapper .damage\").append(capacity == 1 ? \" lb.\" : \" lbs.\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\trootEl.querySelector(\".stats-wrapper .properties\").innerHTML = (\"\");\r\n\tif (item.property) {\r\n\t\tconst properties = item.property.split(\",\");\r\n\t\tfor (let i = 0; i < properties.length; i++) {\r\n\t\t\tconst prop = properties[i];\r\n\t\t\tlet a = window.itemPropertyList[prop].name;\r\n\t\t\tif (prop === \"V\" && item.dmg2) a = `${a} (${item.dmg2})`;\r\n\t\t\tif (prop === \"T\" || prop === \"A\" || prop === \"AF\") a = `${a} (${item.range}ft.)`;\r\n\t\t\tif (prop === \"RLD\") a = `${a} (${item.reload} shots)`;\r\n\t\t\ta = (i > 0 ? \", \" : item.dmg1 ? \"- \" : \"\") + a;\r\n\t\t\trootEl.querySelector(\".stats-wrapper .properties\").append(a);\r\n\t\t}\r\n\t}\r\n\r\n\tconst entryList = {type: \"entries\", entries: item.entries};\r\n\tconst renderStack = [];\r\n\trenderer.recursiveEntryRender(entryList, renderStack, 1);\r\n\trootEl.querySelector(\".stats-wrapper .text\").innerHTML = (utils_makeRoller(renderStack.join(\"\")).split(item.name.toLowerCase()).join(\"<i>\"+item.name.toLowerCase()+\"</i>\"));\r\n}\r\n\r\nfunction adjustItem(item) {\r\n\tif (item.hasParsed) {\r\n\t\treturn;\r\n\t}\r\n\titem.hasParsed = true;\r\n\tif (item.noDisplay) {\r\n\t\treturn;\r\n\t}\r\n\tif (item.type === \"GV\") {\r\n\t\titem.category = \"Generic Variant\";\r\n\t}\r\n\tif (item.category === undefined) {\r\n\t\titem.category = \"Other\";\r\n\t}\r\n\tif (item.entries === undefined) {\r\n\t\titem.entries = [];\r\n\t} else {\r\n\t\titem.entries = cloneDeep(item.entries);\r\n\t}\r\n\tif (item.type && window.itemTypeList[item.type]) {\r\n\t\tfor (let j = 0; j < window.itemTypeList[item.type].entries.length; j++) {\r\n\t\t\titem.entries.push(window.itemTypeList[item.type].entries[j]);\r\n\t\t}\r\n\t}\r\n\tif (item.property) {\r\n\t\tconst properties = item.property.split(\",\");\r\n\t\tfor (let j = 0; j < properties.length; j++) {\r\n\t\t\tif (window.itemPropertyList[properties[j]].entries) {\r\n\t\t\t\tfor (let k = 0; k < window.itemPropertyList[properties[j]].entries.length; k++) {\r\n\t\t\t\t\titem.entries.push(window.itemPropertyList[properties[j]].entries[k]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t//The following could be encoded in JSON, but they depend on more than one JSON property; maybe fix if really bored later\r\n\tif (item.armor) {\r\n\t\tif (item.resist) {\r\n\t\t\titem.entries.push(\"You have resistance to \"+item.resist+\" damage while you wear this armor.\");\r\n\t\t}\r\n\t\tif (item.armor && item.stealth) {\r\n\t\t\titem.entries.push(\"The wearer has disadvantage on Stealth (Dexterity) checks.\");\r\n\t\t}\r\n\t\tif (item.type === \"HA\" && item.strength) {\r\n\t\t\titem.entries.push(\"If the wearer has a Strength score lower than \" + item.strength + \", their speed is reduced by 10 feet.\");\r\n\t\t}\r\n\t} else if (item.resist) {\r\n\t\tif (item.type === \"P\") {\r\n\t\t\titem.entries.push(\"When you drink this potion, you gain resistance to \"+item.resist+\" damage for 1 hour.\");\r\n\t\t}\r\n\t\tif (item.type === \"RG\") {\r\n\t\t\titem.entries.push(\"You have resistance to \"+item.resist+\" damage while wearing this ring.\");\r\n\t\t}\r\n\t}\r\n\tif (item.type === \"SCF\") {\r\n\t\tif (item.scfType === \"arcane\") {\r\n\t\t\titem.entries.push(\"An arcane focus is a special item designed to channel the power of arcane spells. A sorcerer, warlock, or wizard can use such an item as a spellcasting focus, using it in place of any material component which does not list a cost.\");\r\n\t\t}\r\n\t\tif (item.scfType === \"druid\") {\r\n\t\t\titem.entries.push(\"A druid can use such a druidic focus as a spellcasting focus, using it in place of any material component that does not have a cost.\");\r\n\t\t}\r\n\t\tif (item.scfType === \"holy\") {\r\n\t\t\titem.entries.push(\"A holy symbol is a representation of a god or pantheon.\");\r\n\t\t\titem.entries.push(\"A cleric or paladin can use a holy symbol as a spellcasting focus, using it in place of any material components which do not list a cost. To use the symbol in this way, the caster must hold it in hand, wear it visibly, or bear it on a shield.\");\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport { renderSelection };","import './theme/lumo/vaadin-text-field.js';\n","import '@vaadin/vaadin-lumo-styles/color.js';\nimport '@vaadin/vaadin-lumo-styles/sizing.js';\nimport '@vaadin/vaadin-lumo-styles/typography.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\n\nconst $_documentContainer = html`<dom-module id=\"lumo-text-area\" theme-for=\"vaadin-text-area\">\n  <template>\n    <style include=\"lumo-text-field\">\n      [part=\"input-field\"],\n      [part=\"input-field\"] ::slotted(textarea) {\n        /* Equal to the implicit padding in vaadin-text-field */\n        padding-top: calc((var(--lumo-text-field-size) - 1em * var(--lumo-line-height-s)) / 2);\n        padding-bottom: calc((var(--lumo-text-field-size) - 1em * var(--lumo-line-height-s)) / 2);\n        height: auto;\n        box-sizing: border-box;\n        transition: background-color 0.1s;\n        line-height: var(--lumo-line-height-s);\n      }\n\n      :host(:not([readonly])) [part=\"input-field\"]::after {\n        display: none;\n      }\n\n      :host([readonly]) [part=\"input-field\"] {\n        border: 1px dashed var(--lumo-contrast-30pct);\n      }\n\n      :host([readonly]) [part=\"input-field\"]::after {\n        border: none;\n      }\n\n      :host(:hover:not([readonly]):not([focused])) [part=\"input-field\"] {\n        background-color: var(--lumo-contrast-20pct);\n      }\n\n      @media (pointer: coarse) {\n        :host(:hover:not([readonly]):not([focused])) [part=\"input-field\"] {\n          background-color: var(--lumo-contrast-10pct);\n        }\n\n        :host(:active:not([readonly]):not([focused])) [part=\"input-field\"] {\n          background-color: var(--lumo-contrast-20pct);\n        }\n      }\n\n      [part=\"value\"],\n      [part=\"input-field\"] ::slotted(textarea) {\n        line-height: inherit;\n        --_lumo-text-field-overflow-mask-image: none;\n      }\n\n      /* Vertically align icon prefix/suffix with the first line of text */\n      [part=\"input-field\"] ::slotted(iron-icon) {\n        margin-top: calc((var(--lumo-icon-size-m) - 1em * var(--lumo-line-height-s)) / -2);\n      }\n\n      [part=\"input-field\"] [part=\"value\"],\n      [part=\"input-field\"] ::slotted(textarea) {\n        white-space: pre-wrap; /* override \\`nowrap\\` from <vaadin-text-field> */\n        align-self: stretch; /* override \\`baseline\\` from <vaadin-text-field> */\n      }\n    </style>\n  </template>\n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\n","/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport { TextFieldMixin } from './vaadin-text-field-mixin.js';\nimport { ElementMixin } from '@vaadin/vaadin-element-mixin/vaadin-element-mixin.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n/**\n * `<vaadin-text-area>` is a Web Component for text area control in forms.\n *\n * ```html\n * <vaadin-text-area label=\"Add description\">\n * </vaadin-text-area>\n * ```\n *\n * ### Prefixes and suffixes\n *\n * These are child elements of a `<vaadin-text-area>` that are displayed\n * inline with the input, before or after.\n * In order for an element to be considered as a prefix, it must have the slot\n * attribute set to `prefix` (and similarly for `suffix`).\n *\n * ```html\n * <vaadin-text-area label=\"Add description\">\n *   <div slot=\"prefix\">Details:</div>\n *   <div slot=\"suffix\">The end!</div>\n * </vaadin-text-area>\n * ```\n *\n * ### Styling\n *\n * The following shadow DOM parts are available for styling:\n *\n * Part name | Description\n * ----------------|----------------\n * `label` | The label element\n * `input-field` | The element that wraps prefix, value and suffix\n * `value` | The text value element inside the `input-field` element\n * `error-message` | The error message element\n *\n * The following state attributes are available for styling:\n *\n * Attribute    | Description | Part name\n * -------------|-------------|------------\n * `disabled` | Set to a disabled text field | :host\n * `has-value` | Set when the element has a value | :host\n * `has-label` | Set when the element has a label | :host\n * `invalid` | Set when the element is invalid | :host\n * `focused` | Set when the element is focused | :host\n * `focus-ring` | Set when the element is keyboard focused | :host\n * `readonly` | Set to a readonly text field | :host\n *\n * See [ThemableMixin – how to apply styles for shadow parts](https://github.com/vaadin/vaadin-themable-mixin/wiki)\n *\n * @extends PolymerElement\n * @mixes TextFieldMixin\n * @mixes ThemableMixin\n * @demo demo/index.html\n */\nclass TextAreaElement extends ElementMixin(TextFieldMixin(ThemableMixin(PolymerElement))) {\n  static get template() {\n    return html`\n    <style include=\"vaadin-text-field-shared-styles\">\n      .vaadin-text-area-container {\n        flex: auto;\n        max-height: inherit; /* MSIE 11 */\n        min-height: inherit; /* MSIE 11 */\n      }\n\n      /* The label and the error message should neither grow nor shrink. */\n      [part=\"label\"],\n      [part=\"error-message\"] {\n        flex: none;\n      }\n\n      [part=\"input-field\"] {\n        overflow: auto;\n        -webkit-overflow-scrolling: touch;\n      }\n\n      [part=\"value\"] {\n        resize: none;\n      }\n\n      [part=\"value\"],\n      [part=\"input-field\"] ::slotted(*) {\n        align-self: flex-start;\n      }\n\n      @keyframes vaadin-text-area-appear {\n        to {\n          opacity: 1;\n        }\n      }\n\n      :host {\n        animation: 1ms vaadin-text-area-appear;\n      }\n    </style>\n\n    <div class=\"vaadin-text-area-container\">\n\n      <label part=\"label\" on-click=\"focus\" id=\"[[_labelId]]\">[[label]]</label>\n\n      <div part=\"input-field\" id=\"[[_inputId]]\">\n\n        <slot name=\"prefix\"></slot>\n\n        <slot name=\"textarea\">\n          <textarea part=\"value\"></textarea>\n        </slot>\n\n        <div part=\"clear-button\" id=\"clearButton\" role=\"button\" aria-label\\$=\"[[i18n.clear]]\"></div>\n        <slot name=\"suffix\"></slot>\n\n      </div>\n\n      <div part=\"error-message\" id=\"[[_errorId]]\" aria-live=\"assertive\" aria-hidden\\$=\"[[_getErrorMessageAriaHidden(invalid, errorMessage, _errorId)]]\">[[errorMessage]]</div>\n\n    </div>\n`;\n  }\n\n  static get is() {\n    return 'vaadin-text-area';\n  }\n\n  static get version() {\n    return '2.6.2';\n  }\n\n  static get observers() {\n    return [\n      '_textAreaValueChanged(value)'\n    ];\n  }\n\n  ready() {\n    super.ready();\n    this._updateHeight();\n    this.addEventListener('animationend', this._onAnimationEnd);\n  }\n\n  _onAnimationEnd(e) {\n    if (e.animationName.indexOf('vaadin-text-area-appear') === 0) {\n      this._updateHeight();\n    }\n  }\n\n  get _slottedTagName() {\n    return 'textarea';\n  }\n\n  _textAreaValueChanged(value) {\n    this._updateHeight();\n  }\n\n  _updateHeight() {\n    const inputField = this.root.querySelector('[part=input-field]');\n    const scrollTop = inputField.scrollTop;\n    const input = this.inputElement;\n\n    const inputWidth = getComputedStyle(input).width;\n\n    const valueLength = this.value ? this.value.length : 0;\n    // Only clear the height when the content shortens to minimize scrollbar flickering.\n    if (this._oldValueLength >= valueLength) {\n      // Fix the input element width so its scroll height isn't affected by host's disappearing scrollbars\n      input.style.maxWidth = inputWidth;\n      input.style.height = 'auto';\n      // Avoid a jumpy Safari rendering issue\n      inputField.style.display = 'block';\n    }\n    this._oldValueLength = valueLength;\n\n    const inputHeight = input.scrollHeight;\n    if (inputHeight > input.clientHeight) {\n      input.style.height = inputHeight + 'px';\n    }\n\n    // Restore\n    input.style.removeProperty('max-width');\n    inputField.style.removeProperty('display');\n    inputField.scrollTop = scrollTop;\n\n    this._dispatchIronResizeEventIfNeeded('InputHeight', inputHeight);\n  }\n\n  /**\n   * Fired when the text-area height changes.\n   *\n   * @event iron-resize\n   */\n}\n\ncustomElements.define(TextAreaElement.is, TextAreaElement);\n\nexport { TextAreaElement };\n","import { PolymerElement, html } from \"@polymer/polymer\";\nimport {\n  setItem\n} from \"../../../util/charBuilder\";\nimport { getEditModeChannel, isEditMode } from \"../../../util/editMode\";\nimport { renderSelection } from \"../../../js/items\";\nimport { DAMAGE_TYPES, RARITY_TYPES } from \"../../../util/consts\";\nimport { findInPath, util_capitalizeAll } from \"../../../js/utils\";\nimport \"@vaadin/vaadin-text-field/vaadin-text-field\";\nimport \"@vaadin/vaadin-text-field/vaadin-text-area\";\nimport Parser from '../../../util/Parser';\n\n\n//// BOONS\n// Resistance\n// DC+\n// Proficiency?\n// Spells known\nclass DndCharacterBuilderEquipmentItemDetail extends PolymerElement {\n  \n  static get properties() {\n    return {\n      isEditMode: {\n        type: Boolean,\n        value: false\n      },\n      hasRenderedOutput: {\n        type: Boolean,\n        value: false\n      },\n      hasAC: {\n        type: Boolean,\n        value: false\n      },\n      armorAC: {\n        type: Number,\n        value: 0\n      },\n      isArmor: {\n        type: Boolean,\n        value: false\n      },\n      isMartial: {\n        type: Boolean,\n        value: false\n      },\n      weaponMagicModifier: {\n        type: Number,\n        value: 0\n      },\n      itemRarity: {\n        type: String,\n      },\n      itemName: {\n        type: String,\n      },\n      itemWeight: {\n        type: Number,\n        value: 0\n      },\n      weaponProperties: {\n        type: Array,\n      },\n      itemResist: {\n        type: String,\n      },\n      itemQuantity: {\n        type: Number,\n        value: 0\n      },\n      item: {\n        type: Object\n      },\n      storedItem: {\n        type: Object\n      },\n      itemType: {\n        type: String,\n        value: ''\n      }\n    };\n  }\n\n  static get observers() {\n    return [\n      '_itemChanged(item)'\n    ]\n  }\n\n  constructor() {\n    super();\n\n    this.itemTypes = [\n      'Armor (Light)',\n      'Armor (Medium)',\n      'Armor (Heavy)',\n      'Melee Weapon',\n      'Ranged Weapon',\n      'Shield',\n      'Adventuring Gear',\n      'Ammunition',\n      'Artisan Tool',\n      'Explosive',\n      'Gaming Set',\n      'Instrument',\n      'Mount',\n      'Potion',\n      'Rod',\n      'Ring',\n      'Scroll',\n      'Spellcasting Focus',\n      'Tool',\n      'Tack and Harness',\n      'Trade Good',\n      'Vehicle',\n      'Wand'\n    ];\n\n    this.rarityTypes = RARITY_TYPES;\n    this.damageTypes = DAMAGE_TYPES;\n    this.resistTypes = ['<None>', ...DAMAGE_TYPES];\n    this.weaponPropertyOptions = [\n      { name: 'Two-Handed', value: '2H' },\n      { name: 'Ammunition', value: 'A' },\n      { name: 'Finesse', value: 'F' },\n      { name: 'Heavy', value: 'H' },\n      { name: 'Light', value: 'L' },\n      { name: 'Loading', value: 'LD' },\n      { name: 'Reach', value: 'R' },\n      { name: 'Reload', value: 'RLD' },\n      { name: 'Special', value: 'S' },\n      { name: 'Thrown', value: 'T' },\n      { name: 'Versatile', value: 'V' },\n    ]\n    this.weaponPropertyValues = [\n      'Two-Handed',\n      'Ammunition',\n      'Finesse',\n      'Heavy',\n      'Light',\n      'Loading',\n      'Reach',\n      'Reload',\n      'Special',\n      'Thrown',\n      'Versatile'\n    ]\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    this.editModeHandler = (e) => {\n      this.isEditMode = e.detail.isEditMode;\n    }\n    getEditModeChannel().addEventListener('editModeChange', this.editModeHandler);\n    this.isEditMode = isEditMode();\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n\n    getEditModeChannel().removeEventListener('editModeChange', this.editModeHandler);\n  }\n\n  _itemChanged() {\n    console.error('itemDetail:', this.item);\n\n    if (this.item.itemRef && !this.item.lookupFailed) {\n      this.hasRenderedOutput = true;\n      renderSelection(this.item, this.$.renderedOutput, true);\n    } else {\n      this.hasRenderedOutput = false;\n    }\n    this.itemType = this._getItemType();\n    this.hasAC = this.item.type === 'S' || !!this.item.armor;\n    if (this.hasAC) {\n      this.armorAC = this.item.ac;\n    }\n    this.isArmor = !!this.item.armor;\n    this.isMartial = this.item.weaponCategory === 'Martial';\n    if (this.item.weapon) {\n      this.weaponMagicModifier = parseInt(this.item.genericBonus, 10);\n      const propStr = this.item.property;\n      if (propStr) {\n        const props = propStr.split(',').map(prop => {\n          const propObj = this.weaponPropertyOptions.find((option) => option.value === prop.trim());\n          if (propObj) {\n            return propObj.name;\n          }\n        }).filter(prop => !!prop);\n        this.weaponProperties = props;\n        if (!this.item.damages) {\n          if (this.item.dmg1) {\n            this.item.storedItem.damages = [{roll: this.item.dmg1, type: util_capitalizeAll(Parser.dmgTypeToFull(this.item.dmgType))}];\n          } else {\n            this.item.storedItem.damages = [];\n          }\n        }\n      }\n    }\n    this.itemRarity = this.item.rarity;\n    this.itemName = this.item.name;\n    this.itemWeight = this.item.weight;\n    this.canHaveResist = this.item.armor || this.item.type === 'P' || this.item.type === 'RG';\n    this.itemResist = this.item.resist;\n    this.canHaveQuantity = this.item.type === 'P' || this.item.type === 'A' || this.item.type === 'EXP';\n    this.itemQuantity = this.item.quantity;\n    this.canHaveSpell = this.item.type === 'SC';\n\n    if (this.item.storedItem) {\n      this.storedItem = this.item.storedItem;\n    }\n  }\n\n  _getItemType() {\n    if (this.item) {\n      return Parser.ITEM_TYPE_JSON_TO_ABV[this.item.type];  \n    }\n    return '';\n  }\n\n  _selectItemType() {\n    const newType = this.$.typeSelect.value;\n    this.storedItem.armor = false;\n    this.storedItem.weapon = false;\n    this.storedItem.type = '';\n    this.storedItem.isEquipped = false;\n    this.storedItem.isAttuned = false;\n\n    switch (newType) {\n      case 'Armor (Light)':\n        this.storedItem.armor = true;\n        this.storedItem.weaponCategory = null;\n        this.storedItem.type = 'LA';\n        break;\n      case 'Armor (Medium)':\n        this.storedItem.armor = true;\n        this.storedItem.weaponCategory = null;\n        this.storedItem.type = 'MA';\n        break;\n      case 'Armor (Heavy)':\n        this.storedItem.armor = true;\n        this.storedItem.weaponCategory = null;\n        this.storedItem.type = 'HA';\n        break;\n      case 'Ranged Weapon':\n        this.storedItem.weapon = true;\n        this.storedItem.weaponCategory = 'Simple';\n        this.storedItem.type = 'R';\n        this.storedItem.resist = null;\n        break;\n      case 'Melee Weapon':\n        this.storedItem.weapon = true;\n        this.storedItem.weaponCategory = 'Simple';\n        this.storedItem.type = 'M';\n        this.storedItem.resist = null;\n        break;\n      case 'Shield':\n        this.storedItem.type = 'S';\n        this.storedItem.weaponCategory = null;\n        this.storedItem.ac = 2;\n        this.storedItem.resist = null;\n        break;\n      case 'Adventuring Gear':\n        this.storedItem.weaponCategory = null;\n        this.storedItem.type = 'G';\n        this.storedItem.resist = null;\n        break;\n      default:\n        const typeVal = Object.entries(Parser.ITEM_TYPE_JSON_TO_ABV).find(([key, value]) => value === newType);\n        if (typeVal) {\n          this.storedItem.type = typeVal[0];\n        }\n        if (newType !== 'P' || newType !== 'RG') {\n          this.storedItem.resist = null;\n        }\n        break;\n    }\n    if (!(this.storedItem.type === 'P' || this.storedItem.type === 'A' || this.storedItem.type === 'EXP')) {\n      this.storedItem.hasQuantity = false;\n    }\n    setItem(this.item);\n  }\n\n  _updateItem() {\n    setItem(this.item);\n  }\n\n  _addDamage() {\n    if (!this.storedItem.damages) {\n      this.storedItem.damages = [];\n    }\n    this.storedItem.damages.push({roll: '', type: ''});\n    setItem(this.item);\n  }\n\n  _removeDamage(e) {\n    const rollDamageEl = findInPath('.roll__damage', e);\n    const rollDamageIndexAttr = rollDamageEl.getAttribute('index');\n    const rollDamageIndex = parseInt(rollDamageIndexAttr, 10);\n    this.storedItem.damages.splice(rollDamageIndex, 1);\n    setItem(this.item);\n  }\n\n  _changeWeaponType() {\n    if (this.item.weapon) {\n      if (this.isMartial) {\n        this.storedItem.weaponCategory = 'Martial';\n      } else {\n        this.storedItem.weaponCategory = 'Simple';\n      }\n      setItem(this.item);\n    }\n  }\n\n  _weaponMagicModifierChange() {\n    let parsedMod = parseInt(this.weaponMagicModifier, 10);\n\n    if (isNaN(parsedMod)) {\n      parsedMod = 0;\n    }\n    this.storedItem.genericBonus = parsedMod > 0 ? `+${parsedMod}` : parsedMod;\n    setItem(this.item);\n  }\n\n  _itemRarityChange() {\n    if (this.itemRarity) {\n      this.storedItem.rarity = this.itemRarity;\n      setItem(this.item);\n    }\n  }\n\n  _itemNameChange() {\n    if (this.itemName) {\n      this.storedItem.name = this.itemName;\n      setItem(this.item);\n    }\n  }\n\n  _addWeaponProperty() {\n    return ((props) => {\n      if (props && props.length) {\n        const propCodes = props.map((prop) => {\n          const propObj = this.weaponPropertyOptions.find((option) => option.name === prop.trim());\n          if (propObj) {\n            return propObj.value;\n          }\n        }).filter(prop => !!prop);\n        this.storedItem.property = propCodes.join(',');\n        setItem(this.item);\n      }\n    }).bind(this);\n  }\n\n  _armorACChange() {\n    let parsedAC = parseInt(this.armorAC, 10);\n\n    if (isNaN(parsedAC)) {\n      parsedAC = 0;\n    }\n    this.storedItem.ac = parsedAC;\n    setItem(this.item);\n  }\n\n  _itemWeightChange() {\n    let parsedWeight = parseFloat(this.itemWeight, 10);\n\n    if (isNaN(parsedWeight)) {\n      parsedWeight = 0;\n    }\n    this.storedItem.weight = parsedWeight;\n    setItem(this.item);\n\n  }\n\n  _itemResistChange() {\n    if (this.itemResist) {\n      this.storedItem.resist = this.itemResist === '<None>' ? null : this.itemResist;\n      setItem(this.item);\n    }\n  }\n\n  _itemQuantityChange() {\n    let parsedQuantity = parseInt(this.itemQuantity, 10);\n\n    if (isNaN(parsedQuantity)) {\n      parsedQuantity = 0;\n    }\n    this.storedItem.quantity = parsedQuantity;\n    this.storedItem.hasQuantity = true;\n    setItem(this.item);\n  }\n\n  _or(...bools) {\n    for (let bool of bools) {\n      if (bool) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  static get template() {\n    return html`\n      <style include=\"material-styles my-styles\"></style>\n      <style>\n        :host {}\n        [hidden] {\n          display: none !important;\n        }\n\n        .edit__wrap {\n          margin-right: -10px;\n        }\n        .edit__name {\n          width: calc(65% - 10px);\n          padding-top: 0;\n        }\n        .edit__notes {\n          width: calc(100% - 10px);\n          min-height: 200px;\n        }\n        .edit__checkboxes {\n          display: flex;\n          flex-direction: column;\n          margin: 10px 10px 0 0;\n        }\n        .edit__weapon {\n          margin-right: 10px;\n        }\n\n        .roll__damages {\n          display: flex;\n          flex-direction: column;\n        }\n        .roll__damage {\n          display: flex;\n        }\n        .roll__damage vaadin-text-field,\n        .roll__damage vaadin-select {\n          max-width: 100%;\n        }\n        .roll__damage-roll--edit,\n        .roll__damage-type--edit {\n          width: calc(50% - 40px);\n        }\n        .roll__damage-roll--edit {\n          margin-right: 16px;\n        }\n        .roll__damage-remove {\n          margin: auto 16px 4px;\n        }\n\n        dnd-switch {\n          margin: 10px auto 0;\n          display: block;\n        }\n\n        h2 {\n          margin-top: 0;\n          font-size: 16px;\n          font-weight: bold;\n          margin-bottom: 8px;\n        }\n\n        vaadin-checkbox {\n          width: fit-content;\n        }\n\n        vaadin-select {\n          max-width: calc(50% - 12px);\n        }\n        vaadin-number-field,\n        vaadin-integer-field {\n          width: calc(33% - 10px);\n        }\n        vaadin-text-field,\n        vaadin-text-area,\n        vaadin-integer-field,\n        vaadin-number-field,\n        vaadin-select {\n          margin-right: 10px;\n        }\n\n        .margin-bottom_large {\n          margin-bottom: 0 !important;\n        }\n\n        @media(min-width: 921px) {\n        }\n      </style>\n\n      <div>\n        <div hidden$=\"[[isEditMode]]\">\n          <div hidden$=\"[[!hasRenderedOutput]]\">\n            <h2>[[item.name]]</h4>\n            <div>[[item.notes]]</div>\n            <div hidden$=\"[[item.hideRef]]\" id=\"renderedOutput\"></div>\n          </div>\n\n          <div hidden$=\"[[hasRenderedOutput]]\">\n            <h2>[[item.name]]</h4>\n            <div>[[item.notes]]</div>\n          </div>\n        </div>\n\n        <template is=\"dom-if\" if=\"[[isEditMode]]\">\n          <div class=\"edit__wrap\">\n            <vaadin-text-field class=\"edit__name\" value=\"{{itemName}}\" label=\"Name\" on-change=\"_itemNameChange\"></vaadin-text-field>\n            <vaadin-number-field has-controls value=\"{{itemWeight}}\" label=\"Weight\" min=\"0\" on-change=\"_itemWeightChange\"></vaadin-number-field>\n\n            <vaadin-select id=\"typeSelect\" value=\"[[itemType]]\" on-change=\"_selectItemType\" label=\"Type\" >\n              <template>\n                <vaadin-list-box>\n                  <template is=\"dom-repeat\" items=\"[[itemTypes]]\">\n                    <vaadin-item>[[item]]</vaadin-item>\n                  </template>\n                </vaadin-list-box>\n              </template>\n            </vaadin-select>\n\n            <vaadin-select id=\"raritySelect\" value=\"{{itemRarity}}\" on-change=\"_itemRarityChange\" label=\"Rarity\" >\n              <template>\n                <vaadin-list-box>\n                  <template is=\"dom-repeat\" items=\"[[rarityTypes]]\">\n                    <vaadin-item>[[item]]</vaadin-item>\n                  </template>\n                </vaadin-list-box>\n              </template>\n            </vaadin-select>\n\n            <div class=\"edit__weapon\" hidden$=\"[[!item.weapon]]\">\n              <vaadin-integer-field  min=\"0\" max=\"5\" has-controls value=\"{{weaponMagicModifier}}\" label=\"Magic Modifier\" on-change=\"_weaponMagicModifierChange\"></vaadin-integer-field>\n\n              <dnd-select-add choices=\"100\" label=\"Weapon Properties\" options=\"[[weaponPropertyValues]]\" value=\"[[weaponProperties]]\" add-callback=\"[[_addWeaponProperty()]]\"></dnd-select-add>\n\n              <dnd-switch label='Simple Weapon' secondary-label='Martial Weapon' initial-value=\"[[isMartial]]\" checked={{isMartial}} on-switch-change=\"_changeWeaponType\" ></dnd-switch>\n\n              <template is=\"dom-repeat\" items=\"[[storedItem.damages]]\" as=\"damage\">\n                <div class=\"roll__damage\" index$=\"[[index]]\">\n                  <dnd-button on-click=\"_removeDamage\" icon=\"remove\" class='roll__damage-remove icon-only'></dnd-button>\n                  <div class=\"roll__damage-roll--edit\">\n                    <vaadin-text-field value=\"{{damage.roll}}\" on-change=\"_updateItem\" label=\"Damage Roll\"></vaadin-text-field>\n                  </div>\n                  <div class=\"roll__damage-type--edit\">\n                    <vaadin-select value=\"{{damage.type}}\" on-change=\"_updateItem\" label=\"Damage Type\" >\n                      <template>\n                        <vaadin-list-box>\n                          <template is=\"dom-repeat\" items=\"[[damageTypes]]\">\n                            <vaadin-item>[[item]]</vaadin-item>\n                          </template>\n                        </vaadin-list-box>\n                      </template>\n                    </vaadin-select>\n                  </div>\n                </div>\n              </template>\n              <dnd-button on-click=\"_addDamage\" label=\"Add Damage\" icon=\"add\" class=\"roll__add-damage\"></dnd-button>\n            </div>\n\n            <vaadin-integer-field hidden$=\"[[!hasAC]]\" min=\"0\" max=\"30\" has-controls value=\"{{armorAC}}\" label=\"AC\" on-change=\"_armorACChange\"></vaadin-integer-field>\n            \n            <vaadin-integer-field hidden$=\"[[!item.hasQuantity]]\" min=\"0\" has-controls value=\"{{itemQuantity}}\" label=\"Quantity\" on-change=\"_itemQuantityChange\"></vaadin-integer-field>\n\n            <!-- <vaadin-select hidden$=\"[[!canHaveResist]]\" value=\"{{itemResist}}\" on-change=\"_itemResistChange\" label=\"Resistance\">\n              <template>\n                <vaadin-list-box>\n                  <template is=\"dom-repeat\" items=\"[[resistTypes]]\">\n                    <vaadin-item>[[item]]</vaadin-item>\n                  </template>\n                </vaadin-list-box>\n              </template>\n            </vaadin-select> -->\n\n            <div class=\"edit__checkboxes\">\n              <vaadin-checkbox hidden$=\"[[!canHaveQuantity]]\" checked=\"{{storedItem.hasQuantity}}\" on-change=\"_updateItem\">Has Quantity?</vaadin-checkbox>\n              <vaadin-checkbox hidden$=\"[[!isArmor]]\" checked=\"{{storedItem.stealth}}\" on-change=\"_updateItem\">Disadvantage on Stealth?</vaadin-checkbox>\n              <vaadin-checkbox checked=\"{{storedItem.reqAttune}}\" on-change=\"_updateItem\">Requires Attunement?</vaadin-checkbox>\n              <vaadin-checkbox checked=\"{{storedItem.wondrous}}\" on-change=\"_updateItem\">Wondrous?</vaadin-checkbox>\n              <vaadin-checkbox hidden$=\"[[!storedItem.itemRef]]\" checked=\"{{storedItem.hideRef}}\" on-change=\"_updateItem\">Hide Reference?</vaadin-checkbox>\n            </div>\n\n            <vaadin-text-area class=\"edit__notes\" value=\"{{storedItem.notes}}\" label=\"Notes\" on-change=\"_updateItem\"></vaadin-text-area>\n          </div>\n        </template>\n      </div>\n    `;\n  }\n}\n\ncustomElements.define(\"dnd-character-builder-equipment-item-detail\", DndCharacterBuilderEquipmentItemDetail);"],"sourceRoot":""}