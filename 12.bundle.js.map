{"version":3,"sources":["webpack:///./components/views/character/dnd-character-builder-background-race.js"],"names":["DndCharacterBuilderBackgroundRace","selectedBackground","type","String","value","selectedBackgroundRef","Object","selectedRace","selectedRaceRef","isEditMode","Boolean","backgroundName","raceName","super","connectedCallback","this","characterChangeHandler","e","character","detail","updateFromCharacter","addEventListener","editModeHandler","disconnectedCallback","removeEventListener","background","name","race","dispatchEvent","CustomEvent","bubbles","composed","linkData","source","push","dataLink","bg","arg","arguments","constructor","entries","length","Array","isArray","customElements","define"],"mappings":"2FAAA,mDAWA,MAAMA,UAA0C,IAE9C,wBACE,MAAO,CACLC,mBAAoB,CAClBC,KAAMC,OACNC,MAAO,IAETC,sBAAuB,CACrBH,KAAMI,QAERC,aAAc,CACZL,KAAMC,OACNC,MAAO,IAETI,gBAAiB,CACfN,KAAMI,QAERG,WAAY,CACVP,KAAMQ,QACNN,OAAO,GAETO,eAAgB,CACdT,KAAMC,OACNC,MAAO,IAETQ,SAAU,CACRV,KAAMC,OACNC,MAAO,KAKb,oBACES,MAAMC,oBAENC,KAAKC,uBAA0BC,IAC7B,IAAIC,EAAYD,EAAEE,OAAOD,UACzBH,KAAKK,oBAAoBF,IAG3BH,KAAKK,oBAAoB,eACzB,cAAsBC,iBAAiB,qBAAsBN,KAAKC,wBAElED,KAAKO,gBAAmBL,IACtBF,KAAKN,WAAaQ,EAAEE,OAAOV,YAE7B,cAAqBY,iBAAiB,iBAAkBN,KAAKO,iBAC7DP,KAAKN,WAAa,cAGpB,uBACEI,MAAMU,uBAEN,cAAsBC,oBAAoB,qBAAsBT,KAAKC,wBACrE,cAAqBQ,oBAAoB,iBAAkBT,KAAKO,iBAGlE,0BAA0BJ,GACxBH,KAAKd,mBAAqBiB,EAAUO,WACpCV,KAAKV,4BAA8B,cACnCU,KAAKJ,eAAiBI,KAAKd,mBAAmByB,KAC9CX,KAAKR,aAAeW,EAAUS,KAC9BZ,KAAKP,sBAAwB,cAC7BO,KAAKH,SAAWG,KAAKR,aAAamB,KAElCX,KAAKa,cAAc,IAAIC,YAAY,gBAAiB,CAAEC,SAAS,EAAMC,UAAU,KAGjF,aAAaJ,GACX,IAAIK,EAAW,CAACL,EAAKD,MACjBC,EAAKM,QACPD,EAASE,KAAKP,EAAKM,QAErB,IAAIE,EAAW,wBAAcH,GAC7B,OAAOL,EAAO,WAAWQ,EAAa,UAGxC,mBAAmBC,GACjB,IAAIJ,EAAW,CAACI,EAAGV,MACfU,EAAGH,QACLD,EAASE,KAAKE,EAAGH,QAEnB,IAAIE,EAAW,wBAAcH,GAC7B,OAAOI,EAAK,iBAAiBD,EAAa,gBAG5C,WAAW1B,EAAYL,GACrB,OAAQK,IAAeL,EAGzB,UACE,IAAK,IAAIiC,KAAOC,UACd,GAAMD,IAAQA,EAAIE,cAAgBjC,QAAUA,OAAOkC,QAAQH,GAAKI,OAAS,MAAQC,MAAMC,QAAQN,IAAQA,EAAII,OAAS,GAClH,OAAO,EAGX,OAAO,EAGT,sBACE,OAAO,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAoIfG,eAAeC,OAAO,wCAAyC7C","file":"12.bundle.js","sourcesContent":["import { PolymerElement, html } from \"@polymer/polymer\";\nimport {\n  getBackgroundReference,\n  getCharacterChannel,\n  getRaceReference,\n  getSelectedCharacter,\n} from \"../../../util/charBuilder\";\nimport './dnd-character-builder-suboptions';\nimport { getEditModeChannel, isEditMode } from \"../../../util/editMode\";\nimport { util_capitalizeAll, absInt, initCollapseToggles, encodeForHash } from \"../../../js/utils\"; \n\nclass DndCharacterBuilderBackgroundRace extends PolymerElement {\n  \n  static get properties() {\n    return {\n      selectedBackground: {\n        type: String,\n        value: \"\"\n      },\n      selectedBackgroundRef: {\n        type: Object,\n      },\n      selectedRace: {\n        type: String,\n        value: \"\"\n      },\n      selectedRaceRef: {\n        type: Object,\n      },\n      isEditMode: {\n        type: Boolean,\n        value: false\n      },\n      backgroundName: {\n        type: String,\n        value: ''\n      },\n      raceName: {\n        type: String,\n        value: ''\n      }\n    };\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    this.characterChangeHandler = (e) => {\n      let character = e.detail.character;\n      this.updateFromCharacter(character);\n    };\n    \n    this.updateFromCharacter(getSelectedCharacter());\n    getCharacterChannel().addEventListener(\"character-selected\", this.characterChangeHandler);\n\n    this.editModeHandler = (e) => {\n      this.isEditMode = e.detail.isEditMode;\n    }\n    getEditModeChannel().addEventListener('editModeChange', this.editModeHandler);\n    this.isEditMode = isEditMode();\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n\n    getCharacterChannel().removeEventListener(\"character-selected\", this.characterChangeHandler);\n    getEditModeChannel().removeEventListener('editModeChange', this.editModeHandler);\n  }\n\n  async updateFromCharacter(character) {\n    this.selectedBackground = character.background;\n    this.selectedBackgroundRef = await getBackgroundReference();\n    this.backgroundName = this.selectedBackground.name;\n    this.selectedRace = character.race;\n    this.selectedRaceRef = await getRaceReference();\n    this.raceName = this.selectedRace.name;\n    \n    this.dispatchEvent(new CustomEvent(\"loadingChange\", { bubbles: true, composed: true }));\n  }\n\n  _getRaceLink(race) {\n    let linkData = [race.name];\n    if (race.source) {\n      linkData.push(race.source);\n    }\n    let dataLink = encodeForHash(linkData);\n    return race ? `#/races/${dataLink}` : '#/races'\n  }\n\n  _getBackgroundLink(bg) {\n    let linkData = [bg.name];\n    if (bg.source) {\n      linkData.push(bg.source);\n    }\n    let dataLink = encodeForHash(linkData);\n    return bg ? `#/backgrounds/${dataLink}` : '#/backgrounds'\n  }\n\n  _showEmpty(isEditMode, value) {\n    return !isEditMode && !value;\n  }\n\n  _exists() {\n    for (let arg of arguments) {\n      if (!!arg && (arg.constructor !== Object || Object.entries(arg).length > 0) && (!Array.isArray(arg) || arg.length > 0)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  static get template() {\n    return html`\n      <style include=\"material-styles my-styles\">\n        body {}\n        :host {\n          display: block;\n          padding: 14px;\n        }\n        [hidden] {\n          display: none !important;\n        }\n\n        .col-wrap {\n          display: flex;\n          justify-content: space-between;\n          flex-wrap: wrap;\n          margin-bottom: 200px;\n        }\n\n        .row-wrap {\n          width: 100%;\n        }\n        .row-wrap:first-child {\n          margin-bottom: 24px;\n        }\n\n        .row-wrap > *:not(h2):not(:last-child) {\n          margin-bottom: 10px;\n        }\n\n        .heading {\n          display: flex;\n          flex-direction: row;\n          align-items: center;\n          justify-content: space-between;\n          border-bottom: 1px solid var(--lumo-contrast-10pct);\n        }\n        .reference-link:hover {\n          color: var(--mdc-theme-secondary);\n        }\n\n        .default-selection {\n          font-size: 14px;\n          margin-bottom: 0 !important;\n        }\n\n        .default-selection span {\n          color: var(--mdc-theme-secondary)\n        }\n\n        .missing-text {\n          font-style: italic;\n          font-size: 14px;\n        }\n\n        @media(min-width: 420px) {\n          .heading {\n            justify-content: flex-start;\n          }\n          .reference-link {\n            margin-left: 8px;\n          }\n        }\n\n        @media(min-width: 921px) {\n          .row-wrap {\n            width: calc(50% - 10px);\n          }\n          .row-wrap:first-child {\n            margin-bottom: 0;\n          }\n        }\n\n        h2 {\n          display: block;\n          font-size: 1.5em;\n          margin-block-start: 0.83em;\n          margin-block-end: 0.83em;\n          margin-inline-start: 0px;\n          margin-inline-end: 0px;\n          font-weight: bold;\n        }\n\n        h3 {\n          font-size: 24px;\n          font-weight: bold;\n          margin-bottom: 8px;\n        }\n        .details-container  {\n          background: var(--lumo-contrast-10pct);\n          padding: 14px;\n          border-radius: 4px;\n          font-size: 14px;\n        }\n        .stats-wrapper.margin-bottom_large {\n          margin-bottom: 0px !important;\n        }\n        dnd-select-add {\n          --lumo-font-size-m: 20px;\n          width: 100%;\n        }\n\n        dnd-character-builder-suboptions {\n          display: block;\n          margin-left: 30px;\n        }\n      </style>\n\n      <div class=\"col-wrap\">\n        <div class=\"row-wrap\">\n          <div class=\"heading\">\n            <h2>Race</h2>\n            <a class=\"reference-link mdc-icon-button material-icons\" href=\"[[_getRaceLink(selectedRace)]]\">launch</a>\n          </div>\n          <dnd-select-add model=\"races\" value=\"[[selectedRace]]\" placeholder=\"<Choose Race>\" disabled$=\"[[!isEditMode]]\" hidden$=\"[[_showEmpty(isEditMode, selectedRace)]]\"></dnd-select-add>\n          <div class=\"missing-text\" hidden$=\"[[_exists(selectedRace)]]\">Select Race to add Attribute Bonuses</div>\n          <dnd-character-builder-suboptions storage-key=\"race\" selected-item=\"[[selectedRaceRef]]\"></dnd-character-builder-suboptions>\n        </div>\n\n        <div class=\"row-wrap\">\n          <div class=\"heading\">\n            <h2>Background</h2>\n            <a class=\"mdc-icon-button material-icons\" href=\"[[_getBackgroundLink(selectedBackground)]]\">launch</a>\n          </div>\n          <dnd-select-add model=\"backgrounds\" value=\"[[selectedBackground]]\" placeholder=\"<Choose Background>\" disabled$=\"[[!isEditMode]]\" hidden$=\"[[_showEmpty(isEditMode, selectedBackground)]]\"></dnd-select-add>\n          <div class=\"missing-text\" hidden$=\"[[_exists(selectedBackground)]]\">Select Background to add Skill Proficiencies</div>\n          <dnd-character-builder-suboptions storage-key=\"background\" selected-item=\"[[selectedBackgroundRef]]\"></dnd-character-builder-suboptions>\n        </div>\n      </div>\n    `;\n  }\n}\n\ncustomElements.define(\"dnd-character-builder-background-race\", DndCharacterBuilderBackgroundRace);"],"sourceRoot":""}