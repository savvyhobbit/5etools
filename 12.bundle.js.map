{"version":3,"sources":["webpack:///./components/views/character/dnd-character-builder-background-race.js"],"names":["DndCharacterBuilderBackgroundRace","selectedBackground","type","String","value","backgroundSkillProfOptions","Object","defaultBackgroundSkillProf","selectedRace","raceAttributeOptions","defaultRaceAttribute","isEditMode","Boolean","backgroundName","raceName","super","connectedCallback","this","characterChangeHandler","e","character","detail","updateFromCharacter","addEventListener","editModeHandler","disconnectedCallback","removeEventListener","background","name","race","backgroundSkills","choose","from","backgroundSkillProfChoices","count","backgroundSkillProfSelections","backgroundSkillProficiencies","undefined","map","join","raceAttributes","i","toUpperCase","raceAttributeChoices","raceAttributeSelections","attribute","toLowerCase","mod","shadowRoot","dispatchEvent","CustomEvent","bubbles","composed","skills","attr","linkData","source","push","dataLink","bg","arg","arguments","constructor","entries","length","Array","isArray","customElements","define"],"mappings":"2FAAA,0CAcA,MAAMA,UAA0C,IAE9C,wBACE,MAAO,CACLC,mBAAoB,CAClBC,KAAMC,OACNC,MAAO,IAETC,2BAA4B,CAC1BH,KAAMI,OACNF,MAAO,IAETG,2BAA4B,CAC1BL,KAAMC,OACNC,MAAO,IAETI,aAAc,CACZN,KAAMC,OACNC,MAAO,IAETK,qBAAsB,CACpBP,KAAMI,OACNF,MAAO,IAETM,qBAAsB,CACpBR,KAAMC,OACNC,MAAO,IAETO,WAAY,CACVT,KAAMU,QACNR,OAAO,GAETS,eAAgB,CACdX,KAAMC,OACNC,MAAO,IAETU,SAAU,CACRZ,KAAMC,OACNC,MAAO,KAKb,oBACEW,MAAMC,oBAENC,KAAKC,uBAA0BC,IAC7B,IAAIC,EAAYD,EAAEE,OAAOD,UACzBH,KAAKK,oBAAoBF,IAG3BH,KAAKK,oBAAoB,eACzB,cAAsBC,iBAAiB,qBAAsBN,KAAKC,wBAElED,KAAKO,gBAAmBL,IACtBF,KAAKN,WAAaQ,EAAEE,OAAOV,YAE7B,cAAqBY,iBAAiB,iBAAkBN,KAAKO,iBAC7DP,KAAKN,WAAa,cAGpB,uBACEI,MAAMU,uBAEN,cAAsBC,oBAAoB,qBAAsBT,KAAKC,wBACrE,cAAqBQ,oBAAoB,iBAAkBT,KAAKO,iBAGlE,0BAA0BJ,GACxBH,KAAKhB,mBAAqBmB,EAAUO,WACpCV,KAAKJ,eAAiBI,KAAKhB,mBAAmB2B,KAC9CX,KAAKT,aAAeY,EAAUS,KAC9BZ,KAAKH,SAAWG,KAAKT,aAAaoB,KAElC,IAAIE,QAAyB,cACzBA,GAAoBA,EAAiBC,QACvCd,KAAKZ,2BAA6ByB,EAAiBC,OAAOC,KAC1Df,KAAKgB,2BAA6BH,EAAiBC,OAAOG,OAAS,EACnEjB,KAAKkB,8BAAgCf,EAAUgB,+BAE/CnB,KAAKZ,gCAA6BgC,EAClCpB,KAAKgB,gCAA6BI,EAClCpB,KAAKkB,mCAAgCE,GAEvC,IAAI9B,QAAmC,YAA+BuB,GACtEb,KAAKV,2BAA6BA,EAA2B+B,IAAInB,GAAc,6BAAmBA,IAAMoB,KAAK,MAG7G,IAAIC,QAAuB,cACvBA,GAAkBA,EAAeT,QACnCd,KAAKR,qBAAuB+B,EAAeT,OAAOC,KAAKM,IAAIG,GAAcA,EAAEC,eAC3EzB,KAAK0B,qBAAuBH,EAAeT,OAAOG,OAAS,EAC3DjB,KAAK2B,wBAA0BxB,EAAUoB,iBAEzCvB,KAAKR,0BAAuB4B,EAC5BpB,KAAK0B,0BAAuBN,EAC5BpB,KAAK2B,6BAA0BP,GAEjC,IAAI3B,QAA6B,YAAyB8B,GAC1DvB,KAAKP,qBAAuBA,EACzB4B,IAAInB,IACH,IAAI0B,EAAY1B,EAAE,GAAG2B,cACnBC,EAAM5B,EAAE,GACV,OAAO0B,EAAUH,cAAgB,IAAM,iBAAOK,KAC7CR,KAAK,MAEV,8BAAoBtB,KAAK+B,YAEzB/B,KAAKgC,cAAc,IAAIC,YAAY,gBAAiB,CAAEC,SAAS,EAAMC,UAAU,KAGjF,4BAA4BC,GAC1B,aAAgCA,GAGlC,0BAA0BC,GACxB,aAAkBA,GAGpB,aAAazB,GACX,IAAI0B,EAAW,CAAC1B,EAAKD,MACjBC,EAAK2B,QACPD,EAASE,KAAK5B,EAAK2B,QAErB,IAAIE,EAAW,wBAAcH,GAC7B,OAAO1B,EAAO,WAAW6B,EAAa,UAGxC,mBAAmBC,GACjB,IAAIJ,EAAW,CAACI,EAAG/B,MACf+B,EAAGH,QACLD,EAASE,KAAKE,EAAGH,QAEnB,IAAIE,EAAW,wBAAcH,GAC7B,OAAOI,EAAK,iBAAiBD,EAAa,gBAG5C,WAAW/C,EAAYP,GACrB,OAAQO,IAAeP,EAGzB,UACE,IAAK,IAAIwD,KAAOC,UACd,GAAMD,IAAQA,EAAIE,cAAgBxD,QAAUA,OAAOyD,QAAQH,GAAKI,OAAS,MAAQC,MAAMC,QAAQN,IAAQA,EAAII,OAAS,GAClH,OAAO,EAGX,OAAO,EAGT,sBACE,OAAO,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OA+HfG,eAAeC,OAAO,wCAAyCpE","file":"12.bundle.js","sourcesContent":["import { PolymerElement, html } from \"@polymer/polymer\";\nimport {\n  getCharacterChannel,\n  getSelectedCharacter,\n  getRaceAttributeOptions,\n  getRaceAttributeDefaults,\n  setRaceAttributes,\n  getBackgroundSkillProfOptions,\n  getBackgroundSkillProfDefaults,\n  setBackgroundSkillProficiencies,\n} from \"../../../util/charBuilder\";\nimport { getEditModeChannel, isEditMode } from \"../../../util/editMode\";\nimport { util_capitalizeAll, absInt, initCollapseToggles, encodeForHash } from \"../../../js/utils\"; \n\nclass DndCharacterBuilderBackgroundRace extends PolymerElement {\n  \n  static get properties() {\n    return {\n      selectedBackground: {\n        type: String,\n        value: \"\"\n      },\n      backgroundSkillProfOptions: {\n        type: Object,\n        value: []\n      },\n      defaultBackgroundSkillProf: {\n        type: String,\n        value: \"\"\n      },\n      selectedRace: {\n        type: String,\n        value: \"\"\n      },\n      raceAttributeOptions: {\n        type: Object,\n        value: []\n      },\n      defaultRaceAttribute: {\n        type: String,\n        value: \"\"\n      },\n      isEditMode: {\n        type: Boolean,\n        value: false\n      },\n      backgroundName: {\n        type: String,\n        value: ''\n      },\n      raceName: {\n        type: String,\n        value: ''\n      }\n    };\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    this.characterChangeHandler = (e) => {\n      let character = e.detail.character;\n      this.updateFromCharacter(character);\n    };\n    \n    this.updateFromCharacter(getSelectedCharacter());\n    getCharacterChannel().addEventListener(\"character-selected\", this.characterChangeHandler);\n\n    this.editModeHandler = (e) => {\n      this.isEditMode = e.detail.isEditMode;\n    }\n    getEditModeChannel().addEventListener('editModeChange', this.editModeHandler);\n    this.isEditMode = isEditMode();\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n\n    getCharacterChannel().removeEventListener(\"character-selected\", this.characterChangeHandler);\n    getEditModeChannel().removeEventListener('editModeChange', this.editModeHandler);\n  }\n\n  async updateFromCharacter(character) {\n    this.selectedBackground = character.background;\n    this.backgroundName = this.selectedBackground.name;\n    this.selectedRace = character.race;\n    this.raceName = this.selectedRace.name;\n    // Skills from Background\n    let backgroundSkills = await getBackgroundSkillProfOptions();\n    if (backgroundSkills && backgroundSkills.choose) {\n      this.backgroundSkillProfOptions = backgroundSkills.choose.from;\n      this.backgroundSkillProfChoices = backgroundSkills.choose.count || 1;\n      this.backgroundSkillProfSelections = character.backgroundSkillProficiencies;\n    } else {\n      this.backgroundSkillProfOptions = undefined;\n      this.backgroundSkillProfChoices = undefined;\n      this.backgroundSkillProfSelections = undefined;\n    }\n    let defaultBackgroundSkillProf = await getBackgroundSkillProfDefaults(backgroundSkills);\n    this.defaultBackgroundSkillProf = defaultBackgroundSkillProf.map(e => { return util_capitalizeAll(e) }).join(', ');\n\n    // Attributes from Race\n    let raceAttributes = await getRaceAttributeOptions();\n    if (raceAttributes && raceAttributes.choose) {\n      this.raceAttributeOptions = raceAttributes.choose.from.map(i => { return i.toUpperCase() });\n      this.raceAttributeChoices = raceAttributes.choose.count || 1;\n      this.raceAttributeSelections = character.raceAttributes;\n    } else {\n      this.raceAttributeOptions = undefined;\n      this.raceAttributeChoices = undefined;\n      this.raceAttributeSelections = undefined;\n    }\n    let defaultRaceAttribute = await getRaceAttributeDefaults(raceAttributes);\n    this.defaultRaceAttribute = defaultRaceAttribute\n      .map(e => {\n        let attribute = e[0].toLowerCase(),\n          mod = e[1];\n        return attribute.toUpperCase() + ' ' + absInt(mod);\n      }).join(', ');\n\n    initCollapseToggles(this.shadowRoot);\n    \n    this.dispatchEvent(new CustomEvent(\"loadingChange\", { bubbles: true, composed: true }));\n  }\n\n  _backgroundSkillAddCallback(skills) {\n    setBackgroundSkillProficiencies(skills);\n  }\n\n  _raceAttributeAddCallback(attr) {\n    setRaceAttributes(attr);\n  }\n\n  _getRaceLink(race) {\n    let linkData = [race.name];\n    if (race.source) {\n      linkData.push(race.source);\n    }\n    let dataLink = encodeForHash(linkData);\n    return race ? `#/races/${dataLink}` : '#/races'\n  }\n\n  _getBackgroundLink(bg) {\n    let linkData = [bg.name];\n    if (bg.source) {\n      linkData.push(bg.source);\n    }\n    let dataLink = encodeForHash(linkData);\n    return bg ? `#/backgrounds/${dataLink}` : '#/backgrounds'\n  }\n\n  _showEmpty(isEditMode, value) {\n    return !isEditMode && !value;\n  }\n\n  _exists() {\n    for (let arg of arguments) {\n      if (!!arg && (arg.constructor !== Object || Object.entries(arg).length > 0) && (!Array.isArray(arg) || arg.length > 0)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  static get template() {\n    return html`\n      <style include=\"material-styles my-styles\">\n        body {}\n        :host {\n          display: block;\n          padding: 14px;\n        }\n        [hidden] {\n          display: none !important;\n        }\n\n        .col-wrap {\n          display: flex; \n          justify-content: space-between;\n          flex-wrap: wrap;\n        }\n\n        .row-wrap {\n          width: 100%;\n        }\n        .row-wrap:first-child {\n          margin-bottom: 24px;\n        }\n\n        .row-wrap > *:not(h2):not(:last-child) {\n          margin-bottom: 10px;\n        }\n\n        .heading {\n          display: flex;\n          flex-direction: row;\n          align-items: center;\n          justify-content: space-between;\n        }\n        .reference-link:hover {\n          color: var(--mdc-theme-secondary);\n        }\n\n        .default-selection {\n          font-size: 14px;\n          margin-bottom: 0 !important;\n        }\n\n        .default-selection span {\n          color: var(--mdc-theme-secondary)\n        }\n\n        .missing-text {\n          font-style: italic;\n          font-size: 14px;\n        }\n\n        @media(min-width: 420px) {\n          .heading {\n            justify-content: flex-start;\n          }\n          .reference-link {\n            margin-left: 8px;\n          }\n        }\n\n        @media(min-width: 921px) {\n          .row-wrap {\n            width: calc(50% - 10px);\n          }\n          .row-wrap:first-child {\n            margin-bottom: 0;\n          }\n        }\n\n        h2 {\n          display: block;\n          font-size: 1.5em;\n          margin-block-start: 0.83em;\n          margin-block-end: 0.83em;\n          margin-inline-start: 0px;\n          margin-inline-end: 0px;\n          font-weight: bold;\n        }\n\n        h3 {\n          font-size: 24px;\n          font-weight: bold;\n          margin-bottom: 8px;\n        }\n        .details-container  {\n          background: var(--lumo-contrast-10pct);\n          padding: 14px;\n          border-radius: 4px;\n          font-size: 14px;\n        }\n        .stats-wrapper.margin-bottom_large {\n          margin-bottom: 0px !important;\n        }\n      </style>\n\n      <div class=\"col-wrap\">\n        <div class=\"row-wrap\">\n          <div class=\"heading\">\n            <h2>Race</h2>\n            <a class=\"reference-link mdc-icon-button material-icons\" href=\"[[_getRaceLink(selectedRace)]]\">launch</a>\n          </div>\n          <dnd-select-add model=\"races\" value=\"[[selectedRace]]\" placeholder=\"<Choose Race>\" disabled$=\"[[!isEditMode]]\" hidden$=\"[[_showEmpty(isEditMode, selectedRace)]]\"></dnd-select-add>\n          <div class=\"missing-text\" hidden$=\"[[_exists(raceAttributeOptions, defaultRaceAttribute)]]\">Select Race to add Attribute Bonuses</div>\n          <div hidden$=\"[[!_exists(raceAttributeOptions, defaultRaceAttribute)]]\">Attribute Bonuses from Race:</div>\n          <div hidden$=\"[[!_exists(defaultRaceAttribute)]]\" class=\"default-selection\">Default Attributes: <span>[[defaultRaceAttribute]]</span></div>\n          <dnd-select-add hidden$=\"[[!_exists(raceAttributeOptions)]]\" choices=\"[[raceAttributeChoices]]\" placeholder=\"<Choose Attribute>\" label=\"Chosen Attribute(s)\"\n            options=\"[[raceAttributeOptions]]\" value=\"[[raceAttributeSelections]]\" add-callback=\"[[_raceAttributeAddCallback]]\"></dnd-select-add>\n        </div>\n\n        <div class=\"row-wrap\">\n          <div class=\"heading\">\n            <h2>Background</h2>\n            <a class=\"mdc-icon-button material-icons\" href=\"[[_getBackgroundLink(selectedBackground)]]\">launch</a>\n          </div>\n          <dnd-select-add model=\"backgrounds\" value=\"[[selectedBackground]]\" placeholder=\"<Choose Background>\" disabled$=\"[[!isEditMode]]\" hidden$=\"[[_showEmpty(isEditMode, selectedBackground)]]\"></dnd-select-add>\n          <div class=\"missing-text\" hidden$=\"[[_exists(backgroundSkillProfOptions, defaultBackgroundSkillProf)]]\">Select Background to add Skill Proficiencies</div>\n          <div hidden$=\"[[!_exists(backgroundSkillProfOptions, defaultBackgroundSkillProf)]]\">Skill Proficiencies from Background:</div>\n          <div hidden$=\"[[!_exists(defaultBackgroundSkillProf)]]\" class=\"default-selection\">Default Skills: <span>[[defaultBackgroundSkillProf]]</span></div>\n          <dnd-select-add hidden$=\"[[!_exists(backgroundSkillProfOptions)]]\" choices=\"[[backgroundSkillProfChoices]]\" placeholder=\"<Choose Skills>\" label=\"Chosen Skill(s)\" disabled$=\"[[!isEditMode]]\"\n            options=\"[[backgroundSkillProfOptions]]\" value=\"[[backgroundSkillProfSelections]]\" add-callback=\"[[_backgroundSkillAddCallback]]\"></dnd-select-add>\n        </div>\n      </div>\n    `;\n  }\n}\n\ncustomElements.define(\"dnd-character-builder-background-race\", DndCharacterBuilderBackgroundRace);"],"sourceRoot":""}