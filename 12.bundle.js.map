{"version":3,"sources":["webpack:///./components/dnd-dice.js","webpack:///./components/views/dnd-dice-view.js","webpack:///./js/dice.js"],"names":["super","connectedCallback","this","shadowRoot","customElements","define","onLoad","rootEl","outputEl","querySelector","total","historyIndex","diceField","useNativeValidation","outputRollResult","roll","rollResult","replace","newOutput","rolls","length","join","style","display","addRollHandler","innerHTML","value","classList","add","addEventListener","e","preventDefault","remove","focus","keyCode","which","historyCount","querySelectorAll","getAttribute","click","keyData","originalEvent","data","target","closest"],"mappings":"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","file":"12.bundle.js","sourcesContent":["import {PolymerElement, html} from '@polymer/polymer';\nimport \"./styles/material-styles.js\";\nimport \"./styles/my-styles.js\";\nimport \"./dnd-svg.js\";\nimport { onLoad } from '../js/dice.js';\n\nclass DndDice extends PolymerElement {\n  connectedCallback() {\n    super.connectedCallback();\n    onLoad(this.shadowRoot);\n  }\n\n  static get template() {\n    return html`\n      <style include=\"material-styles my-styles\"></style>\n\n      <div class=\"dice-wrapper\">\n        <div class=\"dice-field-container\">\n          <div class=\"mdc-text-field mdc-text-field--outlined mdc-text-field--with-leading-icon\">\n            <i class=\"material-icons mdc-text-field__icon mdc-theme--primary\">casino</i>\n            <input inputmode=\"numeric\" type=\"tel\" class=\"mdc-text-field__input roll-field\" />\n            <div class=\"mdc-notched-outline\">\n              <div class=\"mdc-notched-outline__leading\"></div>\n              <div class=\"mdc-notched-outline__notch\">\n                <label for=\"search-field\" class=\"mdc-floating-label\">Roll</label>\n              </div>\n              <div class=\"mdc-notched-outline__trailing\"></div>\n            </div>\n          </div>\n          <span class=\"dice-field-label\"\n            >Use period (.) or comma (,) to insert a \"d\".<br />Use space to insert a plus (+).</span\n          >\n          <button class=\"mdc-button mdc-button--raised roll-submit\">\n            <span class=\"mdc-button__label\">Roll!</span>\n          </button>\n          <button class=\"mdc-button mdc-button--raised roll-clear\" style=\"display: none;\">\n            <span class=\"mdc-button__label\">Clear</span>\n          </button>\n\n          <div class=\"roll-total-wrap\" style=\"display: none;\">Total: <span id=\"total\"></span></div>\n          <div id=\"output\"></div>\n        </div>\n\n        <div class=\"dice-list-container\">\n          <div class=\"dice-grid-item roll\" data-roll=\"1d4\">\n            <dnd-svg id=\"d4\" class=\"dice-grid-item--image\"></dnd-svg>\n          </div>\n          <div class=\"dice-grid-item roll\" data-roll=\"1d6\">\n            <dnd-svg id=\"d6\" class=\"dice-grid-item--image\"></dnd-svg>\n          </div>\n          <div class=\"dice-grid-item roll\" data-roll=\"1d8\">\n            <dnd-svg id=\"d8\" class=\"dice-grid-item--image\"></dnd-svg>\n          </div>\n          <div class=\"dice-grid-item roll\" data-roll=\"1d10\">\n            <dnd-svg id=\"d10\" class=\"dice-grid-item--image\"></dnd-svg>\n          </div>\n          <div class=\"dice-grid-item roll\" data-roll=\"1d12\">\n            <dnd-svg id=\"d12\" class=\"dice-grid-item--image\"></dnd-svg>\n          </div>\n          <div class=\"dice-grid-item roll\" data-roll=\"1d20\">\n            <dnd-svg id=\"d20\" class=\"dice-grid-item--image\"></dnd-svg>\n          </div>\n        </div>\n      </div>\n    `;\n  }\n}\n\ncustomElements.define('dnd-dice', DndDice);","import {PolymerElement, html} from '@polymer/polymer';\nimport '../styles/material-styles.js';\nimport '../styles/my-styles.js';\nimport '../dnd-dice';\n\nclass DndDiceView extends PolymerElement {\n  static get template() {\n    return html`\n      <style include=\"material-styles my-styles\"></style>\n\n      <dnd-dice></dnd-dice>\n    `;\n  }\n}\n\ncustomElements.define('dnd-dice-view', DndDiceView);","import { parseHTML, jqPrepend } from './utils.js';\nimport { MDCTextField } from \"@material/textfield\";\nimport { MDCNotchedOutline } from \"@material/notched-outline\";\nimport droll from \"../lib/droll.js\";\n\nfunction onLoad(rootEl) {\n  let outputEl = rootEl.querySelector(\"div#output\");\n  let total = 0,\n  historyIndex = -1;\n  \n  let diceField = new MDCTextField(rootEl.querySelector(\".mdc-text-field\"));\n  new MDCNotchedOutline(rootEl.querySelector(\".mdc-notched-outline\"));\n  \n  diceField.useNativeValidation = false;\n  \n  let outputRollResult = (roll) => {\n    let rollResult = droll.roll(roll.replace(/\\s/g, \"\"));\n    if (rollResult) {\n      let newOutput = parseHTML(`<div>\n        <em><a class='roll' data-roll='${roll}'>${roll}</a></em> rolled for <strong>${rollResult.total}</strong>${rollResult.rolls.length > 1 ? `<br>(${rollResult.rolls.join(\", \")})` : ''}\n        </div>`)\n      \n      jqPrepend(outputEl, newOutput);\n      outputEl.style.display = null;\n      addRollHandler(newOutput);\n\n      total += rollResult.total;\n      rootEl.querySelector('#total').innerHTML = total;\n      rootEl.querySelector(\".roll-total-wrap\").style.display = null;\n      rootEl.querySelector(\".roll-clear\").style.display = null;\n      diceField.value = \"\";\n    } else {\n      rootEl.querySelector(\".dice-field-container .mdc-text-field\").classList.add(\"error\");\n    }\n  };\n  \n  rootEl.querySelector(\".roll-clear\").addEventListener(\"click\", e => {\n    e.preventDefault();\n    \n    historyIndex = -1;\n    outputEl.innerHTML = '';\n    rootEl.querySelector(\".roll-total-wrap\").style.display = 'none';\n    rootEl.querySelector(\".roll-clear\").style.display = \"none\";\n    total = 0;\n  });\n  \n  rootEl.querySelector(\".roll-submit\").addEventListener(\"click\", e => {\n    e.preventDefault();\n    \n    historyIndex = -1;\n    rootEl.querySelector(\".dice-field-container .mdc-text-field\").classList.remove(\"error\");\n    let roll = rootEl.querySelector(\".roll-field\").value;\n    if (roll) {\n      outputRollResult(roll);\n    } else {\n      rootEl.querySelector(\".dice-field-container .mdc-text-field\").classList.add(\"error\");\n    }\n    rootEl.querySelector(\".roll-field\").focus();\n  });\n  \n  rootEl.querySelector(\".roll-field\").addEventListener(\"keydown\", e => {\n    let keyCode = e.keyCode || e.which,\n    historyCount = rootEl.querySelectorAll(\"#output > div\").length;\n    \n    // up\n    if (keyCode === 38) {\n      e.preventDefault();\n      if (historyIndex + 1 < historyCount) {\n        historyIndex++;\n        diceField.value = rootEl.querySelector(`#output div:eq(${historyIndex}) a.roll`).getAttribute(\"data-roll\");\n      }\n      \n      // down\n    } else if (keyCode === 40) {\n      e.preventDefault();\n      if (historyIndex - 1 > -1) {\n        historyIndex--;\n        diceField.value = rootEl.querySelector(`#output div:eq(${historyIndex}) a.roll`).getAttribute(\"data-roll\");\n      }\n      \n      // enter\n    } else if (keyCode === 13) {\n      e.preventDefault();\n      rootEl.querySelector(\".roll-submit\").click();\n      \n      // comma or period\n    } else if (keyCode === 190 || keyCode === 188) {\n      e.preventDefault();\n      diceField.value = diceField.value + \"d\";\n    } else if (keyCode === 32 || keyCode === 189 || keyCode === 187) {\n      e.preventDefault();\n      diceField.value = diceField.value + \" + \";\n    }\n  });\n  rootEl.querySelector(\".roll-field\").addEventListener(\"submit\", e => {\n    e.preventDefault();\n    rootEl.querySelector(\".roll-submit\").click();\n  })\n  rootEl.querySelector(\".roll-field\").addEventListener(\"textInput\", e => {\n    var keyData = e.originalEvent.data;\n    if (keyData && (keyData === \".\" || keyData === \",\")) {\n      e.preventDefault();\n      diceField.value = diceField.value + \"d\";\n    } else if (keyData && (keyData === \" \" || keyData === \"+\")) {\n      e.preventDefault();\n      diceField.value = diceField.value + \"+\";\n    }\n  });\n  rootEl.querySelector(\".roll-field\").addEventListener(\"focus\", e => {\n    rootEl.querySelector(\".dice-field-label\").style.display = null;\n  });\n  rootEl.querySelector(\".roll-field\").addEventListener(\"blur\", e => {\n    rootEl.querySelector(\".dice-field-label\").style.display = 'none';\n  });\n\n  let rolls = rootEl.querySelectorAll(\".roll[data-roll]\");\n  for (let roll of rolls) {\n    addRollHandler(roll);\n  }\n  \n  function addRollHandler(roll) {\n    roll.addEventListener(\"click\", e => {\n      e.preventDefault();\n\n      let roll = e.target.closest(\".roll\").getAttribute(\"data-roll\");\n      if (roll) {\n        outputRollResult(roll);\n      }\n    });\n  }\n};\n\nexport { onLoad };"],"sourceRoot":""}