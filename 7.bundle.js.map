{"version":3,"sources":["webpack:///./components/dnd-select-add.js","webpack:///./components/dnd-button.js","webpack:///./components/dnd-asi-select.js","webpack:///./data/choices.js","webpack:///./components/views/character/dnd-character-builder-class.js"],"names":["DndSelectAdd","test","type","Boolean","reflectToAttribute","value","options","Array","observer","model","String","addCallback","Function","choices","Number","label","placeholder","multiValue","disabled","this","listBox","remove","$","select","render","isArray","choiceArray","map","v","indexOf","findIndex","o","name","source","filter","selectedValues","i","join","super","ready","setTimeout","async","renderer","root","document","createElement","setAttribute","addEventListener","e","opened","wasPreviouslySelected","srcElement","getAttribute","length","splice","selectedOptions","option","item","textContent","appendChild","_assignMenuElement","valueUpdated","connectedCallback","selectChangeHandler","val","selected","undefined","disconnectedCallback","removeEventListener","a","customElements","define","DndButton","icon","svg","background","border","svgFill","svgStroke","button","result","fill","stroke","levelIndex","checked","selectedFeat","Object","selectedAbility1","selectedAbility2","featHasAttributeChoice","featAttributeSelection","featAttributeOptions","attributeOptions","switchChangeHandler","detail","_genASICallback","characterChangeHandler","character","updateFromCharacter","asi","index","feat","ability1","ability2","isFeat","featId","featRef","ability","choose","from","toUpperCase","featAttributeSelections","asiIndex","keyForChange","newVal","classOptionsMap","class","2","count","5","10","15","20","4","7","11","19","artificer","6","14","18","barbarian","subclasses","3","bard","paladin","sorcerer","17","1","levels","classes","noContentMessage","isEditMode","editModeHandler","classGrid","notifyResize","grid","draggedItem","rowDetailsRenderer","rowData","renderStack","features","_getClassLevelFeatures","firstElementChild","innerHTML","feature","recursiveEntryRender","deets","querySelector","bind","draggedItems","dropMode","dropTargetItem","items","dropIndex","dropLocation","JSON","parse","stringify","classChoices","_findLevelChoices","dispatchEvent","CustomEvent","bubbles","composed","hitDiceMaxes","push","clearCache","className","classRef","classFeatures","levelsInClass","levelsInSubclass","classFeaturesForLevel","find","gainSubclassFeature","some","subclassDef","subclassFeatures","isSubclass","concat","classLevelFeatures","f","__data","data","stayClosed","detailsOpenedItems","closeItemDetails","openItemDetails","levelChoices","_findChoices","classDef","classLevelCount","subclassChoiceLevel","id","selections","classSkillOptions","startingProficiencies","skills","classSkillProficiencies","classOptions","toLowerCase","classLevelOptions","classLevelOption","level","subclassLevelOptions","subclassLevelOption","subclass","b","classs","choice","adjChoice","c","window","innerWidth","obj","values","replace","element","target","closest","isOpen","classList","contains","intField","parseInt","dataset","max","changeVal","toggle","add","focus","maxes"],"mappings":"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","file":"7.bundle.js","sourcesContent":["import { PolymerElement, html } from '@polymer/polymer';\nimport { mergeFeature } from '../util/charBuilder';\nimport { jqEmpty, util_capitalizeAll } from \"../js/utils\";\nimport \"@vaadin/vaadin-select\";\nimport {loadModel} from \"../util/data\";\n\nclass DndSelectAdd extends PolymerElement {\n  static get properties() {\n    return {\n      test: {\n        type: Boolean,\n        reflectToAttribute: true,\n        value: false\n      },\n      options: {\n        type: Array,\n        observer: \"optionsUpdated\"\n      },\n      model: {\n        type: String\n      },\n      addCallback: {\n        type: Function\n      },\n      value: {\n        type: String,\n        value: \"\",\n        observer: \"valueUpdated\"\n      },\n      choices: {\n        type: Number,\n        observer: \"choicesUpdated\"\n      },\n      label: {\n        type: String\n      },\n      placeholder: {\n        type: String,\n      },\n      multiValue: {\n        type: String,\n        value: \"\"\n      },\n      disabled: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      }\n    }\n  }\n\n  choicesUpdated() {\n    if (this.listBox) {\n      this.listBox.remove();\n      delete this.listBox;\n    }\n    this.$.select.render();\n  }\n\n  optionsUpdated() {\n    if (this.listBox) {\n      this.listBox.remove();\n      delete this.listBox;\n    }\n    this.$.select.render();\n  }\n\n  valueUpdated() {\n    if (this.choices) {\n      if (Array.isArray(this.value) && this.options) {\n        const choiceArray = this.value\n          .map(v => {\n            if (this.options.indexOf(v) !== -1) {\n              return this.options.indexOf(v);\n            } else {\n              return this.options.findIndex((o) => {\n                return o.name === v.name && o.source === v.source;\n              });\n            }\n          })\n          .filter(v => { return v !== -1 });\n\n        if (this.listBox) {\n          this.listBox.selectedValues = choiceArray;\n        }\n        this.multiValue = choiceArray.map(i => {\n          let value = this.options[i];\n          return value.name ? value.name : util_capitalizeAll(value) \n        }).join(\", \");\n      } else {\n        if (this.listBox) {\n          this.listBox.selectedValues = [];\n        }\n        this.multiValue = \"\";\n      }\n    } else {\n      if (this.value && this.options) {\n        if (this.value.source) {\n          this.$.select.value = this.options.findIndex(i => { return i.name === this.value.name && i.source === this.value.source || i === this.value.name }) + \"\";\n        } else if (this.value.name) {\n          this.$.select.value = this.options.findIndex(i => { return i.name === this.value.name || i === this.value.name }) + \"\";\n        } else {\n          this.$.select.value = this.options.findIndex(i => { return i.name === this.value || i === this.value }) + \"\";\n        }\n      } else {\n        this.$.select.value = \"\";\n      }\n    }\n  }\n\n  ready() {\n    super.ready();\n\n    setTimeout(async () => {\n      if (this.model) {\n        this.options = await loadModel(this.model);\n      }\n\n      this.$.select.renderer = (root, select) => {\n        if (!this.listBox) {\n          this.listBox = document.createElement('vaadin-list-box');\n\n          // setting up for multi-select\n          if (this.choices) {\n            this.listBox.setAttribute(\"multiple\", true);\n\n            this.listBox.addEventListener(\"click\", (e) => {\n              select.opened = true;\n              let wasPreviouslySelected = e.srcElement.getAttribute(\"selected\") !== null\n              setTimeout(() => {\n                if (this.listBox.selectedValues.length > this.choices\n                    && !wasPreviouslySelected) {\n                  this.listBox.selectedValues.splice(this.listBox.selectedValues.length - 2, 1)\n                }\n                let selectedOptions = this.listBox.selectedValues.map(v => { return this.options[v] });\n                this.multiValue = selectedOptions.map(o => { return o.name ? o.name : util_capitalizeAll(o) }).join(', ');\n                if (this.addCallback) {\n                  this.addCallback(selectedOptions);\n                }\n              }, 0);\n            });\n\n          }\n\n          // Adding options\n          if (this.options && this.options.length) {\n            for (let i = 0; i < this.options.length; i ++) {\n              const option = this.options[i],\n                item = document.createElement('vaadin-item');\n              if (option.name) {\n                item.textContent = option.name;\n                item.setAttribute(\"value\", i);\n              } else {\n                item.textContent = util_capitalizeAll(option);\n                item.setAttribute(\"value\", i);\n              }\n              this.listBox.appendChild(item);\n            }\n          }\n          root.appendChild(this.listBox);\n          this.$.select._assignMenuElement();\n\n          this.valueUpdated();\n        }\n      };\n    }, 0);\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    this.selectChangeHandler = () => {\n      const val = this.$.select.value;\n      if (val) {\n        if (!this.choices) {\n          const selected = this.options[val];\n          if (this.addCallback) {\n            this.addCallback(selected, this.model);\n          } else {\n            mergeFeature(undefined, selected, this.model);\n          }\n          if (!this.value) {\n            this.$.select.value = \"\";\n          }\n        }\n      }\n    };\n\n    this.$.select.addEventListener(\"change\", this.selectChangeHandler);\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n\n    this.$.select.removeEventListener(\"change\", this.selectChangeHandler);\n  }\n\n  _exists(a) {\n    return !!a;\n  }\n\n  _label(label, choices) {\n    if (label) {\n      if (choices) {\n        return `${label} (${choices})`;\n      } else {\n        return label;\n      }\n    }\n  }\n  \n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: inline-block;\n        }\n        [slot=\"prefix\"] {\n          width: calc(100% - 46px);\n          padding: 12px;\n          line-height: 1.4;\n        }\n        vaadin-select {\n          width: 100%;\n        }\n        .prefix {\n          white-space: normal;\n          color: var(--lumo-body-text-color);\n        }\n      </style>\n      <vaadin-select test$=\"[[test]]\" theme=\"dark\" add id=\"select\" label=\"[[_label(label, choices)]]\" placeholder=\"[[placeholder]]\" disabled$=\"[[disabled]]\">\n        <div hidden$=\"[[!_exists(multiValue)]]\" slot=\"prefix\">\n          <span class=\"prefix\">[[multiValue]]</span>\n        </div>\n      </vaadin-select>\n    `;\n  }\n}\ncustomElements.define('dnd-select-add', DndSelectAdd);","import { PolymerElement, html } from '@polymer/polymer';\nimport { MDCRipple } from '@material/ripple';\nimport { } from '@polymer/polymer/lib/elements/dom-if.js';\nimport \"./dnd-svg\";\n\nclass DndButton extends PolymerElement {\n  static get properties() {\n    return {\n      label: {\n        type: String,\n        value: ''\n      },\n      icon: {\n        type: String,\n        value: ''\n      },\n      svg: {\n        type: String,\n        value: ''\n      },\n      background: {\n        type: String,\n        value: ''\n      },\n      border: {\n        type: String,\n        value: ''\n      },\n      svgFill: {\n        type: String,\n        value: ''\n      },\n      svgStroke: {\n        type: String,\n        value: ''\n      }\n    }\n  }\n\n  connectedCallback() {\n    setTimeout(()=> {\n      this.button = new MDCRipple(this.$.button);\n    }, 10)\n  }\n\n  _exists(i) {\n    return !!i;\n  }\n\n  _styleStr(background, border) {\n    let result = '';\n    if (background) {\n      result+= `background: ${background}; `\n    }\n    if (border) {\n      result+= `border: ${border}; `\n    }\n    return result;\n  }\n\n  _svgStyleStr(fill, stroke) {\n    let result = '';\n    if (fill) {\n      result+= `fill: ${fill}; `\n    }\n    if (stroke) {\n      result+= `stroke: ${stroke}; `\n    }\n    return result;\n  }\n\n  static get template() {\n    return html`\n      <style include=\"material-styles\">\n        .mdc-tab-scroller__scroll-area--scroll {\n          overflow-x: auto;\n          background-color: var(--mdc-theme-surface);\n          border: 1px solid var(--mdc-theme-text-divider-on-background);\n          border-bottom: none;\n        }\n        :host {\n          display: inline;\n          overflow: hidden;\n          white-space: nowrap;\n        }\n        .mdc-button {\n          display: inline-flex;\n          justify-content: center;\n          align-items: center;\n          width: 100%;\n        }\n        .mdc-button .mdc-button__icon {\n          margin-right: 0px;\n          margin-left: 8px;\n        }\n        .mdc-button [background] {\n          background: var(--lumo-contrast-10pct);\n        }\n        dnd-svg {\n          height: 20px;\n          width: 20px;\n          flex-shrink: 0;\n          flex-grow: 0;\n          padding-left: 8px;\n          fill: var(--mdc-theme-primary);\n          stroke: var(--mdc-theme-primary);\n        }\n        i {\n          flex-shrink: 0;\n          flex-grow: 0;\n        }\n\n        \n        :host(.btn-field__btn) dnd-svg {\n          padding-left: 0;\n        }\n        :host(.btn-field__btn) i {\n          margin-left: 0;\n        }\n\n        :host(.icon-only) dnd-svg {\n          margin-left: -24px;\n          padding-left: 0;\n        }\n        :host(.icon-only) i {\n          margin-left: -18px;\n          padding-left: 0;\n        }\n\n        :host(.link) .mdc-button__label {\n          text-transform: none;\n          color: var(--lumo-body-text-color);\n          letter-spacing: normal;\n        }\n        :host(.link) i {\n          color: var(--lumo-body-text-color);\n        }\n        :host(.link) button:hover::before {\n          background: none;\n        }\n        :host(.link) button:hover i,\n        :host(.link) button:hover .mdc-button__label {\n          color: var(--mdc-theme-secondary);\n        }\n      </style>\n      <button id=\"button\" class=\"mdc-button\" style$=\"[[_styleStr(background, border)]]\">\n        <div class=\"mdc-button__ripple\"></div>\n        <span class=\"mdc-button__label\">[[label]]</span>\n        <slot name=\"label\"></slot>\n        <template is=\"dom-if\" if=\"[[_exists(icon)]]\">\n          <i class=\"material-icons mdc-button__icon\" aria-hidden=\"true\">[[icon]]</i>\n        </template>\n        <template is=\"dom-if\" if=\"[[_exists(svg)]]\">\n          <dnd-svg id=\"[[svg]]\" style$=\"[[_svgStyleStr(svgFill, svgStroke)]]\"></dnd-svg>\n        </template>\n      </button>\n    `;\n  }\n\n}\ncustomElements.define('dnd-button', DndButton);","import { PolymerElement, html } from \"@polymer/polymer\";\nimport { getSelectedCharacter, getASIForLevel, getCharacterChannel, setASI, getFeatReference, setFeatAttributeSelection } from \"../util/charBuilder\";\n\nclass DndAsiSelect extends PolymerElement {\n  \n  static get properties() {\n    return {\n      levelIndex: {\n        type: Number\n      },\n      checked: {\n        type: Boolean,\n        value: false\n      },\n      selectedFeat: {\n        type: Object\n      },\n      selectedAbility1: {\n        type: String,\n        value: ''\n      },\n      selectedAbility2: {\n        type: String,\n        value: ''\n      },\n      featHasAttributeChoice: {\n        type: Boolean,\n        value: false\n      },\n      featAttributeSelection: {\n        type: String,\n        value: ''\n      },\n      featAttributeOptions: {\n        type: Array,\n        value: []\n      },\n      disabled: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      }\n    };\n  }\n\n  constructor() {\n    super();\n    this.attributeOptions = [\n      \"STR\",\n      \"DEX\",\n      \"CON\",\n      \"INT\",\n      \"WIS\",\n      \"CHA\"\n    ]\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    this.switchChangeHandler = (e) => {\n      this.checked = e.detail.checked;\n      this._genASICallback()();\n    }\n    this.addEventListener(\"switch-change\", this.switchChangeHandler);\n\n    this.characterChangeHandler = (e) => {\n      let character = e.detail.character;\n      this.updateFromCharacter(character);\n    };\n    \n    this.updateFromCharacter(getSelectedCharacter());\n    getCharacterChannel().addEventListener(\"character-selected\", this.characterChangeHandler);\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n\n    this.removeEventListener(\"switch-change\", this.switchChangeHandler);\n    getCharacterChannel().removeEventListener(\"character-selected\", this.characterChangeHandler);\n  }\n\n  async updateFromCharacter(character) {\n    const { asi, index } = await getASIForLevel(this.levelIndex, character);\n\n    this.featHasAttributeChoice = false;\n    if (asi) {\n      this.selectedFeat = asi.feat;\n      this.selectedAbility1 = asi.ability1;\n      this.selectedAbility2 = asi.ability2;\n      this.checked = asi.isFeat;\n\n      if (asi.isFeat && asi.feat && asi.feat.name && asi.feat.source) {\n        const featId = `${asi.feat.name}_${asi.feat.source}`;\n        const featRef = await getFeatReference(featId);\n\n        if (featRef.ability && featRef.ability.length && featRef.ability[0].choose) {\n          this.featHasAttributeChoice = true;\n          this.featAttributeOptions = featRef.ability[0].choose.from.map(i => { return i.toUpperCase() });\n          this.featAttributeSelection = character.featAttributeSelections && character.featAttributeSelections[featId] \n            ? character.featAttributeSelections[featId] : '';\n        }\n      }\n    } else {\n      this.selectedFeat = { name: '', source: '' };\n      this.selectedAbility1 = '';\n      this.selectedAbility2 = '';\n      this.checked = false;\n    }\n    this.asiIndex = index;\n  }\n\n  _genASICallback(keyForChange) {\n    return (newVal) => {\n      setASI({\n        feat: keyForChange === 'feat' ? { name: newVal.name, source: newVal.source } : this.selectedFeat,\n        ability1: keyForChange === 'ability1' ? newVal : this.selectedAbility1,\n        ability2: keyForChange === 'ability2' ? newVal : this.selectedAbility2,\n        isFeat: this.checked\n      }, this.asiIndex);\n    }\n  }\n\n  _genFeatAbilityCallback() {\n    return (newVal) => {\n      if (this.selectedFeat && this.selectedFeat.name && this.selectedFeat.source) {\n        const featId = `${this.selectedFeat.name}_${this.selectedFeat.source}`;\n        setFeatAttributeSelection(featId, newVal);\n      }\n    }\n  }\n\n  _disableLabel(checked) {\n    return checked ? 'Feat' : 'ASI';\n  }\n\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: flex;\n          flex-direction: column;\n          max-width: 192px;\n        }\n        [hidden] {\n          display: none !important;\n        }\n        .abilities {\n          display: flex;\n          flex-wrap: wrap;\n        }\n        .abilities dnd-select-add {\n          width: calc(50% - 8px);\n        }\n        dnd-select-add + dnd-select-add {\n          margin-left: 16px;\n        }\n        dnd-select-add {\n          display: block;\n        }\n        .disable-label {\n          font-size: 14px;\n          font-weight: 500;\n          color: var(--mdc-theme-primary);\n        }\n      </style>\n\n      <div class=\"disable-label\" hidden$=\"[[!disabled]]\">[[_disableLabel(checked)]]</div>\n      <dnd-switch initial-value=[[checked]] label=\"ASI\" secondary-label=\"Feat\" disabled$=\"[[disabled]]\" hidden$=\"[[disabled]]\"></dnd-switch>\n      <div class=\"abilities\" hidden$=[[checked]]>\n        <dnd-select-add add-callback=\"[[_genASICallback('ability1')]]\" value=\"[[selectedAbility1]]\" options=\"[[attributeOptions]]\" placeholder=\"<ASI>\" disabled$=\"[[disabled]]\"></dnd-select-add>\n        <dnd-select-add add-callback=\"[[_genASICallback('ability2')]]\" value=\"[[selectedAbility2]]\" options=\"[[attributeOptions]]\" placeholder=\"<ASI>\" disabled$=\"[[disabled]]\"></dnd-select-add>\n      </div>\n      <div hidden$=[[!checked]]>\n        <dnd-select-add add-callback=\"[[_genASICallback('feat')]]\" model=\"feats\" value=\"[[selectedFeat.name]]\" placeholder=\"<Choose Feat>\" disabled$=\"[[disabled]]\"></dnd-select-add>\n      </div>\n      <div hidden$=[[!featHasAttributeChoice]]>\n        <dnd-select-add test add-callback=\"[[_genFeatAbilityCallback()]]\" value=\"[[featAttributeSelection]]\" options=\"[[featAttributeOptions]]\" placeholder=\"<Choose Attribute>\" disabled$=\"[[disabled]]\"></dnd-select-add>\n      </div>\n    `;\n  }\n}\n\ncustomElements.define(\"dnd-asi-select\", DndAsiSelect);","export const classOptionsMap = {\n  \"artificer(ua)\": {\n    class: {\n      2: {\n        name: \"Wonderous Invention\",\n        count: 1,\n        options: [\"{@item Bag of holding}\", \"{@item cap of water breathing}\", \"{@item driftglobe}\", \"{@item goggles of night}\", \"{@item sending stones}\"]\n      },\n      5: {\n        name: \"Wonderous Invention\",\n        count: 1,\n        options: [\"{@item Alchemy jug}\", \"{@item helm of comprehending languages}\", \"{@item lantern of revealing}\", \"{@item ring of swimming}\", \"{@item robe of useful items}\", \"{@item rope of climbing}\", \"{@item wand of magic detection}\", \"{@item wand of secrets}\", \"{@item Bag of holding}\", \"{@item cap of water breathing}\", \"{@item driftglobe}\", \"{@item goggles of night}\", \"{@item sending stones}\"]\n      },\n      10: {\n        name: \"Wonderous Invention\",\n        count: 1,\n        options: [\"{@item Bag of beans}\", \"{@item chime of opening}\", \"{@item decanter of endless water}\", \"{@item eyes of minute seeing}\", \"{@item folding boat}\", \"{@item Heward's handy haversack}\", \"{@item Alchemy jug}\", \"{@item helm of comprehending languages}\", \"{@item lantern of revealing}\", \"{@item ring of swimming}\", \"{@item robe of useful items}\", \"{@item rope of climbing}\", \"{@item wand of magic detection}\", \"{@item wand of secrets}\", \"{@item Bag of holding}\", \"{@item cap of water breathing}\", \"{@item driftglobe}\", \"{@item goggles of night}\", \"{@item sending stones}\"]\n      },\n      15: {\n        name: \"Wonderous Invention\",\n        count: 1,\n        options: [\"{@item Boots of striding and springing}\", \"{@item bracers of archery}\", \"{@item brooch of shielding}\", \"{@item broom of flying}\", \"{@item hat of disguise}\", \"{@item slippers of spider climbing}\", \"{@item Bag of beans}\", \"{@item chime of opening}\", \"{@item decanter of endless water}\", \"{@item eyes of minute seeing}\", \"{@item folding boat}\", \"{@item Heward's handy haversack}\", \"{@item Alchemy jug}\", \"{@item helm of comprehending languages}\", \"{@item lantern of revealing}\", \"{@item ring of swimming}\", \"{@item robe of useful items}\", \"{@item rope of climbing}\", \"{@item wand of magic detection}\", \"{@item wand of secrets}\", \"{@item Bag of holding}\", \"{@item cap of water breathing}\", \"{@item driftglobe}\", \"{@item goggles of night}\", \"{@item sending stones}\"]\n      },\n      20: {\n        name: \"Wonderous Invention\",\n        count: 1,\n        options: [\"{@item Eyes of the eagle}\", \"{@item gem of brightness}\", \"{@item gloves of missile snaring}\", \"{@item gloves of swimming and climbing}\", \"{@item ring of jumping}\", \"{@item ring of mind shielding}\", \"{@item wings of flying}\", \"{@item Boots of striding and springing}\", \"{@item bracers of archery}\", \"{@item brooch of shielding}\", \"{@item broom of flying}\", \"{@item hat of disguise}\", \"{@item slippers of spider climbing}\", \"{@item Bag of beans}\", \"{@item chime of opening}\", \"{@item decanter of endless water}\", \"{@item eyes of minute seeing}\", \"{@item folding boat}\", \"{@item Heward's handy haversack}\", \"{@item Alchemy jug}\", \"{@item helm of comprehending languages}\", \"{@item lantern of revealing}\", \"{@item ring of swimming}\", \"{@item robe of useful items}\", \"{@item rope of climbing}\", \"{@item wand of magic detection}\", \"{@item wand of secrets}\", \"{@item Bag of holding}\", \"{@item cap of water breathing}\", \"{@item driftglobe}\", \"{@item goggles of night}\", \"{@item sending stones}\"]\n      }\n    }\n  },\n  \"artificer (revisited)\": {\n    class: {\n      2: {\n        name: \"Infuse Item\",\n        count: 3,\n        type: \"featureType=ai|source=UAArtificerRevisited\"\n      },\n      4: {\n        name: \"Infuse Item\",\n        count: 1,\n        type: \"featureType=ai|source=UAArtificerRevisited\"\n      },\n      7: {\n        name: \"Infuse Item\",\n        count: 1,\n        type: \"featureType=ai|source=UAArtificerRevisited\"\n      },\n      11: {\n        name: \"Infuse Item\",\n        count: 1,\n        type: \"featureType=ai|source=UAArtificerRevisited\"\n      },\n      15: {\n        name: \"Infuse Item\",\n        count: 1,\n        type: \"featureType=ai|source=UAArtificerRevisited\"\n      },\n      19: {\n        name: \"Infuse Item\",\n        count: 1,\n        type: \"featureType=ai|source=UAArtificerRevisited\"\n      }\n    }\n  },\n  artificer: {\n    class: {\n      2: {\n        name: \"Infuse Item\",\n        count: 4,\n        type: \"featureType=ai|source=ERLW\"\n      },\n      6: {\n        name: \"Infuse Item\",\n        count: 2,\n        type: \"featureType=ai|source=ERLW\"\n      },\n      10: {\n        name: \"Infuse Item\",\n        count: 2,\n        type: \"featureType=ai|source=ERLW\"\n      },\n      14: {\n        name: \"Infuse Item\",\n        count: 2,\n        type: \"featureType=ai|source=ERLW\"\n      },\n      18: {\n        name: \"Infuse Item\",\n        count: 2,\n        type: \"featureType=ai|source=ERLW\"\n      }\n    }\n  },\n  barbarian: {\n    subclasses: {\n      \"Path of the Totem Warrior\": {\n        3: {\n          name: \"Totem Spirit\",\n          count: 1,\n          options: [\"Bear\", \"Eagle\", \"Elk\", \"Wolf\", \"Tiger\"]\n        },\n        6: {\n          name: \"Aspect of the Beast\",\n          count: 1,\n          options: [\"Bear\", \"Eagle\", \"Elk\", {\n            name: \"Tiger\",\n            options: [\"athletics\", \"acrobatics\", \"stealth\", \"survival\"],\n            choose: 2,\n            type: \"proficiency\"\n          }, \"Wolf\"]\n        },\n        14: {\n          name: \"Totemic Attunement\",\n          count: 1,\n          options: [\"Bear\", \"Eagle\", \"Elk\", \"Tiger\", \"Wolf\"]\n        }\n      }\n    }\n  },\n  bard: {\n    subclasses: {\n      \"College of Swords\": {\n        3: {\n          name: \"Fighting Style\",\n          count: 1,\n          type: \"fs:b\"\n        }\n      }\n    }\n  },\n  paladin: {\n    class: {\n      2: {\n        name: \"Fighting Style\",\n        type: \"fs:p\",\n        count: 1\n      },\n    }\n  },\n  sorcerer: {\n    class: {\n      3: {\n        name: \"Metamagic\",\n        type: \"mm\",\n        count: 2\n      },\n      10: {\n        name: \"Metamagic\",\n        type: \"mm\",\n        count: 1\n      },\n      17: {\n        name: \"Metamagic\",\n        type: \"mm\",\n        count: 1\n      }\n    },\n    subclasses: {\n      \"Divine Soul\": {\n        1: [\n          {\n            name: \"Divine Magic Affinity\",\n            options: [\"Good (Cure Wounds)\", \"Evil (Inflict Wounds)\", \"Law (Bless)\", \"Chaos (Bane)\", \"Neutrality (Protection From Good and Evil\"],\n            count: 1\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport const proficiencyGains = {\n  classes: {\n    \"artificer(ua)\": {\n      subclasses: {\n        \"Gunsmith\": {\n          1: {\n            name: \"Master Smith\",\n            value: \"{@item smith's tools|phb}\"\n          }\n        }\n      }\n    },\n    \"Artificer (Revisited)\": {\n      subclasses: {\n        \"Alchemist\": {\n          3: {\n            name: \"Tools of the Trade\",\n            value: [\"{@item alchemist's supplies|phb}\", \"{@item herbalism kit|phb}\"]\n          }\n        },\n        \"Archivist\": {\n          3: {\n            name: \"Tools of the Trade\",\n            value: [\"{@item calligrapher's supplies|phb}\", \"{@item forgery kit|phb}\"]\n          }\n        },\n        \"Artillerist\": {\n          3: {\n            name: \"Tools of the Trade\",\n            value: [\"{@item smith's tools|phb}\", \"{@item woodcarver's tools|phb}\"]\n          }\n        },\n        \"Battle Smith\": {\n          3: [\n            {\n              name: \"Tools of the Trade\",\n              value: [\"{@item leatherworker's tools|phb}\", \"{@item smith's tools|phb}\"]\n            }, \n            {\n              name: \"Battle Ready\",\n              value: \"martial weapons\"\n            }\n          ]\n        }\n      }\n    },\n    artificer: {\n      subclasses: {\n        \"Alchemist\": {\n          3: {\n            name: \"Tool Proficiency\",\n            value: \"alchemist's supplies\",\n            orOther: true,\n            type: \"artisan's tools\"\n          }\n        },\n        \"Artillerist\": {\n          3: {\n            name: \"Tool Proficiency\",\n            value: \"woodcarver's supplies\"\n          }\n        },\n        \"Battle Smith\": {\n          3: [\n            {\n              name: \"Tool Proficiency\",\n              value: \"smith's supplies\"\n            },\n            {\n              name: \"Battle Ready\",\n              value: \"martial weapons\"\n            }\n          ]\n        },\n        \"Armorer (UA)\": {\n          3: {\n            name: \"Tricks of the Trade\",\n            value: [\"heavy armor\", \"smith's tools\"]\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const spellGains = {\n  classes: {\n    \"artificer(ua)\": {\n      subclasses: {\n        \"Gunsmith\": {\n          1: {\n            name: \"\",\n            value: \"mending\"\n          }\n        }\n      }\n    },\n    \"Artificer (Revisited)\": {\n      subclasses: {\n        \"Alchemist\": {\n          14: {\n            name: \"Chemical Savant\",\n            value: \"greater restoration\",\n            noSlot: true,\n            noMaterial: true,\n            recharge: \"long rest\"\n          }\n        }\n      }\n    },\n    \"artificer\": {\n      subclasses: {\n        \"Alchemist\": {\n          14: {\n            name: \"Chemical Mastery\",\n            value: [\"greater restoration\", \"heal\"],\n            noSlot: true,\n            noMaterial: true,\n            recharge: \"long rest\"\n          }\n        }\n      }\n    },\n    barbarian: {\n      subclasses: {\n        \"Path of the Totem Warrior\": {\n          3: {\n            name: \"Spirit Seeker\",\n            value: [\"beast sense\", \"speak with animals\"],\n            ritualOnly: true,\n            noSlot: true\n          }\n        },\n        \"Path of the Ancestral Guardian v2 (UA)\": {\n          10: {\n            name: \"Consult the Spirits\",\n            value: \"clairvoyance\",\n            noSlot: true\n          }\n        },\n        \"Path of the Ancestral Guardian\": {\n          10: {\n            name: \"Consult the Spirits\",\n            value: [\"augury\", \"clairvoyance\"],\n            noSlot: true,\n            noMaterial: true,\n            recharge: \"short rest\"\n          }\n        },\n        \"Path of the Wild Soul (UA)\": {\n          3: {\n            name: \"Lingering Magic\",\n            value: \"detect magic\",\n            noSlot: true,\n            noMaterial: true,\n            recharge: \"long rest\",\n            charges: \"con\"\n          }\n        }\n      }\n    },\n    bard: {\n      subclasses: {\n        \"College of Lore\": {\n          6: {\n            name: \"\",\n            count: 2,\n            list: \"any\"\n          }\n        }\n      },\n      class: {\n        10: {\n          name: \"Magical Secrets\",\n          count: 2,\n          list: \"any\"\n        },\n        14: {\n          name: \"\",\n          count: 2,\n          list: \"any\"\n        },\n        18: {\n          name: \"\",\n          count: 2,\n          list: \"any\"\n        }\n      }\n    }\n  }\n};\n\nexport const expertiseClasses = {\n  \"artificer(ua)\": {\n    2: {\n      name: \"Tool Expertise\",\n      type: \"artificier-tools\"\n    }\n  },\n  \"Artificer (Revisited)\": {\n    3: {\n      name: \"Tool Expertise\",\n      type: \"artificier-tools\"\n    }\n  },\n  \"Artificer\": {\n    6: {\n      name: \"Tool Expertise\",\n      type: \"artificier-tools\"\n    }\n  },\n  bard: {\n    3: 2,\n    10: 2\n  }\n};\n\nexport const itemGains = {\n  \"Artificer (Revisited)\": {\n    subclasses: {\n      \"Alchemist\": {\n        3: {\n          name: \"Tools of the Trade\",\n          value: [\"{@item alchemist's supplies|phb}\", \"{@item herbalism kit|phb}\"]\n        }\n      },\n      \"Archivist\": {\n        3: {\n          name: \"Tools of the Trade\",\n          value: [\"{@item calligrapher's supplies|phb}\", \"{@item forgery kit|phb}\"]\n        }\n      },\n      \"Artillerist\": {\n        3: {\n          name: \"Tools of the Trade\",\n          value: [\"{@item smith's tools|phb}\", \"{@item woodcarver's tools|phb}\", \"a nonmagical, wooden wand\"]\n        }\n      },\n      \"Battle Smith\": {\n        3: {\n          name: \"Tools of the Trade\",\n          value: [\"{@item leatherworker's tools|phb}\", \"{@item smith's tools|phb}\"]\n        }\n      }\n    }\n  }\n};\n\nexport const resistanceGains = {\n  class: {\n    \"Artificer (Revisited)\": {\n      subclasses: {\n        \"Alchemist\": {\n          14: [\n            {\n              name: \"Chemical Savant\",\n              level: \"resistance\",\n              type: \"damage\",\n              value: \"acid\"\n            },\n            {\n              name: \"Chemical Savant\",\n              level: \"resistance\",\n              type: \"damage\",\n              value: \"poison\"\n            },\n            {\n              name: \"Chemical Savant\",\n              level: \"immunity\",\n              type: \"condition\",\n              value: \"poisoned\"\n            }\n          ]\n        }\n      }\n    }\n  },\n  artificer: {\n    subclasses: {\n      \"Alchemist\": {\n        15: [\n          {\n            name: \"Chemical Mastery\",\n            level: \"resistance\",\n            type: \"damage\",\n            value: \"acid\"\n          },\n          {\n            name: \"Chemical Mastery\",\n            level: \"resistance\",\n            type: \"damage\",\n            value: \"poison\"\n          },\n          {\n            name: \"Chemical Mastery\",\n            level: \"immunity\",\n            type: \"condition\",\n            value: \"poisoned\"\n          }\n        ]\n      }\n    }\n  }\n};\n","import { PolymerElement, html } from \"@polymer/polymer\";\nimport { MutableData } from '@polymer/polymer/lib/mixins/mutable-data.js';\nimport { getCharacterChannel, getSelectedCharacter, getClassReferences, setClassLevels, mergeSubclass, setClassSkillProficiencies, getSubclassChoiceLevel, mergeFeature, setSubclassChoice, setClassChoice, getSubclassChoice, getClassChoice, getHPRollForClassLevel, getHPDiceForLevel, setHpRoll } from \"../../../util/charBuilder\";\nimport \"@vaadin/vaadin-grid\";\nimport \"../../dnd-select-add\";\nimport \"../../dnd-switch\";\nimport \"../../dnd-button\";\nimport \"../../dnd-asi-select\";\nimport \"../../dnd-svg\";\nimport { jqEmpty, getEntryName } from \"../../../js/utils\";\nimport { classOptionsMap } from \"../../../data/choices\";\nimport EntryRenderer from \"../../../util/entryrender\";\nimport { } from '@polymer/polymer/lib/elements/dom-if.js';\nimport { } from '@polymer/polymer/lib/elements/dom-repeat.js';\nimport { getEditModeChannel, isEditMode } from \"../../../util/editMode\";\nimport {filterModel} from \"../../../util/data\";\n\nclass DndCharacterBuilderClass extends MutableData(PolymerElement) {\n  \n  static get properties() {\n    return {\n      levels: {\n        type: Array,\n        value: []\n      },\n      classes: {\n        type: Object,\n      },\n      subclasses: {\n        type: Object,\n        value: undefined\n      },\n      noContentMessage: {\n        type: Boolean,\n        value: false\n      },\n      isEditMode: {\n        type: Boolean,\n        value: false\n      }\n    };\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    this.characterChangeHandler = (e) => {\n      let character = e.detail.character;\n      this.updateFromCharacter(character);\n    };\n    \n    this.updateFromCharacter(getSelectedCharacter());\n    getCharacterChannel().addEventListener(\"character-selected\", this.characterChangeHandler);\n\n    this.editModeHandler = (e) => {\n      this.isEditMode = e.detail.isEditMode;\n      this.$.classGrid.notifyResize();\n    }\n    getEditModeChannel().addEventListener('editModeChange', this.editModeHandler);\n    this.isEditMode = isEditMode();\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n\n    getCharacterChannel().removeEventListener(\"character-selected\", this.characterChangeHandler);\n    getEditModeChannel().removeEventListener('editModeChange', this.editModeHandler);\n  }\n\n  ready() {\n    super.ready();\n\n    const renderer = new EntryRenderer();\n\n    setTimeout(() => {\n      const grid = this.$.classGrid;\n      let draggedItem;\n\n      grid.rowDetailsRenderer = ((root, grid, rowData) => {\n        let renderStack = [],\n          features = this._getClassLevelFeatures(this.levels, rowData.index, this.classes, this.subclasses);\n        \n        if (features && features.length) {\n          if (!root.firstElementChild) {\n            root.innerHTML = '<div class=\"details\" id=\"stats\"></div>';\n          }\n\n          for (let feature of features) {\n            renderer.recursiveEntryRender(\n              feature,\n              renderStack,\n              0,\n              undefined,\n              true\n            );\n          }\n          const deets = root.querySelector('.details');\n          jqEmpty(deets);\n          deets.innerHTML = renderStack.join(\"\");\n        }\n      }).bind(this);\n\n      grid.addEventListener('grid-dragstart', function(e) {\n        draggedItem = e.detail.draggedItems[0];\n        grid.dropMode = 'between';\n      });\n\n      grid.addEventListener('grid-dragend', function(e) {\n        draggedItem = grid.dropMode = null;\n      });\n\n      grid.addEventListener('grid-drop', function(e) {\n        const dropTargetItem = e.detail.dropTargetItem;\n        if (draggedItem && draggedItem !== dropTargetItem) {\n          // Reorder the items\n          const items = grid.items.filter(function(i) {\n            return i !== draggedItem;\n          });\n          const dropIndex = items.indexOf(dropTargetItem)\n            + (e.detail.dropLocation === 'below' ? 1 : 0);\n          items.splice(dropIndex, 0, draggedItem);\n          setClassLevels(items);\n        }\n      });\n    }, 0);\n  }\n\n  async updateFromCharacter(character) {\n    if (character && character.levels && character.levels.length) {\n      this.noContentMessage = false;\n      this.character = character;\n      this.classes = await getClassReferences(character);\n      this.subclasses = JSON.parse(JSON.stringify(character.subclasses));\n\n      this.classChoices = await this._findLevelChoices(character, this.classes);\n\n      this.dispatchEvent(new CustomEvent(\"loadingChange\", { bubbles: true, composed: true }));\n\n      this.levels = character.levels;\n\n      const hitDiceMaxes = [];\n      for (let i = 0; i < character.levels.length; i++) {\n        hitDiceMaxes.push(await getHPDiceForLevel(i));\n      }\n      this.hitDiceMaxes = hitDiceMaxes;\n\n      this.$.classGrid.clearCache();\n    } else {\n      this.noContentMessage = true;\n      this.dispatchEvent(new CustomEvent(\"loadingChange\", { bubbles: true, composed: true }));\n      this.$.classGrid.clearCache();\n    }\n  }\n\n  _getClassLevelFeatures(levels, index, classes, subclasses) {\n    if (classes && levels[index] && subclasses) {\n      const className = levels[index].name;\n      const classRef = classes[className];\n\n      if (classRef) {\n        const classFeatures = classRef.classFeatures;\n        let levelsInClass = -1;\n        let levelsInSubclass = -1;\n\n        if (levels.length >= index + 1) {\n          for (let i = 0; i <= index; i ++) {\n            if (levels[i].name === className) {\n              levelsInClass ++;\n\n              const classFeaturesForLevel = classFeatures[levelsInClass];\n              if (classFeaturesForLevel) {\n                const hasSubclassFeature = classFeaturesForLevel.find(i => i.gainSubclassFeature);\n                if (hasSubclassFeature) {\n                  levelsInSubclass ++;\n                }\n              }\n            }\n          }\n\n          const classFeaturesForLevel = classFeatures[levelsInClass];\n          if (classFeaturesForLevel) {\n            const hasSubclassFeature = classFeaturesForLevel.some(i => i.gainSubclassFeature);\n            if (hasSubclassFeature && subclasses && subclasses[className] && classRef.subclasses && classRef.subclasses.length) {\n              const subclassDef = classRef.subclasses.find(i => subclasses[className].name === i.name);\n              if (subclassDef.subclassFeatures[levelsInSubclass]) {\n                subclassDef.subclassFeatures[levelsInSubclass].map((i) => { i.isSubclass = true; return i; })\n                return [...classFeaturesForLevel].concat(subclassDef.subclassFeatures[levelsInSubclass]);\n              }\n            }\n            return classFeaturesForLevel.filter((feature) => { \n              const name = getEntryName(feature);\n              return name !== 'Proficiency Versatility' && name !== 'Martial Versatility';\n            });\n          }\n        }\n      }\n    }\n  }\n\n  _getClassLevelFeatureStringArray(levels, index, classes, subclasses) {\n    if (levels && index !== undefined && classes && subclasses) {\n      const classLevelFeatures = this._getClassLevelFeatures(levels, index, classes, subclasses);\n\n      if (classLevelFeatures) {\n        return classLevelFeatures.map(f => {\n          return { name: getEntryName(f), isSubclass: f.isSubclass };\n        });\n      }\n    }\n  }\n\n  _level(index) {\n    return index + 1;\n  }\n\n  _deleteLevel(e) {\n    let index = e.model.__data.index;\n    this.levels.splice(index, 1);\n    setClassLevels(this.levels);\n  }\n\n  _expandDetails(e) {\n    let data = e.model.__data.item,\n      stayClosed = this.$.classGrid.detailsOpenedItems.indexOf(data) > -1;\n\n    for (let item of this.$.classGrid.detailsOpenedItems) {\n      this.$.classGrid.closeItemDetails(item);\n    }\n\n    if (stayClosed) {\n      this.$.classGrid.closeItemDetails(data);\n    } else {\n      this.$.classGrid.openItemDetails(data);\n    }\n    this.$.classGrid.notifyResize();\n  }\n\n  async _findLevelChoices(character, classes) {\n    const levelChoices = [];\n    if (character && character.levels && character.levels.length) {\n      for (let i = 0; i < character.levels.length; i++) {\n        levelChoices.push(await this._findChoices(character, classes, i));\n      }\n    }\n    return levelChoices;\n  }\n\n  async _findChoices(character, classes, levelIndex) {\n    if (classes && character.levels && character.levels.length && character.levels.length > levelIndex) {\n      let levels = character.levels,\n        subclasses = character.subclasses,\n        name = levels[levelIndex].name,\n        classDef = classes[name];\n\n      if (classDef) {\n        let choices = [],\n          classLevelCount = 0,\n          subclassChoiceLevel = getSubclassChoiceLevel(classDef);\n\n        for (let i = 0; i <= levelIndex; i++) {\n          let level = levels[i]\n          if (level.name === name) {\n            classLevelCount ++;\n          }\n        }\n\n        if (subclassChoiceLevel !== undefined && classLevelCount === subclassChoiceLevel) {\n          choices.push({\n            id: \"subclass\",\n            from: classDef.subclasses,\n            selections: character.subclasses[name]\n          });\n        }\n\n        let features = this._getClassLevelFeatures(levels, levelIndex, classes, subclasses);\n        if (features && features.length\n            && features.find((f) => { return f.name === \"Ability Score Improvement\"; })) {\n          choices.push({\n            id: \"asi\"\n          });\n        }\n\n        if (levelIndex === 0) {\n          const classSkillOptions = classDef.startingProficiencies.skills[0].choose;\n          choices.push({\n            id: \"profs\",\n            count: classSkillOptions.count,\n            from: classSkillOptions.from,\n            selections: character.classSkillProficiencies\n          });\n        }\n\n        if (classLevelCount) {\n          const classOptions = classOptionsMap[name.toLowerCase()];\n\n          if (classOptions && classOptions.class && classOptions.class[classLevelCount]) {\n            const classLevelOptions = [].concat(classOptions.class[classLevelCount]);\n            \n            for (const classLevelOption of classLevelOptions) {\n              if (classLevelOption.options) {\n                choices.push({\n                  id: \"classFeature\",\n                  name: classLevelOption.name,\n                  from: classLevelOption.options,\n                  count: classLevelOption.count > 1 ? classLevelOption.count : undefined,\n                  class: name.toLowerCase(),\n                  feature: classLevelOption.name,\n                  level: classLevelCount,\n                  selections: getClassChoice(name.toLowerCase(), classLevelCount, classLevelOption.name)\n                });\n              } else if (classLevelOption.type) {\n                const options = await filterModel(\"features\", classLevelOption.type);\n                choices.push({\n                  id: \"classFeature\",\n                  name: classLevelOption.name,\n                  from: options,\n                  count: classLevelOption.count > 1 ? classLevelOption.count : undefined,\n                  class: name.toLowerCase(),\n                  feature: classLevelOption.name,\n                  level: classLevelCount,\n                  selections: getClassChoice(name.toLowerCase(), classLevelCount, classLevelOption.name)\n                });\n              }\n            }\n          }\n\n          if (classOptions && classOptions.subclasses && subclasses[name] && classOptions.subclasses[subclasses[name].name] && classOptions.subclasses[subclasses[name].name][classLevelCount]) {\n            const subclassLevelOptions = [].concat(classOptions.subclasses[subclasses[name].name][classLevelCount]);\n            \n            for (const subclassLevelOption of subclassLevelOptions) {\n              if (subclassLevelOption.options) {\n                choices.push({\n                  id: \"subclassFeature\",\n                  name: subclassLevelOption.name,\n                  from: subclassLevelOption.options,\n                  count: subclassLevelOption.count > 1 ? subclassLevelOption.count : undefined,\n                  class: name.toLowerCase(),\n                  subclass: subclasses[name],\n                  feature: subclassLevelOption.name,\n                  level: classLevelCount,\n                  selections: getSubclassChoice(name.toLowerCase(), subclasses[name].name.toLowerCase(), classLevelCount, subclassLevelOption.name)\n                });\n              } else if (subclassLevelOption.type) {\n                const options = await filterModel(\"features\", subclassLevelOption.type);\n                choices.push({\n                  id: \"subclassFeature\",\n                  name: subclassLevelOption.name,\n                  from: options,\n                  count: subclassLevelOption.count > 1 ? subclassLevelOption.count : undefined,\n                  class: name.toLowerCase(),\n                  subclass: subclasses[name],\n                  feature: subclassLevelOption.name,\n                  level: classLevelCount,\n                  selections: getSubclassChoice(name.toLowerCase(), subclasses[name].name.toLowerCase(), classLevelCount, subclassLevelOption.name)\n                });\n              }\n            }\n          }\n        }\n\n        return choices;\n      }\n    }\n    return [];\n  }\n\n  _equal(a, b) {\n    return a === b;\n  }\n\n  _genSubclassCallback(level) {\n    return (subclass) => {\n      mergeSubclass(undefined, level.name, subclass);\n    }\n  }\n\n  _genSubclassOptions(level) {\n    return this.classes[level.name].subclasses;\n  }\n\n  _getSubclassSelection(level, subclasses) {\n    return subclasses[level.name];\n  }\n\n  _classFeatureOptionAddCallback(classs, level, feature) {\n    return (choice) => {\n      let adjChoice;\n      if (Array.isArray(choice)) {\n        adjChoice = choice.map(c => {\n          if (c.name) {\n            return { name: c.name, source: c.source }\n          } else {\n            return c;\n          }\n        });\n      } else if (choice.name) {\n        adjChoice = { name: choice.name, source: choice.source };\n      } else {\n        adjChoice = choice;\n      }\n      setClassChoice(classs, level, feature, adjChoice);\n    };\n  }\n\n  _subclassFeatureOptionAddCallback(classs, subclass, level, feature) {\n    return (choice) => {\n      let adjChoice;\n      if (Array.isArray(choice)) {\n        adjChoice = choice.map(c => {\n          if (c.name) {\n            return { ...c }\n          } else {\n            return c;\n          }\n        });\n      } else if (choice.name) {\n        adjChoice = { ...choice };\n      } else {\n        adjChoice = choice;\n      }\n      setSubclassChoice(classs, subclass.name.toLowerCase(), level, feature, adjChoice);\n    };\n  }\n\n  _indexOfLevel(level, levels) {\n    return levels.indexOf(level);\n  }\n\n  _isMobile() {\n    return window.innerWidth < 921;\n  }\n\n  _objArray(obj) {\n    return Object.values(obj);\n  }\n\n  _atIndex(data, index) {\n    return data ? data[index] : null;\n  }\n\n  _svgFromClass(className) {\n    return className ? className.replace(/(\\s|\\(|\\))/g, \"\") : '';\n  }\n\n  _addClassLevel(e) {\n    mergeFeature(undefined, e.model.item, \"classes\");\n  }\n\n  _classSkillAddCallback(skills) {\n    setClassSkillProficiencies(skills);\n  }\n\n  _levelHp(className, index) {\n    return getHPRollForClassLevel(className, index + 1);\n  }\n\n  _editModeClass(isEditMode) {\n    return isEditMode ? 'edit-mode' : 'not-edit-mode';\n  }\n\n  _toggleHpField(e) {\n    const element = e.target.closest('.btn-field');\n    const isOpen = element.classList.contains('btn-field--open');\n    const intField = element.querySelector('vaadin-integer-field');\n    const level = parseInt(element.dataset.level) + 1;\n    const className = element.dataset.className;\n    const max = parseInt(element.dataset.max);\n  \n    if (isOpen) {\n      const changeVal = parseInt(intField.value);\n      if (changeVal && changeVal <= max && changeVal > 0) {\n        setHpRoll(className, level, changeVal);\n        intField.value = '';\n        element.classList.toggle('btn-field--open');\n      } else {\n        element.classList.add('btn-field--error');\n        setTimeout(() => {\n          element.classList.remove('btn-field--error');\n        }, 500);\n      }\n    } else {\n      element.classList.toggle('btn-field--open');\n      intField.focus();\n    }\n  }\n\n  _levelHitDice(index, maxes) {\n    if (maxes && index !== undefined && maxes[index]) {\n      return maxes[index];\n    }\n  }\n\n  static get template() {\n    return html`\n      <style include=\"material-styles my-styles\">\n        .something {\n          display: block;\n        }\n        #stats {\n          margin-top: 16px;\n          line-height: 1.9;\n        }\n        .details {\n          padding: 0 24px;\n        }\n\n        #classGrid {\n          margin-bottom: 144px;\n        }\n\n        .not-edit-mode .heading-wrap {\n          display: none;\n        }\n\n        .heading-wrap {\n          display: flex;\n          justify-content: space-between;\n          margin: 22px 14px 5px;\n          align-items: center;\n        }\n\n        .not-edit-mode .button-wrap {\n          display: none;\n        }\n\n        .button-wrap {\n          display: flex;\n          flex-wrap: wrap;\n          align-items: center;\n          padding: 10px;\n        }\n        .button-wrap > * {\n          margin: 4px;\n        }\n\n        .row {\n          position: relative;\n        }\n        .row:after {\n          content: \"\";\n          display: table;\n          clear: both;\n        }\n\n        .open-details {\n          cursor: pointer;\n          display: flex;\n          align-items: flex-start;\n          flex-wrap: wrap;\n        }\n        .open-details:hover {\n          color: var(--mdc-theme-secondary);\n        }\n\n        .level-col {\n          width: calc(100% - 70px);\n          text-overflow: ellipsis;\n          white-space: nowrap;\n          overflow: hidden;\n          flex-shrink: 0;\n          padding: 6px 0;\n        }\n        .level-col__level {\n          margin-right: 10px;\n          font-size: 20px;\n          font-weight: bold;\n        }\n        .level-col__image-wrap {\n          width: 30px;\n          position: relative;\n          height: 21px;\n          display: inline-block;\n        }\n        .level-col__image {\n          width: 30px;\n          height: 30px;\n          display: block;\n          position: absolute;\n          top: -1px;\n        }\n        .level-col__class {\n          font-size: 20px;\n          font-weight: bold;\n        }\n\n        .features-col {\n          white-space: normal;\n          width: calc(100% - 70px);\n          margin: 0;\n          padding: 8px 0;\n          font-size: 15px;\n        }\n        .class-feature:not(:last-of-type)::after {\n          content: ', ';\n        }\n        .class-feature[subclass] {\n          color: var(--mdc-theme-secondary);\n        }\n\n        .choices-col {\n          display: flex;\n          float: left;\n          flex-wrap: wrap;\n        }\n        .choices-col__choice {\n          margin-right: 16px;\n        }\n        .choices-col__subclass-choice {\n          display: block;\n        }\n\n        .delete-col {\n          position: absolute;\n          right: -8px;\n          bottom: 0;\n        }\n        .delete-btn {\n          height: 24px;\n          width: 24px;\n          font-size: 18px;\n          padding: 0;\n        }\n        .delete-btn:hover {\n          color: var(--mdc-theme-secondary);\n        }\n        .not-edit-mode .delete-btn {\n          display: none;\n        }\n        \n\n        .btn-field {\n          display: inline-flex;\n          flex-direction: row;\n          flex-wrap: nowrap;\n          margin-bottom: 16px;\n          width: 80px;\n          height: 36px;\n          background: var(--lumo-contrast-10pct);\n          border-radius: 4px;\n        }\n        .btn-field--error {\n          background: var(--lumo-error-color-50pct);\n        }\n        .btn-field__btn {\n          display: block;\n          width: 100%;\n        }\n        .btn-field__input {\n          display: none;\n        }\n        .btn-field--open .btn-field__btn {\n          width: 40px;\n        }\n        .btn-field__btn-label-text {\n          position: relative;\n          left: 4px;\n          bottom: 2px;\n        }\n        .btn-field--open .btn-field__btn-label-text {\n          display: none;\n        }\n        .btn-field--open .btn-field__input {\n          display: block;\n          width: 40px;\n          margin-top: -40px;\n        }\n        .btn-field--open .btn-field__btn-label {\n          margin-left: -20px;\n        }\n        .btn-field vaadin-integer-field {\n          --lumo-contrast-10pct: transparent;\n        }\n\n\n        .hp-col {\n          position: absolute;\n          right: 0;\n          top: 8px;\n        }\n        .not-edit-mode .hp-col {\n          right: 0px;\n        }\n        .hp-col .material-icons {\n          font-size: 16px;\n          position: relative;\n          margin-right: 8px;\n          top: 3px;\n        }\n        .hp-col__non-edit {\n          display: block;\n        }\n        .edit-mode .hp-col__non-edit {\n          display: none;\n        }\n        .hp-col__edit {\n          display: none;\n        }\n        .edit-mode .hp-col__edit {\n          display: inline-flex;\n        }\n\n        .details {\n          font-size: 14px;\n          width: calc(100% - 30px);\n          margin: 0 auto 13px !important;\n          background: var(--lumo-contrast-10pct);\n          border-radius: 4px;\n          white-space: pre-line;\n          padding: 14px 14px 1px;\n        }\n\n        .details#stats p {\n          line-height: 1.5;\n        }\n\n        @media(min-width: 921px) {\n          .features-col {\n            margin: 0 30px 0 12px;\n            width: unset;\n            font-size: 16px;\n          }\n          #classGrid {\n            margin-bottom: 0;\n          }\n        }\n\n        .no-content-message {\n          padding: 20px;\n          font-size: 14px;\n          font-style: italic;\n        }\n      </style>\n\n      <div class$=\"[[_editModeClass(isEditMode)]]\">\n        <div class=\"heading-wrap\">\n          <dnd-select-add model=\"classes\" placeholder=\"Add a Class\"></dnd-select-add>\n        </div>\n        <div class=\"button-wrap\">\n          <template is=\"dom-repeat\" items=\"[[_objArray(classes)]]\">\n            <dnd-button icon=\"add\" label=\"[[item.name]]\" on-click=\"_addClassLevel\"></dnd-button>\n          </template>\n        </div>\n\n        <div class=\"no-content-message\" hidden$=\"[[!noContentMessage]]\">Enter edit mode to add classes and levels.</div>\n\n        <vaadin-grid id=\"classGrid\" items=[[levels]] theme=\"no-border\" height-by-rows>\n          <vaadin-grid-column flex-grow=\"1\">\n            <template>\n              <div class=\"row\">\n                <div class=\"open-details\" on-click=\"_expandDetails\">\n                  <div class=\"level-col\">\n                    <span class=\"level-col__level\">[[_level(index)]]</span>\n                    <span class=\"level-col__image-wrap\" ><dnd-svg class=\"level-col__image\" default-color id=\"[[_svgFromClass(item.name)]]\"></dnd-svg></span>\n                    <span class=\"level-col__class\">[[item.name]]</span>\n                  </div>\n\n                  <div class=\"features-col\">\n                    <template is=\"dom-repeat\" items=\"[[_getClassLevelFeatureStringArray(levels, index, classes, subclasses)]]\">\n                      <span class=\"class-feature\" subclass$=\"[[item.isSubclass]]\">[[item.name]]</span>\n                    </template>\n                  </div>\n                </div>\n\n                <div class=\"choices-col\">\n                  <template is=\"dom-repeat\" items=\"[[_atIndex(classChoices, index)]]\" as=\"choice\">\n                    <div class=\"choices-col__choice\">\n                      <template is=\"dom-if\" if=\"[[_equal(choice.id, 'subclass')]]\">\n                        <dnd-select-add class=\"choices-col__subclass-choice\" label=\"Subclass\" placeholder=\"<Choose Subclass>\" disabled$=\"[[!isEditMode]]\"\n                          options=\"[[choice.from]]\" value=\"[[choice.selections]]\" add-callback=\"[[_genSubclassCallback(item)]]\"></dnd-select-add>\n                      </template>\n                      <template is=\"dom-if\" if=\"[[_equal(choice.id, 'asi')]]\">\n                        <dnd-asi-select level-index=\"[[_indexOfLevel(item, levels)]]\" character=\"[[character]]\" disabled$=\"[[!isEditMode]]\"></dnd-asi-select>\n                      </template>\n                      <template is=\"dom-if\" if=\"[[_equal(choice.id, 'profs')]]\">\n                        <dnd-select-add choices=\"[[choice.count]]\" label=\"Skill Proficiency\" placeholder=\"<Choose Skills>\" disabled$=\"[[!isEditMode]]\"\n                          options=\"[[choice.from]]\" value=\"[[choice.selections]]\" add-callback=\"[[_classSkillAddCallback]]\"></dnd-select-add>\n                      </template>\n                      <template is=\"dom-if\" if=\"[[_equal(choice.id, 'classFeature')]]\">\n                        <dnd-select-add choices=\"[[choice.count]]\" label=\"[[choice.name]]\" placeholder=\"<Choose Option>\" disabled$=\"[[!isEditMode]]\"\n                          options=\"[[choice.from]]\" value=\"[[choice.selections]]\" add-callback=\"[[_classFeatureOptionAddCallback(choice.class, choice.level, choice.feature)]]\"></dnd-select-add>\n                      </template>\n                      <template is=\"dom-if\" if=\"[[_equal(choice.id, 'subclassFeature')]]\">\n                        <dnd-select-add choices=\"[[choice.count]]\" label=\"[[choice.name]]\" placeholder=\"<Choose Option>\" disabled$=\"[[!isEditMode]]\"\n                          options=\"[[choice.from]]\" value=\"[[choice.selections]]\" add-callback=\"[[_subclassFeatureOptionAddCallback(choice.class, choice.subclass, choice.level, choice.feature)]]\"></dnd-select-add>\n                      </template>\n                    </div>\n                  </template>\n                </div>\n\n                <div class=\"hp-col\">\n                  <div class=\"hp-col__non-edit\">HP Roll: <span class=\"material-icons\" aria-hidden=\"true\">favorite</span> [[_levelHp(item.name, index)]]</div>\n                  <div class=\"hp-col__edit btn-field\" data-max$=\"[[_levelHitDice(index, hitDiceMaxes)]]\" data-level$=\"[[index]]\" data-class-name$=\"[[item.name]]\">\n                    <dnd-button background=\"none\" class=\"btn-field__btn\" on-click=\"_toggleHpField\">\n                      <span class=\"btn-field__btn-label\" slot=\"label\"><span class=\"material-icons\" aria-hidden=\"true\">favorite</span><span class=\"btn-field__btn-label-text\">[[_levelHp(item.name, index)]]</span></span>\n                    </dnd-button>\n                    <vaadin-integer-field class=\"btn-field__input\" min=\"1\" max=\"[[_levelHitDice(index, hitDiceMaxes)]]\"></vaadin-integer-field>\n                  </div>\n                </div>\n\n                <div class=\"delete-col\">\n                  <dnd-button class=\"delete-btn link\" label=\"Delete\" icon=\"close\" on-click=\"_deleteLevel\"></dnd-button>\n                </div>\n              </div>\n            </template>\n          </vaadin-grid-column>\n        </vaadin-grid>\n      </div>\n    `;\n  }\n}\n\ncustomElements.define(\"dnd-character-builder-class\", DndCharacterBuilderClass);"],"sourceRoot":""}