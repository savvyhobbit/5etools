{"version":3,"sources":["webpack:///./node_modules/@vaadin/vaadin-checkbox/src/vaadin-checkbox.js","webpack:///./components/dnd-button.js","webpack:///./node_modules/@vaadin/vaadin-checkbox/theme/lumo/vaadin-checkbox-styles.js","webpack:///./node_modules/@vaadin/vaadin-checkbox/vaadin-checkbox.js","webpack:///./node_modules/@vaadin/vaadin-text-field/theme/lumo/vaadin-number-field-styles.js","webpack:///./node_modules/@vaadin/vaadin-text-field/src/vaadin-number-field.js","webpack:///./node_modules/@vaadin/vaadin-text-field/src/vaadin-integer-field.js","webpack:///./components/views/character/dnd-character-builder-rolls.js"],"names":["CheckboxElement","checked","type","Boolean","value","notify","observer","reflectToAttribute","indeterminate","String","_nativeCheckbox","Object","super","this","name","_storedName","ready","setAttribute","shadowRoot","querySelector","addEventListener","_handleClick","bind","_addActiveListeners","attrName","getAttribute","_updateLabelAttribute","label","assignedNodes","firstElementChild","_isAssignedNodesEmpty","removeAttribute","nodes","length","nodeType","Node","TEXT_NODE","textContent","trim","_addEventListenerToNode","e","__interactionsAllowed","keyCode","preventDefault","_toggleChecked","disabled","target","localName","composedPath","dispatchEvent","CustomEvent","composed","bubbles","customElements","define","is","DndButton","icon","svg","background","border","svgFill","svgStroke","setTimeout","button","$","i","result","fill","stroke","$_documentContainer","document","head","appendChild","content","createElement","memoizedTemplate","innerHTML","hasControls","min","Number","max","step","__previousValidInput","inputElement","__onInputChange","_decreaseValue","_increaseValue","template","cloneNode","thisTemplate","import","decreaseButton","increaseButton","styles","inputField","prefixSlot","insertBefore","_createMethodObserver","required","minlength","maxlength","pattern","invalid","isNumUnset","n","_constraintsChanged","validate","_incrementValue","incr","readonly","parseFloat","_getIncrement","newValue","_incrementIsInsideTheLimits","_setValue","currentValue","multiplier","Math","_getMultiplier","margin","round","number","s","indexOf","isNaN","pow","_getDecimalCount","sign","__validateByStep","__stepChangedCalled","newVal","oldVal","_valueChanged","_onKeyDown","undefined","checkValidity","window","preventInvalidInput","_enabledCharPattern","__isInteger","console","warn","__hasOnlyDigits","_stepChanged","test","DndCharacterBuilderRolls","isEditMode","customRolls","Array","connectedCallback","damageTypes","characterChangeHandler","character","detail","updateFromCharacter","editModeHandler","disconnectedCallback","removeEventListener","arg","arguments","constructor","entries","isArray","num","rollModel","model","__data","item","noHitRoll","toHit","advMod","disadvMod","damages","forEach","damage","index","roll","rollIndexAttr","rollIndex","parseInt","rollEls","querySelectorAll","scrollIntoView","curRoll","push","rollDamageIndexAttr","rollDamageIndex","a","b","currentTarget","id"],"mappings":"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","file":"7.bundle.js","sourcesContent":["/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport { GestureEventListeners } from '@polymer/polymer/lib/mixins/gesture-event-listeners.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { ControlStateMixin } from '@vaadin/vaadin-control-state-mixin/vaadin-control-state-mixin.js';\nimport { ElementMixin } from '@vaadin/vaadin-element-mixin/vaadin-element-mixin.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\n/**\n * `<vaadin-checkbox>` is a Web Component for customized checkboxes.\n *\n * ```html\n * <vaadin-checkbox>\n *   Make my profile visible\n * </vaadin-checkbox>\n * ```\n *\n * ### Styling\n *\n * The following shadow DOM parts are available for styling:\n *\n * Part name         | Description\n * ------------------|----------------\n * `checkbox`        | The wrapper element for the native <input type=\"checkbox\">\n * `label`           | The wrapper element in which the component's children, namely the label, is slotted\n *\n * The following state attributes are available for styling:\n *\n * Attribute    | Description | Part name\n * -------------|-------------|--------------\n * `active`     | Set when the checkbox is pressed down, either with mouse, touch or the keyboard. | `:host`\n * `disabled`   | Set when the checkbox is disabled. | `:host`\n * `focus-ring` | Set when the checkbox is focused using the keyboard. | `:host`\n * `focused`    | Set when the checkbox is focused. | `:host`\n * `indeterminate` | Set when the checkbox is in indeterminate mode. | `:host`\n * `checked` | Set when the checkbox is checked. | `:host`\n * `empty` | Set when there is no label provided. | `label`\n *\n * See [ThemableMixin – how to apply styles for shadow parts](https://github.com/vaadin/vaadin-themable-mixin/wiki)\n *\n * @extends PolymerElement\n * @mixes ElementMixin\n * @mixes ControlStateMixin\n * @mixes ThemableMixin\n * @mixes GestureEventListeners\n * @demo demo/index.html\n */\nclass CheckboxElement extends\n  ElementMixin(\n    ControlStateMixin(\n      ThemableMixin(\n        GestureEventListeners(PolymerElement)))) {\n  static get template() {\n    return html`\n    <style>\n      :host {\n        display: inline-block;\n      }\n\n      :host([hidden]) {\n        display: none !important;\n      }\n\n      label {\n        display: inline-flex;\n        align-items: baseline;\n        outline: none;\n      }\n\n      [part=\"checkbox\"] {\n        position: relative;\n        display: inline-block;\n        flex: none;\n      }\n\n      input[type=\"checkbox\"] {\n        position: absolute;\n        top: 0;\n        left: 0;\n        right: 0;\n        width: 100%;\n        height: 100%;\n        opacity: 0;\n        cursor: inherit;\n        margin: 0;\n      }\n\n      :host([disabled]) {\n        -webkit-tap-highlight-color: transparent;\n      }\n    </style>\n\n    <label>\n      <span part=\"checkbox\">\n        <input type=\"checkbox\" checked=\"{{checked::change}}\" disabled\\$=\"[[disabled]]\" indeterminate=\"{{indeterminate::change}}\" role=\"presentation\" tabindex=\"-1\">\n      </span>\n\n      <span part=\"label\">\n        <slot></slot>\n      </span>\n    </label>\n`;\n  }\n\n  static get is() {\n    return 'vaadin-checkbox';\n  }\n\n  static get version() {\n    return '2.5.0';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * True if the checkbox is checked.\n       * @type {boolean}\n       */\n      checked: {\n        type: Boolean,\n        value: false,\n        notify: true,\n        observer: '_checkedChanged',\n        reflectToAttribute: true\n      },\n\n      /**\n       * Indeterminate state of the checkbox when it's neither checked nor unchecked, but undetermined.\n       * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/checkbox#Indeterminate_state_checkboxes\n       * @type {boolean}\n       */\n      indeterminate: {\n        type: Boolean,\n        notify: true,\n        observer: '_indeterminateChanged',\n        reflectToAttribute: true,\n        value: false\n      },\n\n      /**\n       * The value given to the data submitted with the checkbox's name to the server when the control is inside a form.\n       */\n      value: {\n        type: String,\n        value: 'on'\n      },\n\n      /** @private */\n      _nativeCheckbox: {\n        type: Object\n      }\n    };\n  }\n\n  constructor() {\n    super();\n    /**\n     * @type {string}\n     * Name of the element.\n     */\n    this.name;\n  }\n\n  get name() {\n    return this.checked ? this._storedName : '';\n  }\n\n  set name(name) {\n    this._storedName = name;\n  }\n\n  ready() {\n    super.ready();\n\n    this.setAttribute('role', 'checkbox');\n\n    this._nativeCheckbox = this.shadowRoot.querySelector('input[type=\"checkbox\"]');\n\n    this.addEventListener('click', this._handleClick.bind(this));\n\n    this._addActiveListeners();\n\n    const attrName = this.getAttribute('name');\n    if (attrName) {\n      this.name = attrName;\n    }\n\n    this.shadowRoot.querySelector('[part~=\"label\"]').querySelector('slot')\n      .addEventListener('slotchange', this._updateLabelAttribute.bind(this));\n\n    this._updateLabelAttribute();\n  }\n\n  /** @private */\n  _updateLabelAttribute() {\n    const label = this.shadowRoot.querySelector('[part~=\"label\"]');\n    const assignedNodes = label.firstElementChild.assignedNodes();\n    if (this._isAssignedNodesEmpty(assignedNodes)) {\n      label.setAttribute('empty', '');\n    } else {\n      label.removeAttribute('empty');\n    }\n  }\n\n  /** @private */\n  _isAssignedNodesEmpty(nodes) {\n    // The assigned nodes considered to be empty if there is no slotted content or only one empty text node\n    return nodes.length === 0 ||\n          (nodes.length == 1\n          && nodes[0].nodeType == Node.TEXT_NODE\n          && nodes[0].textContent.trim() === '');\n  }\n\n  /** @private */\n  _checkedChanged(checked) {\n    if (this.indeterminate) {\n      this.setAttribute('aria-checked', 'mixed');\n    } else {\n      this.setAttribute('aria-checked', Boolean(checked));\n    }\n  }\n\n  /** @private */\n  _indeterminateChanged(indeterminate) {\n    if (indeterminate) {\n      this.setAttribute('aria-checked', 'mixed');\n    } else {\n      this.setAttribute('aria-checked', this.checked);\n    }\n  }\n\n  /** @private */\n  _addActiveListeners() {\n    // DOWN\n    this._addEventListenerToNode(this, 'down', (e) => {\n      if (this.__interactionsAllowed(e)) {\n        this.setAttribute('active', '');\n      }\n    });\n\n    // UP\n    this._addEventListenerToNode(this, 'up', () => this.removeAttribute('active'));\n\n    // KEYDOWN\n    this.addEventListener('keydown', e => {\n      if (this.__interactionsAllowed(e) && e.keyCode === 32) {\n        e.preventDefault();\n        this.setAttribute('active', '');\n      }\n    });\n\n    // KEYUP\n    this.addEventListener('keyup', e => {\n      if (this.__interactionsAllowed(e) && e.keyCode === 32) {\n        e.preventDefault();\n        this._toggleChecked();\n        this.removeAttribute('active');\n\n        if (this.indeterminate) {\n          this.indeterminate = false;\n        }\n      }\n    });\n  }\n\n  /**\n   * @return {!HTMLInputElement}\n   * @protected\n   */\n  get focusElement() {\n    return this.shadowRoot.querySelector('input');\n  }\n\n  /**\n   * True if users' interactions (mouse or keyboard)\n   * should toggle the checkbox\n   */\n  __interactionsAllowed(e) {\n    if (this.disabled) {\n      return false;\n    }\n\n    // https://github.com/vaadin/vaadin-checkbox/issues/63\n    if (e.target.localName === 'a') {\n      return false;\n    }\n\n    return true;\n  }\n\n  /** @private */\n  _handleClick(e) {\n    if (this.__interactionsAllowed(e)) {\n      if (!this.indeterminate) {\n        if (e.composedPath()[0] !== this._nativeCheckbox) {\n          e.preventDefault();\n          this._toggleChecked();\n        }\n      } else {\n        /*\n         * Required for IE 11 and Edge.\n         * See issue here: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/7344418/\n         */\n        this.indeterminate = false;\n        e.preventDefault();\n        this._toggleChecked();\n      }\n    }\n  }\n\n  /** @protected */\n  _toggleChecked() {\n    this.checked = !this.checked;\n    this.dispatchEvent(new CustomEvent('change', {composed: false, bubbles: true}));\n  }\n\n  /**\n   * Fired when the user commits a value change.\n   *\n   * @event change\n   */\n}\n\ncustomElements.define(CheckboxElement.is, CheckboxElement);\n\nexport { CheckboxElement };\n","import { PolymerElement, html } from '@polymer/polymer';\nimport { MDCRipple } from '@material/ripple';\nimport { } from '@polymer/polymer/lib/elements/dom-if.js';\nimport \"./dnd-svg\";\n\nclass DndButton extends PolymerElement {\n  static get properties() {\n    return {\n      label: {\n        type: String,\n        value: ''\n      },\n      icon: {\n        type: String,\n        value: ''\n      },\n      svg: {\n        type: String,\n        value: ''\n      },\n      background: {\n        type: String,\n        value: ''\n      },\n      border: {\n        type: String,\n        value: ''\n      },\n      svgFill: {\n        type: String,\n        value: ''\n      },\n      svgStroke: {\n        type: String,\n        value: ''\n      }\n    }\n  }\n\n  connectedCallback() {\n    setTimeout(()=> {\n      this.button = new MDCRipple(this.$.button);\n    }, 10)\n  }\n\n  _exists(i) {\n    return !!i;\n  }\n\n  _styleStr(background, border) {\n    let result = '';\n    if (background) {\n      result+= `background: ${background}; `\n    }\n    if (border) {\n      result+= `border: ${border}; `\n    }\n    return result;\n  }\n\n  _svgStyleStr(fill, stroke) {\n    let result = '';\n    if (fill) {\n      result+= `fill: ${fill}; `\n    }\n    if (stroke) {\n      result+= `stroke: ${stroke}; `\n    }\n    return result;\n  }\n\n  static get template() {\n    return html`\n      <style include=\"material-styles\">\n        .mdc-tab-scroller__scroll-area--scroll {\n          overflow-x: auto;\n          background-color: var(--mdc-theme-surface);\n          border: 1px solid var(--mdc-theme-text-divider-on-background);\n          border-bottom: none;\n        }\n        :host {\n          display: inline;\n          overflow: hidden;\n          white-space: nowrap;\n        }\n        .mdc-button {\n          display: inline-flex;\n          justify-content: center;\n          align-items: center;\n          width: 100%;\n        }\n        .mdc-button .mdc-button__icon {\n          margin-right: 0px;\n          margin-left: 8px;\n        }\n        .mdc-button [background] {\n          background: var(--lumo-contrast-10pct);\n        }\n        dnd-svg {\n          height: 20px;\n          width: 20px;\n          flex-shrink: 0;\n          flex-grow: 0;\n          padding-left: 8px;\n          fill: var(--mdc-theme-primary);\n          stroke: var(--mdc-theme-primary);\n        }\n        i {\n          flex-shrink: 0;\n          flex-grow: 0;\n        }\n\n        \n        :host(.btn-field__btn) dnd-svg {\n          padding-left: 0;\n        }\n        :host(.btn-field__btn) i {\n          margin-left: 0;\n        }\n\n        :host(.icon-only) dnd-svg {\n          margin-left: -24px;\n          padding-left: 0;\n        }\n        :host(.icon-only) i {\n          margin-left: -18px;\n          padding-left: 0;\n        }\n\n        :host(.link) .mdc-button__label {\n          text-transform: none;\n          color: var(--lumo-body-text-color);\n          letter-spacing: normal;\n        }\n        :host(.link) i {\n          color: var(--lumo-body-text-color);\n        }\n        :host(.link) button:hover::before {\n          background: none;\n        }\n        :host(.link) button:hover i,\n        :host(.link) button:hover .mdc-button__label {\n          color: var(--mdc-theme-secondary);\n        }\n\n        :host([edit-mode]) button {\n          background-color: var(--mdc-theme-secondary);\n          color: var(--mdc-theme-on-secondary)\n        }\n        :host([edit-mode]) .mdc-button__label {\n          color: var(--mdc-theme-on-primary);\n        }\n        :host([edit-mode]) i {\n          color: var(--mdc-theme-on-primary);\n        }\n        :host([edit-mode]) button:hover i,\n        :host([edit-mode]) button:hover .mdc-button__label {\n          color: var(--mdc-theme-on-secondary);\n        }\n\n        :host([not-edit-mode]) button {\n          background-color: var(--mdc-theme-primary);\n          color: var(--mdc-theme-on-primary);\n        }\n        :host([not-edit-mode]) .mdc-button__label {\n          color: var(--mdc-theme-on-primary);\n        }\n        :host([not-edit-mode]) i {\n          color: var(--mdc-theme-on-primary);\n        }\n        :host([not-edit-mode]) button:hover i,\n        :host([not-edit-mode]) button:hover .mdc-button__label {\n          color: var(--mdc-theme-on-primary);\n        }\n\n      </style>\n      <button id=\"button\" class=\"mdc-button\" style$=\"[[_styleStr(background, border)]]\">\n        <div class=\"mdc-button__ripple\"></div>\n        <span class=\"mdc-button__label\">[[label]]</span>\n        <slot name=\"label\"></slot>\n        <template is=\"dom-if\" if=\"[[_exists(icon)]]\">\n          <i class=\"material-icons mdc-button__icon\" aria-hidden=\"true\">[[icon]]</i>\n        </template>\n        <template is=\"dom-if\" if=\"[[_exists(svg)]]\">\n          <dnd-svg id=\"[[svg]]\" style$=\"[[_svgStyleStr(svgFill, svgStroke)]]\"></dnd-svg>\n        </template>\n      </button>\n    `;\n  }\n\n}\ncustomElements.define('dnd-button', DndButton);","import '@vaadin/vaadin-lumo-styles/color.js';\nimport '@vaadin/vaadin-lumo-styles/style.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\n\nconst $_documentContainer = html`<dom-module id=\"lumo-checkbox\" theme-for=\"vaadin-checkbox\">\n  <template>\n    <style include=\"lumo-checkbox-style lumo-checkbox-effects\">\n      /* IE11 only */\n      ::-ms-backdrop,\n      [part=\"checkbox\"] {\n        line-height: 1;\n      }\n    </style>\n  </template>\n</dom-module><dom-module id=\"lumo-checkbox-style\">\n  <template>\n    <style>\n      :host {\n        -webkit-tap-highlight-color: transparent;\n        -webkit-user-select: none;\n        -moz-user-select: none;\n        -ms-user-select: none;\n        user-select: none;\n        cursor: default;\n        outline: none;\n      }\n\n      [part=\"label\"]:not([empty]) {\n        margin: 0.1875em 0.875em 0.1875em 0.375em;\n      }\n\n      [part=\"checkbox\"] {\n        width: calc(1em + 2px);\n        height: calc(1em + 2px);\n        margin: 0.1875em;\n        position: relative;\n        border-radius: var(--lumo-border-radius-s);\n        background-color: var(--lumo-contrast-20pct);\n        transition: transform 0.2s cubic-bezier(.12, .32, .54, 2), background-color 0.15s;\n        pointer-events: none;\n        line-height: 1.2;\n      }\n\n      :host([indeterminate]) [part=\"checkbox\"],\n      :host([checked]) [part=\"checkbox\"] {\n        background-color: var(--lumo-primary-color);\n      }\n\n      /* Needed to align the checkbox nicely on the baseline */\n      [part=\"checkbox\"]::before {\n        content: \"\\\\2003\";\n      }\n\n      /* Checkmark */\n      [part=\"checkbox\"]::after {\n        content: \"\";\n        display: inline-block;\n        width: 0;\n        height: 0;\n        border: 0 solid var(--lumo-primary-contrast-color);\n        border-width: 0.1875em 0 0 0.1875em;\n        box-sizing: border-box;\n        transform-origin: 0 0;\n        position: absolute;\n        top: 0.8125em;\n        left: 0.5em;\n        transform: scale(0.55) rotate(-135deg);\n        opacity: 0;\n      }\n\n      :host([checked]) [part=\"checkbox\"]::after {\n        opacity: 1;\n        width: 0.625em;\n        height: 1.0625em;\n      }\n\n      /* Indeterminate checkmark */\n\n      :host([indeterminate]) [part=\"checkbox\"]::after {\n        transform: none;\n        opacity: 1;\n        top: 45%;\n        height: 10%;\n        left: 22%;\n        right: 22%;\n        width: auto;\n        border: 0;\n        background-color: var(--lumo-primary-contrast-color);\n        transition: opacity 0.25s;\n      }\n\n      /* Focus ring */\n\n      :host([focus-ring]) [part=\"checkbox\"] {\n        box-shadow: 0 0 0 3px var(--lumo-primary-color-50pct);\n      }\n\n      /* Disabled */\n\n      :host([disabled]) {\n        pointer-events: none;\n        color: var(--lumo-disabled-text-color);\n      }\n\n      :host([disabled]) [part=\"label\"] ::slotted(*) {\n        color: inherit;\n      }\n\n      :host([disabled]) [part=\"checkbox\"] {\n        background-color: var(--lumo-contrast-10pct);\n      }\n\n      :host([disabled]) [part=\"checkbox\"]::after {\n        border-color: var(--lumo-contrast-30pct);\n      }\n\n      :host([indeterminate][disabled]) [part=\"checkbox\"]::after {\n        background-color: var(--lumo-contrast-30pct);\n      }\n\n      /* RTL specific styles */\n\n      :host([dir=\"rtl\"]) [part=\"label\"]:not([empty]) {\n        margin: 0.1875em 0.375em 0.1875em 0.875em;\n      }\n    </style>\n  </template>\n</dom-module><dom-module id=\"lumo-checkbox-effects\">\n  <template>\n    <style>\n      /* Transition the checkmark if activated with the mouse (disabled for grid select-all this way) */\n      :host(:hover) [part=\"checkbox\"]::after {\n        transition: width 0.1s, height 0.25s;\n      }\n\n      /* Used for activation \"halo\" */\n      [part=\"checkbox\"]::before {\n        color: transparent;\n        display: inline-block;\n        width: 100%;\n        height: 100%;\n        border-radius: inherit;\n        background-color: inherit;\n        transform: scale(1.4);\n        opacity: 0;\n        transition: transform 0.1s, opacity 0.8s;\n      }\n\n      /* Hover */\n\n      :host(:not([checked]):not([indeterminate]):not([disabled]):hover) [part=\"checkbox\"] {\n        background-color: var(--lumo-contrast-30pct);\n      }\n\n      /* Disable hover for touch devices */\n      @media (pointer: coarse) {\n        :host(:not([checked]):not([indeterminate]):not([disabled]):hover) [part=\"checkbox\"] {\n          background-color: var(--lumo-contrast-20pct);\n        }\n      }\n\n      /* Active */\n\n      :host([active]) [part=\"checkbox\"] {\n        transform: scale(0.9);\n        transition-duration: 0.05s;\n      }\n\n      :host([active][checked]) [part=\"checkbox\"] {\n        transform: scale(1.1);\n      }\n\n      :host([active]:not([checked])) [part=\"checkbox\"]::before {\n        transition-duration: 0.01s, 0.01s;\n        transform: scale(0);\n        opacity: 0.4;\n      }\n    </style>\n  </template>\n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\n","import './theme/lumo/vaadin-checkbox.js';\nexport * from './src/vaadin-checkbox.js';\n","import '@vaadin/vaadin-lumo-styles/font-icons.js';\nimport '@vaadin/vaadin-lumo-styles/sizing.js';\nimport '@vaadin/vaadin-lumo-styles/mixins/field-button.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\n\nconst $_documentContainer = html`<dom-module id=\"lumo-number-field\" theme-for=\"vaadin-number-field\">\n  <template>\n    <style include=\"lumo-field-button\">\n      :host {\n        width: 8em;\n      }\n\n      :host([has-controls]:not([theme~=\"align-right\"])) [part=\"value\"] {\n        text-align: center;\n      }\n\n      [part=\"decrease-button\"][disabled],\n      [part=\"increase-button\"][disabled] {\n        opacity: 0.2;\n      }\n\n      :host([has-controls]) [part=\"input-field\"] {\n        padding: 0;\n      }\n\n      [part=\"decrease-button\"],\n      [part=\"increase-button\"] {\n        cursor: pointer;\n        font-size: var(--lumo-icon-size-s);\n        width: 1.6em;\n        height: 1.6em;\n      }\n\n      [part=\"decrease-button\"]::before,\n      [part=\"increase-button\"]::before {\n        margin-top: 0.2em;\n      }\n\n      /* RTL specific styles */\n\n      :host([dir=\"rtl\"]) [part=\"value\"],\n      :host([dir=\"rtl\"]) [part=\"input-field\"] ::slotted(input) {\n        --_lumo-text-field-overflow-mask-image: linear-gradient(to left, transparent, #000 1.25em);\n      }\n    </style>\n  </template>\n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\n","/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport '@polymer/polymer/polymer-element.js';\n\nimport '@polymer/polymer/lib/elements/custom-style.js';\nimport { TextFieldElement } from './vaadin-text-field.js';\nimport { DomModule } from '@polymer/polymer/lib/elements/dom-module.js';\nconst $_documentContainer = document.createElement('template');\n\n$_documentContainer.innerHTML = `<dom-module id=\"vaadin-number-field-template\">\n  <template>\n    <style>\n      :host([readonly]) [part\\$=\"button\"] {\n        pointer-events: none;\n      }\n\n      [part=\"decrease-button\"]::before {\n        content: \"−\";\n      }\n\n      [part=\"increase-button\"]::before {\n        content: \"+\";\n      }\n\n      [part=\"decrease-button\"],\n      [part=\"increase-button\"] {\n        -webkit-user-select: none;\n        -moz-user-select: none;\n        -ms-user-select: none;\n        user-select: none;\n      }\n\n      /* Hide the native arrow icons */\n      [part=\"value\"]::-webkit-outer-spin-button,\n      [part=\"value\"]::-webkit-inner-spin-button {\n        -webkit-appearance: none;\n        margin: 0;\n      }\n\n      [part=\"value\"] {\n        /* Older Firefox versions (v47.0) requires !important */\n        -moz-appearance: textfield !important;\n      }\n\n      :host([dir=\"rtl\"]) [part=\"input-field\"] {\n        direction: ltr;\n      }\n\n      :host([dir=\"rtl\"]) [part=\"value\"]::placeholder {\n        direction: rtl;\n      }\n\n      :host([dir=\"rtl\"]) [part=\"input-field\"] ::slotted(input)::placeholder {\n        direction: rtl;\n      }\n\n      :host([dir=\"rtl\"]) [part=\"value\"]:-ms-input-placeholder,\n      :host([dir=\"rtl\"]) [part=\"input-field\"] ::slotted(input):-ms-input-placeholder {\n        direction: rtl;\n      }\n\n      :host([dir=\"rtl\"]:not([has-controls])) [part=\"value\"]::placeholder {\n        text-align: left;\n      }\n\n      :host([dir=\"rtl\"]:not([has-controls])) [part=\"input-field\"] ::slotted(input)::placeholder {\n        text-align: left;\n      }\n\n      :host([dir=\"rtl\"]:not([has-controls])) [part=\"value\"]:-ms-input-placeholder,\n      :host([dir=\"rtl\"]:not([has-controls])) [part=\"input-field\"] ::slotted(input):-ms-input-placeholder {\n        text-align: left;\n      }\n    </style>\n\n    <div disabled\\$=\"[[!_allowed(-1, value, min, max, step)]]\" part=\"decrease-button\" on-click=\"_decreaseValue\" on-touchend=\"_decreaseButtonTouchend\" hidden\\$=\"[[!hasControls]]\">\n    </div>\n\n    <div disabled\\$=\"[[!_allowed(1, value, min, max, step)]]\" part=\"increase-button\" on-click=\"_increaseValue\" on-touchend=\"_increaseButtonTouchend\" hidden\\$=\"[[!hasControls]]\">\n    </div>\n  </template>\n\n  \n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\nlet memoizedTemplate;\n\n/**\n* `<vaadin-number-field>` is a Web Component for number field control in forms.\n*\n* ```html\n* <vaadin-number-field label=\"Number\">\n* </vaadin-number-field>\n* ```\n*\n* @extends PolymerElement\n* @demo demo/index.html\n*/\nclass NumberFieldElement extends TextFieldElement {\n  static get is() {\n    return 'vaadin-number-field';\n  }\n\n  static get version() {\n    return '2.6.2';\n  }\n\n  static get properties() {\n    return {\n      /**\n      * Set to true to display value increase/decrease controls.\n      */\n      hasControls: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n\n      /**\n      * The minimum value of the field.\n      */\n      min: {\n        type: Number,\n        reflectToAttribute: true,\n        observer: '_minChanged'\n      },\n\n      /**\n       * The maximum value of the field.\n       */\n      max: {\n        type: Number,\n        reflectToAttribute: true,\n        observer: '_maxChanged'\n      },\n\n      /**\n       * Specifies the allowed number intervals of the field.\n       */\n      step: {\n        type: Number,\n        value: 1,\n        observer: '_stepChanged'\n      }\n\n    };\n  }\n\n  ready() {\n    super.ready();\n    this.__previousValidInput = this.value || '';\n    this.inputElement.type = 'number';\n    this.inputElement.addEventListener('change', this.__onInputChange.bind(this));\n  }\n\n  _decreaseButtonTouchend(e) {\n    // Cancel the following click and focus events\n    e.preventDefault();\n    this._decreaseValue();\n  }\n\n  _increaseButtonTouchend(e) {\n    // Cancel the following click and focus events\n    e.preventDefault();\n    this._increaseValue();\n  }\n\n  static get template() {\n    if (!memoizedTemplate) {\n      // Clone the superclass template\n      memoizedTemplate = super.template.cloneNode(true);\n\n      // Retrieve this element's dom-module template\n      const thisTemplate = DomModule.import(this.is + '-template', 'template');\n      const decreaseButton = thisTemplate.content.querySelector('[part=\"decrease-button\"]');\n      const increaseButton = thisTemplate.content.querySelector('[part=\"increase-button\"]');\n      const styles = thisTemplate.content.querySelector('style');\n\n      // Add the buttons and styles to the text-field template\n      const inputField = memoizedTemplate.content.querySelector('[part=\"input-field\"]');\n      const prefixSlot = memoizedTemplate.content.querySelector('[name=\"prefix\"]');\n      inputField.insertBefore(decreaseButton, prefixSlot);\n      inputField.appendChild(increaseButton);\n      memoizedTemplate.content.appendChild(styles);\n    }\n\n    return memoizedTemplate;\n  }\n\n  _createConstraintsObserver() {\n    // NOTE: do not call \"super\" but instead override the method to add extra arguments\n    this._createMethodObserver('_constraintsChanged(required, minlength, maxlength, pattern, min, max, step)');\n  }\n\n  _constraintsChanged(required, minlength, maxlength, pattern, min, max, step) {\n    if (!this.invalid) {\n      return;\n    }\n\n    const isNumUnset = n => (!n && n !== 0);\n\n    if (!isNumUnset(min) || !isNumUnset(max)) {\n      this.validate();\n    } else {\n      super._constraintsChanged(required, minlength, maxlength, pattern);\n    }\n  }\n\n  _decreaseValue() {\n    this._incrementValue(-1);\n  }\n\n  _increaseValue() {\n    this._incrementValue(1);\n  }\n\n  _incrementValue(incr) {\n    if (this.disabled || this.readonly) {\n      return;\n    }\n\n    let value = parseFloat(this.value);\n\n    if (!this.value) {\n      if (this.min == 0 && incr < 0 ||\n          this.max == 0 && incr > 0 ||\n          this.max == 0 && this.min == 0) {\n        incr = 0;\n        value = 0;\n      } else if ((this.max == null || this.max >= 0) &&\n                 (this.min == null || this.min <= 0)) {\n        value = 0;\n      } else if (this.min > 0) {\n        value = this.min;\n        if (this.max < 0 && incr < 0) {\n          value = this.max;\n        }\n        incr = 0;\n      } else if (this.max < 0) {\n        value = this.max;\n        if (incr < 0) {\n          incr = 0;\n        } else {\n          // FIXME(yuriy): find a proper solution to make correct step back\n          if (this._getIncrement(1, value - this.step) > this.max) {\n            value -= 2 * this.step;\n          } else {\n            value -= this.step;\n          }\n        }\n      }\n    } else if (value < this.min) {\n      incr = 0;\n      value = this.min;\n    } else if (value > this.max) {\n      incr = 0;\n      value = this.max;\n    }\n\n    const newValue = this._getIncrement(incr, value);\n    if (!this.value || incr == 0 || this._incrementIsInsideTheLimits(incr, value)) {\n      this._setValue(newValue);\n    }\n  }\n\n  _setValue(value) {\n    this.value = this.inputElement.value = String(parseFloat(value));\n    this.dispatchEvent(new CustomEvent('change', {bubbles: true}));\n  }\n\n  _getIncrement(incr, currentValue) {\n    let step = this.step || 1,\n      min = this.min || 0;\n\n    // To avoid problems with decimal math, multiplying to operate with integers.\n    const multiplier = Math.max(this._getMultiplier(currentValue),\n      this._getMultiplier(step),\n      this._getMultiplier(min));\n\n    step *= multiplier;\n    currentValue = Math.round(currentValue * multiplier);\n    min *= multiplier;\n\n    const margin = (currentValue - min) % step;\n\n    if (incr > 0) {\n      return (currentValue - margin + step) / multiplier;\n    } else if (incr < 0) {\n      return (currentValue - (margin || step)) / multiplier;\n    } else {\n      return currentValue / multiplier;\n    }\n  }\n\n  _getDecimalCount(number) {\n    const s = String(number);\n    const i = s.indexOf('.');\n    return i === -1 ? 1 : s.length - i - 1;\n  }\n\n  _getMultiplier(number) {\n    if (!isNaN(number)) {\n      return Math.pow(10, this._getDecimalCount(number));\n    }\n  }\n\n  _incrementIsInsideTheLimits(incr, value) {\n    if (incr < 0) {\n      return this.min == null || this._getIncrement(incr, value) >= this.min;\n    } else if (incr > 0) {\n      return this.max == null || this._getIncrement(incr, value) <= this.max;\n    } else {\n      return this._getIncrement(incr, value) <= this.max && this._getIncrement(incr, value) >= this.min;\n    }\n  }\n\n  _allowed(sign) {\n    const incr = sign * (this.step || 1);\n    const value = parseFloat(this.value);\n    return !this.value || (!this.disabled && this._incrementIsInsideTheLimits(incr, value));\n  }\n\n  _stepChanged(step) {\n    // Avoid using initial value in validation\n    this.__validateByStep = this.__stepChangedCalled || this.getAttribute('step') !== null;\n    this.inputElement.step = this.__validateByStep ? step : 'any';\n\n    this.__stepChangedCalled = true;\n    this.setAttribute('step', step);\n  }\n\n  _minChanged(min) {\n    this.inputElement.min = min;\n  }\n\n  _maxChanged(max) {\n    this.inputElement.max = max;\n  }\n\n  _valueChanged(newVal, oldVal) {\n    // Validate value to be numeric\n    if (newVal && isNaN(parseFloat(newVal))) {\n      this.value = '';\n    } else if (typeof this.value !== 'string') {\n      this.value = String(this.value);\n    }\n\n    super._valueChanged(this.value, oldVal);\n  }\n\n  _onKeyDown(e) {\n    if (e.keyCode == 38) {\n      e.preventDefault();\n      this._increaseValue();\n    } else if (e.keyCode == 40) {\n      e.preventDefault();\n      this._decreaseValue();\n    }\n    super._onKeyDown(e);\n  }\n\n  __onInputChange() {\n    this.validate();\n  }\n\n  checkValidity() {\n    // text-field mixin does not check against `min`, `max` and `step`\n    if (this.min !== undefined || this.max !== undefined || this.__validateByStep) {\n      return this.inputElement.checkValidity();\n    }\n\n    return super.checkValidity();\n  }\n}\n\nwindow.customElements.define(NumberFieldElement.is, NumberFieldElement);\n\nexport { NumberFieldElement };\n","/**\n@license\nCopyright (c) 2019 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport '@polymer/polymer/polymer-element.js';\n\nimport '@polymer/polymer/lib/elements/custom-style.js';\nimport { NumberFieldElement } from './vaadin-number-field.js';\nconst $_documentContainer = document.createElement('template');\n\n$_documentContainer.innerHTML = `<dom-module id=\"vaadin-integer-field-template\">\n\n  \n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\n\n/**\n* `<vaadin-integer-field>` is a Web Component for integer field control in forms.\n*\n* ```html\n* <vaadin-integer-field label=\"Number\">\n* </vaadin-integer-field>\n* ```\n*\n* @extends PolymerElement\n* @demo demo/index.html\n*/\nclass IntegerFieldElement extends NumberFieldElement {\n  static get is() {\n    return 'vaadin-integer-field';\n  }\n\n  static get version() {\n    return '2.6.2';\n  }\n\n  static get properties() {\n    // Hide inherited props that don't work with <input type=\"number\"> from JSDoc.\n    return {\n      /**\n       * @private\n       */\n      pattern: String,\n      /**\n       * @private\n       */\n      preventInvalidInput: Boolean,\n      /**\n       * @private\n       */\n      minlength: Number,\n      /**\n       * @private\n       */\n      maxlength: Number\n    };\n  }\n\n  ready() {\n    super.ready();\n    this._enabledCharPattern = '[-+\\\\d]';\n  }\n\n  _valueChanged(newVal, oldVal) {\n    if (newVal !== '' && !this.__isInteger(newVal)) {\n      console.warn(`Trying to set non-integer value \"${newVal}\" to <vaadin-integer-field>.`\n        + ` Clearing the value.`);\n      this.value = '';\n      return;\n    }\n    super._valueChanged(newVal, oldVal);\n  }\n\n  _stepChanged(newVal, oldVal) {\n    if (!this.__hasOnlyDigits(newVal)) {\n      console.warn(`Trying to set invalid step size \"${newVal}\",`\n        + ` which is not a positive integer, to <vaadin-integer-field>.`\n        + ` Resetting the default value 1.`);\n      this.step = 1;\n      return;\n    }\n    super._stepChanged(newVal, oldVal);\n  }\n\n  __isInteger(value) {\n    return /^(-\\d)?\\d*$/.test(String(value));\n  }\n\n  __hasOnlyDigits(value) {\n    return /^\\d*$/.test(String(value));\n  }\n}\n\nwindow.customElements.define(IntegerFieldElement.is, IntegerFieldElement);\n\nexport { IntegerFieldElement };\n","import { PolymerElement, html } from \"@polymer/polymer\";\nimport \"@polymer/polymer/lib/elements/dom-repeat.js\";\nimport \"@vaadin/vaadin-checkbox\";\nimport \"@vaadin/vaadin-text-field/vaadin-integer-field\";\nimport \"../../dnd-button\";\nimport { cloneDeep, findInPath } from \"../../../js/utils\";\nimport {\n  getCharacterChannel,\n  getSelectedCharacter,\n  setCustomRoll,\n  removeCustomRoll,\n  removeCustomRollDamage\n} from \"../../../util/charBuilder\";\nimport { DAMAGE_TYPES } from \"../../../util/consts\";\nimport { dispatchEditModeChange, getEditModeChannel, isEditMode } from \"../../../util/editMode\";\nimport { rollDice, rollHit } from \"../../../util/roll\";\n\nclass DndCharacterBuilderRolls extends PolymerElement {\n  \n  static get properties() {\n    return {\n      isEditMode: {\n        type: Boolean,\n        value: false\n      },\n      customRolls: {\n        type: Array\n      }\n    };\n  }\n  \n  connectedCallback() {\n    super.connectedCallback();\n\n    this.damageTypes = DAMAGE_TYPES;\n    \n    this.characterChangeHandler = (e) => {\n      let character = e.detail.character;\n      this.updateFromCharacter(character);\n    };\n    \n    this.updateFromCharacter(getSelectedCharacter());\n    getCharacterChannel().addEventListener(\"character-selected\", this.characterChangeHandler);\n    \n    this.editModeHandler = (e) => {\n      this.isEditMode = e.detail.isEditMode;\n    }\n    getEditModeChannel().addEventListener('editModeChange', this.editModeHandler);\n    this.isEditMode = isEditMode();\n  }\n  \n  disconnectedCallback() {\n    super.disconnectedCallback();\n    \n    getCharacterChannel().removeEventListener(\"character-selected\", this.characterChangeHandler);\n    getEditModeChannel().removeEventListener('editModeChange', this.editModeHandler);\n  }\n  \n  async updateFromCharacter(character) {\n    this.customRolls = character.customRolls ? cloneDeep(character.customRolls) : [];\n\n    this.dispatchEvent(new CustomEvent(\"loadingChange\", { bubbles: true, composed: true }));\n  }\n  \n  __exists() {\n    for (let arg of arguments) {\n      if (!!arg && (arg.constructor !== Object || Object.entries(arg).length > 0) && (!Array.isArray(arg) || arg.length > 0)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  __abs(num) {\n    return num >= 0 ? `+${num}`: num;\n  }\n  \n  _makeRoll(e) {\n    if (!this.isEditMode) {\n      let rollModel = e.model.__data.item;\n      if (!rollModel.noHitRoll) {\n        rollHit(`${rollModel.name} (to hit)`, rollModel.toHit, this.$.advMod.checked, this.$.disadvMod.checked);\n      }\n      rollModel.damages.forEach((damage, index) => {\n        rollDice(`${rollModel.name} (${damage.type} damage)`, damage.roll);\n\n        setTimeout(() =>{\n        }, (index + 1) * 500);\n      });\n    }\n  }\n\n  _rollChangeHandler(e) {\n    const rollEl = findInPath('.roll', e);\n    const rollIndexAttr = rollEl.getAttribute('index');\n    const rollIndex = parseInt(rollIndexAttr, 10);\n    setCustomRoll(this.customRolls[rollIndex], rollIndex);\n  }\n\n  _addRoll() {\n    const newRoll = {name: \"\", toHit: 0, noHitRoll: false, damages: [ {roll: '', type: ''} ]};\n    setCustomRoll(newRoll, this.customRolls.length);\n    if (!this.isEditMode) {\n      dispatchEditModeChange(true);\n    }\n    setTimeout(() => {\n      const rollEls = this.shadowRoot.querySelectorAll('.roll');\n      rollEls[rollEls.length - 1].scrollIntoView();\n    }, 1);\n  }\n\n  _removeRoll(e) {\n    const rollEl = findInPath('.roll', e);\n    const rollIndexAttr = rollEl.getAttribute('index');\n    const rollIndex = parseInt(rollIndexAttr, 10);\n    removeCustomRoll(rollIndex);\n  }\n\n  _addDamage(e) {\n    const rollEl = findInPath('.roll', e);\n    const rollIndexAttr = rollEl.getAttribute('index');\n    const rollIndex = parseInt(rollIndexAttr, 10);\n    const curRoll = this.customRolls[rollIndex];\n    curRoll.damages.push({roll: '', type: ''});\n    setCustomRoll(curRoll, rollIndex);\n  }\n\n  _removeDamage(e) {\n    const rollEl = findInPath('.roll', e);\n    const rollIndexAttr = rollEl.getAttribute('index');\n    const rollIndex = parseInt(rollIndexAttr, 10);\n    const rollDamageEl = findInPath('.roll__damage', e);\n    const rollDamageIndexAttr = rollDamageEl.getAttribute('index');\n    const rollDamageIndex = parseInt(rollDamageIndexAttr, 10);\n    removeCustomRollDamage(rollIndex, rollDamageIndex);\n  }\n\n  _or(a, b) {\n    return a || b;\n  }\n\n  _orNot(a, b){\n    return a || !b;\n  }\n\n  _isTruthy(a) {\n    return !!a;\n  }\n\n  _modChange(e) {\n    if (e.currentTarget.id === 'advMod') {\n      this.$.disadvMod.checked = false;\n    } else {\n      this.$.advMod.checked = false;\n    }\n  }\n  \n  static get template() {\n    return html`\n    <style include=\"material-styles\">\n      body {}\n      :host {\n        display: block;\n        padding: 14px;\n      }\n      [hidden] {\n        display: none !important;\n      }\n      \n      .col-wrap {\n        display: flex; \n        justify-content: space-between;\n        flex-wrap: wrap;\n        margin-bottom: 56px;\n      }\n      .row-wrap {\n        width: 100%;\n      }\n\n      .heading {\n        width: 100%;\n        display: flex;\n        flex-direction: row;\n        align-items: center;\n        justify-content: space-between;\n      }\n\n      h2 {\n        margin-bottom: 24px;\n      }\n\n      .rolls__add-button {\n        margin-left: 16px;\n      }\n\n      .roll {\n        display: flex;\n        flex-direction: column;\n        cursor: pointer;\n        border-radius: 4px;\n        padding: 8px;\n        margin-bottom: 16px;\n        background: var(--lumo-contrast-10pct);\n        height: min-content;\n        width: calc(100% - 16px);\n      }\n      \n      .rolls {\n        display: flex;\n        flex-wrap: wrap;\n        justify-content: space-between;\n        padding-bottom: 60px;\n      }\n\n      @media(min-width: 500px) {\n        .roll {\n          width: calc(50% - 24px);\n        }\n      }\n\n      @media(min-width: 921px) {\n        :host {\n          padding-right: 0px;\n        }\n        .roll {\n          max-width: 380px;\n          margin-right: 15px;\n        }\n        .rolls {\n          display: flex;\n          flex-wrap: wrap;\n        }\n      }\n\n      @media(min-width: 1321px) {\n        .roll {\n          width: calc(33.3% - 32px);\n        }\n      }\n\n      .roll-header {\n        display: flex;\n        justify-content: space-between;\n      }\n      .roll-header dnd-button {\n        margin-top: 20px;\n      }\n      .roll-header vaadin-text-field {\n        padding-top: 0;\n      }\n      h3 {\n        margin: 4px 0;\n      }\n      .roll__to-hit {\n        display: flex;\n      }\n      .roll__to-hit dnd-switch {\n        margin: 0 auto;\n        padding: 26px 20px 27px;\n      }\n\n      .roll-footer {\n        display: flex;\n        flex-direction: column;\n      }\n      .roll__damages {\n        display: flex;\n        flex-direction: column;\n      }\n      .roll__damage {\n        display: flex;\n      }\n      .roll__damage vaadin-text-field,\n      .roll__damage vaadin-select {\n        max-width: 100%;\n      }\n      .roll__damage-roll--edit,\n      .roll__damage-type--edit {\n        width: calc(50% - 40px);\n      }\n      .roll__damage-roll--edit {\n        margin-right: 16px;\n      }\n      .roll__damage-remove {\n        margin: auto 16px 4px;\n      }\n\n      .rolls__toolbar {\n        display: flex;\n        flex-wrap: wrap;\n        align-items: center;\n        margin-bottom: 20px;\n      }\n      .rolls__toolbar h4 {\n        width: 100%;\n        margin: 0;\n      }\n      .rolls__toolbar-reset-mods {\n        display: inline-flex;\n      }\n      .roll__add-damage {\n        width: min-content;\n        margin: 8px auto 0;\n      }\n    </style>\n    \n    <div class=\"col-wrap\">\n      <div class=\"row-wrap\">\n        <div class=\"heading\">\n          <h2>Rolls</h2>\n          <dnd-button class=\"rolls__add-button link\" edit-mode$=\"[[isEditMode]]\" not-edit-mode$=\"[[!isEditMode]]\" label=\"Add a Roll\" icon=\"edit\"  on-click=\"_addRoll\"></dnd-button>\n        </div>\n\n        <div hidden$=\"[[isEditMode]]\" class=\"rolls__toolbar\">\n          <h4>Roll Modifiers:</h4>\n          <div>\n            <vaadin-checkbox id='advMod' on-change=\"_modChange\">Advantage</vaadin-checkbox>\n            <vaadin-checkbox id='disadvMod' on-change=\"_modChange\">Disadvantage</vaadin-checkbox>\n          </div>\n        </div>\n\n        <div class=\"rolls rolls--custom\">\n\n          <template is=\"dom-repeat\" items=\"[[customRolls]]\">\n            <template is=\"dom-if\" if=\"[[!isEditMode]]\">\n              <div class=\"roll\" on-click=\"_makeRoll\" index$=\"[[index]]\">\n                <div class=\"roll-header\">\n                  <h3>[[item.name]]<span hidden$=\"[[_isTruthy(item.name)]]\">&lt;No Name&gt;</span></h3>\n                </div>\n\n                <div class=\"roll-footer\">\n                  <div class=\"roll__to-hit\">\n                    <span hidden$=\"[[_or(item.noHitRoll, isEditMode)]]\"><span>[[__abs(item.toHit)]]</span> to hit</span>\n                  </div>\n\n                  <div class=\"roll__damages\">\n                    <template is=\"dom-repeat\" items=\"[[item.damages]]\" as=\"damage\">\n                      <div class=\"roll__damage\" index$=\"[[index]]\">\n                        <span class=\"roll__damage-roll\" >[[damage.roll]]</span>\n                        <span class=\"roll__damage-type\">&nbsp;[[damage.type]] damage</span>\n                      </div>\n                    </template>\n                  </div>\n                </div>\n              </div>\n            </template>\n\n            <template is=\"dom-if\" if=\"[[isEditMode]]\">\n              <div class=\"roll\" on-click=\"_makeRoll\" index$=\"[[index]]\">\n                <div class=\"roll-header\">\n                  <vaadin-text-field value=\"{{item.name}}\" on-change=\"_rollChangeHandler\" label=\"Name\"></vaadin-text-field>\n                  <dnd-button label=\"Remove\" icon=\"remove\" on-click=\"_removeRoll\"></dnd-button>\n                </div>\n\n                <div class=\"roll-footer\">\n                  <div class=\"roll__to-hit\">\n                    <vaadin-integer-field hidden$=\"[[_orNot(item.noHitRoll, isEditMode)]]\" value=\"{{item.toHit}}\" on-change=\"_rollChangeHandler\" min=\"-20\" max=\"20\" has-controls label=\"To Hit\"></vaadin-integer-field>\n                    <dnd-switch label='Attack Roll' secondary-label='Damage Only' initial-value=\"[[item.noHitRoll]]\" checked={{item.noHitRoll}} on-switch-change=\"_rollChangeHandler\" ></dnd-switch>\n                  </div>\n\n                  <div class=\"roll__damages\">\n                    <template is=\"dom-repeat\" items=\"[[item.damages]]\" as=\"damage\">\n                      <div class=\"roll__damage\" index$=\"[[index]]\">\n                        <dnd-button on-click=\"_removeDamage\" icon=\"remove\" class='roll__damage-remove icon-only'></dnd-button>\n                        <div class=\"roll__damage-roll--edit\">\n                          <vaadin-text-field value=\"{{damage.roll}}\" on-change=\"_rollChangeHandler\" label=\"Damage Roll\"></vaadin-text-field>\n                        </div>\n                        <div class=\"roll__damage-type--edit\">\n                          <vaadin-select value=\"{{damage.type}}\" on-change=\"_rollChangeHandler\" label=\"Damage Type\" >\n                            <template>\n                              <vaadin-list-box>\n                                <template is=\"dom-repeat\" items=\"[[damageTypes]]\">\n                                  <vaadin-item>[[item]]</vaadin-item>\n                                </template>\n                              </vaadin-list-box>\n                            </template>\n                          </vaadin-select>\n                        </div>\n                      </div>\n                    </template>\n                    <dnd-button on-click=\"_addDamage\" label=\"Add Damage\" icon=\"add\" class=\"roll__add-damage\"></dnd-button>\n                  </div>\n                </div>\n              </div>\n            </template>\n          </template>\n        </div>\n\n      </div>\n    </div>\n    `;\n  }\n}\n\ncustomElements.define(\"dnd-character-builder-rolls\", DndCharacterBuilderRolls);"],"sourceRoot":""}