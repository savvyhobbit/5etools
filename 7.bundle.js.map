{"version":3,"sources":["webpack:///./node_modules/@vaadin/vaadin-text-field/theme/lumo/vaadin-number-field-styles.js","webpack:///./node_modules/@vaadin/vaadin-text-field/src/vaadin-number-field.js","webpack:///./node_modules/@vaadin/vaadin-text-field/src/vaadin-integer-field.js","webpack:///./node_modules/@vaadin/vaadin-checkbox/vaadin-checkbox.js","webpack:///./components/views/character/dnd-character-builder-rolls.js"],"names":["$_documentContainer","document","head","appendChild","content","createElement","memoizedTemplate","innerHTML","hasControls","type","Boolean","value","reflectToAttribute","min","Number","observer","max","step","super","ready","this","__previousValidInput","inputElement","addEventListener","__onInputChange","bind","e","preventDefault","_decreaseValue","_increaseValue","template","cloneNode","thisTemplate","import","is","decreaseButton","querySelector","increaseButton","styles","inputField","prefixSlot","insertBefore","_createMethodObserver","required","minlength","maxlength","pattern","invalid","isNumUnset","n","_constraintsChanged","validate","_incrementValue","incr","disabled","readonly","parseFloat","_getIncrement","newValue","_incrementIsInsideTheLimits","_setValue","String","dispatchEvent","CustomEvent","bubbles","currentValue","multiplier","Math","_getMultiplier","margin","round","number","s","i","indexOf","length","isNaN","pow","_getDecimalCount","sign","__validateByStep","__stepChangedCalled","getAttribute","setAttribute","newVal","oldVal","_valueChanged","keyCode","_onKeyDown","undefined","checkValidity","window","customElements","define","preventInvalidInput","_enabledCharPattern","__isInteger","console","warn","__hasOnlyDigits","_stepChanged","test","DndCharacterBuilderRolls","isEditMode","customRolls","Array","connectedCallback","damageTypes","characterChangeHandler","character","detail","updateFromCharacter","editModeHandler","disconnectedCallback","removeEventListener","composed","arg","arguments","constructor","Object","entries","isArray","num","rollModel","model","__data","item","noHitRoll","name","toHit","$","advMod","checked","disadvMod","damages","forEach","damage","index","roll","setTimeout","rollIndexAttr","rollIndex","parseInt","rollEls","shadowRoot","querySelectorAll","scrollIntoView","curRoll","push","rollDamageIndexAttr","rollDamageIndex","a","b","currentTarget","id"],"mappings":"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","file":"7.bundle.js","sourcesContent":["import '@vaadin/vaadin-lumo-styles/font-icons.js';\nimport '@vaadin/vaadin-lumo-styles/sizing.js';\nimport '@vaadin/vaadin-lumo-styles/mixins/field-button.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\n\nconst $_documentContainer = html`<dom-module id=\"lumo-number-field\" theme-for=\"vaadin-number-field\">\n  <template>\n    <style include=\"lumo-field-button\">\n      :host {\n        width: 8em;\n      }\n\n      :host([has-controls]:not([theme~=\"align-right\"])) [part=\"value\"] {\n        text-align: center;\n      }\n\n      [part=\"decrease-button\"][disabled],\n      [part=\"increase-button\"][disabled] {\n        opacity: 0.2;\n      }\n\n      :host([has-controls]) [part=\"input-field\"] {\n        padding: 0;\n      }\n\n      [part=\"decrease-button\"],\n      [part=\"increase-button\"] {\n        cursor: pointer;\n        font-size: var(--lumo-icon-size-s);\n        width: 1.6em;\n        height: 1.6em;\n      }\n\n      [part=\"decrease-button\"]::before,\n      [part=\"increase-button\"]::before {\n        margin-top: 0.2em;\n      }\n\n      /* RTL specific styles */\n\n      :host([dir=\"rtl\"]) [part=\"value\"],\n      :host([dir=\"rtl\"]) [part=\"input-field\"] ::slotted(input) {\n        --_lumo-text-field-overflow-mask-image: linear-gradient(to left, transparent, #000 1.25em);\n      }\n    </style>\n  </template>\n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\n","/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport '@polymer/polymer/polymer-element.js';\n\nimport '@polymer/polymer/lib/elements/custom-style.js';\nimport { TextFieldElement } from './vaadin-text-field.js';\nimport { DomModule } from '@polymer/polymer/lib/elements/dom-module.js';\nconst $_documentContainer = document.createElement('template');\n\n$_documentContainer.innerHTML = `<dom-module id=\"vaadin-number-field-template\">\n  <template>\n    <style>\n      :host([readonly]) [part\\$=\"button\"] {\n        pointer-events: none;\n      }\n\n      [part=\"decrease-button\"]::before {\n        content: \"−\";\n      }\n\n      [part=\"increase-button\"]::before {\n        content: \"+\";\n      }\n\n      [part=\"decrease-button\"],\n      [part=\"increase-button\"] {\n        -webkit-user-select: none;\n        -moz-user-select: none;\n        -ms-user-select: none;\n        user-select: none;\n      }\n\n      /* Hide the native arrow icons */\n      [part=\"value\"]::-webkit-outer-spin-button,\n      [part=\"value\"]::-webkit-inner-spin-button {\n        -webkit-appearance: none;\n        margin: 0;\n      }\n\n      [part=\"value\"] {\n        /* Older Firefox versions (v47.0) requires !important */\n        -moz-appearance: textfield !important;\n      }\n\n      :host([dir=\"rtl\"]) [part=\"input-field\"] {\n        direction: ltr;\n      }\n\n      :host([dir=\"rtl\"]) [part=\"value\"]::placeholder {\n        direction: rtl;\n      }\n\n      :host([dir=\"rtl\"]) [part=\"input-field\"] ::slotted(input)::placeholder {\n        direction: rtl;\n      }\n\n      :host([dir=\"rtl\"]) [part=\"value\"]:-ms-input-placeholder,\n      :host([dir=\"rtl\"]) [part=\"input-field\"] ::slotted(input):-ms-input-placeholder {\n        direction: rtl;\n      }\n\n      :host([dir=\"rtl\"]:not([has-controls])) [part=\"value\"]::placeholder {\n        text-align: left;\n      }\n\n      :host([dir=\"rtl\"]:not([has-controls])) [part=\"input-field\"] ::slotted(input)::placeholder {\n        text-align: left;\n      }\n\n      :host([dir=\"rtl\"]:not([has-controls])) [part=\"value\"]:-ms-input-placeholder,\n      :host([dir=\"rtl\"]:not([has-controls])) [part=\"input-field\"] ::slotted(input):-ms-input-placeholder {\n        text-align: left;\n      }\n    </style>\n\n    <div disabled\\$=\"[[!_allowed(-1, value, min, max, step)]]\" part=\"decrease-button\" on-click=\"_decreaseValue\" on-touchend=\"_decreaseButtonTouchend\" hidden\\$=\"[[!hasControls]]\">\n    </div>\n\n    <div disabled\\$=\"[[!_allowed(1, value, min, max, step)]]\" part=\"increase-button\" on-click=\"_increaseValue\" on-touchend=\"_increaseButtonTouchend\" hidden\\$=\"[[!hasControls]]\">\n    </div>\n  </template>\n\n  \n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\nlet memoizedTemplate;\n\n/**\n* `<vaadin-number-field>` is a Web Component for number field control in forms.\n*\n* ```html\n* <vaadin-number-field label=\"Number\">\n* </vaadin-number-field>\n* ```\n*\n* @extends PolymerElement\n* @demo demo/index.html\n*/\nclass NumberFieldElement extends TextFieldElement {\n  static get is() {\n    return 'vaadin-number-field';\n  }\n\n  static get version() {\n    return '2.6.2';\n  }\n\n  static get properties() {\n    return {\n      /**\n      * Set to true to display value increase/decrease controls.\n      */\n      hasControls: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n\n      /**\n      * The minimum value of the field.\n      */\n      min: {\n        type: Number,\n        reflectToAttribute: true,\n        observer: '_minChanged'\n      },\n\n      /**\n       * The maximum value of the field.\n       */\n      max: {\n        type: Number,\n        reflectToAttribute: true,\n        observer: '_maxChanged'\n      },\n\n      /**\n       * Specifies the allowed number intervals of the field.\n       */\n      step: {\n        type: Number,\n        value: 1,\n        observer: '_stepChanged'\n      }\n\n    };\n  }\n\n  ready() {\n    super.ready();\n    this.__previousValidInput = this.value || '';\n    this.inputElement.type = 'number';\n    this.inputElement.addEventListener('change', this.__onInputChange.bind(this));\n  }\n\n  _decreaseButtonTouchend(e) {\n    // Cancel the following click and focus events\n    e.preventDefault();\n    this._decreaseValue();\n  }\n\n  _increaseButtonTouchend(e) {\n    // Cancel the following click and focus events\n    e.preventDefault();\n    this._increaseValue();\n  }\n\n  static get template() {\n    if (!memoizedTemplate) {\n      // Clone the superclass template\n      memoizedTemplate = super.template.cloneNode(true);\n\n      // Retrieve this element's dom-module template\n      const thisTemplate = DomModule.import(this.is + '-template', 'template');\n      const decreaseButton = thisTemplate.content.querySelector('[part=\"decrease-button\"]');\n      const increaseButton = thisTemplate.content.querySelector('[part=\"increase-button\"]');\n      const styles = thisTemplate.content.querySelector('style');\n\n      // Add the buttons and styles to the text-field template\n      const inputField = memoizedTemplate.content.querySelector('[part=\"input-field\"]');\n      const prefixSlot = memoizedTemplate.content.querySelector('[name=\"prefix\"]');\n      inputField.insertBefore(decreaseButton, prefixSlot);\n      inputField.appendChild(increaseButton);\n      memoizedTemplate.content.appendChild(styles);\n    }\n\n    return memoizedTemplate;\n  }\n\n  _createConstraintsObserver() {\n    // NOTE: do not call \"super\" but instead override the method to add extra arguments\n    this._createMethodObserver('_constraintsChanged(required, minlength, maxlength, pattern, min, max, step)');\n  }\n\n  _constraintsChanged(required, minlength, maxlength, pattern, min, max, step) {\n    if (!this.invalid) {\n      return;\n    }\n\n    const isNumUnset = n => (!n && n !== 0);\n\n    if (!isNumUnset(min) || !isNumUnset(max)) {\n      this.validate();\n    } else {\n      super._constraintsChanged(required, minlength, maxlength, pattern);\n    }\n  }\n\n  _decreaseValue() {\n    this._incrementValue(-1);\n  }\n\n  _increaseValue() {\n    this._incrementValue(1);\n  }\n\n  _incrementValue(incr) {\n    if (this.disabled || this.readonly) {\n      return;\n    }\n\n    let value = parseFloat(this.value);\n\n    if (!this.value) {\n      if (this.min == 0 && incr < 0 ||\n          this.max == 0 && incr > 0 ||\n          this.max == 0 && this.min == 0) {\n        incr = 0;\n        value = 0;\n      } else if ((this.max == null || this.max >= 0) &&\n                 (this.min == null || this.min <= 0)) {\n        value = 0;\n      } else if (this.min > 0) {\n        value = this.min;\n        if (this.max < 0 && incr < 0) {\n          value = this.max;\n        }\n        incr = 0;\n      } else if (this.max < 0) {\n        value = this.max;\n        if (incr < 0) {\n          incr = 0;\n        } else {\n          // FIXME(yuriy): find a proper solution to make correct step back\n          if (this._getIncrement(1, value - this.step) > this.max) {\n            value -= 2 * this.step;\n          } else {\n            value -= this.step;\n          }\n        }\n      }\n    } else if (value < this.min) {\n      incr = 0;\n      value = this.min;\n    } else if (value > this.max) {\n      incr = 0;\n      value = this.max;\n    }\n\n    const newValue = this._getIncrement(incr, value);\n    if (!this.value || incr == 0 || this._incrementIsInsideTheLimits(incr, value)) {\n      this._setValue(newValue);\n    }\n  }\n\n  _setValue(value) {\n    this.value = this.inputElement.value = String(parseFloat(value));\n    this.dispatchEvent(new CustomEvent('change', {bubbles: true}));\n  }\n\n  _getIncrement(incr, currentValue) {\n    let step = this.step || 1,\n      min = this.min || 0;\n\n    // To avoid problems with decimal math, multiplying to operate with integers.\n    const multiplier = Math.max(this._getMultiplier(currentValue),\n      this._getMultiplier(step),\n      this._getMultiplier(min));\n\n    step *= multiplier;\n    currentValue = Math.round(currentValue * multiplier);\n    min *= multiplier;\n\n    const margin = (currentValue - min) % step;\n\n    if (incr > 0) {\n      return (currentValue - margin + step) / multiplier;\n    } else if (incr < 0) {\n      return (currentValue - (margin || step)) / multiplier;\n    } else {\n      return currentValue / multiplier;\n    }\n  }\n\n  _getDecimalCount(number) {\n    const s = String(number);\n    const i = s.indexOf('.');\n    return i === -1 ? 1 : s.length - i - 1;\n  }\n\n  _getMultiplier(number) {\n    if (!isNaN(number)) {\n      return Math.pow(10, this._getDecimalCount(number));\n    }\n  }\n\n  _incrementIsInsideTheLimits(incr, value) {\n    if (incr < 0) {\n      return this.min == null || this._getIncrement(incr, value) >= this.min;\n    } else if (incr > 0) {\n      return this.max == null || this._getIncrement(incr, value) <= this.max;\n    } else {\n      return this._getIncrement(incr, value) <= this.max && this._getIncrement(incr, value) >= this.min;\n    }\n  }\n\n  _allowed(sign) {\n    const incr = sign * (this.step || 1);\n    const value = parseFloat(this.value);\n    return !this.value || (!this.disabled && this._incrementIsInsideTheLimits(incr, value));\n  }\n\n  _stepChanged(step) {\n    // Avoid using initial value in validation\n    this.__validateByStep = this.__stepChangedCalled || this.getAttribute('step') !== null;\n    this.inputElement.step = this.__validateByStep ? step : 'any';\n\n    this.__stepChangedCalled = true;\n    this.setAttribute('step', step);\n  }\n\n  _minChanged(min) {\n    this.inputElement.min = min;\n  }\n\n  _maxChanged(max) {\n    this.inputElement.max = max;\n  }\n\n  _valueChanged(newVal, oldVal) {\n    // Validate value to be numeric\n    if (newVal && isNaN(parseFloat(newVal))) {\n      this.value = '';\n    } else if (typeof this.value !== 'string') {\n      this.value = String(this.value);\n    }\n\n    super._valueChanged(this.value, oldVal);\n  }\n\n  _onKeyDown(e) {\n    if (e.keyCode == 38) {\n      e.preventDefault();\n      this._increaseValue();\n    } else if (e.keyCode == 40) {\n      e.preventDefault();\n      this._decreaseValue();\n    }\n    super._onKeyDown(e);\n  }\n\n  __onInputChange() {\n    this.validate();\n  }\n\n  checkValidity() {\n    // text-field mixin does not check against `min`, `max` and `step`\n    if (this.min !== undefined || this.max !== undefined || this.__validateByStep) {\n      return this.inputElement.checkValidity();\n    }\n\n    return super.checkValidity();\n  }\n}\n\nwindow.customElements.define(NumberFieldElement.is, NumberFieldElement);\n\nexport { NumberFieldElement };\n","/**\n@license\nCopyright (c) 2019 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport '@polymer/polymer/polymer-element.js';\n\nimport '@polymer/polymer/lib/elements/custom-style.js';\nimport { NumberFieldElement } from './vaadin-number-field.js';\nconst $_documentContainer = document.createElement('template');\n\n$_documentContainer.innerHTML = `<dom-module id=\"vaadin-integer-field-template\">\n\n  \n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\n\n/**\n* `<vaadin-integer-field>` is a Web Component for integer field control in forms.\n*\n* ```html\n* <vaadin-integer-field label=\"Number\">\n* </vaadin-integer-field>\n* ```\n*\n* @extends PolymerElement\n* @demo demo/index.html\n*/\nclass IntegerFieldElement extends NumberFieldElement {\n  static get is() {\n    return 'vaadin-integer-field';\n  }\n\n  static get version() {\n    return '2.6.2';\n  }\n\n  static get properties() {\n    // Hide inherited props that don't work with <input type=\"number\"> from JSDoc.\n    return {\n      /**\n       * @private\n       */\n      pattern: String,\n      /**\n       * @private\n       */\n      preventInvalidInput: Boolean,\n      /**\n       * @private\n       */\n      minlength: Number,\n      /**\n       * @private\n       */\n      maxlength: Number\n    };\n  }\n\n  ready() {\n    super.ready();\n    this._enabledCharPattern = '[-+\\\\d]';\n  }\n\n  _valueChanged(newVal, oldVal) {\n    if (newVal !== '' && !this.__isInteger(newVal)) {\n      console.warn(`Trying to set non-integer value \"${newVal}\" to <vaadin-integer-field>.`\n        + ` Clearing the value.`);\n      this.value = '';\n      return;\n    }\n    super._valueChanged(newVal, oldVal);\n  }\n\n  _stepChanged(newVal, oldVal) {\n    if (!this.__hasOnlyDigits(newVal)) {\n      console.warn(`Trying to set invalid step size \"${newVal}\",`\n        + ` which is not a positive integer, to <vaadin-integer-field>.`\n        + ` Resetting the default value 1.`);\n      this.step = 1;\n      return;\n    }\n    super._stepChanged(newVal, oldVal);\n  }\n\n  __isInteger(value) {\n    return /^(-\\d)?\\d*$/.test(String(value));\n  }\n\n  __hasOnlyDigits(value) {\n    return /^\\d*$/.test(String(value));\n  }\n}\n\nwindow.customElements.define(IntegerFieldElement.is, IntegerFieldElement);\n\nexport { IntegerFieldElement };\n","import './theme/lumo/vaadin-checkbox.js';\nexport * from './src/vaadin-checkbox.js';\n","import { PolymerElement, html } from \"@polymer/polymer\";\nimport \"@polymer/polymer/lib/elements/dom-repeat.js\";\nimport \"@vaadin/vaadin-checkbox\";\nimport \"@vaadin/vaadin-text-field/vaadin-integer-field\";\nimport \"../../dnd-button\";\nimport { cloneDeep, findInPath } from \"../../../js/utils\";\nimport {\n  getCharacterChannel,\n  getSelectedCharacter,\n  setCustomRoll,\n  removeCustomRoll,\n  removeCustomRollDamage\n} from \"../../../util/charBuilder\";\nimport { DAMAGE_TYPES } from \"../../../util/consts\";\nimport { dispatchEditModeChange, getEditModeChannel, isEditMode } from \"../../../util/editMode\";\nimport { rollDice, rollHit } from \"../../../util/roll\";\n\nclass DndCharacterBuilderRolls extends PolymerElement {\n  \n  static get properties() {\n    return {\n      isEditMode: {\n        type: Boolean,\n        value: false\n      },\n      customRolls: {\n        type: Array\n      }\n    };\n  }\n  \n  connectedCallback() {\n    super.connectedCallback();\n\n    this.damageTypes = DAMAGE_TYPES;\n    \n    this.characterChangeHandler = (e) => {\n      let character = e.detail.character;\n      this.updateFromCharacter(character);\n    };\n    \n    this.updateFromCharacter(getSelectedCharacter());\n    getCharacterChannel().addEventListener(\"character-selected\", this.characterChangeHandler);\n    \n    this.editModeHandler = (e) => {\n      this.isEditMode = e.detail.isEditMode;\n    }\n    getEditModeChannel().addEventListener('editModeChange', this.editModeHandler);\n    this.isEditMode = isEditMode();\n  }\n  \n  disconnectedCallback() {\n    super.disconnectedCallback();\n    \n    getCharacterChannel().removeEventListener(\"character-selected\", this.characterChangeHandler);\n    getEditModeChannel().removeEventListener('editModeChange', this.editModeHandler);\n  }\n  \n  async updateFromCharacter(character) {\n    this.customRolls = character.customRolls ? cloneDeep(character.customRolls) : [];\n\n    this.dispatchEvent(new CustomEvent(\"loadingChange\", { bubbles: true, composed: true }));\n  }\n  \n  __exists() {\n    for (let arg of arguments) {\n      if (!!arg && (arg.constructor !== Object || Object.entries(arg).length > 0) && (!Array.isArray(arg) || arg.length > 0)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  __abs(num) {\n    return num >= 0 ? `+${num}`: num;\n  }\n  \n  _makeRoll(e) {\n    if (!this.isEditMode) {\n      let rollModel = e.model.__data.item;\n      if (!rollModel.noHitRoll) {\n        rollHit(`${rollModel.name} (to hit)`, rollModel.toHit, this.$.advMod.checked, this.$.disadvMod.checked);\n      }\n      rollModel.damages.forEach((damage, index) => {\n        rollDice(`${rollModel.name} (${damage.type} damage)`, damage.roll);\n\n        setTimeout(() =>{\n        }, (index + 1) * 500);\n      });\n    }\n  }\n\n  _rollChangeHandler(e) {\n    const rollEl = findInPath('.roll', e);\n    const rollIndexAttr = rollEl.getAttribute('index');\n    const rollIndex = parseInt(rollIndexAttr, 10);\n    setCustomRoll(this.customRolls[rollIndex], rollIndex);\n  }\n\n  _addRoll() {\n    const newRoll = {name: \"\", toHit: 0, noHitRoll: false, damages: [ {roll: '', type: ''} ]};\n    setCustomRoll(newRoll, this.customRolls.length);\n    if (!this.isEditMode) {\n      dispatchEditModeChange(true);\n    }\n    setTimeout(() => {\n      const rollEls = this.shadowRoot.querySelectorAll('.roll');\n      rollEls[rollEls.length - 1].scrollIntoView();\n    }, 1);\n  }\n\n  _removeRoll(e) {\n    const rollEl = findInPath('.roll', e);\n    const rollIndexAttr = rollEl.getAttribute('index');\n    const rollIndex = parseInt(rollIndexAttr, 10);\n    removeCustomRoll(rollIndex);\n  }\n\n  _addDamage(e) {\n    const rollEl = findInPath('.roll', e);\n    const rollIndexAttr = rollEl.getAttribute('index');\n    const rollIndex = parseInt(rollIndexAttr, 10);\n    const curRoll = this.customRolls[rollIndex];\n    curRoll.damages.push({roll: '', type: ''});\n    setCustomRoll(curRoll, rollIndex);\n  }\n\n  _removeDamage(e) {\n    const rollEl = findInPath('.roll', e);\n    const rollIndexAttr = rollEl.getAttribute('index');\n    const rollIndex = parseInt(rollIndexAttr, 10);\n    const rollDamageEl = findInPath('.roll__damage', e);\n    const rollDamageIndexAttr = rollDamageEl.getAttribute('index');\n    const rollDamageIndex = parseInt(rollDamageIndexAttr, 10);\n    removeCustomRollDamage(rollIndex, rollDamageIndex);\n  }\n\n  _or(a, b) {\n    return a || b;\n  }\n\n  _orNot(a, b){\n    return a || !b;\n  }\n\n  _isTruthy(a) {\n    return !!a;\n  }\n\n  _modChange(e) {\n    if (e.currentTarget.id === 'advMod') {\n      this.$.disadvMod.checked = false;\n    } else {\n      this.$.advMod.checked = false;\n    }\n  }\n  \n  static get template() {\n    return html`\n    <style include=\"material-styles\">\n      body {}\n      :host {\n        display: block;\n        padding: 14px;\n      }\n      [hidden] {\n        display: none !important;\n      }\n      \n      .col-wrap {\n        display: flex; \n        justify-content: space-between;\n        flex-wrap: wrap;\n        margin-bottom: 56px;\n      }\n      .row-wrap {\n        width: 100%;\n      }\n\n      .heading {\n        width: 100%;\n        display: flex;\n        flex-direction: row;\n        align-items: center;\n        justify-content: space-between;\n        border-bottom: 1px solid var(--lumo-contrast-10pct);\n        margin-bottom: 10px;\n      }\n\n      h2 {\n        margin-bottom: 24px;\n      }\n\n      .rolls__add-button {\n        margin-left: 16px;\n      }\n\n      .roll {\n        display: flex;\n        flex-direction: column;\n        cursor: pointer;\n        border-radius: 4px;\n        padding: 8px;\n        margin-bottom: 16px;\n        background: var(--lumo-contrast-10pct);\n        height: min-content;\n        width: calc(100% - 16px);\n      }\n      \n      .rolls {\n        display: flex;\n        flex-wrap: wrap;\n        justify-content: space-between;\n        padding-bottom: 60px;\n      }\n\n      @media(min-width: 500px) {\n        .roll {\n          width: calc(50% - 24px);\n        }\n      }\n\n      @media(min-width: 921px) {\n        :host {\n        }\n        .roll {\n          max-width: 380px;\n          margin-right: 15px;\n        }\n        .rolls {\n          display: flex;\n          flex-wrap: wrap;\n        }\n      }\n\n      @media(min-width: 1321px) {\n        .roll {\n          width: calc(33.3% - 32px);\n        }\n      }\n\n      .roll-header {\n        display: flex;\n        justify-content: space-between;\n      }\n      .roll-header dnd-button {\n        margin-top: 20px;\n      }\n      .roll-header vaadin-text-field {\n        padding-top: 0;\n      }\n      h3 {\n        margin: 4px 0;\n      }\n      .roll__to-hit {\n        display: flex;\n      }\n      .roll__to-hit dnd-switch {\n        margin: 0 auto;\n        padding: 26px 20px 27px;\n      }\n\n      .roll-footer {\n        display: flex;\n        flex-direction: column;\n      }\n      .roll__damages {\n        display: flex;\n        flex-direction: column;\n      }\n      .roll__damage {\n        display: flex;\n      }\n      .roll__damage vaadin-text-field,\n      .roll__damage vaadin-select {\n        max-width: 100%;\n      }\n      .roll__damage-roll--edit,\n      .roll__damage-type--edit {\n        width: calc(50% - 40px);\n      }\n      .roll__damage-roll--edit {\n        margin: 0 16px;\n      }\n      .roll__damage-remove {\n        margin: auto -5px 4px;\n      }\n\n      .rolls__toolbar {\n        display: flex;\n        flex-wrap: wrap;\n        align-items: center;\n        margin-bottom: 20px;\n      }\n      .rolls__toolbar h4 {\n        width: 100%;\n        margin: 0;\n      }\n      .rolls__toolbar-reset-mods {\n        display: inline-flex;\n      }\n      .roll__add-damage {\n        width: min-content;\n        margin: 8px auto 0;\n      }\n    </style>\n    \n    <div class=\"col-wrap\">\n      <div class=\"row-wrap\">\n        <div class=\"heading\">\n          <h2>Rolls</h2>\n          <dnd-button class=\"rolls__add-button link\" edit-mode$=\"[[isEditMode]]\" not-edit-mode$=\"[[!isEditMode]]\" label=\"Add a Roll\" icon=\"edit\"  on-click=\"_addRoll\"></dnd-button>\n        </div>\n\n        <div hidden$=\"[[isEditMode]]\" class=\"rolls__toolbar\">\n          <h4>Roll Modifiers:</h4>\n          <div>\n            <vaadin-checkbox id='advMod' on-change=\"_modChange\">Advantage</vaadin-checkbox>\n            <vaadin-checkbox id='disadvMod' on-change=\"_modChange\">Disadvantage</vaadin-checkbox>\n          </div>\n        </div>\n\n        <div class=\"rolls rolls--custom\">\n\n          <template is=\"dom-repeat\" items=\"[[customRolls]]\">\n            <template is=\"dom-if\" if=\"[[!isEditMode]]\">\n              <div class=\"roll\" on-click=\"_makeRoll\" index$=\"[[index]]\">\n                <div class=\"roll-header\">\n                  <h3>[[item.name]]<span hidden$=\"[[_isTruthy(item.name)]]\">&lt;No Name&gt;</span></h3>\n                </div>\n\n                <div class=\"roll-footer\">\n                  <div class=\"roll__to-hit\">\n                    <span hidden$=\"[[_or(item.noHitRoll, isEditMode)]]\"><span>[[__abs(item.toHit)]]</span> to hit</span>\n                  </div>\n\n                  <div class=\"roll__damages\">\n                    <template is=\"dom-repeat\" items=\"[[item.damages]]\" as=\"damage\">\n                      <div class=\"roll__damage\" index$=\"[[index]]\">\n                        <span class=\"roll__damage-roll\" >[[damage.roll]]</span>\n                        <span class=\"roll__damage-type\">&nbsp;[[damage.type]] damage</span>\n                      </div>\n                    </template>\n                  </div>\n                </div>\n              </div>\n            </template>\n\n            <template is=\"dom-if\" if=\"[[isEditMode]]\">\n              <div class=\"roll\" on-click=\"_makeRoll\" index$=\"[[index]]\">\n                <div class=\"roll-header\">\n                  <vaadin-text-field theme=\"label--secondary\" value=\"{{item.name}}\" on-change=\"_rollChangeHandler\" label=\"Name\"></vaadin-text-field>\n                  <dnd-button icon=\"delete\" class=\"icon-only\" on-click=\"_removeRoll\"></dnd-button>\n                </div>\n\n                <div class=\"roll-footer\">\n                  <div class=\"roll__to-hit\">\n                    <vaadin-integer-field theme=\"label--secondary\" hidden$=\"[[_orNot(item.noHitRoll, isEditMode)]]\" value=\"{{item.toHit}}\" on-change=\"_rollChangeHandler\" min=\"-20\" max=\"20\" has-controls label=\"To Hit\"></vaadin-integer-field>\n                    <dnd-switch label='Attack Roll' secondary-label='Damage Only' initial-value=\"[[item.noHitRoll]]\" checked={{item.noHitRoll}} on-switch-change=\"_rollChangeHandler\" ></dnd-switch>\n                  </div>\n\n                  <div class=\"roll__damages\">\n                    <template is=\"dom-repeat\" items=\"[[item.damages]]\" as=\"damage\">\n                      <div class=\"roll__damage\" index$=\"[[index]]\">\n                        <dnd-button on-click=\"_removeDamage\" icon=\"remove\" class='roll__damage-remove icon-only'></dnd-button>\n                        <div class=\"roll__damage-roll--edit\">\n                          <vaadin-text-field theme=\"label--secondary\" value=\"{{damage.roll}}\" on-change=\"_rollChangeHandler\" label=\"Damage Roll\"></vaadin-text-field>\n                        </div>\n                        <div class=\"roll__damage-type--edit\">\n                          <vaadin-select theme=\"label--secondary\" value=\"{{damage.type}}\" on-change=\"_rollChangeHandler\" label=\"Damage Type\" >\n                            <template>\n                              <vaadin-list-box>\n                                <template is=\"dom-repeat\" items=\"[[damageTypes]]\">\n                                  <vaadin-item>[[item]]</vaadin-item>\n                                </template>\n                              </vaadin-list-box>\n                            </template>\n                          </vaadin-select>\n                        </div>\n                      </div>\n                    </template>\n                    <dnd-button on-click=\"_addDamage\" label=\"Add Damage\" icon=\"add\" class=\"roll__add-damage\"></dnd-button>\n                  </div>\n                </div>\n              </div>\n            </template>\n          </template>\n        </div>\n\n      </div>\n    </div>\n    `;\n  }\n}\n\ncustomElements.define(\"dnd-character-builder-rolls\", DndCharacterBuilderRolls);"],"sourceRoot":""}