{"version":3,"sources":["webpack:///./components/dnd-list.js","webpack:///./components/dnd-selected-item.js","webpack:///./components/dnd-selection-list.js","webpack:///./js/dice.js","webpack:///./js/items.js","webpack:///./js/spells.js","webpack:///./js eager ^\\.\\/.*\\.js$ namespace object","webpack:///./js/backgrounds.js","webpack:///./js/bestiary.js","webpack:///./js/conditions.js","webpack:///./js/cults.js","webpack:///./js/feats.js","webpack:///./js/features.js","webpack:///./js/psionics.js","webpack:///./js/races.js","webpack:///./js/rewards.js","webpack:///./js/variantrules.js"],"names":["columns","type","Array","data","observer","view","String","super","connectedCallback","this","shadowRoot","querySelector","viewChangeHandler","e","detail","addEventListener","disconnectedCallback","removeEventListener","ready","_adjustTableHeight","window","bind","retry","console","log","scrollWrapEl","$","tableScrollWrap","getBoundingClientRect","top","adjust","style","height","innerHeight","setTimeout","filters","renderTable","_setSelectionListeners","links","querySelectorAll","link","selectionId","target","closest","getAttribute","id","cssClass","customElements","define","modelId","selectedItem","Object","allItems","loading","Boolean","value","_modelsRenderSelection","Function","characterOption","dispatchEvent","CustomEvent","bubbles","composed","error","set","undefined","then","module","renderSelection","catch","thing","enableHashRouting","reflectToAttribute","disableScrollBack","hasSelection","_data","_selectedItem","_selectedHash","selectionEventHandler","_checkHashForSelection","selection","deselectionEventHandler","result","newSelection","hashSelection","isArray","itemFromHash","scrollTo","onLoad","rootEl","outputEl","total","historyIndex","diceField","useNativeValidation","outputRollResult","roll","rollResult","replace","newOutput","rolls","length","join","display","addRollHandler","innerHTML","classList","add","preventDefault","remove","focus","keyCode","which","historyCount","click","keyData","originalEvent","renderer","item","hideFirstLine","hasParsed","noDisplay","category","entries","itemTypeList","j","push","property","properties","split","itemPropertyList","k","armor","resist","stealth","strength","scfType","adjustItem","source","sourceFull","sourceJsonToFull","page","weight","tier","rarity","reqAttune","weaponCategory","damages","i","damage","isLast","dmgTypeToFull","dmg1","dmgType","ac","speed","capacity","carryingcapacity","append","indexOf","prop","a","name","dmg2","range","reload","entryList","renderStack","recursiveEntryRender","toLowerCase","spell","spellHtmlString","spellHtml","sourceJsonToAbv","spLevelSchoolMetaToFull","level","school","meta","spTimeListToFull","time","spRangeToFull","spComponentsToFull","components","spDurationToFull","duration","entriesHigherLevel","higherLevelsEntryList","spMainClassesToFull","classes","fromSubclass","currentAndLegacy","spSubclassesToCurrentAndLegacyFull","scrollNote","map","webpackAsyncContext","req","webpackAsyncContextResolve","__webpack_require__","Promise","resolve","o","Error","code","keys","exports","stats_wrapper","curbg","allBgs","_copy","sourceAbv","sourceEl","setAttribute","n","entry","outStack","texthtml","collapseList","traitTables","statsEl","list","getProfBonusFromCr","cr","CR_TO_PROF","SKILL_TO_ATB_ABV","athletics","acrobatics","arcana","history","investigation","nature","religion","insight","medicine","perception","survival","deception","intimidation","performance","persuasion","mon","monsterName","_pTypes","asText","sizeAbvToFull","size","getAbilityModifier","str","dex","con","int","wis","cha","saves","save","parentElement","skills","skill","obj","uppercaseFirst","parseInt","dmgvuln","vulnerable","dmgres","dmgimm","immune","conimm","conditionImmune","senses","passive","toString","languages","crToXp","traits","trait","traitname","traittext","text","traittexthtml","renderedcount","firstsecond","spells","newTrait","spellLinks","spellLink","spellslist","encodeURIComponent","actions","action","actionname","actiontext","actiontexthtml","newAction","reactions","reaction","reactionname","reactiontext","reactiontexthtml","newNonReaction","newReaction","legendaries","legendary","shouldAddCap","legendaryname","legendarytext","legendarytexthtml","newLegendary","trim","legendaryActions","legendaryName","newLegendaryCap","renderSection","sectionClass","sectionEntries","newThing","renderSkillOrSaveRoller","itemName","profBonusString","profDiceString","isSave","lairActions","regionalEffects","element","$this","s","out","spl","match","skillName","skillString","b","bonus","Number","fromAbility","getAbilityModNumber","pB","expert","makeSkillRoller","pBonusStr","pDiceStr","makeSaveRoller","statPEls","statPEl","addNonD20Rollers","titleMaybe","attemptToGetTitle","mode","expectedPB","withoutPB","capture","dc","ele","substring","statsRollerEls","statsRollerEl","multi","res2","concat","statsDCRollerEls","statsDCRollerEl","$ele","newResult","MAX_ROLLS","children","curcondition","curcult","textlist","goal","cultists","signaturespells","feat","prerequisite","ability","hasabilityitem","items","unshift","outstack","feature","typeArray","featureType","t","featureJsonToAbv","selectedPsionic","STATS_ORDER_AND_TYPE","STATS_DURATION","STATS_TEXT","getModeString","modeIndex","modeString","modes","getModeTitle","submodes","modeStrings","subModes","getSubModeString","subMode","modeTitleArray","title","bracketPart","modeTitleBracketArray","cost","costMin","min","costMax","max","getModeTitleCost","concentration","unit","getModeTitleBracketPart","order","modeStringArray","description","getTextString","loadDiscipline","race","walk","climb","fly","traitlist","statsText","header","faux","reward","entryRenderer","curRule","textStack"],"mappings":"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","file":"2.bundle.js","sourcesContent":["import {PolymerElement, html} from '@polymer/polymer';\nimport \"@polymer/polymer/lib/elements/dom-repeat.js\";\nimport { MDCTextField } from \"@material/textfield\";\nimport { MDCNotchedOutline } from \"@material/notched-outline\";\nimport { renderTable, renderFilters } from \"../util/renderTable.js\";\nimport './styles/material-styles.js';\nimport \"./styles/my-styles.js\";\nimport \"./dnd-spinner.js\";\nimport { routeEventChannel, readRouteView, setRouteSelection } from '../util/routing';\nclass DndList extends PolymerElement {\n  static get properties() {\n    return {\n      columns: {\n        type: Array\n      },\n      data: {\n        type: Array,\n        observer: '_dataChange'\n      },\n      view: {\n        type: String\n      }\n    };\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    new MDCTextField(this.shadowRoot.querySelector(\".mdc-text-field\"));\n    new MDCNotchedOutline(this.shadowRoot.querySelector(\".mdc-notched-outline\"));\n\n    this.viewChangeHandler = (e) => {\n      if (e && e.detail) {\n        this.view = e.detail.view;\n      }\n    };\n    routeEventChannel().addEventListener(\"view-change\", this.viewChangeHandler);\n    this.view = readRouteView();\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n\n    routeEventChannel().removeEventListener(\"view-change\", this.viewChangeHandler);\n  }\n\n  ready() {\n    super.ready();\n\n    this._adjustTableHeight(5);\n    window.addEventListener('resize', this._adjustTableHeight.bind(this));\n  }\n\n  _adjustTableHeight(retry) {\n    console.log('_adjustTableHeight');\n    const scrollWrapEl = this.$.tableScrollWrap.getBoundingClientRect();\n\n    if (scrollWrapEl.top) {\n      let adjust = 50;\n\n      switch(this.view) {\n        case 'races':\n        case 'backgrounds':\n        case 'feats':\n        case 'items':\n          adjust = 130;\n      }\n      this.$.tableScrollWrap.style.height = `${window.innerHeight - scrollWrapEl.top - adjust}px`;\n\n    } else if (retry > 0) {\n      setTimeout(() => {\n        this._adjustTableHeight(retry-1);\n      }, 500);\n    }\n  }\n\n  _dataChange() {\n    if (this.data) {\n      this.filters = renderTable(this.data, this.shadowRoot, this.columns);\n      renderFilters(this.data, this.shadowRoot, this.columns, this.filters);\n      this._setSelectionListeners();\n    }\n  }\n\n  _setSelectionListeners() {\n    const links = this.shadowRoot.querySelectorAll(\".history-link\");\n    for (let link of links) {\n      link.addEventListener(\"click\", e => {\n        const linkEl = e.target.closest('.history-link');\n        const selectionId = linkEl.getAttribute(\"data-link\");\n        setRouteSelection(selectionId);\n      });\n    }\n  }\n\n  _columnHeaderCssClass(id, cssClass) {\n    return `sort ${id ? id : \"\"} ${cssClass ? cssClass : \"\"}`;\n  }\n\n  static get template() {\n    return html`\n      <style include=\"material-styles my-styles\"></style>\n\n      <div id=\"listcontainer\">\n        <div id=\"filter-search-input-group\" class=\"filter-group\">\n          <div class=\"mdc-text-field mdc-text-field--outlined mdc-text-field--with-leading-icon\">\n            <i class=\"material-icons mdc-text-field__icon mdc-theme--primary\">search</i>\n            <input type=\"search\" id=\"search-field\" class=\"mdc-text-field__input search\" />\n            <div class=\"mdc-notched-outline\">\n              <div class=\"mdc-notched-outline__leading\"></div>\n              <div class=\"mdc-notched-outline__notch\">\n                <label for=\"search-field\" class=\"mdc-floating-label\">Search</label>\n              </div>\n              <div class=\"mdc-notched-outline__trailing\"></div>\n            </div>\n          </div>\n          <div class=\"filter-group--buttons\">\n            <button class=\"mdc-button mdc-button--raised\" id=\"reset\">\n              <span class=\"mdc-button__label\">Reset</span>\n            </button>\n          </div>\n        </div>\n\n        <div class=\"table-wrap mdc-elevation--z6\">\n          <div id=\"tableScrollWrap\" class=\"table--scroll\" view$=\"[[view]]\">\n            <table class=\"table\">\n              <thead>\n                <tr class=\"table-row table-row--header\">\n                  <template is=\"dom-repeat\" items=\"[[columns]]\">\n                    <th class$=\"[[_columnHeaderCssClass(item.id, item.cssClass)]]\" data-sort$=\"[[item.id]]\">\n                      <div class=\"table-cell\">[[item.label]]</div>\n                    </th>\n                  </template>\n                </tr>\n              </thead>\n              <tbody class=\"list\"></tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    `;\n  }\n}\n\ncustomElements.define('dnd-list', DndList);","import {PolymerElement, html} from '@polymer/polymer';\nimport \"./styles/material-styles.js\";\nimport \"./styles/my-styles.js\";\nimport \"./dnd-spinner.js\";\nimport {initCollapseToggles} from '../js/utils.js';\nimport { clearRouteSelection } from '../util/routing.js';\n\nclass DndSelectedItem extends PolymerElement {\n  static get properties() {\n    return {\n      modelId: {\n        type: String,\n        observer: \"_modelChange\"\n      },\n      selectedItem: {\n        type: Object\n      },\n      allItems: {\n        type: Array\n      },\n      loading: {\n        type: Boolean,\n        value: false,\n        observer: \"_loadingChange\"\n      },\n      _modelsRenderSelection: {\n        type: Function\n      },\n      characterOption: {\n        type: Boolean,\n        value: false\n      }\n    };\n  }\n\n  static get observers() {\n    return [\"__renderSelection(_modelsRenderSelection, selectedItem)\"];\n  }\n  \n  _loadingChange() {\n    this.dispatchEvent(new CustomEvent(\"loading-render\", {\n      bubbles: true,\n      composed: true,\n      detail: {\n        loading: this.loading\n      }\n    }));\n  }\n\n  __renderSelection() {\n    if (this._modelsRenderSelection && this.selectedItem) {\n      console.error('Selected Item:', this.selectedItem);\n      this._modelsRenderSelection(this.selectedItem, this.shadowRoot, this.allItems);\n      initCollapseToggles(this.shadowRoot);\n    }\n  }\n\n  _modelChange() {\n    if (this.modelId) {\n      this.loading = true;\n      this.set(\"_modelsRenderSelection\", undefined);\n\n      // Dynamically load the model page's renderSelection JS\n      import(/* webpackMode: \"eager\" */ `../js/${this.modelId}.js`)\n        .then(module => {\n          if (typeof module.renderSelection === \"function\") {\n            this._modelsRenderSelection = module.renderSelection;\n            this.loading = false;\n          } else {\n            console.error(\"Model module is missing the renderSelection export.\");\n          }\n        })\n        .catch(e => {\n          console.error(\"Model module failed to load.\", e);\n        });\n    }\n  }\n\n  _exists(thing) {\n    return !!thing;\n  }\n\n  _mainClass() {\n    return this.selectedItem ? \"main item-opened\" : \"main\";\n  }\n\n  clearSelection() {\n    clearRouteSelection(true);\n  }\n\n  static get template() {\n    return html`\n      <style include=\"material-styles my-styles\">\n        :host {\n          display: block;\n        }\n        .main {\n          max-width: 100vw;\n        }\n        .main.item-opened .class-container {\n          display: none;\n        }\n        .main:not(.item-opened) .class-page--class-container {\n          display: none;\n        }\n        .main.item-opened #listcontainer {\n          display: none;\n        }\n        .main.item-opened .close-item {\n          display: block;\n        }\n        .main.item-opened .rules-wrapper {\n          display: none;\n        }\n        .main:not(.item-opened) #rulescontent {\n          display: none;\n        }\n        .main:not(.item-opened) .selection-wrapper {\n          display: none;\n        }\n        .close-item {\n          position: fixed;\n          height: 64px;\n          width: 64px;\n          font-size: 44px;\n          display: none;\n          right: 0;\n          top: -4px;\n          z-index: 12;\n        }\n        .main.item-opened {\n          margin-bottom: 120px;\n        }\n        @media(min-width: 921px) {\n          .main.item-opened {\n            padding-bottom: 0;\n          }\n        }\n      </style>\n\n      <div class$=\"[[_mainClass(selectedItem)]]\">\n        <button class=\"mdc-icon-button close-item material-icons\" on-click=\"clearSelection\">close</button>\n        <div class=\"selection-wrapper\"></div>\n      </div>\n    `;\n  }\n}\n\ncustomElements.define('dnd-selected-item', DndSelectedItem);","import {PolymerElement, html} from '@polymer/polymer';\nimport \"./dnd-list.js\";\nimport \"./dnd-selected-item.js\";\nimport {loadModel} from \"../util/data.js\";\nimport { resolveHash } from \"../util/renderTable.js\";\nimport { readRouteSelection, routeEventChannel, clearRouteSelection } from '../util/routing.js';\n\nclass DndSelectionList extends PolymerElement {\n  static get properties() {\n    return {\n      modelId: {\n        type: String,\n        observer: \"_modelChange\"\n      },\n      columns: {\n        type: Array\n      },\n      enableHashRouting: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n      disableScrollBack: {\n        type: Boolean,\n        reflectToAttribute: true,\n        value: false\n      },\n      hasSelection: {\n        type: Boolean,\n        reflectToAttribute: true,\n        value: false\n      },\n      _data: {\n        type: Array\n      },\n      _selectedItem: {\n        type: Object\n      },\n      _selectedHash: {\n        type: String\n      },\n      loading: {\n        type: Boolean,\n        value: true,\n        observer: '_loadingChange'\n      },\n      characterOption: {\n        type: Boolean,\n        value: false\n      }\n    };\n  }\n\n  _loadingChange() {\n    this.dispatchEvent(new CustomEvent(\"loading-data\", {\n      bubbles: true,\n      composed: true,\n      detail: {\n        loading: this.loading\n      }\n    }));\n  }\n\n  /**\n   * Connects to route eventing channel and checks for loaded selection\n   * from hash.\n   */\n  connectedCallback() {\n    super.connectedCallback();\n\n    this.selectionEventHandler = (e) => {\n      this._checkHashForSelection(e.detail.selection);\n    };\n\n    this.deselectionEventHandler = () => {\n      this._selectedItem = undefined;\n      this.hasSelection = false;\n    };\n\n    // In case the list data has already been loaded, check if the hash is there\n    this._checkHashForSelection();\n\n    routeEventChannel().addEventListener(\"selection-change\", this.selectionEventHandler);\n    routeEventChannel().addEventListener(\"selection-deselected\", this.deselectionEventHandler);\n    routeEventChannel().addEventListener(\"view-change\", this.deselectionEventHandler);\n  }\n\n  /**\n   * Disconnects from route eventing channel.\n   */\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    routeEventChannel().removeEventListener(\"selection-change\", this.selectionEventHandler);\n    routeEventChannel().removeEventListener(\"selection-deselected\", this.deselectionEventHandler);\n  }\n\n  /**\n   * Loads the JSON data for the given modelId, then checks to see if \n   * the current routed selection is present in the data.\n   */\n  _modelChange() {\n    if (this.modelId) {\n      this.set(\"_data\", undefined);\n      this.loading = true;\n\n      loadModel(this.modelId)\n        .then(result => {\n          this.set(\"_data\", result);\n          this._checkHashForSelection();\n          this.loading = false;\n        })\n        .catch(e => {\n          console.error(\"Model requested for list did not return.\", e);\n        });\n    }\n  }\n\n  /**\n   * Looks through the loaded Data array for an item that matches the \n   * selection string.\n   * @param {String} [newSelection] Optional. If selection isn't provided,\n   * checks the current hash for the second pathed variable.\n   */\n  _checkHashForSelection(newSelection) {\n    let hashSelection = newSelection;\n    if (!hashSelection) {\n      hashSelection = readRouteSelection();\n    }\n    if (hashSelection && this.enableHashRouting && Array.isArray(this._data)) {\n      const itemFromHash = resolveHash(this._data, hashSelection);\n      if (itemFromHash) {\n        this.set(\"_selectedItem\", itemFromHash);\n        this.hasSelection = true;\n        if (!this.disableScrollBack) {\n          window.scrollTo(0, 0);\n        }\n        this.dispatchEvent(new CustomEvent(\"title-change\", {\n          bubbles: true,\n          composed: true,\n          detail: itemFromHash\n        }));\n      } else {\n        clearRouteSelection(true);\n      }\n    }\n  }\n\n  static get template() {\n    return html`\n      <style>\n        :host([has-selection]) dnd-list {\n          display: none;\n        }\n        @media(min-width: 921px) {\n          dnd-list {\n            display: block !important;\n          }\n        }\n      </style>\n      <dnd-selected-item model-id=\"[[modelId]]\" selected-item=\"[[_selectedItem]]\" all-items=\"[[_data]]\" character-option=\"[[characterOption]]\"></dnd-selected-item>\n      <dnd-list data=\"[[_data]]\" columns=\"[[columns]]\"></dnd-list>\n    `;\n  }\n}\n\ncustomElements.define('dnd-selection-list', DndSelectionList);","import { parseHTML, jqPrepend } from './utils.js';\nimport { MDCTextField } from \"@material/textfield\";\nimport { MDCNotchedOutline } from \"@material/notched-outline\";\nimport droll from \"../lib/droll.js\";\n\nfunction onLoad(rootEl) {\n  let outputEl = rootEl.querySelector(\"div#output\");\n  let total = 0,\n  historyIndex = -1;\n  \n  let diceField = new MDCTextField(rootEl.querySelector(\".mdc-text-field\"));\n  new MDCNotchedOutline(rootEl.querySelector(\".mdc-notched-outline\"));\n  \n  diceField.useNativeValidation = false;\n  \n  let outputRollResult = (roll) => {\n    let rollResult = droll.roll(roll.replace(/\\s/g, \"\"));\n    if (rollResult) {\n      let newOutput = parseHTML(`<div>\n        <em><a class='roll' data-roll='${roll}'>${roll}</a></em> rolled for <strong>${rollResult.total}</strong>${rollResult.rolls.length > 1 ? `<br>(${rollResult.rolls.join(\", \")})` : ''}\n        </div>`)\n      \n      jqPrepend(outputEl, newOutput);\n      outputEl.style.display = null;\n      addRollHandler(newOutput);\n\n      total += rollResult.total;\n      rootEl.querySelector('#total').innerHTML = total;\n      rootEl.querySelector(\".roll-total-wrap\").style.display = null;\n      rootEl.querySelector(\".roll-clear\").style.display = null;\n      diceField.value = \"\";\n    } else {\n      rootEl.querySelector(\".dice-field-container .mdc-text-field\").classList.add(\"error\");\n    }\n  };\n  \n  rootEl.querySelector(\".roll-clear\").addEventListener(\"click\", e => {\n    e.preventDefault();\n    \n    historyIndex = -1;\n    outputEl.innerHTML = '';\n    rootEl.querySelector(\".roll-total-wrap\").style.display = 'none';\n    rootEl.querySelector(\".roll-clear\").style.display = \"none\";\n    total = 0;\n  });\n  \n  rootEl.querySelector(\".roll-submit\").addEventListener(\"click\", e => {\n    e.preventDefault();\n    \n    historyIndex = -1;\n    rootEl.querySelector(\".dice-field-container .mdc-text-field\").classList.remove(\"error\");\n    let roll = rootEl.querySelector(\".roll-field\").value;\n    if (roll) {\n      outputRollResult(roll);\n    } else {\n      rootEl.querySelector(\".dice-field-container .mdc-text-field\").classList.add(\"error\");\n    }\n    rootEl.querySelector(\".roll-field\").focus();\n  });\n  \n  rootEl.querySelector(\".roll-field\").addEventListener(\"keydown\", e => {\n    let keyCode = e.keyCode || e.which,\n    historyCount = rootEl.querySelectorAll(\"#output > div\").length;\n    \n    // up\n    if (keyCode === 38) {\n      e.preventDefault();\n      if (historyIndex + 1 < historyCount) {\n        historyIndex++;\n        diceField.value = rootEl.querySelector(`#output div:eq(${historyIndex}) a.roll`).getAttribute(\"data-roll\");\n      }\n      \n      // down\n    } else if (keyCode === 40) {\n      e.preventDefault();\n      if (historyIndex - 1 > -1) {\n        historyIndex--;\n        diceField.value = rootEl.querySelector(`#output div:eq(${historyIndex}) a.roll`).getAttribute(\"data-roll\");\n      }\n      \n      // enter\n    } else if (keyCode === 13) {\n      e.preventDefault();\n      rootEl.querySelector(\".roll-submit\").click();\n      \n      // comma or period\n    } else if (keyCode === 190 || keyCode === 188) {\n      e.preventDefault();\n      diceField.value = diceField.value + \"d\";\n    } else if (keyCode === 32 || keyCode === 189 || keyCode === 187) {\n      e.preventDefault();\n      diceField.value = diceField.value + \" + \";\n    }\n  });\n  rootEl.querySelector(\".roll-field\").addEventListener(\"submit\", e => {\n    e.preventDefault();\n    rootEl.querySelector(\".roll-submit\").click();\n  })\n  rootEl.querySelector(\".roll-field\").addEventListener(\"textInput\", e => {\n    var keyData = e.originalEvent.data;\n    if (keyData && (keyData === \".\" || keyData === \",\")) {\n      e.preventDefault();\n      diceField.value = diceField.value + \"d\";\n    } else if (keyData && (keyData === \" \" || keyData === \"+\")) {\n      e.preventDefault();\n      diceField.value = diceField.value + \"+\";\n    }\n  });\n  rootEl.querySelector(\".roll-field\").addEventListener(\"focus\", e => {\n    rootEl.querySelector(\".dice-field-label\").style.display = null;\n  });\n  rootEl.querySelector(\".roll-field\").addEventListener(\"blur\", e => {\n    rootEl.querySelector(\".dice-field-label\").style.display = 'none';\n  });\n\n  let rolls = rootEl.querySelectorAll(\".roll[data-roll]\");\n  for (let roll of rolls) {\n    addRollHandler(roll);\n  }\n  \n  function addRollHandler(roll) {\n    roll.addEventListener(\"click\", e => {\n      e.preventDefault();\n\n      let roll = e.target.closest(\".roll\").getAttribute(\"data-roll\");\n      if (roll) {\n        outputRollResult(roll);\n      }\n    });\n  }\n};\n\nexport { onLoad };","import EntryRenderer from '../util/entryrender.js';\r\nimport Parser from '../util/Parser.js';\r\nimport { cloneDeep, utils_makeRoller } from '../js/utils.js';\r\n\r\nconst stats_wrapper = `\r\n\t<div class=\"stats-wrapper margin-bottom_large\">\r\n\t\t<div class=\"margin-bottom_small\">\r\n\t\t\t<span class=\"type\"></span><span class=\"rarity\"></span>\r\n\t\t\t<span class=\"attunement\"></span>\r\n\t\t</div>\r\n\t\t<div class=\"margin-bottom_small\">\r\n\t\t\t<span class=\"value\"></span><span class=\"weight\"></span>\r\n\t\t</div>\r\n\t\t<div class=\"margin-bottom_small\">\r\n\t\t\t<span class=\"damage\"></span>\r\n\t\t\t<span class=\"damageType\"></span>\r\n\t\t\t<span class=\"properties\"></span>\r\n\t\t</div>\r\n\t\t<div class=\"text\"></div>\r\n\t\t<div class=\"margin-bottom_small\">Source: <span class=\"source\"></span></div>\r\n\t</div>`;\r\n\r\nconst renderer = new EntryRenderer();\r\nfunction renderSelection(item, rootEl, hideFirstLine) {\r\n\tadjustItem(item);\r\n\tconst wrap = rootEl.querySelector(\".selection-wrapper\") || rootEl;\r\n\twrap.innerHTML = stats_wrapper;\r\n\t\r\n\tconst source = item.source;\r\n\tconst sourceFull = Parser.sourceJsonToFull(source);\r\n\trootEl.querySelector(\".stats-wrapper .source\").innerHTML = (`${sourceFull}, page ${item.page}`);\r\n\r\n\trootEl.querySelector(\".stats-wrapper .value\").innerHTML = (item.value ? item.value+(item.weight ? \", \" : \"\") : \"\");\r\n\trootEl.querySelector(\".stats-wrapper .weight\").innerHTML = (item.weight ? item.weight+(item.weight == 1 ? \" lb.\" : \" lbs.\") : \"\");\r\n\trootEl.querySelector(\".stats-wrapper .rarity\").innerHTML = ((item.tier ? \", \"+item.tier : \"\")+(item.rarity ? \", \"+item.rarity : \"\"));\r\n\trootEl.querySelector(\".stats-wrapper .attunement\").innerHTML = (item.reqAttune ? item.reqAttune : \"\");\r\n\trootEl.querySelector(\".stats-wrapper .type\").innerHTML = (item.typeText);\r\n\r\n\trootEl.querySelector(\".stats-wrapper .damage\").innerHTML = (\"\");\r\n\trootEl.querySelector(\".stats-wrapper .damageType\").innerHTML = (\"\");\r\n\tconst type = item.type || \"\";\r\n\tif (item.weaponCategory) {\r\n\t\tif (item.damages && item.damages.length) {\r\n\t\t\tfor (let i = 0; i < item.damages.length; i++) {\r\n\t\t\t\tconst damage = item.damages[i];\r\n\t\t\t\tconst isLast = i === item.damages.length - 1;\r\n\t\t\t\tif (damage.roll && damage.type) {\r\n\t\t\t\t\trootEl.querySelector(\".stats-wrapper .damage\").innerHTML += `<span>${utils_makeRoller(damage.roll)} ${Parser.dmgTypeToFull(damage.type)}</span>${isLast ? '': ' + '}`\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif(item.dmg1) rootEl.querySelector(\".stats-wrapper .damage\").innerHTML = (utils_makeRoller(item.dmg1));\r\n\t\t\tif(item.dmgType) rootEl.querySelector(\".stats-wrapper .damageType\").innerHTML = (Parser.dmgTypeToFull(item.dmgType));\r\n\t\t}\r\n\t} else if (type === \"LA\" ||type === \"MA\"|| type === \"HA\") {\r\n\t\trootEl.querySelector(\".stats-wrapper .damage\").innerHTML = (\"AC \"+item.ac+(type === \"LA\" ? \" + Dex\" : type === \"MA\" ? \" + Dex (max 2)\" : \"\"));\r\n\t} else if (type === \"S\") {\r\n\t\trootEl.querySelector(\".stats-wrapper .damage\").innerHTML = (\"AC +\"+item.ac);\r\n\t} else if (type === \"MNT\" || type === \"VEH\") {\r\n\t\tconst speed=item.speed;\r\n\t\tconst capacity=item.carryingcapacity;\r\n\t\tif (speed) rootEl.querySelector(\".stats-wrapper .damage\").append(\"Speed=\"+speed);\r\n\t\tif (speed && capacity) rootEl.querySelector(\".stats-wrapper .damage\").append(type === \"MNT\" ? \", \" : \"<br>\");\r\n\t\tif (capacity) {\r\n\t\t\trootEl.querySelector(\".stats-wrapper .damage\").append(\"Carrying Capacity=\"+capacity);\r\n\t\t\tif (capacity.indexOf(\"ton\") === -1 && capacity.indexOf(\"passenger\") === -1) rootEl.querySelector(\".stats-wrapper .damage\").append(capacity == 1 ? \" lb.\" : \" lbs.\");\r\n\t\t}\r\n\t}\r\n\r\n\trootEl.querySelector(\".stats-wrapper .properties\").innerHTML = (\"\");\r\n\tif (item.property) {\r\n\t\tconst properties = item.property.split(\",\");\r\n\t\tfor (let i = 0; i < properties.length; i++) {\r\n\t\t\tconst prop = properties[i];\r\n\t\t\tlet a = window.itemPropertyList[prop].name;\r\n\t\t\tif (prop === \"V\" && item.dmg2) a = `${a} (${item.dmg2})`;\r\n\t\t\tif (prop === \"T\" || prop === \"A\" || prop === \"AF\") a = `${a} (${item.range}ft.)`;\r\n\t\t\tif (prop === \"RLD\") a = `${a} (${item.reload} shots)`;\r\n\t\t\ta = (i > 0 ? \", \" : item.dmg1 ? \"- \" : \"\") + a;\r\n\t\t\trootEl.querySelector(\".stats-wrapper .properties\").append(a);\r\n\t\t}\r\n\t}\r\n\r\n\tconst entryList = {type: \"entries\", entries: item.entries};\r\n\tconst renderStack = [];\r\n\trenderer.recursiveEntryRender(entryList, renderStack, 1);\r\n\trootEl.querySelector(\".stats-wrapper .text\").innerHTML = (utils_makeRoller(renderStack.join(\"\")).split(item.name.toLowerCase()).join(\"<i>\"+item.name.toLowerCase()+\"</i>\"));\r\n\tif (hideFirstLine) {\r\n\t\trootEl.querySelector(\".margin-bottom_small\").remove();\r\n\t}\r\n}\r\n\r\nfunction adjustItem(item) {\r\n\tif (item.hasParsed) {\r\n\t\treturn;\r\n\t}\r\n\titem.hasParsed = true;\r\n\tif (item.noDisplay) {\r\n\t\treturn;\r\n\t}\r\n\tif (item.type === \"GV\") {\r\n\t\titem.category = \"Generic Variant\";\r\n\t}\r\n\tif (item.category === undefined) {\r\n\t\titem.category = \"Other\";\r\n\t}\r\n\tif (item.entries === undefined) {\r\n\t\titem.entries = [];\r\n\t} else {\r\n\t\titem.entries = cloneDeep(item.entries);\r\n\t}\r\n\tif (item.type && window.itemTypeList[item.type]) {\r\n\t\tfor (let j = 0; j < window.itemTypeList[item.type].entries.length; j++) {\r\n\t\t\titem.entries.push(window.itemTypeList[item.type].entries[j]);\r\n\t\t}\r\n\t}\r\n\tif (item.property) {\r\n\t\tconst properties = item.property.split(\",\");\r\n\t\tfor (let j = 0; j < properties.length; j++) {\r\n\t\t\tif (window.itemPropertyList[properties[j]].entries) {\r\n\t\t\t\tfor (let k = 0; k < window.itemPropertyList[properties[j]].entries.length; k++) {\r\n\t\t\t\t\titem.entries.push(window.itemPropertyList[properties[j]].entries[k]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t//The following could be encoded in JSON, but they depend on more than one JSON property; maybe fix if really bored later\r\n\tif (item.armor) {\r\n\t\tif (item.resist) {\r\n\t\t\titem.entries.push(\"You have resistance to \"+item.resist+\" damage while you wear this armor.\");\r\n\t\t}\r\n\t\tif (item.armor && item.stealth) {\r\n\t\t\titem.entries.push(\"The wearer has disadvantage on Stealth (Dexterity) checks.\");\r\n\t\t}\r\n\t\tif (item.type === \"HA\" && item.strength) {\r\n\t\t\titem.entries.push(\"If the wearer has a Strength score lower than \" + item.strength + \", their speed is reduced by 10 feet.\");\r\n\t\t}\r\n\t} else if (item.resist) {\r\n\t\tif (item.type === \"P\") {\r\n\t\t\titem.entries.push(\"When you drink this potion, you gain resistance to \"+item.resist+\" damage for 1 hour.\");\r\n\t\t}\r\n\t\tif (item.type === \"RG\") {\r\n\t\t\titem.entries.push(\"You have resistance to \"+item.resist+\" damage while wearing this ring.\");\r\n\t\t}\r\n\t}\r\n\tif (item.type === \"SCF\") {\r\n\t\tif (item.scfType === \"arcane\") {\r\n\t\t\titem.entries.push(\"An arcane focus is a special item designed to channel the power of arcane spells. A sorcerer, warlock, or wizard can use such an item as a spellcasting focus, using it in place of any material component which does not list a cost.\");\r\n\t\t}\r\n\t\tif (item.scfType === \"druid\") {\r\n\t\t\titem.entries.push(\"A druid can use such a druidic focus as a spellcasting focus, using it in place of any material component that does not have a cost.\");\r\n\t\t}\r\n\t\tif (item.scfType === \"holy\") {\r\n\t\t\titem.entries.push(\"A holy symbol is a representation of a god or pantheon.\");\r\n\t\t\titem.entries.push(\"A cleric or paladin can use a holy symbol as a spellcasting focus, using it in place of any material components which do not list a cost. To use the symbol in this way, the caster must hold it in hand, wear it visibly, or bear it on a shield.\");\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport { renderSelection };","import EntryRenderer from \"../util/entryrender.js\";\r\nimport Parser from \"../util/Parser.js\";\r\n\r\nconst renderer = new EntryRenderer();\r\nconst stats_wrapper = `\r\n\t<div class=\"stats-wrapper margin-bottom_large\">\r\n\t</div>`;\r\n\r\nfunction renderSelection(spell, rootEl) {\r\n\trootEl.querySelector(\".selection-wrapper\").innerHTML = stats_wrapper;\r\n\r\n\tconst spellHtmlString = spellHtml(spell);\r\n\r\n\trootEl.querySelector(\".stats-wrapper\").innerHTML = spellHtmlString;\r\n}\r\n\r\nfunction spellHtml(spell) {\r\n\tconst renderStack = [];\r\n\trenderStack.push(`<div class=\"margin-bottom_med\"><span class=\"stats-source source${spell.source}\" title=\"${Parser.sourceJsonToFull(spell.source)}\">${Parser.sourceJsonToAbv(spell.source)}</div>`);\r\n\trenderStack.push(`<div class=\"margin-bottom_med\"><span>${Parser.spLevelSchoolMetaToFull(spell.level, spell.school, spell.meta)}</span></div>`);\r\n\trenderStack.push(`<div class=\"margin-bottom_med\"><span class=\"stat-name\">Casting Time: </span>${Parser.spTimeListToFull(spell.time)}</div>`);\r\n\trenderStack.push(`<div class=\"margin-bottom_med\"><span class=\"stat-name\">Range: </span>${Parser.spRangeToFull(spell.range)}</div>`);\r\n\trenderStack.push(`<div class=\"margin-bottom_med\"><span class=\"stat-name\">Components: </span>${Parser.spComponentsToFull(spell.components)}</div>`);\r\n\trenderStack.push(`<div class=\"margin-bottom_med\"><span class=\"stat-name\">Duration: </span>${Parser.spDurationToFull(spell.duration)}</div>`);\r\n\trenderStack.push(`<div class='text'>`);\r\n\r\n\trenderer.recursiveEntryRender({type: \"entries\", entries: spell.entries}, renderStack, 1);\r\n\r\n\tif (spell.entriesHigherLevel) {\r\n\t\tconst higherLevelsEntryList = {type: \"entries\", entries: spell.entriesHigherLevel};\r\n\t\trenderer.recursiveEntryRender(higherLevelsEntryList, renderStack, 2);\r\n\t}\r\n\r\n\trenderStack.push(`</div>`);\r\n\trenderStack.push(`<div class=\"margin-bottom_med\"><span class=\"stat-name\">Classes: </span>${Parser.spMainClassesToFull(spell.classes)}</div>`);\r\n\r\n\tif (spell.classes.fromSubclass) {\r\n\t\tconst currentAndLegacy = Parser.spSubclassesToCurrentAndLegacyFull(spell.classes);\r\n\t\trenderStack.push(`<div class=\"margin-bottom_med\"><span class=\"stat-name\">Subclasses: </span>${currentAndLegacy[0]}</div>`);\r\n\t\tif (currentAndLegacy[1]) {\r\n\t\t\trenderStack.push(`<div class=\"mdc-theme--text-disabled-on-background margin-bottom_med\"><span class=\"stat-name\">Subclasses (legacy): </span>${currentAndLegacy[1]}</div>`);\r\n\t\t}\r\n\t}\r\n\r\n\tif (spell.scrollNote) {\r\n\t\trenderStack.push(`<div class=\"mdc-theme--text-disabled-on-background\">`);\r\n\t\trenderer.recursiveEntryRender(\r\n\t\t\t`{@italic Note: Both the {@class ${\"Fighter\"} (${\"Eldritch Knight\"})} and the {@class ${\"Rogue\"} (${\"Arcane Trickster\"})} spell lists include all {@class ${\"Wizard\"}} spells. Spells of 5th level or higher may be cast with the aid of a spell scroll or similar.}`\r\n\t\t\t, renderStack, 2);\r\n\t\trenderStack.push(`</div>`);\r\n\t}\r\n\r\n\treturn renderStack.join('');\r\n}\r\n\r\nexport { renderSelection, spellHtml };","var map = {\n\t\"./backgrounds.js\": 140,\n\t\"./bestiary.js\": 141,\n\t\"./classes.js\": 135,\n\t\"./conditions.js\": 142,\n\t\"./cults.js\": 143,\n\t\"./dice.js\": 117,\n\t\"./feats.js\": 144,\n\t\"./features.js\": 145,\n\t\"./items.js\": 118,\n\t\"./psionics.js\": 146,\n\t\"./races.js\": 147,\n\t\"./rewards.js\": 148,\n\t\"./spells.js\": 119,\n\t\"./utils.js\": 1,\n\t\"./variantrules.js\": 149\n};\n\n\nfunction webpackAsyncContext(req) {\n\treturn webpackAsyncContextResolve(req).then(__webpack_require__);\n}\nfunction webpackAsyncContextResolve(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tif(!__webpack_require__.o(map, req)) {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t}\n\t\treturn map[req];\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.resolve = webpackAsyncContextResolve;\nwebpackAsyncContext.id = 139;\nmodule.exports = webpackAsyncContext;","import {parseHTML, jqHeight, jqPrepend, encodeForHash } from \"../js/utils.js\";\r\nimport Parser from \"../util/Parser.js\";\r\nimport EntryRenderer from \"../util/entryrender.js\";\r\nimport { resolveHash } from \"../util/renderTable.js\";\r\n\r\nconst renderer = new EntryRenderer();\r\n\r\nconst stats_wrapper = `\r\n\t<div class=\"stats-wrapper margin-bottom_large\">\r\n\t\t<div class=\"source margin-bottom_small\"></div>\r\n\t\t<div class=\"stats margin-bottom_small\"></div>\r\n\t\t<div class=\"table-container collapse collapse--left-arrow disabled\">\r\n\t\t\t<div class=\"collapse-toggle\">\r\n\t\t\t\t<div class=\"mdc-list-item stat-name\">Suggested Characteristics</div>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"collapse-wrapper\">\r\n\t\t\t\t<div class=\"collapse-list\"></div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>`;\r\n\r\nfunction renderSelection(curbg, rootEl, allBgs) {\r\n  if (rootEl.querySelector(\".selection-wrapper\")) {\r\n    rootEl.querySelector(\".selection-wrapper\").innerHTML = stats_wrapper;\r\n  } else {\r\n    rootEl.innerHTML = stats_wrapper;\r\n  }\r\n  while (curbg._copy) {\r\n    const foundCopy = resolveHash(allBgs, encodeForHash([curbg._copy.name, curbg._copy.source]));\r\n    curbg = foundCopy;\r\n  }\r\n  const source = curbg.source;\r\n  const sourceAbv = Parser.sourceJsonToAbv(source);\r\n  const sourceFull = Parser.sourceJsonToFull(source);\r\n\r\n  const sourceEl = rootEl.querySelector(\".stats-wrapper .source\");\r\n  sourceEl.classList.add(`source${sourceAbv}`);\r\n\tsourceEl.setAttribute(\"title\", sourceFull);\r\n\tsourceEl.innerHTML = sourceAbv;\r\n\r\n  const entries = curbg.entries;\r\n\r\n  if (entries && entries.length) {\r\n    for (let n = entries.length - 1; n >= 0; n--) {\r\n      let entry = entries[n],\r\n        outStack = [];\r\n      renderer.recursiveEntryRender(entry, outStack, 0);\r\n      let texthtml = outStack.join(' ');\r\n\r\n      if (entry.name === \"Suggested Characteristics\") {\r\n        rootEl.querySelector(\".stats-wrapper .table-container\").classList.remove(\"disabled\");\r\n        const collapseList = rootEl.querySelector(\".stats-wrapper .table-container .collapse-list\");\r\n        const traitTables = parseHTML(texthtml);\r\n        traitTables.querySelector(\".stat-name\").remove();\r\n        jqPrepend(collapseList, traitTables);\r\n      } else {\r\n        const statsEl = rootEl.querySelector(\".stats-wrapper .stats\");\r\n        jqPrepend(statsEl, parseHTML(texthtml));\r\n      }\r\n    }\r\n  }\r\n\r\n  window.setTimeout(() => {\r\n    let list = rootEl.querySelector(\".stats-wrapper .table-container .collapse-list\");\r\n    list.style[\"margin-top\"] = \"-\" + jqHeight(list) + \"px\";\r\n  }, 0);\r\n}\r\n\r\nexport { renderSelection };\r\n","import { parseHTML, utils_makeRoller, jqAfter, jqPrepend} from \"../js/utils.js\";\r\nimport EntryRenderer from \"../util/entryrender.js\";\r\nimport Parser from \"../util/Parser.js\"\r\nimport droll from \"../lib/droll.js\"\r\n\r\nconst MAX_ROLLS = 5\r\n\r\nconst stats_wrapper = `\r\n\t<div class=\"margin-bottom_large stats-wrapper\">\r\n\t\t<div id=\"stats\" class=\"monster\">\r\n\t\t\t<div id=\"name\">\r\n\t\t\t\tName <span class=\"source\" title=\"Source book\">SRC</span>\r\n\t\t\t</div>\r\n\t\t\t<div id=\"sizetypealignment\">\r\n\t\t\t\t<span id=\"size\">Size</span> <span id=\"type\">type</span>, <span id=\"alignment\">alignment</span>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"divider\"></div>\r\n\t\t\t<div>\r\n\t\t\t\t<strong>Armor Class</strong> <span id=\"ac\">## (source)</span>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<strong>Hit Points</strong> <span id=\"hp\">hp</span>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<strong>Speed</strong> <span id=\"speed\">30 ft.</span>\r\n\t\t\t</div>\r\n\t\t\t<div id=\"abilitynames\">\r\n\t\t\t\t<div>STR</div>\r\n\t\t\t\t<div>DEX</div>\r\n\t\t\t\t<div>CON</div>\r\n\t\t\t\t<div>INT</div>\r\n\t\t\t\t<div>WIS</div>\r\n\t\t\t\t<div>CHA</div>\r\n\t\t\t</div>\r\n\t\t\t<div id=\"abilityscores\">\r\n\t\t\t\t<div id=\"str\"><span class=\"score\">10</span> (<span class=\"mod\">0</span>)</div>\r\n\t\t\t\t<div id=\"dex\"><span class=\"score\">10</span> (<span class=\"mod\">0</span>)</div>\r\n\t\t\t\t<div id=\"con\"><span class=\"score\">10</span> (<span class=\"mod\">0</span>)</div>\r\n\t\t\t\t<div id=\"int\"><span class=\"score\">10</span> (<span class=\"mod\">0</span>)</div>\r\n\t\t\t\t<div id=\"wis\"><span class=\"score\">10</span> (<span class=\"mod\">0</span>)</div>\r\n\t\t\t\t<div id=\"cha\"><span class=\"score\">10</span> (<span class=\"mod\">0</span>)</div>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<strong>Saving Throws</strong> <span id=\"saves\">Str +0</span>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<strong>Skills</strong> <span id=\"skills\">Perception +0</span>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<strong>Damage Vulnerabilities</strong> <span id=\"dmgvuln\">fire</span>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<strong>Damage Resistances</strong> <span id=\"dmgres\">cold</span>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<strong>Damage Immunities</strong> <span id=\"dmgimm\">lightning</span>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<strong>Condition Immunities</strong> <span id=\"conimm\">exhaustion</span>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<strong>Senses</strong> <span id=\"senses\">darkvision 30 ft.</span> passive Perception <span id=\"pp\">10</span>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<strong>Languages</strong> <span id=\"languages\">Common</span>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<strong>Challenge</strong> <span id=\"cr\">1</span> (<span id=\"xp\">450</span> XP)\r\n\t\t\t</div>\r\n\t\t\t<div id=\"traits\">\r\n\t\t\t</div>\r\n\t\t\t<div id=\"actions\">\r\n\t\t\t\t<span>Actions</span>\r\n\t\t\t</div>\r\n\t\t\t<div id=\"reactions\">\r\n\t\t\t\t<span>Reactions</span>\r\n\t\t\t</div>\r\n\t\t\t<div id=\"legendaries\">\r\n\t\t\t\t<span>Legendary Actions</span>\r\n\t\t\t</div>\r\n\t\t\t<div id=\"lairactions\">\r\n\t\t\t\t<span>Lair Actions</span>\r\n\t\t\t</div>\r\n\t\t\t<div id=\"regionaleffects\">\r\n\t\t\t\t<span>Regional Effects</span>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div id=\"output\"></div>\r\n\t</div>`;\r\n\r\nfunction objToTitleCaseStringWithCommas(obj) {\r\n  return Object.keys(obj)\r\n    .map(function(k) {\r\n      return k.uppercaseFirst() + \" \" + obj[k];\r\n    })\r\n    .join(\", \");\r\n}\r\nconst ATB_PROF_MODE = \"mode\";\r\nconst ATB_PROF_BONUS_STR = \"profBonusStr\";\r\nconst ATB_PROF_DICE_STR = \"profDiceStr\";\r\nconst PROF_MODE_BONUS = \"bonus\";\r\nconst PROF_MODE_DICE = \"dice\";\r\nfunction getProfBonusFromCr(cr) {\r\n  if (CR_TO_PROF[cr]) return CR_TO_PROF[cr];\r\n  return 0;\r\n}\r\nconst CR_TO_PROF = {\r\n  \"0\": 2,\r\n  \"1/8\": 2,\r\n  \"1/4\": 2,\r\n  \"1/2\": 2,\r\n  \"1\": 2,\r\n  \"2\": 2,\r\n  \"3\": 2,\r\n  \"4\": 2,\r\n  \"5\": 3,\r\n  \"6\": 3,\r\n  \"7\": 3,\r\n  \"8\": 3,\r\n  \"9\": 4,\r\n  \"10\": 4,\r\n  \"11\": 4,\r\n  \"12\": 4,\r\n  \"13\": 5,\r\n  \"14\": 5,\r\n  \"15\": 5,\r\n  \"16\": 5,\r\n  \"17\": 6,\r\n  \"18\": 6,\r\n  \"19\": 6,\r\n  \"20\": 6,\r\n  \"21\": 7,\r\n  \"22\": 7,\r\n  \"23\": 7,\r\n  \"24\": 7,\r\n  \"25\": 8,\r\n  \"26\": 8,\r\n  \"27\": 8,\r\n  \"28\": 8,\r\n  \"29\": 9,\r\n  \"30\": 9\r\n};\r\nconst SKILL_TO_ATB_ABV = {\r\n  athletics: \"dex\",\r\n  acrobatics: \"dex\",\r\n  \"sleight of hand\": \"dex\",\r\n  stealth: \"dex\",\r\n  arcana: \"int\",\r\n  history: \"int\",\r\n  investigation: \"int\",\r\n  nature: \"int\",\r\n  religion: \"int\",\r\n  \"animal handling\": \"wis\",\r\n  insight: \"wis\",\r\n  medicine: \"wis\",\r\n  perception: \"wis\",\r\n  survival: \"wis\",\r\n  deception: \"cha\",\r\n  intimidation: \"cha\",\r\n  performance: \"cha\",\r\n  persuasion: \"cha\"\r\n};\r\nfunction getAttribute(skill) {\r\n  return SKILL_TO_ATB_ABV[skill.toLowerCase().trim()];\r\n}\r\n\r\nconst renderer = new EntryRenderer();\r\nfunction renderSelection(mon, rootEl) {\r\n  rootEl.querySelector(\".selection-wrapper\").innerHTML = stats_wrapper;\r\n\tlet renderStack = [];\r\n\tlet entryList = {};\r\n\tvar name = mon.name;\r\n\twindow.monsterName = name;\r\n\tvar source = mon.source;\r\n\tvar type = mon._pTypes.asText;\r\n\tsource = Parser.sourceJsonToAbv(source);\r\n\r\n\trootEl.querySelector(\"#name\").innerHTML = (\r\n\t\t`<span class=\"stats-source source${source}\" title=\"${Parser.sourceJsonToFull(source)}\">${Parser.sourceJsonToAbv(source)}</span>`\r\n\t);\r\n\trootEl.querySelector(\"#size\").innerHTML = (Parser.sizeAbvToFull(mon.size));\r\n\trootEl.querySelector(\"#type\").innerHTML = (type);\r\n\trootEl.querySelector(\"#alignment\").innerHTML = (mon.alignment);\r\n\trootEl.querySelector(\"#ac\").innerHTML = (mon.ac);\r\n\trootEl.querySelector(\"#hp\").innerHTML = (mon.hp);\r\n\trootEl.querySelector(\"#speed\").innerHTML = (mon.speed);\r\n\trootEl.querySelector(\"#str span.score\").innerHTML = (mon.str);\r\n\trootEl.querySelector(\"#str span.mod\").innerHTML = (Parser.getAbilityModifier(mon.str));\r\n\trootEl.querySelector(\"#dex span.score\").innerHTML = (mon.dex);\r\n\trootEl.querySelector(\"#dex span.mod\").innerHTML = (Parser.getAbilityModifier(mon.dex));\r\n\trootEl.querySelector(\"#con span.score\").innerHTML = (mon.con);\r\n\trootEl.querySelector(\"#con span.mod\").innerHTML = (Parser.getAbilityModifier(mon.con));\r\n\trootEl.querySelector(\"#int span.score\").innerHTML = (mon.int);\r\n\trootEl.querySelector(\"#int span.mod\").innerHTML = (Parser.getAbilityModifier(mon.int));\r\n\trootEl.querySelector(\"#wis span.score\").innerHTML = (mon.wis);\r\n\trootEl.querySelector(\"#wis span.mod\").innerHTML = (Parser.getAbilityModifier(mon.wis));\r\n\trootEl.querySelector(\"#cha span.score\").innerHTML = (mon.cha);\r\n\trootEl.querySelector(\"#cha span.mod\").innerHTML = (Parser.getAbilityModifier(mon.cha));\r\n\r\n\tvar saves = mon.save;\r\n\tif (saves) {\r\n\t\trootEl.querySelector(\"#saves\").parentElement.style.display = 'block';\r\n\t\trootEl.querySelector(\"#saves\").innerHTML = (saves);\r\n\t} else {\r\n\t\trootEl.querySelector(\"#saves\").parentElement.style.display = 'none';\r\n\t}\r\n\r\n\tvar skills = mon.skill;\r\n\tlet perception = 0;\r\n\tif (skills) {\r\n\t\trootEl.querySelector(\"#skills\").parentElement.style.display = 'block';\r\n\t\trootEl.querySelector(\"#skills\").innerHTML = (objToTitleCaseStringWithCommas(skills));\r\n\t\tif (skills.perception) perception = parseInt(skills.perception);\r\n\t} else {\r\n\t\trootEl.querySelector(\"#skills\").parentElement.style.display = 'none';\r\n\t}\r\n\r\n\tvar dmgvuln = mon.vulnerable;\r\n\tif (dmgvuln) {\r\n\t\trootEl.querySelector(\"#dmgvuln\").parentElement.style.display = 'block';\r\n\t\trootEl.querySelector(\"#dmgvuln\").innerHTML = (dmgvuln);\r\n\t} else {\r\n\t\trootEl.querySelector(\"#dmgvuln\").parentElement.style.display = 'none';\r\n\t}\r\n\r\n\tvar dmgres = mon.resist;\r\n\tif (dmgres) {\r\n\t\trootEl.querySelector(\"#dmgres\").parentElement.style.display = 'block';\r\n\t\trootEl.querySelector(\"#dmgres\").innerHTML = (dmgres);\r\n\t} else {\r\n\t\trootEl.querySelector(\"#dmgres\").parentElement.style.display = 'none';\r\n\t}\r\n\r\n\tvar dmgimm = mon.immune;\r\n\tif (dmgimm) {\r\n\t\trootEl.querySelector(\"#dmgimm\").parentElement.style.display = 'block';\r\n\t\trootEl.querySelector(\"#dmgimm\").innerHTML = (dmgimm);\r\n\t} else {\r\n\t\trootEl.querySelector(\"#dmgimm\").parentElement.style.display = 'none';\r\n\t}\r\n\r\n\tvar conimm = mon.conditionImmune;\r\n\tif (conimm) {\r\n\t\trootEl.querySelector(\"#conimm\").parentElement.style.display = 'block';\r\n\t\trootEl.querySelector(\"#conimm\").innerHTML = (conimm);\r\n\t} else {\r\n\t\trootEl.querySelector(\"#conimm\").parentElement.style.display = 'none';\r\n\t}\r\n\r\n\tvar senses = mon.senses;\r\n\tif (senses) {\r\n\t\trootEl.querySelector(\"#senses\").innerHTML = (senses + \", \");\r\n\t} else {\r\n\t\trootEl.querySelector(\"#senses\").innerHTML = (\"\");\r\n\t}\r\n\r\n\tvar passive = mon.passive || (10 + perception).toString;\r\n\trootEl.querySelector(\"#pp\").innerHTML = (passive)\r\n\r\n\tvar languages = mon.languages;\r\n\tif (languages) {\r\n\t\trootEl.querySelector(\"#languages\").innerHTML = (languages);\r\n\t} else {\r\n\t\trootEl.querySelector(\"#languages\").innerHTML = (\"\\u2014\");\r\n\t}\r\n\r\n\tvar cr = mon.cr === undefined ? \"Unknown\" : mon.cr;\r\n\trootEl.querySelector(\"#cr\").innerHTML = (cr);\r\n\trootEl.querySelector(\"#xp\").innerHTML = (Parser.crToXp(cr));\r\n\r\n\tvar traits = mon.trait;\r\n\trootEl.querySelector(\"#traits\").style.display = 'none';\r\n\r\n\tif (traits && traits.length > 0) {\r\n\t\trootEl.querySelector(\"#traits\").style.display = 'block';\r\n\t\tfor (var i = traits.length - 1; i >= 0; i--) {\r\n\t\t\tvar traitname = traits[i].name;\r\n\t\t\tvar traittext = traits[i].text;\r\n\t\t\tvar traittexthtml = \"\";\r\n\t\t\tvar renderedcount = 0;\r\n\t\t\tfor (var n = 0; n < traittext.length; n++) {\r\n\t\t\t\tif (!traittext[n]) continue;\r\n\r\n\t\t\t\trenderedcount++;\r\n\t\t\t\tvar firstsecond = \"\";\r\n\t\t\t\tif (renderedcount === 1) firstsecond = \"first \";\r\n\t\t\t\tif (renderedcount === 2) firstsecond = \"second \";\r\n\r\n\t\t\t\tvar spells = \"\";\r\n\t\t\t\tif (traitname.indexOf(\"Spellcasting\") !== -1 && traittext[n].indexOf(\": \") !== -1) spells = \"spells\";\r\n\t\t\t\tif (traitname.indexOf(\"Variant\") !== -1 && traitname.indexOf(\"Coven\") !== -1 && traittext[n].indexOf(\": \") !== -1) spells = \"spells\";\r\n\r\n\t\t\t\ttraittexthtml = traittexthtml + \"<p class='\" + firstsecond + spells + \"'>\" + traittext[n].replace(/\\u2022\\s?(?=C|\\d|At\\swill)/g, \"\")+\"</p>\";\r\n\t\t\t}\r\n\t\t\tconst newTrait = parseHTML(\"<div class='trait'><div class='trait\" + i + \"'><span class='name'>\" + traitname + \".</span> \" + traittexthtml + \"</div></div>\");\r\n\t\t\tjqAfter(rootEl.querySelector(\"#traits\"), newTrait);\r\n\r\n\t\t\t// parse spells, make hyperlinks\r\n\t\t\tconst spellLinks = rootEl.querySelectorAll('.trait div p.spells');\r\n\t\t\tfor (let spellLink of spellLinks) {\r\n\t\t\t\tlet spellslist = spellLink.innerHTML;\r\n\t\t\t\tif (spellslist[0] === \"*\") return;\r\n\t\t\t\tspellslist = spellslist.split(\": \")[1].split(/\\, (?!\\+|\\dd|appears|inside gems)/g);\r\n\t\t\t\tfor (let i = 0; i < spellslist.length; i++) {\r\n\t\t\t\t\tspellslist[i] = \"<a href='#/spells/\" + encodeURIComponent((spellslist[i].replace(/(\\*)| \\(([^\\)]+)\\)/g, \"\"))).toLowerCase().replace(\"'\", \"%27\") + \"_\" + \"phb'>\" + spellslist[i] + \"</a>\";\r\n\t\t\t\t\tif (i !== spellslist.length - 1) spellslist[i] = spellslist[i] + \", \";\r\n\t\t\t\t}\r\n\r\n\t\t\t\tspellLink.innerHTML = (spellLink.innerHTML.split(\": \")[0] + \": \" + spellslist.join(\"\"));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconst actions = mon.action;\r\n\r\n\tif (actions && actions.length) for (let i = actions.length - 1; i >= 0; i--) {\r\n\t\tconst actionname = actions[i].name;\r\n\t\tconst actiontext = actions[i].text;\r\n\t\tlet actiontexthtml = \"\";\r\n\t\tlet renderedcount = 0;\r\n\t\tfor (let n = 0; n < actiontext.length; n++) {\r\n\t\t\tif (!actiontext[n]) continue;\r\n\r\n\t\t\trenderedcount++;\r\n\t\t\tlet firstsecond = \"\";\r\n\t\t\tif (renderedcount === 1) firstsecond = \"first \";\r\n\t\t\tif (renderedcount === 2) firstsecond = \"second \";\r\n\r\n\t\t\tactiontexthtml = actiontexthtml + \"<p class='\"+firstsecond+\"'>\"+actiontext[n]+\"</p>\";\r\n\t\t}\r\n\t\tconst newAction = parseHTML(\"<div class='action'><div class='action\"+i+\"'><span class='name'>\"+actionname+\".</span> \"+actiontexthtml+\"</div></div>\")\r\n\t\tjqAfter(rootEl.querySelector('#actions'), newAction);\r\n\t}\r\n\r\n\tconst reactions = mon.reaction;\r\n\trootEl.querySelector(\"#reactions\").style.display = 'none';\r\n\r\n\tif (reactions && (reactions.text || reactions.length)) {\r\n\r\n\t\trootEl.querySelector(\"#reactions\").style.display = 'block';\r\n\r\n\t\tif (!reactions.length) {\r\n\t\t\tconst reactionname = reactions.name;\r\n\t\t\tconst reactiontext = reactions.text;\r\n\t\t\tlet reactiontexthtml = \"\";\r\n\t\t\tlet renderedcount = 0;\r\n\t\t\tfor (let n = 0; n < reactiontext.length; n++) {\r\n\t\t\t\tif (!reactiontext[n]) continue;\r\n\r\n\t\t\t\trenderedcount++;\r\n\t\t\t\tlet firstsecond = \"\";\r\n\t\t\t\tif (renderedcount === 1) firstsecond = \"first \";\r\n\t\t\t\tif (renderedcount === 2) firstsecond = \"second \";\r\n\r\n\t\t\t\treactiontexthtml = reactiontexthtml + \"<p class='\" + firstsecond + \"'>\" + reactiontext[n] + \"</p>\";\r\n\t\t\t}\r\n\r\n\t\t\tconst newNonReaction = parseHTML(\"<div class='reaction'><div class='reaction0'><span class='name'>\" + reactionname + \".</span> \" + reactiontexthtml + \"</div></div>\")\r\n\t\t\tjqAfter(rootEl.querySelector(\"#reactions\"), newNonReaction);\r\n\t\t}\r\n\r\n\t\tif (reactions.length) for (let i = reactions.length - 1; i >= 0; i--) {\r\n\t\t\tconst reactionname = reactions[i].name;\r\n\r\n\t\t\tconst reactiontext = reactions[i].text;\r\n\t\t\tlet reactiontexthtml = \"<span>\" + reactiontext + \"</span>\";\r\n\t\t\tfor (let n = 1; n < reactiontext.length; n++) {\r\n\t\t\t\tif (!reactiontext[n]) continue;\r\n\t\t\t\treactiontexthtml = reactiontexthtml + \"<p>\" + reactiontext[n] + \"</p>\";\r\n\t\t\t}\r\n\r\n\t\t\tconst newReaction = parseHTML(\"<div class='reaction'><div class='reaction\" + i + \"'><span class='name'>\" + reactionname + \".</span> \" + reactiontexthtml + \"</div></div>\")\r\n\t\t\tjqAfter(rootEl.querySelector(\"#reactions\"), newReaction);\r\n\t\t}\r\n\t}\r\n\r\n\tconst legendaries = mon.legendary;\r\n\trootEl.querySelector(\"#legendaries\").style.display = 'none';\r\n\tif (legendaries) {\r\n\t\trootEl.querySelector(\"#legendaries\").style.display = 'block';\r\n\t\tlet shouldAddCap = legendaries.length > 0;\r\n\t\tfor (let i = legendaries.length - 1; i >= 0; i--) {\r\n\t\t\tconst legendaryname = legendaries[i].name ? legendaries[i].name + \".\" : \"\";\r\n\t\t\tconst legendarytext = legendaries[i].text;\r\n\t\t\tlet legendarytexthtml = \"\";\r\n\t\t\tlet renderedcount = 0;\r\n\t\t\tfor (let n = 0; n < legendarytext.length; n++) {\r\n\t\t\t\tif (!legendarytext[n]) continue;\r\n\t\t\t\trenderedcount++;\r\n\t\t\t\tlet firstsecond = \"\";\r\n\t\t\t\tif (renderedcount === 1) firstsecond = \"first \";\r\n\t\t\t\tif (renderedcount === 2) firstsecond = \"second \";\r\n\t\t\t\tlegendarytexthtml += `<p class='${firstsecond}'>${legendarytext[n]}</p>`;\r\n\t\t\t}\r\n\t\t\tconst newLegendary = parseHTML(`<div class='legendary'><div class='legendary'><span class='name'>${legendaryname}</span> ${legendarytexthtml}</div></div>`)\r\n\t\t\tjqAfter(rootEl.querySelector(\"#legendaries\"), newLegendary);\r\n\t\t\tif (legendaryname.trim() === '' || legendaryname.indexOf('Legendary Actions') > -1) {\r\n\t\t\t\tshouldAddCap = false;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (shouldAddCap) {\r\n\t\t\tconst legendaryActions = mon.legendaryActions || 3;\r\n\t\t\tconst legendaryName = name.split(\",\");\r\n\t\t\tconst newLegendaryCap = parseHTML(`<div class='legendary'><div class='legendary'><span class='name'></span> <span>${legendaryName[0]} can take ${legendaryActions} legendary action${legendaryActions > 1 ? \"s\" : \"\"}, choosing from the options below. Only one legendary action can be used at a time and only at the end of another creature's turn. ${legendaryName[0]} regains spent legendary actions at the start of its turn.</span></div></div>`)\r\n\t\t\tjqAfter(rootEl.querySelector(\"#legendaries\"), newLegendaryCap);\r\n\t\t}\r\n\t}\r\n\r\n\trootEl.querySelector(\"#lairactions\").style.display = 'none';\r\n\trootEl.querySelector(\"#regionaleffects\").style.display = 'none';\r\n\tif (mon.lairActions) renderSection(\"lairaction\", mon.lairActions);\r\n\tif (mon.regionalEffects) renderSection(\"regionaleffect\", mon.regionalEffects);\r\n\r\n\tfunction renderSection(sectionClass, sectionEntries) {\r\n\t\trootEl.querySelector(`#${sectionClass}s`).style.display = 'block';\r\n\t\tentryList = {type: \"entries\", entries: sectionEntries};\r\n\t\trenderStack = [];\r\n\t\trenderer.recursiveEntryRender(entryList, renderStack);\r\n\t\tconst newThing = parseHTML(`<div class='${sectionClass}'><div class='legendary'>${utils_makeRoller(renderStack.join(\"\"))}</div></div>`)\r\n\t\tjqAfter(rootEl.querySelector(`#${sectionClass}s`), newThing);\r\n\t}\r\n\r\n\tif (mon.skill) {\r\n\t\tmakeSkillRoller(rootEl.querySelector(\"#skills\"));\r\n\t}\r\n\tif (mon.save) {\r\n\t\tmakeSaveRoller(rootEl.querySelector(\"#saves\"));\r\n\t}\r\n\tfunction makeSkillRoller(element) {\r\n\t\tconst $this = element;\r\n\r\n\t\tconst re = /,\\s*(?![^()]*\\))/g; // Don't split commas within parentheses\r\n\t\tconst skills = $this.innerHTML.split(re).map(s => s.trim());\r\n\t\tconst out = [];\r\n\r\n\t\tskills.map(s => {\r\n\t\t\tconst re = /(\\-|\\+)?\\d+|(?:[^\\+]|\\n(?!\\+))+/g; // Split before and after each bonus\r\n\t\t\tconst spl = s.match(re);\r\n\r\n\t\t\tconst skillName = spl[0].trim();\r\n\r\n\t\t\tvar skillString = \"\";\r\n\t\t\tspl.map(b => {\r\n\t\t\t\tconst re = /(\\-|\\+)?\\d+/;\r\n\r\n\t\t\t\tif (b.match(re)){\r\n\t\t\t\t\tconst bonus = Number(b);\r\n\t\t\t\t\tconst fromAbility = Parser.getAbilityModNumber(mon[getAttribute(skillName)]);\r\n\t\t\t\t\tconst expectedPB = getProfBonusFromCr(mon.cr);\r\n\t\t\t\t\tconst pB = bonus - fromAbility;\r\n\t\t\r\n\t\t\t\t\tconst expert = (pB === expectedPB * 2) ? 2 : 1;\r\n\t\t\t\t\tconst pBonusStr = `+${bonus}`;\r\n\t\t\t\t\tconst pDiceStr = `${expert}d${pB*(3-expert)}${fromAbility >= 0 ? \"+\" : \"\"}${fromAbility}`;\r\n\t\t\r\n\t\t\t\t\tskillString += renderSkillOrSaveRoller(skillName, pBonusStr, pDiceStr, false);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tskillString += b;\r\n\t\t\t\t}\t\t\t\t\r\n\t\t\t});\r\n\r\n\t\t\tout.push(skillString);\r\n\t\t});\t\t\r\n\r\n\t\t$this.innerHTML = (out.join(\", \"));\r\n\t}\r\n\tfunction makeSaveRoller(element) {\r\n\t\tconst $this = element;\r\n\t\tconst saves = $this.innerHTML.split(\",\").map(s => s.trim());\r\n\t\tconst out = [];\r\n\t\tsaves.map(s => {\r\n\t\t\tconst spl = s.split(\"+\").map(s => s.trim());\r\n\t\t\tconst bonus = Number(spl[1]);\r\n\t\t\tconst fromAbility = Parser.getAbilityModNumber(mon[spl[0].toLowerCase()]);\r\n\t\t\tconst expectedPB = getProfBonusFromCr(mon.cr);\r\n\t\t\tconst pB = bonus - fromAbility;\r\n\r\n\t\t\tconst expert = (pB === expectedPB * 2) ? 2 : 1;\r\n\t\t\tconst pBonusStr = `+${bonus}`;\r\n\t\t\tconst pDiceStr = `${expert}d${pB*(3-expert)}${fromAbility >= 0 ? \"+\" : \"\"}${fromAbility}`;\r\n\r\n\t\t\tout.push(spl[0] + ' ' + renderSkillOrSaveRoller(spl[0], pBonusStr, pDiceStr, true));\r\n\t\t});\r\n\t\t$this.innerHTML = (out.join(\", \"));\r\n\t}\r\n\tfunction renderSkillOrSaveRoller(itemName, profBonusString, profDiceString, isSave) {\r\n\t\tconst mode = PROF_MODE_BONUS;\r\n\t\treturn `<span class='roller' title=\"${itemName} ${isSave ? \" save\" : \"\"}\" data-roll-alt=\"1d20;${profDiceString}\" data-roll='1d20${profBonusString}' ${ATB_PROF_MODE}='${mode}' ${ATB_PROF_DICE_STR}=\"+${profDiceString}\" ${ATB_PROF_BONUS_STR}=\"${profBonusString}\">${profBonusString}</span>`;\r\n\t}\r\n\r\n\t// inline rollers\r\n\tconst statPEls = rootEl.querySelectorAll(\"#stats p\");\r\n\tfor (let statPEl of statPEls) {\r\n\t\taddNonD20Rollers(statPEl);\r\n\r\n\t\t// add proficiency dice stuff for attack rolls, since those _generally_ have proficiency\r\n\t\t// this is not 100% accurate; for example, ghouls don't get their prof bonus on bite attacks\r\n\t\t// fixing it would probably involve machine learning though; we need an AI to figure it out on-the-fly\r\n\t\t// (Siri integration forthcoming)\r\n\t\tconst titleMaybe = attemptToGetTitle(statPEl);\r\n\t\tconst mode = PROF_MODE_BONUS;\r\n\r\n\t\tstatPEl.innerHTML = (statPEl.innerHTML.replace(/(\\-|\\+)?\\d+(?= to hit)/g, function(match) {\r\n\t\t\tconst bonus = Number(match);\r\n\r\n\t\t\tconst expectedPB = getProfBonusFromCr(mon.cr);\r\n\t\t\tconst withoutPB = bonus - expectedPB;\r\n\r\n\t\t\tif (expectedPB > 0) {\r\n\t\t\t\tconst profDiceString = `1d${expectedPB*2}${withoutPB >= 0 ? \"+\" : \"\"}${withoutPB}`;\r\n\r\n\t\t\t\treturn `<span class='roller' ${titleMaybe ? `title=\"${titleMaybe}\"` : \"\"} data-roll-alt='1d20;${profDiceString}' data-roll='1d20${match}' ${ATB_PROF_MODE}='${mode}' ${ATB_PROF_DICE_STR}=\"+${profDiceString}\" ${ATB_PROF_BONUS_STR}=\"${match}\">${match}</span>`\r\n\t\t\t} else {\r\n\t\t\t\treturn `<span class='roller' data-roll='1d20${match}'>${match}</span>`; // if there was no proficiency bonus to work with, fall back on this\r\n\t\t\t}\r\n\t\t}));\r\n\r\n\t\tstatPEl.innerHTML = (statPEl.innerHTML.replace(/DC\\s*(\\d+)/g, function(match, capture) {\r\n\t\t\tconst dc = Number(capture);\r\n\r\n\t\t\tconst expectedPB = getProfBonusFromCr(mon.cr);\r\n\r\n\t\t\tif (expectedPB > 0) {\r\n\t\t\t\tconst withoutPB = dc - expectedPB;\r\n\t\t\t\tconst profDiceString = `1d${(expectedPB*2)}${withoutPB >= 0 ? \"+\" : \"\"}${withoutPB}`;\r\n\r\n\t\t\t\treturn `DC <span class=\"dc-roller\" ${titleMaybe ? `title=\"${titleMaybe}\"` : \"\"} ${ATB_PROF_MODE}=\"${mode}\" data-roll-alt=\"${profDiceString}\" data-bonus=\"${capture}\" ${ATB_PROF_DICE_STR}=\"+${profDiceString}\" ${ATB_PROF_BONUS_STR}=\"${capture}\">${capture}</span>`;\r\n\t\t\t} else {\r\n\t\t\t\treturn match; // if there was no proficiency bonus to work with, fall back on this\r\n\t\t\t}\r\n\t\t}));\r\n\t}\r\n\taddNonD20Rollers(rootEl.querySelector(\"#stats #hp\"));\r\n\tfunction addNonD20Rollers (ele) {\r\n\t\tele.innerHTML = ele.innerHTML.replace(/\\d+d\\d+(\\s?(\\-|\\+)\\s?\\d+\\s?)?/g, function(match) {\r\n      const titleMaybe = attemptToGetTitle(ele);\r\n      return `<span class='roller' ${titleMaybe ? `title=\"${titleMaybe}\"` : \"\"} data-roll='${match}'>${match}</span>`;\r\n    });\r\n\t}\r\n\tfunction attemptToGetTitle(ele) {\r\n\t\tlet titleMaybe = ele.parentElement.querySelector(\".name\");\r\n\t\tif (titleMaybe) {\r\n\t\t\ttitleMaybe = titleMaybe.innerHTML;\r\n\t\t\tif (titleMaybe) {\r\n\t\t\t\ttitleMaybe = titleMaybe.substring(0, titleMaybe.length-1).trim();\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn titleMaybe;\r\n\t}\r\n\r\n\t//$(\".spells span.roller\").contents().unwrap();\r\n\tlet statsRollerEls = rootEl.querySelectorAll(\"#stats span.roller\");\r\n\tfor (let statsRollerEl of statsRollerEls) {\r\n\t\tstatsRollerEl.addEventListener('click', () => {\r\n\t\t\tconst $this = statsRollerEl;\r\n\t\t\tlet roll;\r\n\t\t\tlet rollResult;\r\n\t\t\tif ($this.getAttribute(ATB_PROF_MODE) === PROF_MODE_DICE) {\r\n\t\t\t\troll = $this.getAttribute(\"data-roll-alt\").replace(/\\s+/g, \"\");\r\n\t\t\t\t// hacks because droll doesn't support e.g. \"1d20+1d4+2\" :joy: :ok_hand:\r\n\t\t\t\tconst multi = roll.split(\";\");\r\n\t\t\t\troll = roll.replace(\";\", \"+\");\r\n\t\t\t\trollResult = droll.roll(multi[0]);\r\n\t\t\t\tconst res2 = droll.roll(multi[1]);\r\n\t\t\t\trollResult.rolls = rollResult.rolls.concat(res2.rolls);\r\n\t\t\t\trollResult.total += res2.total;\r\n\t\t\t} else {\r\n\t\t\t\troll = $this.getAttribute(\"data-roll\").replace(/\\s+/g, \"\");\r\n\t\t\t\trollResult = droll.roll(roll);\r\n\t\t\t}\r\n\t\t\toutputRollResult($this, roll, rollResult);\r\n\t\t});\r\n\t}\r\n\t\r\n\tlet statsDCRollerEls = rootEl.querySelectorAll(\"#stats span.roller\");\r\n\tfor (let statsDCRollerEl of statsDCRollerEls) {\r\n\t\tconst $this = statsDCRollerEl;\r\n    let roll;\r\n    let rollResult;\r\n    if ($this.getAttribute(ATB_PROF_MODE) === PROF_MODE_DICE) {\r\n      roll = $this.getAttribute(\"data-roll-alt\").replace(/\\s+/g, \"\");\r\n      rollResult = droll.roll(roll);\r\n      outputRollResult($this, roll, rollResult);\r\n    }\r\n\t}\r\n\r\n\tfunction outputRollResult($ele, roll, rollResult) {\r\n\t\tconst name = window.monsterName;\r\n\t\tconst newResult = parseHTML(\r\n      `<span>${name}: <em>${roll}</em> rolled ${\r\n        $ele.getAttribute(\"title\") ? `${$ele.getAttribute(\"title\")} ` : \"\"\r\n      }for <strong>${rollResult.total}</strong> (<em>${rollResult.rolls.join(\", \")}</em>)<br></span>`\r\n\t\t);\r\n\t\tconst outputEl = rootEl.querySelector(\"#output\");\r\n\t\tjqPrepend(outputEl, newResult);\r\n\t\toutputEl.style.display = 'block';\r\n\t\tif (outputEl.children.length === MAX_ROLLS + 1) {\r\n\t\t\toutputEl.children[MAX_ROLLS].remove();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport { renderSelection };\r\n","import { utils_combineText } from \"../js/utils.js\";\r\n\r\nconst stats_wrapper = `\r\n\t<div class=\"stats-wrapper margin-bottom_large\">\r\n\t\t<div class=\"text\"></div>\r\n\t</div>`;\r\n\r\nfunction renderSelection(curcondition, rootEl) {\r\n  rootEl.querySelector(\".selection-wrapper\").innerHTML = stats_wrapper;\r\n  rootEl.querySelector(\".stats-wrapper .text\").innerHTML = utils_combineText(curcondition.entries, \"p\");\r\n}\r\n\r\nexport { renderSelection };","import {\r\n  utils_combineText,\r\n} from \"../js/utils.js\";\r\n\r\nconst stats_wrapper = `\r\n\t<div class=\"stats-wrapper margin-bottom_large\">\r\n\t\t<div class=\"text\"></div>\r\n\t</div>`;\r\n\r\nfunction renderSelection(curcult, rootEl) {\r\n\trootEl.querySelector(\".selection-wrapper\").innerHTML = stats_wrapper;\r\n\r\n  const textlist = curcult.text;\r\n  let texthtml = \"\";\r\n\r\n  if (curcult.goal !== undefined)\r\n    texthtml += utils_combineText(curcult.goal.text, \"p\", \"<span class='stat-name'>Goals:</span> \");\r\n  if (curcult.cultists !== undefined)\r\n    texthtml += utils_combineText(curcult.cultists.text, \"p\", \"<span class='stat-name'>Typical Cultist:</span> \");\r\n  if (curcult.signaturespells !== undefined)\r\n    texthtml += utils_combineText(\r\n      curcult.signaturespells.text,\r\n      \"p\",\r\n      \"<span class='stat-name'>Signature Spells:</span> \"\r\n    );\r\n  texthtml += utils_combineText(textlist, \"p\");\r\n\r\n  rootEl.querySelector(\".stats-wrapper .text\").innerHTML = texthtml;\r\n}\r\n\r\nexport {renderSelection};","import { utils_makePrerequisite } from \"../js/utils.js\";\r\nimport { parse_abilityLong } from \"../util/ability.js\";\r\nimport Parser from '../util/Parser.js';\r\nimport EntryRenderer from \"../util/entryrender.js\";\r\n\r\nconst renderer = new EntryRenderer();\r\n\r\nconst stats_wrapper = `\r\n\t<div class=\"stats-wrapper margin-bottom_large\">\r\n\t\t<div class=\"source margin-bottom_small\"></div>\r\n\t\t<div class=\"prerequisite margin-bottom_small\"></div>\r\n\t\t<div class=\"text\"></div>\r\n\t</div>`;\r\n\r\nfunction renderSelection(feat, rootEl) {\r\n\trootEl.querySelector(\".selection-wrapper\").innerHTML = stats_wrapper;\r\n\r\n\tlet sourceEl = rootEl.querySelector('.stats-wrapper .source');\r\n\tsourceEl.classList.add(`source${feat.source}`);\r\n\tsourceEl.setAttribute(\"title\", Parser.sourceJsonToFull(feat.source));\r\n\tsourceEl.innerHTML = `${Parser.sourceJsonToAbv(feat.source)}`;\r\n\r\n\tconst prerequisite = utils_makePrerequisite(feat.prerequisite);\r\n\trootEl.querySelector('.stats-wrapper .prerequisite').innerHTML = (prerequisite ? \"Prerequisite: \" + prerequisite : \"\");\r\n\t\r\n\tif (feat.ability) {\r\n\t\tfor (let entry of feat.entries) { \r\n\t\t\t// insert the new list item at the head of the first list we find list; flag with \"hasabilityitem\" so we don't do it more than once\r\n\t\t\tif (entry.type === \"list\" && !entry.hasabilityitem) {\r\n\t\t\t\tentry.hasabilityitem = true;\r\n\t\t\t\tentry.items.unshift(parse_abilityLong(feat.ability))\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tif (feat.entries.length) {\r\n\t\tlet outstack = [];\r\n\t\tfor (let entry of feat.entries) {\r\n\t\t\trenderer.recursiveEntryRender(entry, outstack, 0);\r\n\t\t}\r\n\t\trootEl.querySelector('.stats-wrapper .text').innerHTML = outstack.join(' ');\r\n\t}\r\n}\r\n\r\nexport { renderSelection };","import { utils_makePrerequisite, utils_joinPhraseArray } from \"../js/utils.js\";\nimport { parse_abilityLong } from \"../util/ability.js\";\nimport Parser from '../util/Parser.js';\nimport EntryRenderer from \"../util/entryrender.js\";\n\nconst renderer = new EntryRenderer();\n\nconst stats_wrapper = `\n\t<div class=\"stats-wrapper margin-bottom_large\">\n    <div class=\"source margin-bottom_small\"></div>\n    <div class=\"type margin-bottom_small\"></div>\n\t\t<div class=\"prerequisite margin-bottom_small\"></div>\n\t\t<div class=\"text\"></div>\n\t</div>`;\n\nfunction renderSelection(feature, rootEl) {\n\trootEl.querySelector(\".selection-wrapper\").innerHTML = stats_wrapper;\n\n\tlet sourceEl = rootEl.querySelector('.stats-wrapper .source');\n\tsourceEl.classList.add(`source${feature.source}`);\n\tsourceEl.setAttribute(\"title\", Parser.sourceJsonToFull(feature.source));\n\tsourceEl.innerHTML = `${Parser.sourceJsonToAbv(feature.source)}`;\n\n  let typeArray = feature.featureType ? Array.isArray(feature.featureType) ? feature.featureType : [feature.featureType] : [];\n\trootEl.querySelector('.stats-wrapper .type').innerHTML = utils_joinPhraseArray(typeArray.map(t => {return Parser.featureJsonToAbv(t)}), \", \", \" and \")\n\n\tconst prerequisite = utils_makePrerequisite(feature.prerequisite);\n\trootEl.querySelector('.stats-wrapper .prerequisite').innerHTML = (prerequisite ? \"Prerequisite: \" + prerequisite : \"\");\n\t\n\tif (feature.ability) {\n\t\tfor (let entry of feature.entries) { \n\t\t\t// insert the new list item at the head of the first list we find list; flag with \"hasabilityitem\" so we don't do it more than once\n\t\t\tif (entry.type === \"list\" && !entry.hasabilityitem) {\n\t\t\t\tentry.hasabilityitem = true;\n\t\t\t\tentry.items.unshift(parse_abilityLong(feature.ability))\n\t\t\t}\n\t\t}\n\t}\n\t\n\tif (feature.entries.length) {\n\t\tlet outstack = [];\n\t\tfor (let entry of feature.entries) {\n\t\t\trenderer.recursiveEntryRender(entry, outstack, 0);\n\t\t}\n\t\trootEl.querySelector('.stats-wrapper .text').innerHTML = outstack.join(' ');\n\t}\n}\n\nexport { renderSelection };","import { utils_combineText, parse_psionicTypeToFull } from \"../js/utils.js\";\r\nimport { ELE_P, STR_EMPTY } from \"../util/consts.js\";\r\n\r\nconst stats_wrapper = `\r\n\t<div class=\"stats-wrapper margin-bottom_large\">\r\n\t\t<div class=\"order margin-bottom_small\"></div>\r\n\t\t<div class=\"duration margin-bottom_small\"></div>\r\n\t\t<div class=\"text\"></div>\r\n\t</div>`;\r\n\r\nfunction renderSelection(selectedPsionic, rootEl) {\r\n  rootEl.querySelector(\".selection-wrapper\").innerHTML = stats_wrapper;\r\n  const STATS_ORDER_AND_TYPE = rootEl.querySelector(\".stats-wrapper .order\");\r\n  const STATS_DURATION = rootEl.querySelector(\".stats-wrapper .duration\");\r\n  const STATS_TEXT = rootEl.querySelector(\".stats-wrapper .text\");\r\n\r\n  if (selectedPsionic.type === \"T\") loadTalent();\r\n  else if (selectedPsionic.type === \"D\") loadDiscipline();\r\n\r\n  function loadTalent() {\r\n    STATS_ORDER_AND_TYPE.innerHTML = parse_psionicTypeToFull(selectedPsionic.type);\r\n    STATS_TEXT.innerHTML = utils_combineText(selectedPsionic.text, ELE_P);\r\n    STATS_DURATION.innerHTML = STR_EMPTY;\r\n  }\r\n  function loadDiscipline() {\r\n    STATS_ORDER_AND_TYPE.innerHTML = `${selectedPsionic.order} ${parse_psionicTypeToFull(selectedPsionic.type)}`;\r\n    STATS_TEXT.innerHTML = getTextString();\r\n    STATS_DURATION.innerHTML = getDurationString();\r\n\r\n    function getTextString() {\r\n      const modeStringArray = [];\r\n      for (let i = 0; i < selectedPsionic.modes.length; ++i) {\r\n        modeStringArray.push(getModeString(i));\r\n      }\r\n\r\n      return `${getDescriptionString()}${getFocusString()}${modeStringArray.join(STR_EMPTY)}`;\r\n    }\r\n    function getDescriptionString() {\r\n      return `<p>${selectedPsionic.description}</p>`;\r\n    }\r\n    function getFocusString() {\r\n      return `<p><span class='stat-name'>Psycic Focus.</span> ${selectedPsionic.focus}</p>`;\r\n    }\r\n    function getModeString(modeIndex) {\r\n      const modeString = utils_combineText(\r\n        selectedPsionic.modes[modeIndex].text,\r\n        ELE_P,\r\n        getModeTitle(selectedPsionic.modes[modeIndex])\r\n      );\r\n      if (selectedPsionic.modes[modeIndex].submodes === undefined) return modeString;\r\n      const subModeString = getSubModeString();\r\n      return `${modeString}${subModeString}`;\r\n\r\n      function getSubModeString() {\r\n        const modeStrings = [];\r\n        const subModes = selectedPsionic.modes[modeIndex].submodes;\r\n        for (let i = 0; i < subModes.length; ++i) {\r\n          modeStrings.push(utils_combineText(subModes[i].text, ELE_P, getModeTitle(subModes[i], true)));\r\n        }\r\n        return modeStrings.join(STR_EMPTY);\r\n      }\r\n\r\n      function getModeTitle(mode, subMode) {\r\n        subMode = subMode === undefined || subMode === null ? false : subMode;\r\n        const modeTitleArray = [];\r\n        modeTitleArray.push(mode.title);\r\n        const bracketPart = getModeTitleBracketPart();\r\n        if (bracketPart !== null) modeTitleArray.push(bracketPart);\r\n        if (subMode) return `<span class='stat-name'>${modeTitleArray.join(\" \")}.</span> `;\r\n        else return `<span class='stat-name'>${modeTitleArray.join(\" \")}.</span> `;\r\n\r\n        function getModeTitleBracketPart() {\r\n          const modeTitleBracketArray = [];\r\n\r\n          if (mode.cost) modeTitleBracketArray.push(getModeTitleCost());\r\n          if (mode.concentration) modeTitleBracketArray.push(getModeTitleConcentration());\r\n\r\n          if (modeTitleBracketArray.length === 0) return null;\r\n          return `(${modeTitleBracketArray.join(\"; \")})`;\r\n\r\n          function getModeTitleCost() {\r\n            const costMin = mode.cost.min;\r\n            const costMax = mode.cost.max;\r\n            const costString = costMin === costMax ? costMin : `${costMin}-${costMax}`;\r\n            return `${costString} psi`;\r\n          }\r\n          function getModeTitleConcentration() {\r\n            return `conc., ${mode.concentration.duration} ${mode.concentration.unit}.`;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  function getDurationString() {\r\n    const duration = selectedPsionic.duration;\r\n    if (duration === undefined) return STR_EMPTY;\r\n    else return getDurationElement();\r\n\r\n    function getDurationElement() {}\r\n  }\r\n}\r\n\r\nexport { renderSelection };\r\n","import { utils_combineText } from \"../js/utils.js\";\r\nimport EntryRenderer from \"../util/entryrender.js\";\r\nimport Parser from \"../util/Parser.js\";\r\nimport { parse_abilityShort } from \"../util/ability.js\";\r\n\r\nconst stats_wrapper = `\r\n\t<div class=\"stats-wrapper margin-bottom_large\">\r\n\t\t<div class=\"source margin-bottom_small\"></div>\r\n\t\t<div class=\"size margin-bottom_small\"></div>\r\n\t\t<div class=\"ability margin-bottom_small\"></div>\r\n\t\t<div class=\"speed margin-bottom_small\"></div>\r\n\t\t<div class=\"stats\"></div>\r\n\t</div>`;\r\n\r\nfunction renderSelection(race, rootEl) {\r\n  if (rootEl.querySelector(\".selection-wrapper\")) {\r\n    rootEl.querySelector(\".selection-wrapper\").innerHTML = stats_wrapper;\r\n  } else {\r\n    rootEl.innerHTML = stats_wrapper;\r\n  }\r\n  const sourceEl = rootEl.querySelector(\".stats-wrapper .source\");\r\n  sourceEl.classList.add(`source${race.source}`);\r\n  sourceEl.setAttribute(\"title\", Parser.sourceJsonToFull(race.source));\r\n  sourceEl.innerHTML = `${Parser.sourceJsonToAbv(race.source)}`;\r\n\r\n  const size = Parser.sizeAbvToFull(race.size);\r\n  rootEl.querySelector(\".stats-wrapper .size\").innerHTML = size;\r\n  if (size === \"\") {\r\n    rootEl.querySelector(\".stats-wrapper .size\").style.display = \"none\";\r\n  }\r\n\r\n  const ability = parse_abilityShort(race.ability);\r\n  rootEl.querySelector(\".stats-wrapper .ability\").innerHTML = ability;\r\n\r\n  let speed;\r\n  if (race.speed) {\r\n    if (race.speed.walk) {\r\n      speed = race.speed.walk + \" ft.\";\r\n      if (race.speed.climb) speed += `, climb ${race.speed.climb} ft.`;\r\n      if (race.speed.fly) speed += `, fly ${race.speed.fly} ft.`;\r\n    } else {\r\n      speed = race.speed + (race.speed === \"Varies\" ? \"\" : \" ft. \");\r\n    }\r\n  }\r\n  rootEl.querySelector(\".stats-wrapper .speed\").innerHTML = speed;\r\n  if (speed === \"\") {\r\n    rootEl.querySelector(\".stats-wrapper .speed\").style.display = \"none\";\r\n  }\r\n\r\n  const traitlist = race.trait;\r\n  if (traitlist) {\r\n    let statsText = \"<div class='stat-item'>\";\r\n    for (let n = 0; n < traitlist.length; ++n) {\r\n      const trait = traitlist[n];\r\n\r\n      const header = `<span class='stat-name'>${trait.name}.</span> `;\r\n      statsText += utils_combineText(traitlist[n].text, \"p\", header);\r\n    }\r\n    statsText += \"</div>\";\r\n    rootEl.querySelector(\".stats-wrapper .stats\").innerHTML = statsText;\r\n  } else if (race.entries) {\r\n    const renderStack = [];\r\n    const faux = { type: \"entries\", entries: race.entries };\r\n\r\n    // Grung to test with\r\n    new EntryRenderer().recursiveEntryRender(faux, renderStack, 1, \"<div class='renderer-output'>\", \"</div>\", true);\r\n\r\n    rootEl.querySelector(\".stats-wrapper .stats\").innerHTML = renderStack.join(\"\");\r\n  }\r\n}\r\n\r\nexport { renderSelection };\r\n","import { utils_combineText } from \"../js/utils.js\";\r\nimport Parser from \"../util/Parser.js\";\r\n\r\nconst stats_wrapper = `\r\n\t<div class=\"stats-wrapper margin-bottom_large\">\r\n\t\t<div class=\"source margin-bottom_small\"></div>\r\n\t\t<div class=\"text\"></div>\r\n\t</div>`;\r\n\r\nfunction renderSelection(reward, rootEl) {\r\n\trootEl.querySelector(\".selection-wrapper\").innerHTML = stats_wrapper;\t\r\n\tconst sourceEl = rootEl.querySelector('.stats-wrapper .source');\r\n\tsourceEl.classList.add(`source${reward.source}`);\r\n\tsourceEl.setAttribute('title', Parser.sourceJsonToFull(reward.source));\r\n\tsourceEl.innerHTML = `${Parser.sourceJsonToAbv(reward.source)}`;\r\n\r\n\tconst textlist = reward.text;\r\n\tlet texthtml = \"\";\r\n\r\n\tif (reward.ability !== undefined) texthtml += utils_combineText(reward.ability.text, \"p\", \"<span class='stat-name'>Ability Score Adjustment:</span> \");\r\n\tif (reward.signaturespells !== undefined) texthtml += utils_combineText(reward.signaturespells.text ? reward.signaturespells.text : \"None\", \"p\", \"<span class='stat-name'>Signature Spells:</span> \");\r\n\ttexthtml += utils_combineText(textlist, \"p\");\r\n\r\n\trootEl.querySelector(\".stats-wrapper .text\").innerHTML = \"<tr class='text'><td colspan='6'>\"+texthtml+\"</td></tr>\";\r\n}\r\n\r\nexport { renderSelection };\r\n","import EntryRenderer from \"../util/entryrender.js\";\r\nimport Parser from \"../util/Parser.js\";\r\n\r\nconst entryRenderer = new EntryRenderer();\r\nconst stats_wrapper = `\r\n\t<div class=\"stats-wrapper margin-bottom_large\">\r\n\t\t<div class=\"source margin-bottom_small\"></div>\r\n\t\t<div class=\"text\"></div>\r\n\t</div>`;\r\n\r\nfunction renderSelection(curRule, rootEl) {\r\n  rootEl.querySelector(\".selection-wrapper\").innerHTML = stats_wrapper;\r\n  const sourceEl = rootEl.querySelector(\".stats-wrapper .source\");\r\n  sourceEl.classList.add(`source${curRule.source}`);\r\n  sourceEl.setAttribute(\"title\", Parser.sourceJsonToFull(curRule.source));\r\n\tsourceEl.innerHTML = `${Parser.sourceJsonToAbv(curRule.source)}`;\r\n\r\n  const textStack = [];\r\n  entryRenderer.recursiveEntryRender(curRule, textStack);\r\n  rootEl.querySelector(\".stats-wrapper .text\").innerHTML = textStack.join(\"\");\r\n}\r\n\r\nexport { renderSelection };"],"sourceRoot":""}