{"version":3,"sources":["webpack:///./node_modules/@vaadin/vaadin-text-field/theme/lumo/vaadin-number-field-styles.js","webpack:///./node_modules/@vaadin/vaadin-text-field/src/vaadin-number-field.js","webpack:///./node_modules/@vaadin/vaadin-text-field/src/vaadin-integer-field.js","webpack:///./components/dnd-select-add.js","webpack:///./node_modules/@vaadin/vaadin-text-field/vaadin-text-field.js","webpack:///./components/views/character/dnd-character-builder-equipment-item-detail.js","webpack:///./node_modules/@vaadin/vaadin-text-field/theme/lumo/vaadin-text-area-styles.js","webpack:///./node_modules/@vaadin/vaadin-text-field/src/vaadin-text-area.js"],"names":["$_documentContainer","document","head","appendChild","content","createElement","memoizedTemplate","innerHTML","hasControls","type","Boolean","value","reflectToAttribute","min","Number","observer","max","step","super","ready","this","__previousValidInput","inputElement","addEventListener","__onInputChange","bind","e","preventDefault","_decreaseValue","_increaseValue","template","cloneNode","thisTemplate","import","is","decreaseButton","querySelector","increaseButton","styles","inputField","prefixSlot","insertBefore","_createMethodObserver","required","minlength","maxlength","pattern","invalid","isNumUnset","n","_constraintsChanged","validate","_incrementValue","incr","disabled","readonly","parseFloat","_getIncrement","newValue","_incrementIsInsideTheLimits","_setValue","String","dispatchEvent","CustomEvent","bubbles","currentValue","multiplier","Math","_getMultiplier","margin","round","number","s","i","indexOf","length","isNaN","pow","_getDecimalCount","sign","__validateByStep","__stepChangedCalled","getAttribute","setAttribute","newVal","oldVal","_valueChanged","keyCode","_onKeyDown","undefined","checkValidity","window","customElements","define","preventInvalidInput","_enabledCharPattern","__isInteger","console","warn","__hasOnlyDigits","_stepChanged","test","DndSelectAdd","options","Array","model","addCallback","Function","choices","paren","label","placeholder","multiValue","listBox","remove","$","select","render","isArray","choiceArray","map","v","findIndex","o","name","source","filter","selectedValues","join","setTimeout","async","renderer","root","opened","wasPreviouslySelected","srcElement","splice","selectedOptions","option","item","optionName","_assignMenuElement","valueUpdated","connectedCallback","selectChangeHandler","val","selected","disconnectedCallback","removeEventListener","a","result","DndCharacterBuilderEquipmentItemDetail","isEditMode","hasRenderedOutput","hasAC","armorAC","isArmor","isMartial","weaponMagicModifier","itemRarity","itemName","itemWeight","weaponProperties","itemResist","itemQuantity","Object","storedItem","itemType","smallRender","itemTypes","rarityTypes","damageTypes","resistTypes","weaponPropertyOptions","weaponPropertyValues","editModeHandler","detail","error","itemRef","lookupFailed","renderedOutput","_getItemType","armor","ac","weaponCategory","weapon","parseInt","genericBonus","propStr","property","props","split","prop","propObj","find","trim","damages","dmg1","roll","dmgTypeToFull","dmgType","rarity","weight","canHaveResist","resist","canHaveQuantity","quantity","canHaveSpell","ITEM_TYPE_JSON_TO_ABV","newType","isEquipped","isAttuned","hasQuantity","typeVal","entries","key","push","rollDamageIndexAttr","rollDamageIndex","parsedMod","propCodes","parsedAC","parsedWeight","parsedQuantity","bools","bool","_updateHeight","_onAnimationEnd","animationName","scrollTop","input","inputWidth","getComputedStyle","width","valueLength","_oldValueLength","style","maxWidth","height","display","inputHeight","scrollHeight","clientHeight","removeProperty","_dispatchIronResizeEventIfNeeded"],"mappings":"4GAKA,MAAMA,E,KAAsB,CAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eA2ChCC,SAASC,KAAKC,YAAYH,EAAoBI,S;;;;;;ACtC9C,MAAM,EAAsBH,SAASI,cAAc,YA+EnD,IAAIC,EA7EJ,EAAoBC,UAAY,8tEA4EhCN,SAASC,KAAKC,YAAY,EAAoBC,SAc9C,MAAM,UAA2B,IAC/B,gBACE,MAAO,sBAGT,qBACE,MAAO,QAGT,wBACE,MAAO,CAILI,YAAa,CACXC,KAAMC,QACNC,OAAO,EACPC,oBAAoB,GAMtBC,IAAK,CACHJ,KAAMK,OACNF,oBAAoB,EACpBG,SAAU,eAMZC,IAAK,CACHP,KAAMK,OACNF,oBAAoB,EACpBG,SAAU,eAMZE,KAAM,CACJR,KAAMK,OACNH,MAAO,EACPI,SAAU,iBAMhB,QACEG,MAAMC,QACNC,KAAKC,qBAAuBD,KAAKT,OAAS,GAC1CS,KAAKE,aAAab,KAAO,SACzBW,KAAKE,aAAaC,iBAAiB,SAAUH,KAAKI,gBAAgBC,KAAKL,OAGzE,wBAAwBM,GAEtBA,EAAEC,iBACFP,KAAKQ,iBAGP,wBAAwBF,GAEtBA,EAAEC,iBACFP,KAAKS,iBAGP,sBACE,IAAKvB,EAAkB,CAErBA,EAAmBY,MAAMY,SAASC,WAAU,GAG5C,MAAMC,EAAe,IAAUC,OAAOb,KAAKc,GAAK,YAAa,YACvDC,EAAiBH,EAAa5B,QAAQgC,cAAc,4BACpDC,EAAiBL,EAAa5B,QAAQgC,cAAc,4BACpDE,EAASN,EAAa5B,QAAQgC,cAAc,SAG5CG,EAAajC,EAAiBF,QAAQgC,cAAc,wBACpDI,EAAalC,EAAiBF,QAAQgC,cAAc,mBAC1DG,EAAWE,aAAaN,EAAgBK,GACxCD,EAAWpC,YAAYkC,GACvB/B,EAAiBF,QAAQD,YAAYmC,GAGvC,OAAOhC,EAGT,6BAEEc,KAAKsB,sBAAsB,gFAG7B,oBAAoBC,EAAUC,EAAWC,EAAWC,EAASjC,EAAKG,EAAKC,GACrE,IAAKG,KAAK2B,QACR,OAGF,MAAMC,EAAaC,IAAOA,GAAW,IAANA,EAE1BD,EAAWnC,IAASmC,EAAWhC,GAGlCE,MAAMgC,oBAAoBP,EAAUC,EAAWC,EAAWC,GAF1D1B,KAAK+B,WAMT,iBACE/B,KAAKgC,iBAAiB,GAGxB,iBACEhC,KAAKgC,gBAAgB,GAGvB,gBAAgBC,GACd,GAAIjC,KAAKkC,UAAYlC,KAAKmC,SACxB,OAGF,IAAI5C,EAAQ6C,WAAWpC,KAAKT,OAEvBS,KAAKT,MA4BCA,EAAQS,KAAKP,KACtBwC,EAAO,EACP1C,EAAQS,KAAKP,KACJF,EAAQS,KAAKJ,MACtBqC,EAAO,EACP1C,EAAQS,KAAKJ,KAhCG,GAAZI,KAAKP,KAAYwC,EAAO,GACZ,GAAZjC,KAAKJ,KAAYqC,EAAO,GACZ,GAAZjC,KAAKJ,KAAwB,GAAZI,KAAKP,KACxBwC,EAAO,EACP1C,EAAQ,IACc,MAAZS,KAAKJ,KAAeI,KAAKJ,KAAO,KACpB,MAAZI,KAAKP,KAAeO,KAAKP,KAAO,GAC1CF,EAAQ,EACCS,KAAKP,IAAM,GACpBF,EAAQS,KAAKP,IACTO,KAAKJ,IAAM,GAAKqC,EAAO,IACzB1C,EAAQS,KAAKJ,KAEfqC,EAAO,GACEjC,KAAKJ,IAAM,IACpBL,EAAQS,KAAKJ,IACTqC,EAAO,EACTA,EAAO,EAGHjC,KAAKqC,cAAc,EAAG9C,EAAQS,KAAKH,MAAQG,KAAKJ,IAClDL,GAAS,EAAIS,KAAKH,KAElBN,GAASS,KAAKH,MAYtB,MAAMyC,EAAWtC,KAAKqC,cAAcJ,EAAM1C,GACrCS,KAAKT,OAAiB,GAAR0C,IAAajC,KAAKuC,4BAA4BN,EAAM1C,IACrES,KAAKwC,UAAUF,GAInB,UAAU/C,GACRS,KAAKT,MAAQS,KAAKE,aAAaX,MAAQkD,OAAOL,WAAW7C,IACzDS,KAAK0C,cAAc,IAAIC,YAAY,SAAU,CAACC,SAAS,KAGzD,cAAcX,EAAMY,GAClB,IAAIhD,EAAOG,KAAKH,MAAQ,EACtBJ,EAAMO,KAAKP,KAAO,EAGpB,MAAMqD,EAAaC,KAAKnD,IAAII,KAAKgD,eAAeH,GAC9C7C,KAAKgD,eAAenD,GACpBG,KAAKgD,eAAevD,IAEtBI,GAAQiD,EAERrD,GAAOqD,EAEP,MAAMG,IAHNJ,EAAeE,KAAKG,MAAML,EAAeC,IAGVrD,GAAOI,EAEtC,OAAIoC,EAAO,GACDY,EAAeI,EAASpD,GAAQiD,EAC/Bb,EAAO,GACRY,GAAgBI,GAAUpD,IAASiD,EAEpCD,EAAeC,EAI1B,iBAAiBK,GACf,MAAMC,EAAIX,OAAOU,GACXE,EAAID,EAAEE,QAAQ,KACpB,OAAc,IAAPD,EAAW,EAAID,EAAEG,OAASF,EAAI,EAGvC,eAAeF,GACb,IAAKK,MAAML,GACT,OAAOJ,KAAKU,IAAI,GAAIzD,KAAK0D,iBAAiBP,IAI9C,4BAA4BlB,EAAM1C,GAChC,OAAI0C,EAAO,EACU,MAAZjC,KAAKP,KAAeO,KAAKqC,cAAcJ,EAAM1C,IAAUS,KAAKP,IAC1DwC,EAAO,EACG,MAAZjC,KAAKJ,KAAeI,KAAKqC,cAAcJ,EAAM1C,IAAUS,KAAKJ,IAE5DI,KAAKqC,cAAcJ,EAAM1C,IAAUS,KAAKJ,KAAOI,KAAKqC,cAAcJ,EAAM1C,IAAUS,KAAKP,IAIlG,SAASkE,GACP,MAAM1B,EAAO0B,GAAQ3D,KAAKH,MAAQ,GAC5BN,EAAQ6C,WAAWpC,KAAKT,OAC9B,OAAQS,KAAKT,QAAWS,KAAKkC,UAAYlC,KAAKuC,4BAA4BN,EAAM1C,GAGlF,aAAaM,GAEXG,KAAK4D,iBAAmB5D,KAAK6D,qBAAqD,OAA9B7D,KAAK8D,aAAa,QACtE9D,KAAKE,aAAaL,KAAOG,KAAK4D,iBAAmB/D,EAAO,MAExDG,KAAK6D,qBAAsB,EAC3B7D,KAAK+D,aAAa,OAAQlE,GAG5B,YAAYJ,GACVO,KAAKE,aAAaT,IAAMA,EAG1B,YAAYG,GACVI,KAAKE,aAAaN,IAAMA,EAG1B,cAAcoE,EAAQC,GAEhBD,GAAUR,MAAMpB,WAAW4B,IAC7BhE,KAAKT,MAAQ,GACkB,iBAAfS,KAAKT,QACrBS,KAAKT,MAAQkD,OAAOzC,KAAKT,QAG3BO,MAAMoE,cAAclE,KAAKT,MAAO0E,GAGlC,WAAW3D,GACQ,IAAbA,EAAE6D,SACJ7D,EAAEC,iBACFP,KAAKS,kBACiB,IAAbH,EAAE6D,UACX7D,EAAEC,iBACFP,KAAKQ,kBAEPV,MAAMsE,WAAW9D,GAGnB,kBACEN,KAAK+B,WAGP,gBAEE,YAAiBsC,IAAbrE,KAAKP,UAAkC4E,IAAbrE,KAAKJ,KAAqBI,KAAK4D,iBACpD5D,KAAKE,aAAaoE,gBAGpBxE,MAAMwE,iBAIjBC,OAAOC,eAAeC,OAAO,EAAmB3D,GAAI;;;;;;AClXpD,MAAM,EAAsBjC,SAASI,cAAc,YAEnD,EAAoBE,UAAY,uEAKhCN,SAASC,KAAKC,YAAY,EAAoBC,SAa9C,MAAM,UAA4B,EAChC,gBACE,MAAO,uBAGT,qBACE,MAAO,QAGT,wBAEE,MAAO,CAIL0C,QAASe,OAITiC,oBAAqBpF,QAIrBkC,UAAW9B,OAIX+B,UAAW/B,QAIf,QACEI,MAAMC,QACNC,KAAK2E,oBAAsB,UAG7B,cAAcX,EAAQC,GACpB,GAAe,KAAXD,IAAkBhE,KAAK4E,YAAYZ,GAIrC,OAHAa,QAAQC,KAAK,oCAAoCd,0DAEjDhE,KAAKT,MAAQ,IAGfO,MAAMoE,cAAcF,EAAQC,GAG9B,aAAaD,EAAQC,GACnB,IAAKjE,KAAK+E,gBAAgBf,GAKxB,OAJAa,QAAQC,KAAK,oCAAoCd,uGAGjDhE,KAAKH,KAAO,GAGdC,MAAMkF,aAAahB,EAAQC,GAG7B,YAAY1E,GACV,MAAO,cAAc0F,KAAKxC,OAAOlD,IAGnC,gBAAgBA,GACd,MAAO,QAAQ0F,KAAKxC,OAAOlD,KAI/BgF,OAAOC,eAAeC,OAAO,EAAoB3D,GAAI,I,iCC/FrD,0CAMA,MAAMoE,UAAqB,IACzB,wBACE,MAAO,CACLD,KAAM,CACJ5F,KAAMC,QACNE,oBAAoB,EACpBD,OAAO,GAET4F,QAAS,CACP9F,KAAM+F,MACNzF,SAAU,kBAEZ0F,MAAO,CACLhG,KAAMoD,QAER6C,YAAa,CACXjG,KAAMkG,UAERhG,MAAO,CACLF,KAAMoD,OACNlD,MAAO,GACPI,SAAU,gBAEZ6F,QAAS,CACPnG,KAAMK,OACNC,SAAU,kBAEZ8F,MAAO,CACLpG,KAAMoD,QAERiD,MAAO,CACLrG,KAAMoD,QAERkD,YAAa,CACXtG,KAAMoD,QAERmD,WAAY,CACVvG,KAAMoD,OACNlD,MAAO,IAET2C,SAAU,CACR7C,KAAMC,QACNC,OAAO,EACPC,oBAAoB,IAK1B,iBACMQ,KAAK6F,UACP7F,KAAK6F,QAAQC,gBACN9F,KAAK6F,SAEd7F,KAAK+F,EAAEC,OAAOC,SAGhB,iBACMjG,KAAK6F,UACP7F,KAAK6F,QAAQC,gBACN9F,KAAK6F,SAEd7F,KAAK+F,EAAEC,OAAOC,SAGhB,eACE,GAAIjG,KAAKwF,QACP,GAAIJ,MAAMc,QAAQlG,KAAKT,QAAUS,KAAKmF,QAAS,CAC7C,MAAMgB,EAAcnG,KAAKT,MACtB6G,IAAIC,IAC8B,IAA7BrG,KAAKmF,QAAQ7B,QAAQ+C,GAChBrG,KAAKmF,QAAQ7B,QAAQ+C,GAErBrG,KAAKmF,QAAQmB,UAAWC,GACtBA,EAAEC,OAASH,EAAEG,MAAQD,EAAEE,SAAWJ,EAAEI,SAIhDC,OAAOL,IAAqB,IAAPA,GAEpBrG,KAAK6F,UACP7F,KAAK6F,QAAQc,eAAiBR,GAEhCnG,KAAK4F,WAAaO,EAAYC,IAAI/C,IAChC,IAAI9D,EAAQS,KAAKmF,QAAQ9B,GACzB,OAAO9D,EAAMiH,KAAOjH,EAAMiH,KAAO,6BAAmBjH,KACnDqH,KAAK,WAEJ5G,KAAK6F,UACP7F,KAAK6F,QAAQc,eAAiB,IAEhC3G,KAAK4F,WAAa,QAGhB5F,KAAKT,OAASS,KAAKmF,QACjBnF,KAAKT,MAAMkH,OACbzG,KAAK+F,EAAEC,OAAOzG,MAAQS,KAAKmF,QAAQmB,UAAUjD,GAAcA,EAAEmD,OAASxG,KAAKT,MAAMiH,MAAQnD,EAAEoD,SAAWzG,KAAKT,MAAMkH,QAAUpD,IAAMrD,KAAKT,MAAMiH,MAAU,GAC7IxG,KAAKT,MAAMiH,KACpBxG,KAAK+F,EAAEC,OAAOzG,MAAQS,KAAKmF,QAAQmB,UAAUjD,GAAcA,EAAEmD,OAASxG,KAAKT,MAAMiH,MAAQnD,IAAMrD,KAAKT,MAAMiH,MAAU,GAEpHxG,KAAK+F,EAAEC,OAAOzG,MAAQS,KAAKmF,QAAQmB,UAAUjD,GAAcA,EAAEmD,OAASxG,KAAKT,OAAS8D,IAAMrD,KAAKT,OAAW,GAG5GS,KAAK+F,EAAEC,OAAOzG,MAAQ,GAK5B,QACEO,MAAMC,QAEN8G,WAAWC,UACL9G,KAAKqF,QACPrF,KAAKmF,cAAgB,YAAUnF,KAAKqF,QAGtCrF,KAAK+F,EAAEC,OAAOe,SAAW,CAACC,EAAMhB,KAC9B,IAAKhG,KAAK6F,QAAS,CA0BjB,GAzBA7F,KAAK6F,QAAUhH,SAASI,cAAc,mBAGlCe,KAAKwF,UACPxF,KAAK6F,QAAQ9B,aAAa,YAAY,GAEtC/D,KAAK6F,QAAQ1F,iBAAiB,QAAUG,IACtC0F,EAAOiB,QAAS,EAChB,IAAIC,EAAkE,OAA1C5G,EAAE6G,WAAWrD,aAAa,YACtD+C,WAAW,KACL7G,KAAK6F,QAAQc,eAAepD,OAASvD,KAAKwF,UACtC0B,GACNlH,KAAK6F,QAAQc,eAAeS,OAAOpH,KAAK6F,QAAQc,eAAepD,OAAS,EAAG,GAE7E,IAAI8D,EAAkBrH,KAAK6F,QAAQc,eAAeP,IAAIC,GAAcrG,KAAKmF,QAAQkB,IACjFrG,KAAK4F,WAAayB,EAAgBjB,IAAIG,GAAcA,EAAEC,KAAOD,EAAEC,KAAO,6BAAmBD,IAAMK,KAAK,MAChG5G,KAAKsF,aACPtF,KAAKsF,YAAY+B,IAElB,MAMHrH,KAAKmF,SAAWnF,KAAKmF,QAAQ5B,OAC/B,IAAK,IAAIF,EAAI,EAAGA,EAAIrD,KAAKmF,QAAQ5B,OAAQF,IAAM,CAC7C,MAAMiE,EAAStH,KAAKmF,QAAQ9B,GAC1BkE,EAAO1I,SAASI,cAAc,eAC1BuI,EAAaF,EAAOd,MAAQ,6BAAmBc,GACrDC,EAAKpI,UAAY,oCAAoCqI,YAAqBF,EAAOd,KAAO,yEAAyEc,EAAOb,gBAAkB,KAC1Lc,EAAKxD,aAAa,QAASV,GAC3BrD,KAAK6F,QAAQ9G,YAAYwI,GAG7BP,EAAKjI,YAAYiB,KAAK6F,SACtB7F,KAAK+F,EAAEC,OAAOyB,qBAEdzH,KAAK0H,kBAGR,GAGL,oBACE5H,MAAM6H,oBAEN3H,KAAK4H,oBAAsB,KACzB,MAAMC,EAAM7H,KAAK+F,EAAEC,OAAOzG,MAC1B,GAAIsI,IACG7H,KAAKwF,QAAS,CACjB,MAAMsC,EAAW9H,KAAKmF,QAAQ0C,GAC1B7H,KAAKsF,YACPtF,KAAKsF,YAAYwC,EAAU9H,KAAKqF,OAEhC,iBAAahB,EAAWyD,EAAU9H,KAAKqF,OAEpCrF,KAAKT,QACRS,KAAK+F,EAAEC,OAAOzG,MAAQ,MAM9BS,KAAK+F,EAAEC,OAAO7F,iBAAiB,SAAUH,KAAK4H,qBAGhD,uBACE9H,MAAMiI,uBAEN/H,KAAK+F,EAAEC,OAAOgC,oBAAoB,SAAUhI,KAAK4H,qBAGnD,QAAQK,GACN,QAASA,EAGX,OAAOvC,EAAOF,EAASC,GACrB,IAAIyC,EAAS,GAUb,OATIxC,IACFwC,EAASxC,EACLF,GAAuB,IAAZA,GAA6B,MAAZA,IAC9B0C,GAAU,UAAU1C,MAElBC,IACFyC,GAAU,KAAKzC,OAGZyC,EAGT,sBACE,OAAO,GAAI;;;;;;;;;;;;;;;;;;;;;;;;OA2Bf1D,eAAeC,OAAO,iBAAkBS,I,iCClPxC,O,iCCAA,qGAqBA,MAAMiD,UAA+C,IAEnD,wBACE,MAAO,CACLC,WAAY,CACV/I,KAAMC,QACNC,OAAO,GAET8I,kBAAmB,CACjBhJ,KAAMC,QACNC,OAAO,GAET+I,MAAO,CACLjJ,KAAMC,QACNC,OAAO,GAETgJ,QAAS,CACPlJ,KAAMK,OACNH,MAAO,GAETiJ,QAAS,CACPnJ,KAAMC,QACNC,OAAO,GAETkJ,UAAW,CACTpJ,KAAMC,QACNC,OAAO,GAETmJ,oBAAqB,CACnBrJ,KAAMK,OACNH,MAAO,GAEToJ,WAAY,CACVtJ,KAAMoD,QAERmG,SAAU,CACRvJ,KAAMoD,QAERoG,WAAY,CACVxJ,KAAMK,OACNH,MAAO,GAETuJ,iBAAkB,CAChBzJ,KAAM+F,OAER2D,WAAY,CACV1J,KAAMoD,QAERuG,aAAc,CACZ3J,KAAMK,OACNH,MAAO,GAETgI,KAAM,CACJlI,KAAM4J,QAERC,WAAY,CACV7J,KAAM4J,QAERE,SAAU,CACR9J,KAAMoD,OACNlD,MAAO,IAET6J,YAAa,CACX/J,KAAMC,QACNE,oBAAoB,EACpBD,OAAO,IAKb,uBACE,MAAO,CACL,sBAIJ,cACEO,QAEAE,KAAKqJ,UAAY,CACf,WACA,gBACA,iBACA,gBACA,eACA,gBACA,SACA,mBACA,aACA,eACA,YACA,aACA,aACA,QACA,SACA,MACA,OACA,SACA,qBACA,OACA,mBACA,aACA,UACA,QAGFrJ,KAAKsJ,YAAc,IACnBtJ,KAAKuJ,YAAc,IACnBvJ,KAAKwJ,YAAc,CAAC,YAAa,KACjCxJ,KAAKyJ,sBAAwB,CAC3B,CAAEjD,KAAM,aAAcjH,MAAO,MAC7B,CAAEiH,KAAM,aAAcjH,MAAO,KAC7B,CAAEiH,KAAM,UAAWjH,MAAO,KAC1B,CAAEiH,KAAM,QAASjH,MAAO,KACxB,CAAEiH,KAAM,QAASjH,MAAO,KACxB,CAAEiH,KAAM,UAAWjH,MAAO,MAC1B,CAAEiH,KAAM,QAASjH,MAAO,KACxB,CAAEiH,KAAM,SAAUjH,MAAO,OACzB,CAAEiH,KAAM,UAAWjH,MAAO,KAC1B,CAAEiH,KAAM,SAAUjH,MAAO,KACzB,CAAEiH,KAAM,YAAajH,MAAO,MAE9BS,KAAK0J,qBAAuB,CAC1B,aACA,aACA,UACA,QACA,QACA,UACA,QACA,SACA,UACA,SACA,aAIJ,oBACE5J,MAAM6H,oBAEN3H,KAAK2J,gBAAmBrJ,IACtBN,KAAKoI,WAAa9H,EAAEsJ,OAAOxB,YAE7B,cAAqBjI,iBAAiB,iBAAkBH,KAAK2J,iBAC7D3J,KAAKoI,WAAa,cAGpB,uBACEtI,MAAMiI,uBAEN,cAAqBC,oBAAoB,iBAAkBhI,KAAK2J,iBAGlE,eACE,GAAK3J,KAAKuH,KAAV,CAkBA,GAfA1C,QAAQgF,MAAM,cAAe7J,KAAKuH,MAE9BvH,KAAKuH,KAAKuC,UAAY9J,KAAKuH,KAAKwC,cAClC/J,KAAKqI,mBAAoB,EACzB,0BAAgBrI,KAAKuH,KAAMvH,KAAK+F,EAAEiE,oBAAgB3F,EAAWrE,KAAKoJ,cAElEpJ,KAAKqI,mBAAoB,EAE3BrI,KAAKmJ,SAAWnJ,KAAKiK,eACrBjK,KAAKsI,MAA2B,MAAnBtI,KAAKuH,KAAKlI,QAAkBW,KAAKuH,KAAK2C,MAC/ClK,KAAKsI,QACPtI,KAAKuI,QAAUvI,KAAKuH,KAAK4C,IAE3BnK,KAAKwI,UAAYxI,KAAKuH,KAAK2C,MAC3BlK,KAAKyI,UAAyC,YAA7BzI,KAAKuH,KAAK6C,eACvBpK,KAAKuH,KAAK8C,OAAQ,CACpBrK,KAAK0I,oBAAsB4B,SAAStK,KAAKuH,KAAKgD,aAAc,IAC5D,MAAMC,EAAUxK,KAAKuH,KAAKkD,SAC1B,GAAID,EAAS,CACX,MAAME,EAAQF,EAAQG,MAAM,KAAKvE,IAAIwE,IACnC,MAAMC,EAAU7K,KAAKyJ,sBAAsBqB,KAAMxD,GAAWA,EAAO/H,QAAUqL,EAAKG,QAClF,GAAIF,EACF,OAAOA,EAAQrE,OAEhBE,OAAOkE,KAAUA,GACpB5K,KAAK8I,iBAAmB4B,EACnB1K,KAAKuH,KAAKyD,UACThL,KAAKuH,KAAK0D,KACZjL,KAAKuH,KAAK2B,WAAW8B,QAAU,CAAC,CAACE,KAAMlL,KAAKuH,KAAK0D,KAAM5L,KAAM,6BAAmB,IAAO8L,cAAcnL,KAAKuH,KAAK6D,YAE/GpL,KAAKuH,KAAK2B,WAAW8B,QAAU,KAKvChL,KAAK2I,WAAa3I,KAAKuH,KAAK8D,OAC5BrL,KAAK4I,SAAW5I,KAAKuH,KAAKf,KAC1BxG,KAAK6I,WAAa7I,KAAKuH,KAAK+D,OAC5BtL,KAAKuL,cAAgBvL,KAAKuH,KAAK2C,OAA4B,MAAnBlK,KAAKuH,KAAKlI,MAAmC,OAAnBW,KAAKuH,KAAKlI,KAC5EW,KAAK+I,WAAa/I,KAAKuH,KAAKiE,OAC5BxL,KAAKyL,gBAAqC,MAAnBzL,KAAKuH,KAAKlI,MAAmC,MAAnBW,KAAKuH,KAAKlI,MAAmC,QAAnBW,KAAKuH,KAAKlI,MAAqC,MAAnBW,KAAKuH,KAAKlI,KACjHW,KAAKgJ,aAAehJ,KAAKuH,KAAKmE,SAC9B1L,KAAK2L,aAAkC,OAAnB3L,KAAKuH,KAAKlI,KAE1BW,KAAKuH,KAAK2B,aACZlJ,KAAKkJ,WAAalJ,KAAKuH,KAAK2B,aAIhC,eACE,OAAIlJ,KAAKuH,KACA,IAAOqE,sBAAsB5L,KAAKuH,KAAKlI,MAEzC,GAGT,kBACE,MAAMwM,EAAU7L,KAAKgH,KAAKhG,cAAc,eAAezB,MAOvD,OANAS,KAAKkJ,WAAWgB,OAAQ,EACxBlK,KAAKkJ,WAAWmB,QAAS,EACzBrK,KAAKkJ,WAAW7J,KAAO,GACvBW,KAAKkJ,WAAW4C,YAAa,EAC7B9L,KAAKkJ,WAAW6C,WAAY,EAEpBF,GACN,IAAK,gBACH7L,KAAKkJ,WAAWgB,OAAQ,EACxBlK,KAAKkJ,WAAWkB,eAAiB,KACjCpK,KAAKkJ,WAAW7J,KAAO,KACvB,MACF,IAAK,iBACHW,KAAKkJ,WAAWgB,OAAQ,EACxBlK,KAAKkJ,WAAWkB,eAAiB,KACjCpK,KAAKkJ,WAAW7J,KAAO,KACvB,MACF,IAAK,gBACHW,KAAKkJ,WAAWgB,OAAQ,EACxBlK,KAAKkJ,WAAWkB,eAAiB,KACjCpK,KAAKkJ,WAAW7J,KAAO,KACvB,MACF,IAAK,gBACHW,KAAKkJ,WAAWmB,QAAS,EACzBrK,KAAKkJ,WAAWkB,eAAiB,SACjCpK,KAAKkJ,WAAW7J,KAAO,IACvBW,KAAKkJ,WAAWsC,OAAS,KACzB,MACF,IAAK,eACHxL,KAAKkJ,WAAWmB,QAAS,EACzBrK,KAAKkJ,WAAWkB,eAAiB,SACjCpK,KAAKkJ,WAAW7J,KAAO,IACvBW,KAAKkJ,WAAWsC,OAAS,KACzB,MACF,IAAK,SACHxL,KAAKkJ,WAAW7J,KAAO,IACvBW,KAAKkJ,WAAWkB,eAAiB,KACjCpK,KAAKkJ,WAAWiB,GAAK,EACrBnK,KAAKkJ,WAAWsC,OAAS,KACzB,MACF,IAAK,mBACHxL,KAAKkJ,WAAWkB,eAAiB,KACjCpK,KAAKkJ,WAAW7J,KAAO,IACvBW,KAAKkJ,WAAWsC,OAAS,KACzB,MACF,IAAK,WACHxL,KAAKkJ,WAAWkB,eAAiB,KACjCpK,KAAKkJ,WAAW7J,KAAO,IACvBW,KAAKkJ,WAAWsC,OAAS,KACzBxL,KAAKkJ,WAAWwC,SAAW,EAC3B1L,KAAKkJ,WAAW8C,aAAc,EAC9B,MACF,QACE,MAAMC,EAAUhD,OAAOiD,QAAQ,IAAON,uBAAuBd,KAAK,EAAEqB,EAAK5M,KAAWA,IAAUsM,GAC1FI,IACFjM,KAAKkJ,WAAW7J,KAAO4M,EAAQ,IAEjB,MAAZJ,GAA+B,OAAZA,IACrB7L,KAAKkJ,WAAWsC,OAAS,MAIA,MAAzBxL,KAAKkJ,WAAW7J,MAAyC,MAAzBW,KAAKkJ,WAAW7J,MAAyC,QAAzBW,KAAKkJ,WAAW7J,MAA2C,MAAzBW,KAAKkJ,WAAW7J,OACtHW,KAAKkJ,WAAW8C,aAAc,GAEhC,aAAQhM,KAAKuH,MAGf,cACE,aAAQvH,KAAKuH,MAGf,aACOvH,KAAKkJ,WAAW8B,UACnBhL,KAAKkJ,WAAW8B,QAAU,IAE5BhL,KAAKkJ,WAAW8B,QAAQoB,KAAK,CAAClB,KAAM,GAAI7L,KAAM,KAC9C,aAAQW,KAAKuH,MAGf,cAAcjH,GACZ,MACM+L,EADe,qBAAW,gBAAiB/L,GACRwD,aAAa,SAChDwI,EAAkBhC,SAAS+B,EAAqB,IACtDrM,KAAKkJ,WAAW8B,QAAQ5D,OAAOkF,EAAiB,GAChD,aAAQtM,KAAKuH,MAGf,oBACMvH,KAAKuH,KAAK8C,SACRrK,KAAKyI,UACPzI,KAAKkJ,WAAWkB,eAAiB,UAEjCpK,KAAKkJ,WAAWkB,eAAiB,SAEnC,aAAQpK,KAAKuH,OAIjB,6BACE,IAAIgF,EAAYjC,SAAStK,KAAK0I,oBAAqB,IAE/ClF,MAAM+I,KACRA,EAAY,GAEdvM,KAAKkJ,WAAWqB,aAAegC,EAAY,EAAI,IAAIA,EAAcA,EACjE,aAAQvM,KAAKuH,MAGf,oBACMvH,KAAK2I,aACP3I,KAAKkJ,WAAWmC,OAASrL,KAAK2I,WAC9B,aAAQ3I,KAAKuH,OAIjB,kBACMvH,KAAK4I,WACP5I,KAAKkJ,WAAW1C,KAAOxG,KAAK4I,SAC5B,aAAQ5I,KAAKuH,OAIjB,qBACE,OAASmD,IACP,GAAIA,GAASA,EAAMnH,OAAQ,CACzB,MAAMiJ,EAAY9B,EAAMtE,IAAKwE,IAC3B,MAAMC,EAAU7K,KAAKyJ,sBAAsBqB,KAAMxD,GAAWA,EAAOd,OAASoE,EAAKG,QACjF,GAAIF,EACF,OAAOA,EAAQtL,QAEhBmH,OAAOkE,KAAUA,GACpB5K,KAAKkJ,WAAWuB,SAAW+B,EAAU5F,KAAK,KAC1C,aAAQ5G,KAAKuH,SAEdlH,KAAKL,MAGV,iBACE,IAAIyM,EAAWnC,SAAStK,KAAKuI,QAAS,IAElC/E,MAAMiJ,KACRA,EAAW,GAEbzM,KAAKkJ,WAAWiB,GAAKsC,EACrB,aAAQzM,KAAKuH,MAGf,oBACE,IAAImF,EAAetK,WAAWpC,KAAK6I,WAAY,IAE3CrF,MAAMkJ,KACRA,EAAe,GAEjB1M,KAAKkJ,WAAWoC,OAASoB,EACzB,aAAQ1M,KAAKuH,MAIf,oBACMvH,KAAK+I,aACP/I,KAAKkJ,WAAWsC,OAA6B,WAApBxL,KAAK+I,WAA0B,KAAO/I,KAAK+I,WACpE,aAAQ/I,KAAKuH,OAIjB,sBACE,IAAIoF,EAAiBrC,SAAStK,KAAKgJ,aAAc,IAE7CxF,MAAMmJ,KACRA,EAAiB,GAEnB3M,KAAKkJ,WAAWwC,SAAWiB,EAC3B3M,KAAKkJ,WAAW8C,aAAc,EAC9B,aAAQhM,KAAKuH,MAGf,OAAOqF,GACL,IAAK,IAAIC,KAAQD,EACf,GAAIC,EACF,OAAO,EAGX,OAAO,EAGT,sBACE,OAAO,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAsMfrI,eAAeC,OAAO,8CAA+C0D,I,8DCxmBrE,MAAMvJ,EAAsB,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eA4DhCC,SAASC,KAAKC,YAAYH,EAAoBI,S;;;;;;ACF9C,MAAM,UAAwB,YAAa,YAAe,YAAc,QACtE,sBACE,OAAO,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA8Db,gBACE,MAAO,mBAGT,qBACE,MAAO,QAGT,uBACE,MAAO,CACL,gCAIJ,QACEc,MAAMC,QACNC,KAAK8M,gBACL9M,KAAKG,iBAAiB,eAAgBH,KAAK+M,iBAG7C,gBAAgBzM,GAC6C,IAAvDA,EAAE0M,cAAc1J,QAAQ,4BAC1BtD,KAAK8M,gBAIT,sBACE,MAAO,WAGT,sBAAsBvN,GACpBS,KAAK8M,gBAGP,gBACE,MAAM3L,EAAanB,KAAKgH,KAAKhG,cAAc,sBACrCiM,EAAY9L,EAAW8L,UACvBC,EAAQlN,KAAKE,aAEbiN,EAAaC,iBAAiBF,GAAOG,MAErCC,EAActN,KAAKT,MAAQS,KAAKT,MAAMgE,OAAS,EAEjDvD,KAAKuN,iBAAmBD,IAE1BJ,EAAMM,MAAMC,SAAWN,EACvBD,EAAMM,MAAME,OAAS,OAErBvM,EAAWqM,MAAMG,QAAU,SAE7B3N,KAAKuN,gBAAkBD,EAEvB,MAAMM,EAAcV,EAAMW,aACtBD,EAAcV,EAAMY,eACtBZ,EAAMM,MAAME,OAASE,EAAc,MAIrCV,EAAMM,MAAMO,eAAe,aAC3B5M,EAAWqM,MAAMO,eAAe,WAChC5M,EAAW8L,UAAYA,EAEvBjN,KAAKgO,iCAAiC,cAAeJ,IAUzDpJ,eAAeC,OAAO,EAAgB3D,GAAI","file":"2.bundle.js","sourcesContent":["import '@vaadin/vaadin-lumo-styles/font-icons.js';\nimport '@vaadin/vaadin-lumo-styles/sizing.js';\nimport '@vaadin/vaadin-lumo-styles/mixins/field-button.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\n\nconst $_documentContainer = html`<dom-module id=\"lumo-number-field\" theme-for=\"vaadin-number-field\">\n  <template>\n    <style include=\"lumo-field-button\">\n      :host {\n        width: 8em;\n      }\n\n      :host([has-controls]:not([theme~=\"align-right\"])) [part=\"value\"] {\n        text-align: center;\n      }\n\n      [part=\"decrease-button\"][disabled],\n      [part=\"increase-button\"][disabled] {\n        opacity: 0.2;\n      }\n\n      :host([has-controls]) [part=\"input-field\"] {\n        padding: 0;\n      }\n\n      [part=\"decrease-button\"],\n      [part=\"increase-button\"] {\n        cursor: pointer;\n        font-size: var(--lumo-icon-size-s);\n        width: 1.6em;\n        height: 1.6em;\n      }\n\n      [part=\"decrease-button\"]::before,\n      [part=\"increase-button\"]::before {\n        margin-top: 0.2em;\n      }\n\n      /* RTL specific styles */\n\n      :host([dir=\"rtl\"]) [part=\"value\"],\n      :host([dir=\"rtl\"]) [part=\"input-field\"] ::slotted(input) {\n        --_lumo-text-field-overflow-mask-image: linear-gradient(to left, transparent, #000 1.25em);\n      }\n    </style>\n  </template>\n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\n","/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport '@polymer/polymer/polymer-element.js';\n\nimport '@polymer/polymer/lib/elements/custom-style.js';\nimport { TextFieldElement } from './vaadin-text-field.js';\nimport { DomModule } from '@polymer/polymer/lib/elements/dom-module.js';\nconst $_documentContainer = document.createElement('template');\n\n$_documentContainer.innerHTML = `<dom-module id=\"vaadin-number-field-template\">\n  <template>\n    <style>\n      :host([readonly]) [part\\$=\"button\"] {\n        pointer-events: none;\n      }\n\n      [part=\"decrease-button\"]::before {\n        content: \"−\";\n      }\n\n      [part=\"increase-button\"]::before {\n        content: \"+\";\n      }\n\n      [part=\"decrease-button\"],\n      [part=\"increase-button\"] {\n        -webkit-user-select: none;\n        -moz-user-select: none;\n        -ms-user-select: none;\n        user-select: none;\n      }\n\n      /* Hide the native arrow icons */\n      [part=\"value\"]::-webkit-outer-spin-button,\n      [part=\"value\"]::-webkit-inner-spin-button {\n        -webkit-appearance: none;\n        margin: 0;\n      }\n\n      [part=\"value\"] {\n        /* Older Firefox versions (v47.0) requires !important */\n        -moz-appearance: textfield !important;\n      }\n\n      :host([dir=\"rtl\"]) [part=\"input-field\"] {\n        direction: ltr;\n      }\n\n      :host([dir=\"rtl\"]) [part=\"value\"]::placeholder {\n        direction: rtl;\n      }\n\n      :host([dir=\"rtl\"]) [part=\"input-field\"] ::slotted(input)::placeholder {\n        direction: rtl;\n      }\n\n      :host([dir=\"rtl\"]) [part=\"value\"]:-ms-input-placeholder,\n      :host([dir=\"rtl\"]) [part=\"input-field\"] ::slotted(input):-ms-input-placeholder {\n        direction: rtl;\n      }\n\n      :host([dir=\"rtl\"]:not([has-controls])) [part=\"value\"]::placeholder {\n        text-align: left;\n      }\n\n      :host([dir=\"rtl\"]:not([has-controls])) [part=\"input-field\"] ::slotted(input)::placeholder {\n        text-align: left;\n      }\n\n      :host([dir=\"rtl\"]:not([has-controls])) [part=\"value\"]:-ms-input-placeholder,\n      :host([dir=\"rtl\"]:not([has-controls])) [part=\"input-field\"] ::slotted(input):-ms-input-placeholder {\n        text-align: left;\n      }\n    </style>\n\n    <div disabled\\$=\"[[!_allowed(-1, value, min, max, step)]]\" part=\"decrease-button\" on-click=\"_decreaseValue\" on-touchend=\"_decreaseButtonTouchend\" hidden\\$=\"[[!hasControls]]\">\n    </div>\n\n    <div disabled\\$=\"[[!_allowed(1, value, min, max, step)]]\" part=\"increase-button\" on-click=\"_increaseValue\" on-touchend=\"_increaseButtonTouchend\" hidden\\$=\"[[!hasControls]]\">\n    </div>\n  </template>\n\n  \n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\nlet memoizedTemplate;\n\n/**\n* `<vaadin-number-field>` is a Web Component for number field control in forms.\n*\n* ```html\n* <vaadin-number-field label=\"Number\">\n* </vaadin-number-field>\n* ```\n*\n* @extends PolymerElement\n* @demo demo/index.html\n*/\nclass NumberFieldElement extends TextFieldElement {\n  static get is() {\n    return 'vaadin-number-field';\n  }\n\n  static get version() {\n    return '2.6.2';\n  }\n\n  static get properties() {\n    return {\n      /**\n      * Set to true to display value increase/decrease controls.\n      */\n      hasControls: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n\n      /**\n      * The minimum value of the field.\n      */\n      min: {\n        type: Number,\n        reflectToAttribute: true,\n        observer: '_minChanged'\n      },\n\n      /**\n       * The maximum value of the field.\n       */\n      max: {\n        type: Number,\n        reflectToAttribute: true,\n        observer: '_maxChanged'\n      },\n\n      /**\n       * Specifies the allowed number intervals of the field.\n       */\n      step: {\n        type: Number,\n        value: 1,\n        observer: '_stepChanged'\n      }\n\n    };\n  }\n\n  ready() {\n    super.ready();\n    this.__previousValidInput = this.value || '';\n    this.inputElement.type = 'number';\n    this.inputElement.addEventListener('change', this.__onInputChange.bind(this));\n  }\n\n  _decreaseButtonTouchend(e) {\n    // Cancel the following click and focus events\n    e.preventDefault();\n    this._decreaseValue();\n  }\n\n  _increaseButtonTouchend(e) {\n    // Cancel the following click and focus events\n    e.preventDefault();\n    this._increaseValue();\n  }\n\n  static get template() {\n    if (!memoizedTemplate) {\n      // Clone the superclass template\n      memoizedTemplate = super.template.cloneNode(true);\n\n      // Retrieve this element's dom-module template\n      const thisTemplate = DomModule.import(this.is + '-template', 'template');\n      const decreaseButton = thisTemplate.content.querySelector('[part=\"decrease-button\"]');\n      const increaseButton = thisTemplate.content.querySelector('[part=\"increase-button\"]');\n      const styles = thisTemplate.content.querySelector('style');\n\n      // Add the buttons and styles to the text-field template\n      const inputField = memoizedTemplate.content.querySelector('[part=\"input-field\"]');\n      const prefixSlot = memoizedTemplate.content.querySelector('[name=\"prefix\"]');\n      inputField.insertBefore(decreaseButton, prefixSlot);\n      inputField.appendChild(increaseButton);\n      memoizedTemplate.content.appendChild(styles);\n    }\n\n    return memoizedTemplate;\n  }\n\n  _createConstraintsObserver() {\n    // NOTE: do not call \"super\" but instead override the method to add extra arguments\n    this._createMethodObserver('_constraintsChanged(required, minlength, maxlength, pattern, min, max, step)');\n  }\n\n  _constraintsChanged(required, minlength, maxlength, pattern, min, max, step) {\n    if (!this.invalid) {\n      return;\n    }\n\n    const isNumUnset = n => (!n && n !== 0);\n\n    if (!isNumUnset(min) || !isNumUnset(max)) {\n      this.validate();\n    } else {\n      super._constraintsChanged(required, minlength, maxlength, pattern);\n    }\n  }\n\n  _decreaseValue() {\n    this._incrementValue(-1);\n  }\n\n  _increaseValue() {\n    this._incrementValue(1);\n  }\n\n  _incrementValue(incr) {\n    if (this.disabled || this.readonly) {\n      return;\n    }\n\n    let value = parseFloat(this.value);\n\n    if (!this.value) {\n      if (this.min == 0 && incr < 0 ||\n          this.max == 0 && incr > 0 ||\n          this.max == 0 && this.min == 0) {\n        incr = 0;\n        value = 0;\n      } else if ((this.max == null || this.max >= 0) &&\n                 (this.min == null || this.min <= 0)) {\n        value = 0;\n      } else if (this.min > 0) {\n        value = this.min;\n        if (this.max < 0 && incr < 0) {\n          value = this.max;\n        }\n        incr = 0;\n      } else if (this.max < 0) {\n        value = this.max;\n        if (incr < 0) {\n          incr = 0;\n        } else {\n          // FIXME(yuriy): find a proper solution to make correct step back\n          if (this._getIncrement(1, value - this.step) > this.max) {\n            value -= 2 * this.step;\n          } else {\n            value -= this.step;\n          }\n        }\n      }\n    } else if (value < this.min) {\n      incr = 0;\n      value = this.min;\n    } else if (value > this.max) {\n      incr = 0;\n      value = this.max;\n    }\n\n    const newValue = this._getIncrement(incr, value);\n    if (!this.value || incr == 0 || this._incrementIsInsideTheLimits(incr, value)) {\n      this._setValue(newValue);\n    }\n  }\n\n  _setValue(value) {\n    this.value = this.inputElement.value = String(parseFloat(value));\n    this.dispatchEvent(new CustomEvent('change', {bubbles: true}));\n  }\n\n  _getIncrement(incr, currentValue) {\n    let step = this.step || 1,\n      min = this.min || 0;\n\n    // To avoid problems with decimal math, multiplying to operate with integers.\n    const multiplier = Math.max(this._getMultiplier(currentValue),\n      this._getMultiplier(step),\n      this._getMultiplier(min));\n\n    step *= multiplier;\n    currentValue = Math.round(currentValue * multiplier);\n    min *= multiplier;\n\n    const margin = (currentValue - min) % step;\n\n    if (incr > 0) {\n      return (currentValue - margin + step) / multiplier;\n    } else if (incr < 0) {\n      return (currentValue - (margin || step)) / multiplier;\n    } else {\n      return currentValue / multiplier;\n    }\n  }\n\n  _getDecimalCount(number) {\n    const s = String(number);\n    const i = s.indexOf('.');\n    return i === -1 ? 1 : s.length - i - 1;\n  }\n\n  _getMultiplier(number) {\n    if (!isNaN(number)) {\n      return Math.pow(10, this._getDecimalCount(number));\n    }\n  }\n\n  _incrementIsInsideTheLimits(incr, value) {\n    if (incr < 0) {\n      return this.min == null || this._getIncrement(incr, value) >= this.min;\n    } else if (incr > 0) {\n      return this.max == null || this._getIncrement(incr, value) <= this.max;\n    } else {\n      return this._getIncrement(incr, value) <= this.max && this._getIncrement(incr, value) >= this.min;\n    }\n  }\n\n  _allowed(sign) {\n    const incr = sign * (this.step || 1);\n    const value = parseFloat(this.value);\n    return !this.value || (!this.disabled && this._incrementIsInsideTheLimits(incr, value));\n  }\n\n  _stepChanged(step) {\n    // Avoid using initial value in validation\n    this.__validateByStep = this.__stepChangedCalled || this.getAttribute('step') !== null;\n    this.inputElement.step = this.__validateByStep ? step : 'any';\n\n    this.__stepChangedCalled = true;\n    this.setAttribute('step', step);\n  }\n\n  _minChanged(min) {\n    this.inputElement.min = min;\n  }\n\n  _maxChanged(max) {\n    this.inputElement.max = max;\n  }\n\n  _valueChanged(newVal, oldVal) {\n    // Validate value to be numeric\n    if (newVal && isNaN(parseFloat(newVal))) {\n      this.value = '';\n    } else if (typeof this.value !== 'string') {\n      this.value = String(this.value);\n    }\n\n    super._valueChanged(this.value, oldVal);\n  }\n\n  _onKeyDown(e) {\n    if (e.keyCode == 38) {\n      e.preventDefault();\n      this._increaseValue();\n    } else if (e.keyCode == 40) {\n      e.preventDefault();\n      this._decreaseValue();\n    }\n    super._onKeyDown(e);\n  }\n\n  __onInputChange() {\n    this.validate();\n  }\n\n  checkValidity() {\n    // text-field mixin does not check against `min`, `max` and `step`\n    if (this.min !== undefined || this.max !== undefined || this.__validateByStep) {\n      return this.inputElement.checkValidity();\n    }\n\n    return super.checkValidity();\n  }\n}\n\nwindow.customElements.define(NumberFieldElement.is, NumberFieldElement);\n\nexport { NumberFieldElement };\n","/**\n@license\nCopyright (c) 2019 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport '@polymer/polymer/polymer-element.js';\n\nimport '@polymer/polymer/lib/elements/custom-style.js';\nimport { NumberFieldElement } from './vaadin-number-field.js';\nconst $_documentContainer = document.createElement('template');\n\n$_documentContainer.innerHTML = `<dom-module id=\"vaadin-integer-field-template\">\n\n  \n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\n\n/**\n* `<vaadin-integer-field>` is a Web Component for integer field control in forms.\n*\n* ```html\n* <vaadin-integer-field label=\"Number\">\n* </vaadin-integer-field>\n* ```\n*\n* @extends PolymerElement\n* @demo demo/index.html\n*/\nclass IntegerFieldElement extends NumberFieldElement {\n  static get is() {\n    return 'vaadin-integer-field';\n  }\n\n  static get version() {\n    return '2.6.2';\n  }\n\n  static get properties() {\n    // Hide inherited props that don't work with <input type=\"number\"> from JSDoc.\n    return {\n      /**\n       * @private\n       */\n      pattern: String,\n      /**\n       * @private\n       */\n      preventInvalidInput: Boolean,\n      /**\n       * @private\n       */\n      minlength: Number,\n      /**\n       * @private\n       */\n      maxlength: Number\n    };\n  }\n\n  ready() {\n    super.ready();\n    this._enabledCharPattern = '[-+\\\\d]';\n  }\n\n  _valueChanged(newVal, oldVal) {\n    if (newVal !== '' && !this.__isInteger(newVal)) {\n      console.warn(`Trying to set non-integer value \"${newVal}\" to <vaadin-integer-field>.`\n        + ` Clearing the value.`);\n      this.value = '';\n      return;\n    }\n    super._valueChanged(newVal, oldVal);\n  }\n\n  _stepChanged(newVal, oldVal) {\n    if (!this.__hasOnlyDigits(newVal)) {\n      console.warn(`Trying to set invalid step size \"${newVal}\",`\n        + ` which is not a positive integer, to <vaadin-integer-field>.`\n        + ` Resetting the default value 1.`);\n      this.step = 1;\n      return;\n    }\n    super._stepChanged(newVal, oldVal);\n  }\n\n  __isInteger(value) {\n    return /^(-\\d)?\\d*$/.test(String(value));\n  }\n\n  __hasOnlyDigits(value) {\n    return /^\\d*$/.test(String(value));\n  }\n}\n\nwindow.customElements.define(IntegerFieldElement.is, IntegerFieldElement);\n\nexport { IntegerFieldElement };\n","import { PolymerElement, html } from '@polymer/polymer';\nimport { mergeFeature } from '../util/charBuilder';\nimport { jqEmpty, util_capitalizeAll } from \"../js/utils\";\nimport \"@vaadin/vaadin-select\";\nimport {loadModel} from \"../util/data\";\n\nclass DndSelectAdd extends PolymerElement {\n  static get properties() {\n    return {\n      test: {\n        type: Boolean,\n        reflectToAttribute: true,\n        value: false\n      },\n      options: {\n        type: Array,\n        observer: \"optionsUpdated\"\n      },\n      model: {\n        type: String\n      },\n      addCallback: {\n        type: Function\n      },\n      value: {\n        type: String,\n        value: \"\",\n        observer: \"valueUpdated\"\n      },\n      choices: {\n        type: Number,\n        observer: \"choicesUpdated\"\n      },\n      paren: {\n        type: String,\n      },\n      label: {\n        type: String\n      },\n      placeholder: {\n        type: String,\n      },\n      multiValue: {\n        type: String,\n        value: \"\"\n      },\n      disabled: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      }\n    }\n  }\n\n  choicesUpdated() {\n    if (this.listBox) {\n      this.listBox.remove();\n      delete this.listBox;\n    }\n    this.$.select.render();\n  }\n\n  optionsUpdated() {\n    if (this.listBox) {\n      this.listBox.remove();\n      delete this.listBox;\n    }\n    this.$.select.render();\n  }\n\n  valueUpdated() {\n    if (this.choices) {\n      if (Array.isArray(this.value) && this.options) {\n        const choiceArray = this.value\n          .map(v => {\n            if (this.options.indexOf(v) !== -1) {\n              return this.options.indexOf(v);\n            } else {\n              return this.options.findIndex((o) => {\n                return o.name === v.name && o.source === v.source;\n              });\n            }\n          })\n          .filter(v => { return v !== -1 });\n\n        if (this.listBox) {\n          this.listBox.selectedValues = choiceArray;\n        }\n        this.multiValue = choiceArray.map(i => {\n          let value = this.options[i];\n          return value.name ? value.name : util_capitalizeAll(value) \n        }).join(\", \");\n      } else {\n        if (this.listBox) {\n          this.listBox.selectedValues = [];\n        }\n        this.multiValue = \"\";\n      }\n    } else {\n      if (this.value && this.options) {\n        if (this.value.source) {\n          this.$.select.value = this.options.findIndex(i => { return i.name === this.value.name && i.source === this.value.source || i === this.value.name }) + \"\";\n        } else if (this.value.name) {\n          this.$.select.value = this.options.findIndex(i => { return i.name === this.value.name || i === this.value.name }) + \"\";\n        } else {\n          this.$.select.value = this.options.findIndex(i => { return i.name === this.value || i === this.value }) + \"\";\n        }\n      } else {\n        this.$.select.value = \"\";\n      }\n    }\n  }\n\n  ready() {\n    super.ready();\n\n    setTimeout(async () => {\n      if (this.model) {\n        this.options = await loadModel(this.model);\n      }\n\n      this.$.select.renderer = (root, select) => {\n        if (!this.listBox) {\n          this.listBox = document.createElement('vaadin-list-box');\n\n          // setting up for multi-select\n          if (this.choices) {\n            this.listBox.setAttribute(\"multiple\", true);\n\n            this.listBox.addEventListener(\"click\", (e) => {\n              select.opened = true;\n              let wasPreviouslySelected = e.srcElement.getAttribute(\"selected\") !== null\n              setTimeout(() => {\n                if (this.listBox.selectedValues.length > this.choices\n                    && !wasPreviouslySelected) {\n                  this.listBox.selectedValues.splice(this.listBox.selectedValues.length - 2, 1)\n                }\n                let selectedOptions = this.listBox.selectedValues.map(v => { return this.options[v] });\n                this.multiValue = selectedOptions.map(o => { return o.name ? o.name : util_capitalizeAll(o) }).join(', ');\n                if (this.addCallback) {\n                  this.addCallback(selectedOptions);\n                }\n              }, 0);\n            });\n\n          }\n\n          // Adding options\n          if (this.options && this.options.length) {\n            for (let i = 0; i < this.options.length; i ++) {\n              const option = this.options[i],\n                item = document.createElement('vaadin-item');\n              const optionName = option.name || util_capitalizeAll(option);\n              item.innerHTML = `<span style='margin-left: 10px;'>${optionName}</span> ${option.name ? `<span style='font-size: 14px;color: var(--lumo-primary-color-50pct);'>${option.source}</span>` : ''}`\n              item.setAttribute(\"value\", i);\n              this.listBox.appendChild(item);\n            }\n          }\n          root.appendChild(this.listBox);\n          this.$.select._assignMenuElement();\n\n          this.valueUpdated();\n        }\n      };\n    }, 0);\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    this.selectChangeHandler = () => {\n      const val = this.$.select.value;\n      if (val) {\n        if (!this.choices) {\n          const selected = this.options[val];\n          if (this.addCallback) {\n            this.addCallback(selected, this.model);\n          } else {\n            mergeFeature(undefined, selected, this.model);\n          }\n          if (!this.value) {\n            this.$.select.value = \"\";\n          }\n        }\n      }\n    };\n\n    this.$.select.addEventListener(\"change\", this.selectChangeHandler);\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n\n    this.$.select.removeEventListener(\"change\", this.selectChangeHandler);\n  }\n\n  _exists(a) {\n    return !!a;\n  }\n\n  _label(label, choices, paren) {\n    let result = '';\n    if (label) {\n      result = label;\n      if (choices && choices !== 1 && choices !== 100) {\n        result += ` (pick ${choices})`;\n      }\n      if (paren) {\n        result += ` (${paren})`;\n      }\n    }\n    return result;\n  }\n  \n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: inline-block;\n        }\n        [slot=\"prefix\"] {\n          width: calc(100% - 46px);\n          padding: 12px;\n          line-height: 1.4;\n        }\n        vaadin-select {\n          width: 100%;\n        }\n        .prefix {\n          white-space: normal;\n          color: var(--lumo-body-text-color);\n        }\n      </style>\n      <vaadin-select test$=\"[[test]]\" theme=\"dark\" add id=\"select\" label=\"[[_label(label, choices, paren)]]\" placeholder=\"[[placeholder]]\" disabled$=\"[[disabled]]\">\n        <div hidden$=\"[[!_exists(multiValue)]]\" slot=\"prefix\">\n          <span class=\"prefix\">[[multiValue]]</span>\n        </div>\n      </vaadin-select>\n      \n    `;\n  }\n}\ncustomElements.define('dnd-select-add', DndSelectAdd);","import './theme/lumo/vaadin-text-field.js';\n","import { PolymerElement, html } from \"@polymer/polymer\";\nimport {\n  setItem\n} from \"../../../util/charBuilder\";\nimport { getEditModeChannel, isEditMode } from \"../../../util/editMode\";\nimport { renderSelection } from \"../../../js/items\";\nimport { DAMAGE_TYPES, RARITY_TYPES } from \"../../../util/consts\";\nimport { findInPath, util_capitalizeAll } from \"../../../js/utils\";\nimport \"@vaadin/vaadin-text-field/vaadin-text-field\";\nimport \"@vaadin/vaadin-text-field/vaadin-integer-field\";\nimport \"@vaadin/vaadin-text-field/vaadin-text-area\";\nimport Parser from '../../../util/Parser';\nimport \"../../dnd-select-add\";\nimport \"../../dnd-button\";\n\n\n//// BOONS\n// Resistance\n// DC+\n// Proficiency?\n// Spells known\nclass DndCharacterBuilderEquipmentItemDetail extends PolymerElement {\n  \n  static get properties() {\n    return {\n      isEditMode: {\n        type: Boolean,\n        value: false\n      },\n      hasRenderedOutput: {\n        type: Boolean,\n        value: false\n      },\n      hasAC: {\n        type: Boolean,\n        value: false\n      },\n      armorAC: {\n        type: Number,\n        value: 0\n      },\n      isArmor: {\n        type: Boolean,\n        value: false\n      },\n      isMartial: {\n        type: Boolean,\n        value: false\n      },\n      weaponMagicModifier: {\n        type: Number,\n        value: 0\n      },\n      itemRarity: {\n        type: String,\n      },\n      itemName: {\n        type: String,\n      },\n      itemWeight: {\n        type: Number,\n        value: 0\n      },\n      weaponProperties: {\n        type: Array,\n      },\n      itemResist: {\n        type: String,\n      },\n      itemQuantity: {\n        type: Number,\n        value: 0\n      },\n      item: {\n        type: Object\n      },\n      storedItem: {\n        type: Object\n      },\n      itemType: {\n        type: String,\n        value: ''\n      },\n      smallRender: {\n        type: Boolean,\n        reflectToAttribute: true,\n        value: false\n      }\n    };\n  }\n\n  static get observers() {\n    return [\n      '_itemChanged(item)'\n    ]\n  }\n\n  constructor() {\n    super();\n\n    this.itemTypes = [\n      'Currency',\n      'Armor (Light)',\n      'Armor (Medium)',\n      'Armor (Heavy)',\n      'Melee Weapon',\n      'Ranged Weapon',\n      'Shield',\n      'Adventuring Gear',\n      'Ammunition',\n      'Artisan Tool',\n      'Explosive',\n      'Gaming Set',\n      'Instrument',\n      'Mount',\n      'Potion',\n      'Rod',\n      'Ring',\n      'Scroll',\n      'Spellcasting Focus',\n      'Tool',\n      'Tack and Harness',\n      'Trade Good',\n      'Vehicle',\n      'Wand'\n    ];\n\n    this.rarityTypes = RARITY_TYPES;\n    this.damageTypes = DAMAGE_TYPES;\n    this.resistTypes = ['<None>', ...DAMAGE_TYPES];\n    this.weaponPropertyOptions = [\n      { name: 'Two-Handed', value: '2H' },\n      { name: 'Ammunition', value: 'A' },\n      { name: 'Finesse', value: 'F' },\n      { name: 'Heavy', value: 'H' },\n      { name: 'Light', value: 'L' },\n      { name: 'Loading', value: 'LD' },\n      { name: 'Reach', value: 'R' },\n      { name: 'Reload', value: 'RLD' },\n      { name: 'Special', value: 'S' },\n      { name: 'Thrown', value: 'T' },\n      { name: 'Versatile', value: 'V' },\n    ]\n    this.weaponPropertyValues = [\n      'Two-Handed',\n      'Ammunition',\n      'Finesse',\n      'Heavy',\n      'Light',\n      'Loading',\n      'Reach',\n      'Reload',\n      'Special',\n      'Thrown',\n      'Versatile'\n    ]\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    this.editModeHandler = (e) => {\n      this.isEditMode = e.detail.isEditMode;\n    }\n    getEditModeChannel().addEventListener('editModeChange', this.editModeHandler);\n    this.isEditMode = isEditMode();\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n\n    getEditModeChannel().removeEventListener('editModeChange', this.editModeHandler);\n  }\n\n  _itemChanged() {\n    if (!this.item) {\n      return;\n    }\n    console.error('itemDetail:', this.item);\n\n    if (this.item.itemRef && !this.item.lookupFailed) {\n      this.hasRenderedOutput = true;\n      renderSelection(this.item, this.$.renderedOutput, undefined, this.smallRender);\n    } else {\n      this.hasRenderedOutput = false;\n    }\n    this.itemType = this._getItemType();\n    this.hasAC = this.item.type === 'S' || !!this.item.armor;\n    if (this.hasAC) {\n      this.armorAC = this.item.ac;\n    }\n    this.isArmor = !!this.item.armor;\n    this.isMartial = this.item.weaponCategory === 'Martial';\n    if (this.item.weapon) {\n      this.weaponMagicModifier = parseInt(this.item.genericBonus, 10);\n      const propStr = this.item.property;\n      if (propStr) {\n        const props = propStr.split(',').map(prop => {\n          const propObj = this.weaponPropertyOptions.find((option) => option.value === prop.trim());\n          if (propObj) {\n            return propObj.name;\n          }\n        }).filter(prop => !!prop);\n        this.weaponProperties = props;\n        if (!this.item.damages) {\n          if (this.item.dmg1) {\n            this.item.storedItem.damages = [{roll: this.item.dmg1, type: util_capitalizeAll(Parser.dmgTypeToFull(this.item.dmgType))}];\n          } else {\n            this.item.storedItem.damages = [];\n          }\n        }\n      }\n    }\n    this.itemRarity = this.item.rarity;\n    this.itemName = this.item.name;\n    this.itemWeight = this.item.weight;\n    this.canHaveResist = this.item.armor || this.item.type === 'P' || this.item.type === 'RG';\n    this.itemResist = this.item.resist;\n    this.canHaveQuantity = this.item.type === 'P' || this.item.type === 'A' || this.item.type === 'EXP' || this.item.type === '$';\n    this.itemQuantity = this.item.quantity;\n    this.canHaveSpell = this.item.type === 'SC';\n\n    if (this.item.storedItem) {\n      this.storedItem = this.item.storedItem;\n    }\n  }\n\n  _getItemType() {\n    if (this.item) {\n      return Parser.ITEM_TYPE_JSON_TO_ABV[this.item.type];  \n    }\n    return '';\n  }\n\n  _selectItemType() {\n    const newType = this.root.querySelector('#typeSelect').value\n    this.storedItem.armor = false;\n    this.storedItem.weapon = false;\n    this.storedItem.type = '';\n    this.storedItem.isEquipped = false;\n    this.storedItem.isAttuned = false;\n\n    switch (newType) {\n      case 'Armor (Light)':\n        this.storedItem.armor = true;\n        this.storedItem.weaponCategory = null;\n        this.storedItem.type = 'LA';\n        break;\n      case 'Armor (Medium)':\n        this.storedItem.armor = true;\n        this.storedItem.weaponCategory = null;\n        this.storedItem.type = 'MA';\n        break;\n      case 'Armor (Heavy)':\n        this.storedItem.armor = true;\n        this.storedItem.weaponCategory = null;\n        this.storedItem.type = 'HA';\n        break;\n      case 'Ranged Weapon':\n        this.storedItem.weapon = true;\n        this.storedItem.weaponCategory = 'Simple';\n        this.storedItem.type = 'R';\n        this.storedItem.resist = null;\n        break;\n      case 'Melee Weapon':\n        this.storedItem.weapon = true;\n        this.storedItem.weaponCategory = 'Simple';\n        this.storedItem.type = 'M';\n        this.storedItem.resist = null;\n        break;\n      case 'Shield':\n        this.storedItem.type = 'S';\n        this.storedItem.weaponCategory = null;\n        this.storedItem.ac = 2;\n        this.storedItem.resist = null;\n        break;\n      case 'Adventuring Gear':\n        this.storedItem.weaponCategory = null;\n        this.storedItem.type = 'G';\n        this.storedItem.resist = null;\n        break;\n      case 'Currency':\n        this.storedItem.weaponCategory = null;\n        this.storedItem.type = '$'\n        this.storedItem.resist = null;\n        this.storedItem.quantity = 1;\n        this.storedItem.hasQuantity = true;\n        break;\n      default:\n        const typeVal = Object.entries(Parser.ITEM_TYPE_JSON_TO_ABV).find(([key, value]) => value === newType);\n        if (typeVal) {\n          this.storedItem.type = typeVal[0];\n        }\n        if (newType !== 'P' || newType !== 'RG') {\n          this.storedItem.resist = null;\n        }\n        break;\n    }\n    if (!(this.storedItem.type === 'P' || this.storedItem.type === 'A' || this.storedItem.type === 'EXP' || this.storedItem.type === '$')) {\n      this.storedItem.hasQuantity = false;\n    }\n    setItem(this.item);\n  }\n\n  _updateItem() {\n    setItem(this.item);\n  }\n\n  _addDamage() {\n    if (!this.storedItem.damages) {\n      this.storedItem.damages = [];\n    }\n    this.storedItem.damages.push({roll: '', type: ''});\n    setItem(this.item);\n  }\n\n  _removeDamage(e) {\n    const rollDamageEl = findInPath('.roll__damage', e);\n    const rollDamageIndexAttr = rollDamageEl.getAttribute('index');\n    const rollDamageIndex = parseInt(rollDamageIndexAttr, 10);\n    this.storedItem.damages.splice(rollDamageIndex, 1);\n    setItem(this.item);\n  }\n\n  _changeWeaponType() {\n    if (this.item.weapon) {\n      if (this.isMartial) {\n        this.storedItem.weaponCategory = 'Martial';\n      } else {\n        this.storedItem.weaponCategory = 'Simple';\n      }\n      setItem(this.item);\n    }\n  }\n\n  _weaponMagicModifierChange() {\n    let parsedMod = parseInt(this.weaponMagicModifier, 10);\n\n    if (isNaN(parsedMod)) {\n      parsedMod = 0;\n    }\n    this.storedItem.genericBonus = parsedMod > 0 ? `+${parsedMod}` : parsedMod;\n    setItem(this.item);\n  }\n\n  _itemRarityChange() {\n    if (this.itemRarity) {\n      this.storedItem.rarity = this.itemRarity;\n      setItem(this.item);\n    }\n  }\n\n  _itemNameChange() {\n    if (this.itemName) {\n      this.storedItem.name = this.itemName;\n      setItem(this.item);\n    }\n  }\n\n  _addWeaponProperty() {\n    return ((props) => {\n      if (props && props.length) {\n        const propCodes = props.map((prop) => {\n          const propObj = this.weaponPropertyOptions.find((option) => option.name === prop.trim());\n          if (propObj) {\n            return propObj.value;\n          }\n        }).filter(prop => !!prop);\n        this.storedItem.property = propCodes.join(',');\n        setItem(this.item);\n      }\n    }).bind(this);\n  }\n\n  _armorACChange() {\n    let parsedAC = parseInt(this.armorAC, 10);\n\n    if (isNaN(parsedAC)) {\n      parsedAC = 0;\n    }\n    this.storedItem.ac = parsedAC;\n    setItem(this.item);\n  }\n\n  _itemWeightChange() {\n    let parsedWeight = parseFloat(this.itemWeight, 10);\n\n    if (isNaN(parsedWeight)) {\n      parsedWeight = 0;\n    }\n    this.storedItem.weight = parsedWeight;\n    setItem(this.item);\n\n  }\n\n  _itemResistChange() {\n    if (this.itemResist) {\n      this.storedItem.resist = this.itemResist === '<None>' ? null : this.itemResist;\n      setItem(this.item);\n    }\n  }\n\n  _itemQuantityChange() {\n    let parsedQuantity = parseInt(this.itemQuantity, 10);\n\n    if (isNaN(parsedQuantity)) {\n      parsedQuantity = 0;\n    }\n    this.storedItem.quantity = parsedQuantity;\n    this.storedItem.hasQuantity = true;\n    setItem(this.item);\n  }\n\n  _or(...bools) {\n    for (let bool of bools) {\n      if (bool) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  static get template() {\n    return html`\n      <style include=\"material-styles my-styles\"></style>\n      <style>\n        :host {}\n        [hidden] {\n          display: none !important;\n        }\n\n        .edit__wrap {\n          margin-right: -10px;\n        }\n        .edit__name {\n          width: calc(65% - 10px);\n          padding-top: 0;\n        }\n        .edit__notes {\n          width: calc(100% - 10px);\n          min-height: 200px;\n        }\n        .edit__checkboxes {\n          display: flex;\n          flex-direction: column;\n          margin: 10px 10px 0 0;\n        }\n\n        .section_heading {\n          margin: 16px 0 0px;\n          font-size: 17px;\n          color: var(--mdc-theme-secondary);\n        }\n\n        .roll__damages {\n          display: flex;\n          flex-direction: column;\n        }\n        .roll__damage {\n          display: flex;\n          margin-right: 10px;\n        }\n        .roll__damage vaadin-text-field,\n        .roll__damage vaadin-select {\n          max-width: 100%;\n        }\n        .roll__damage-roll--edit,\n        .roll__damage-type--edit {\n          width: calc(50% - 40px);\n        }\n        .roll__damage-roll--edit {\n          margin: 0 16px;\n        }\n        .roll__damage-remove {\n          margin: auto -5px 4px;\n        }\n\n        dnd-switch {\n          margin: 10px auto 0;\n          display: block;\n        }\n\n        h2 {\n          margin-top: 0;\n          font-size: 16px;\n          font-weight: bold;\n          margin-bottom: 8px;\n        }\n\n        vaadin-checkbox {\n          width: fit-content;\n        }\n\n        vaadin-select {\n          max-width: calc(50% - 14px);\n        }\n        vaadin-number-field,\n        vaadin-integer-field {\n          width: calc(33% - 10px);\n        }\n        vaadin-text-field,\n        vaadin-text-area,\n        vaadin-integer-field,\n        vaadin-number-field,\n        vaadin-select {\n          margin-right: 10px;\n        }\n        dnd-select-add {\n          width: calc(66% - 22px);\n          margin-right: 10px;\n          margin-left: 10px;\n        }\n\n        .margin-bottom_large {\n          margin-bottom: 0 !important;\n        }\n\n        @media(min-width: 921px) {\n          h2 {\n            font-size: 24px;\n          }\n        }\n      </style>\n\n      <div hidden$=\"[[!item]]\">\n        <div hidden$=\"[[isEditMode]]\">\n          <div hidden$=\"[[!hasRenderedOutput]]\">\n            <h2>[[item.name]]</h4>\n            <div>[[item.notes]]</div>\n            <div hidden$=\"[[item.hideRef]]\" id=\"renderedOutput\"></div>\n          </div>\n\n          <div hidden$=\"[[hasRenderedOutput]]\">\n            <h2>[[item.name]]</h4>\n            <div>[[item.notes]]</div>\n          </div>\n        </div>\n\n        <template is=\"dom-if\" if=\"[[isEditMode]]\">\n          <div class=\"edit__wrap\">\n            <vaadin-text-field class=\"edit__name\" theme=\"label--secondary\" value=\"{{itemName}}\" label=\"Name\" on-change=\"_itemNameChange\"></vaadin-text-field>\n            <vaadin-number-field theme=\"label--secondary\" has-controls value=\"{{itemWeight}}\" label=\"Weight\" min=\"0\" on-change=\"_itemWeightChange\"></vaadin-number-field>\n\n            <vaadin-select id=\"typeSelect\" value=\"[[itemType]]\" on-change=\"_selectItemType\" label=\"Type\" >\n              <template>\n                <vaadin-list-box>\n                  <template is=\"dom-repeat\" items=\"[[itemTypes]]\">\n                    <vaadin-item>[[item]]</vaadin-item>\n                  </template>\n                </vaadin-list-box>\n              </template>\n            </vaadin-select>\n\n            <vaadin-select id=\"raritySelect\" value=\"{{itemRarity}}\" on-change=\"_itemRarityChange\" label=\"Rarity\" >\n              <template>\n                <vaadin-list-box>\n                  <template is=\"dom-repeat\" items=\"[[rarityTypes]]\">\n                    <vaadin-item>[[item]]</vaadin-item>\n                  </template>\n                </vaadin-list-box>\n              </template>\n            </vaadin-select>\n\n            <div class=\"edit__weapon\" hidden$=\"[[!item.weapon]]\">\n              <h4 class=\"section_heading\">Weapon</h4>\n              <dnd-select-add choices=\"100\" label=\"Weapon Properties\" options=\"[[weaponPropertyValues]]\" value=\"[[weaponProperties]]\" add-callback=\"[[_addWeaponProperty()]]\"></dnd-select-add>\n              <vaadin-integer-field theme=\"label--secondary\"  min=\"0\" max=\"5\" has-controls value=\"{{weaponMagicModifier}}\" label=\"Magic Modifier\" on-change=\"_weaponMagicModifierChange\"></vaadin-integer-field>\n              <dnd-switch label='Simple Weapon' secondary-label='Martial Weapon' initial-value=\"[[isMartial]]\" checked={{isMartial}} on-switch-change=\"_changeWeaponType\" ></dnd-switch>\n\n              <template is=\"dom-repeat\" items=\"[[storedItem.damages]]\" as=\"damage\">\n                <div class=\"roll__damage\" index$=\"[[index]]\">\n                  <dnd-button on-click=\"_removeDamage\" icon=\"remove\" class='roll__damage-remove icon-only'></dnd-button>\n                  <div class=\"roll__damage-roll--edit\">\n                    <vaadin-text-field theme=\"label--secondary\" value=\"{{damage.roll}}\" on-change=\"_updateItem\" label=\"Damage Roll\"></vaadin-text-field>\n                  </div>\n                  <div class=\"roll__damage-type--edit\">\n                    <vaadin-select value=\"{{damage.type}}\" on-change=\"_updateItem\" label=\"Damage Type\" >\n                      <template>\n                        <vaadin-list-box>\n                          <template is=\"dom-repeat\" items=\"[[damageTypes]]\">\n                            <vaadin-item>[[item]]</vaadin-item>\n                          </template>\n                        </vaadin-list-box>\n                      </template>\n                    </vaadin-select>\n                  </div>\n                </div>\n              </template>\n              <dnd-button on-click=\"_addDamage\" label=\"Add Damage\" icon=\"add\" class=\"roll__add-damage\"></dnd-button>\n            </div>\n\n            <vaadin-integer-field theme=\"label--secondary\"  hidden$=\"[[!hasAC]]\" min=\"0\" max=\"30\" has-controls value=\"{{armorAC}}\" label=\"AC\" on-change=\"_armorACChange\"></vaadin-integer-field>\n            \n            <vaadin-integer-field theme=\"label--secondary\"  hidden$=\"[[!item.hasQuantity]]\" min=\"0\" has-controls value=\"{{itemQuantity}}\" label=\"Quantity\" on-change=\"_itemQuantityChange\"></vaadin-integer-field>\n\n            <!-- <vaadin-select hidden$=\"[[!canHaveResist]]\" value=\"{{itemResist}}\" on-change=\"_itemResistChange\" label=\"Resistance\">\n              <template>\n                <vaadin-list-box>\n                  <template is=\"dom-repeat\" items=\"[[resistTypes]]\">\n                    <vaadin-item>[[item]]</vaadin-item>\n                  </template>\n                </vaadin-list-box>\n              </template>\n            </vaadin-select> -->\n\n            <div class=\"edit__checkboxes\">\n              <vaadin-checkbox hidden$=\"[[!canHaveQuantity]]\" checked=\"{{storedItem.hasQuantity}}\" on-change=\"_updateItem\">Has Quantity</vaadin-checkbox>\n              <vaadin-checkbox hidden$=\"[[!isArmor]]\" checked=\"{{storedItem.stealth}}\" on-change=\"_updateItem\">Disadvantage on Stealth</vaadin-checkbox>\n              <vaadin-checkbox checked=\"{{storedItem.reqAttune}}\" on-change=\"_updateItem\">Requires Attunement</vaadin-checkbox>\n              <vaadin-checkbox checked=\"{{storedItem.wondrous}}\" on-change=\"_updateItem\">Wondrous</vaadin-checkbox>\n              <vaadin-checkbox hidden$=\"[[!storedItem.itemRef]]\" checked=\"{{storedItem.hideRef}}\" on-change=\"_updateItem\">Hide Reference</vaadin-checkbox>\n            </div>\n\n            <vaadin-text-area  theme=\"label--secondary\" class=\"edit__notes\" value=\"{{storedItem.notes}}\" label=\"Notes\" on-blur=\"_updateItem\"></vaadin-text-area>\n          </div>\n        </template>\n      </div>\n    `;\n  }\n}\n\ncustomElements.define(\"dnd-character-builder-equipment-item-detail\", DndCharacterBuilderEquipmentItemDetail);","import '@vaadin/vaadin-lumo-styles/color.js';\nimport '@vaadin/vaadin-lumo-styles/sizing.js';\nimport '@vaadin/vaadin-lumo-styles/typography.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\n\nconst $_documentContainer = html`<dom-module id=\"lumo-text-area\" theme-for=\"vaadin-text-area\">\n  <template>\n    <style include=\"lumo-text-field\">\n      [part=\"input-field\"],\n      [part=\"input-field\"] ::slotted(textarea) {\n        /* Equal to the implicit padding in vaadin-text-field */\n        padding-top: calc((var(--lumo-text-field-size) - 1em * var(--lumo-line-height-s)) / 2);\n        padding-bottom: calc((var(--lumo-text-field-size) - 1em * var(--lumo-line-height-s)) / 2);\n        height: auto;\n        box-sizing: border-box;\n        transition: background-color 0.1s;\n        line-height: var(--lumo-line-height-s);\n      }\n\n      :host(:not([readonly])) [part=\"input-field\"]::after {\n        display: none;\n      }\n\n      :host([readonly]) [part=\"input-field\"] {\n        border: 1px dashed var(--lumo-contrast-30pct);\n      }\n\n      :host([readonly]) [part=\"input-field\"]::after {\n        border: none;\n      }\n\n      :host(:hover:not([readonly]):not([focused])) [part=\"input-field\"] {\n        background-color: var(--lumo-contrast-20pct);\n      }\n\n      @media (pointer: coarse) {\n        :host(:hover:not([readonly]):not([focused])) [part=\"input-field\"] {\n          background-color: var(--lumo-contrast-10pct);\n        }\n\n        :host(:active:not([readonly]):not([focused])) [part=\"input-field\"] {\n          background-color: var(--lumo-contrast-20pct);\n        }\n      }\n\n      [part=\"value\"],\n      [part=\"input-field\"] ::slotted(textarea) {\n        line-height: inherit;\n        --_lumo-text-field-overflow-mask-image: none;\n      }\n\n      /* Vertically align icon prefix/suffix with the first line of text */\n      [part=\"input-field\"] ::slotted(iron-icon) {\n        margin-top: calc((var(--lumo-icon-size-m) - 1em * var(--lumo-line-height-s)) / -2);\n      }\n\n      [part=\"input-field\"] [part=\"value\"],\n      [part=\"input-field\"] ::slotted(textarea) {\n        white-space: pre-wrap; /* override \\`nowrap\\` from <vaadin-text-field> */\n        align-self: stretch; /* override \\`baseline\\` from <vaadin-text-field> */\n      }\n    </style>\n  </template>\n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\n","/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport { TextFieldMixin } from './vaadin-text-field-mixin.js';\nimport { ElementMixin } from '@vaadin/vaadin-element-mixin/vaadin-element-mixin.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n/**\n * `<vaadin-text-area>` is a Web Component for text area control in forms.\n *\n * ```html\n * <vaadin-text-area label=\"Add description\">\n * </vaadin-text-area>\n * ```\n *\n * ### Prefixes and suffixes\n *\n * These are child elements of a `<vaadin-text-area>` that are displayed\n * inline with the input, before or after.\n * In order for an element to be considered as a prefix, it must have the slot\n * attribute set to `prefix` (and similarly for `suffix`).\n *\n * ```html\n * <vaadin-text-area label=\"Add description\">\n *   <div slot=\"prefix\">Details:</div>\n *   <div slot=\"suffix\">The end!</div>\n * </vaadin-text-area>\n * ```\n *\n * ### Styling\n *\n * The following shadow DOM parts are available for styling:\n *\n * Part name | Description\n * ----------------|----------------\n * `label` | The label element\n * `input-field` | The element that wraps prefix, value and suffix\n * `value` | The text value element inside the `input-field` element\n * `error-message` | The error message element\n *\n * The following state attributes are available for styling:\n *\n * Attribute    | Description | Part name\n * -------------|-------------|------------\n * `disabled` | Set to a disabled text field | :host\n * `has-value` | Set when the element has a value | :host\n * `has-label` | Set when the element has a label | :host\n * `invalid` | Set when the element is invalid | :host\n * `focused` | Set when the element is focused | :host\n * `focus-ring` | Set when the element is keyboard focused | :host\n * `readonly` | Set to a readonly text field | :host\n *\n * See [ThemableMixin – how to apply styles for shadow parts](https://github.com/vaadin/vaadin-themable-mixin/wiki)\n *\n * @extends PolymerElement\n * @mixes TextFieldMixin\n * @mixes ThemableMixin\n * @demo demo/index.html\n */\nclass TextAreaElement extends ElementMixin(TextFieldMixin(ThemableMixin(PolymerElement))) {\n  static get template() {\n    return html`\n    <style include=\"vaadin-text-field-shared-styles\">\n      .vaadin-text-area-container {\n        flex: auto;\n        max-height: inherit; /* MSIE 11 */\n        min-height: inherit; /* MSIE 11 */\n      }\n\n      /* The label and the error message should neither grow nor shrink. */\n      [part=\"label\"],\n      [part=\"error-message\"] {\n        flex: none;\n      }\n\n      [part=\"input-field\"] {\n        overflow: auto;\n        -webkit-overflow-scrolling: touch;\n      }\n\n      [part=\"value\"] {\n        resize: none;\n      }\n\n      [part=\"value\"],\n      [part=\"input-field\"] ::slotted(*) {\n        align-self: flex-start;\n      }\n\n      @keyframes vaadin-text-area-appear {\n        to {\n          opacity: 1;\n        }\n      }\n\n      :host {\n        animation: 1ms vaadin-text-area-appear;\n      }\n    </style>\n\n    <div class=\"vaadin-text-area-container\">\n\n      <label part=\"label\" on-click=\"focus\" id=\"[[_labelId]]\">[[label]]</label>\n\n      <div part=\"input-field\" id=\"[[_inputId]]\">\n\n        <slot name=\"prefix\"></slot>\n\n        <slot name=\"textarea\">\n          <textarea part=\"value\"></textarea>\n        </slot>\n\n        <div part=\"clear-button\" id=\"clearButton\" role=\"button\" aria-label\\$=\"[[i18n.clear]]\"></div>\n        <slot name=\"suffix\"></slot>\n\n      </div>\n\n      <div part=\"error-message\" id=\"[[_errorId]]\" aria-live=\"assertive\" aria-hidden\\$=\"[[_getErrorMessageAriaHidden(invalid, errorMessage, _errorId)]]\">[[errorMessage]]</div>\n\n    </div>\n`;\n  }\n\n  static get is() {\n    return 'vaadin-text-area';\n  }\n\n  static get version() {\n    return '2.6.2';\n  }\n\n  static get observers() {\n    return [\n      '_textAreaValueChanged(value)'\n    ];\n  }\n\n  ready() {\n    super.ready();\n    this._updateHeight();\n    this.addEventListener('animationend', this._onAnimationEnd);\n  }\n\n  _onAnimationEnd(e) {\n    if (e.animationName.indexOf('vaadin-text-area-appear') === 0) {\n      this._updateHeight();\n    }\n  }\n\n  get _slottedTagName() {\n    return 'textarea';\n  }\n\n  _textAreaValueChanged(value) {\n    this._updateHeight();\n  }\n\n  _updateHeight() {\n    const inputField = this.root.querySelector('[part=input-field]');\n    const scrollTop = inputField.scrollTop;\n    const input = this.inputElement;\n\n    const inputWidth = getComputedStyle(input).width;\n\n    const valueLength = this.value ? this.value.length : 0;\n    // Only clear the height when the content shortens to minimize scrollbar flickering.\n    if (this._oldValueLength >= valueLength) {\n      // Fix the input element width so its scroll height isn't affected by host's disappearing scrollbars\n      input.style.maxWidth = inputWidth;\n      input.style.height = 'auto';\n      // Avoid a jumpy Safari rendering issue\n      inputField.style.display = 'block';\n    }\n    this._oldValueLength = valueLength;\n\n    const inputHeight = input.scrollHeight;\n    if (inputHeight > input.clientHeight) {\n      input.style.height = inputHeight + 'px';\n    }\n\n    // Restore\n    input.style.removeProperty('max-width');\n    inputField.style.removeProperty('display');\n    inputField.scrollTop = scrollTop;\n\n    this._dispatchIronResizeEventIfNeeded('InputHeight', inputHeight);\n  }\n\n  /**\n   * Fired when the text-area height changes.\n   *\n   * @event iron-resize\n   */\n}\n\ncustomElements.define(TextAreaElement.is, TextAreaElement);\n\nexport { TextAreaElement };\n"],"sourceRoot":""}