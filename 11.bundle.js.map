{"version":3,"sources":["webpack:///./js/items.js","webpack:///./node_modules/@vaadin/vaadin-text-field/vaadin-text-field.js","webpack:///./node_modules/@vaadin/vaadin-text-field/theme/lumo/vaadin-text-area-styles.js","webpack:///./node_modules/@vaadin/vaadin-text-field/src/vaadin-text-area.js","webpack:///./components/views/character/dnd-character-builder-equipment-item-detail.js"],"names":["renderer","renderSelection","item","rootEl","hideFirstLine","querySelector","innerHTML","source","sourceFull","sourceJsonToFull","page","value","weight","tier","rarity","reqAttune","type","weaponCategory","dmg1","dmgType","dmgTypeToFull","ac","speed","capacity","carryingcapacity","append","indexOf","property","properties","split","i","length","prop","a","window","itemPropertyList","name","dmg2","range","reload","entryList","entries","renderStack","recursiveEntryRender","join","toLowerCase","remove","$_documentContainer","document","head","appendChild","content","super","ready","this","_updateHeight","addEventListener","_onAnimationEnd","e","animationName","inputField","root","scrollTop","input","inputElement","inputWidth","getComputedStyle","width","valueLength","_oldValueLength","style","maxWidth","height","display","inputHeight","scrollHeight","clientHeight","removeProperty","_dispatchIronResizeEventIfNeeded","customElements","define","is","isEditMode","Boolean","hasRenderedOutput","Object","storedItem","itemType","String","itemTypes","console","error","itemRef","lookupFailed","$","renderedOutput","_getItemType","armor","container","newType","typeSelect","undefined","wondrous","connectedCallback","editModeHandler","detail","disconnectedCallback","removeEventListener","bools","bool"],"mappings":"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","file":"11.bundle.js","sourcesContent":["import EntryRenderer from '../util/entryrender.js';\r\nimport Parser from '../util/Parser.js';\r\nimport { utils_makeRoller } from '../js/utils.js';\r\n\r\nconst stats_wrapper = `\r\n\t<div class=\"stats-wrapper margin-bottom_large\">\r\n\t\t<div class=\"margin-bottom_small\">\r\n\t\t\t<span class=\"type\"></span><span class=\"rarity\"></span>\r\n\t\t\t<span class=\"attunement\"></span>\r\n\t\t</div>\r\n\t\t<div class=\"margin-bottom_small\">\r\n\t\t\t<span class=\"value\"></span><span class=\"weight\"></span>\r\n\t\t</div>\r\n\t\t<div class=\"margin-bottom_small\">\r\n\t\t\t<span class=\"damage\"></span>\r\n\t\t\t<span class=\"damageType\"></span>\r\n\t\t\t<span class=\"properties\"></span>\r\n\t\t</div>\r\n\t\t<div class=\"text\"></div>\r\n\t\t<div class=\"margin-bottom_small\">Source: <span class=\"source\"></span></div>\r\n\t</div>`;\r\n\r\nconst renderer = new EntryRenderer();\r\nfunction renderSelection(item, rootEl, hideFirstLine) {\r\n\tconst wrap = rootEl.querySelector(\".selection-wrapper\") || rootEl;\r\n\twrap.innerHTML = stats_wrapper;\r\n\t\r\n\tconst source = item.source;\r\n\tconst sourceFull = Parser.sourceJsonToFull(source);\r\n\trootEl.querySelector(\".stats-wrapper .source\").innerHTML = (`${sourceFull}, page ${item.page}`);\r\n\r\n\trootEl.querySelector(\".stats-wrapper .value\").innerHTML = (item.value ? item.value+(item.weight ? \", \" : \"\") : \"\");\r\n\trootEl.querySelector(\".stats-wrapper .weight\").innerHTML = (item.weight ? item.weight+(item.weight == 1 ? \" lb.\" : \" lbs.\") : \"\");\r\n\trootEl.querySelector(\".stats-wrapper .rarity\").innerHTML = ((item.tier ? \", \"+item.tier : \"\")+(item.rarity ? \", \"+item.rarity : \"\"));\r\n\trootEl.querySelector(\".stats-wrapper .attunement\").innerHTML = (item.reqAttune ? item.reqAttune : \"\");\r\n\trootEl.querySelector(\".stats-wrapper .type\").innerHTML = (item.typeText);\r\n\r\n\trootEl.querySelector(\".stats-wrapper .damage\").innerHTML = (\"\");\r\n\trootEl.querySelector(\".stats-wrapper .damageType\").innerHTML = (\"\");\r\n\tconst type = item.type || \"\";\r\n\tif (item.weaponCategory) {\r\n\t\tif(item.dmg1) rootEl.querySelector(\".stats-wrapper .damage\").innerHTML = (utils_makeRoller(item.dmg1));\r\n\t\tif(item.dmgType) rootEl.querySelector(\".stats-wrapper .damageType\").innerHTML = (Parser.dmgTypeToFull(item.dmgType));\r\n\t} else if (type === \"LA\" ||type === \"MA\"|| type === \"HA\") {\r\n\t\trootEl.querySelector(\".stats-wrapper .damage\").innerHTML = (\"AC \"+item.ac+(type === \"LA\" ? \" + Dex\" : type === \"MA\" ? \" + Dex (max 2)\" : \"\"));\r\n\t} else if (type === \"S\") {\r\n\t\trootEl.querySelector(\".stats-wrapper .damage\").innerHTML = (\"AC +\"+item.ac);\r\n\t} else if (type === \"MNT\" || type === \"VEH\") {\r\n\t\tconst speed=item.speed;\r\n\t\tconst capacity=item.carryingcapacity;\r\n\t\tif (speed) rootEl.querySelector(\".stats-wrapper .damage\").append(\"Speed=\"+speed);\r\n\t\tif (speed && capacity) rootEl.querySelector(\".stats-wrapper .damage\").append(type === \"MNT\" ? \", \" : \"<br>\");\r\n\t\tif (capacity) {\r\n\t\t\trootEl.querySelector(\".stats-wrapper .damage\").append(\"Carrying Capacity=\"+capacity);\r\n\t\t\tif (capacity.indexOf(\"ton\") === -1 && capacity.indexOf(\"passenger\") === -1) rootEl.querySelector(\".stats-wrapper .damage\").append(capacity == 1 ? \" lb.\" : \" lbs.\");\r\n\t\t}\r\n\t}\r\n\r\n\trootEl.querySelector(\".stats-wrapper .properties\").innerHTML = (\"\");\r\n\tif (item.property) {\r\n\t\tconst properties = item.property.split(\",\");\r\n\t\tfor (let i = 0; i < properties.length; i++) {\r\n\t\t\tconst prop = properties[i];\r\n\t\t\tlet a = window.itemPropertyList[prop].name;\r\n\t\t\tif (prop === \"V\") a = `${a} (${utils_makeRoller(item.dmg2)})`;\r\n\t\t\tif (prop === \"T\" || prop === \"A\" || prop === \"AF\") a = `${a} (${item.range}ft.)`;\r\n\t\t\tif (prop === \"RLD\") a = `${a} (${item.reload} shots)`;\r\n\t\t\ta = (i > 0 ? \", \" : item.dmg1 ? \"- \" : \"\") + a;\r\n\t\t\trootEl.querySelector(\".stats-wrapper .properties\").append(a);\r\n\t\t}\r\n\t}\r\n\r\n\tconst entryList = {type: \"entries\", entries: item.entries};\r\n\tconst renderStack = [];\r\n\trenderer.recursiveEntryRender(entryList, renderStack, 1);\r\n\trootEl.querySelector(\".stats-wrapper .text\").innerHTML = (utils_makeRoller(renderStack.join(\"\")).split(item.name.toLowerCase()).join(\"<i>\"+item.name.toLowerCase()+\"</i>\"));\r\n\tif (hideFirstLine) {\r\n\t\trootEl.querySelector(\".margin-bottom_small\").remove();\r\n\t}\r\n}\r\n\r\nexport { renderSelection };","import './theme/lumo/vaadin-text-field.js';\n","import '@vaadin/vaadin-lumo-styles/color.js';\nimport '@vaadin/vaadin-lumo-styles/sizing.js';\nimport '@vaadin/vaadin-lumo-styles/typography.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\n\nconst $_documentContainer = html`<dom-module id=\"lumo-text-area\" theme-for=\"vaadin-text-area\">\n  <template>\n    <style include=\"lumo-text-field\">\n      [part=\"input-field\"],\n      [part=\"input-field\"] ::slotted(textarea) {\n        /* Equal to the implicit padding in vaadin-text-field */\n        padding-top: calc((var(--lumo-text-field-size) - 1em * var(--lumo-line-height-s)) / 2);\n        padding-bottom: calc((var(--lumo-text-field-size) - 1em * var(--lumo-line-height-s)) / 2);\n        height: auto;\n        box-sizing: border-box;\n        transition: background-color 0.1s;\n        line-height: var(--lumo-line-height-s);\n      }\n\n      :host(:not([readonly])) [part=\"input-field\"]::after {\n        display: none;\n      }\n\n      :host([readonly]) [part=\"input-field\"] {\n        border: 1px dashed var(--lumo-contrast-30pct);\n      }\n\n      :host([readonly]) [part=\"input-field\"]::after {\n        border: none;\n      }\n\n      :host(:hover:not([readonly]):not([focused])) [part=\"input-field\"] {\n        background-color: var(--lumo-contrast-20pct);\n      }\n\n      @media (pointer: coarse) {\n        :host(:hover:not([readonly]):not([focused])) [part=\"input-field\"] {\n          background-color: var(--lumo-contrast-10pct);\n        }\n\n        :host(:active:not([readonly]):not([focused])) [part=\"input-field\"] {\n          background-color: var(--lumo-contrast-20pct);\n        }\n      }\n\n      [part=\"value\"],\n      [part=\"input-field\"] ::slotted(textarea) {\n        line-height: inherit;\n        --_lumo-text-field-overflow-mask-image: none;\n      }\n\n      /* Vertically align icon prefix/suffix with the first line of text */\n      [part=\"input-field\"] ::slotted(iron-icon) {\n        margin-top: calc((var(--lumo-icon-size-m) - 1em * var(--lumo-line-height-s)) / -2);\n      }\n\n      [part=\"input-field\"] [part=\"value\"],\n      [part=\"input-field\"] ::slotted(textarea) {\n        white-space: pre-wrap; /* override \\`nowrap\\` from <vaadin-text-field> */\n        align-self: stretch; /* override \\`baseline\\` from <vaadin-text-field> */\n      }\n    </style>\n  </template>\n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\n","/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport { TextFieldMixin } from './vaadin-text-field-mixin.js';\nimport { ElementMixin } from '@vaadin/vaadin-element-mixin/vaadin-element-mixin.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n/**\n * `<vaadin-text-area>` is a Web Component for text area control in forms.\n *\n * ```html\n * <vaadin-text-area label=\"Add description\">\n * </vaadin-text-area>\n * ```\n *\n * ### Prefixes and suffixes\n *\n * These are child elements of a `<vaadin-text-area>` that are displayed\n * inline with the input, before or after.\n * In order for an element to be considered as a prefix, it must have the slot\n * attribute set to `prefix` (and similarly for `suffix`).\n *\n * ```html\n * <vaadin-text-area label=\"Add description\">\n *   <div slot=\"prefix\">Details:</div>\n *   <div slot=\"suffix\">The end!</div>\n * </vaadin-text-area>\n * ```\n *\n * ### Styling\n *\n * The following shadow DOM parts are available for styling:\n *\n * Part name | Description\n * ----------------|----------------\n * `label` | The label element\n * `input-field` | The element that wraps prefix, value and suffix\n * `value` | The text value element inside the `input-field` element\n * `error-message` | The error message element\n *\n * The following state attributes are available for styling:\n *\n * Attribute    | Description | Part name\n * -------------|-------------|------------\n * `disabled` | Set to a disabled text field | :host\n * `has-value` | Set when the element has a value | :host\n * `has-label` | Set when the element has a label | :host\n * `invalid` | Set when the element is invalid | :host\n * `focused` | Set when the element is focused | :host\n * `focus-ring` | Set when the element is keyboard focused | :host\n * `readonly` | Set to a readonly text field | :host\n *\n * See [ThemableMixin – how to apply styles for shadow parts](https://github.com/vaadin/vaadin-themable-mixin/wiki)\n *\n * @extends PolymerElement\n * @mixes TextFieldMixin\n * @mixes ThemableMixin\n * @demo demo/index.html\n */\nclass TextAreaElement extends ElementMixin(TextFieldMixin(ThemableMixin(PolymerElement))) {\n  static get template() {\n    return html`\n    <style include=\"vaadin-text-field-shared-styles\">\n      .vaadin-text-area-container {\n        flex: auto;\n        max-height: inherit; /* MSIE 11 */\n        min-height: inherit; /* MSIE 11 */\n      }\n\n      /* The label and the error message should neither grow nor shrink. */\n      [part=\"label\"],\n      [part=\"error-message\"] {\n        flex: none;\n      }\n\n      [part=\"input-field\"] {\n        overflow: auto;\n        -webkit-overflow-scrolling: touch;\n      }\n\n      [part=\"value\"] {\n        resize: none;\n      }\n\n      [part=\"value\"],\n      [part=\"input-field\"] ::slotted(*) {\n        align-self: flex-start;\n      }\n\n      @keyframes vaadin-text-area-appear {\n        to {\n          opacity: 1;\n        }\n      }\n\n      :host {\n        animation: 1ms vaadin-text-area-appear;\n      }\n    </style>\n\n    <div class=\"vaadin-text-area-container\">\n\n      <label part=\"label\" on-click=\"focus\" id=\"[[_labelId]]\">[[label]]</label>\n\n      <div part=\"input-field\" id=\"[[_inputId]]\">\n\n        <slot name=\"prefix\"></slot>\n\n        <slot name=\"textarea\">\n          <textarea part=\"value\"></textarea>\n        </slot>\n\n        <div part=\"clear-button\" id=\"clearButton\" role=\"button\" aria-label\\$=\"[[i18n.clear]]\"></div>\n        <slot name=\"suffix\"></slot>\n\n      </div>\n\n      <div part=\"error-message\" id=\"[[_errorId]]\" aria-live=\"assertive\" aria-hidden\\$=\"[[_getErrorMessageAriaHidden(invalid, errorMessage, _errorId)]]\">[[errorMessage]]</div>\n\n    </div>\n`;\n  }\n\n  static get is() {\n    return 'vaadin-text-area';\n  }\n\n  static get version() {\n    return '2.6.2';\n  }\n\n  static get observers() {\n    return [\n      '_textAreaValueChanged(value)'\n    ];\n  }\n\n  ready() {\n    super.ready();\n    this._updateHeight();\n    this.addEventListener('animationend', this._onAnimationEnd);\n  }\n\n  _onAnimationEnd(e) {\n    if (e.animationName.indexOf('vaadin-text-area-appear') === 0) {\n      this._updateHeight();\n    }\n  }\n\n  get _slottedTagName() {\n    return 'textarea';\n  }\n\n  _textAreaValueChanged(value) {\n    this._updateHeight();\n  }\n\n  _updateHeight() {\n    const inputField = this.root.querySelector('[part=input-field]');\n    const scrollTop = inputField.scrollTop;\n    const input = this.inputElement;\n\n    const inputWidth = getComputedStyle(input).width;\n\n    const valueLength = this.value ? this.value.length : 0;\n    // Only clear the height when the content shortens to minimize scrollbar flickering.\n    if (this._oldValueLength >= valueLength) {\n      // Fix the input element width so its scroll height isn't affected by host's disappearing scrollbars\n      input.style.maxWidth = inputWidth;\n      input.style.height = 'auto';\n      // Avoid a jumpy Safari rendering issue\n      inputField.style.display = 'block';\n    }\n    this._oldValueLength = valueLength;\n\n    const inputHeight = input.scrollHeight;\n    if (inputHeight > input.clientHeight) {\n      input.style.height = inputHeight + 'px';\n    }\n\n    // Restore\n    input.style.removeProperty('max-width');\n    inputField.style.removeProperty('display');\n    inputField.scrollTop = scrollTop;\n\n    this._dispatchIronResizeEventIfNeeded('InputHeight', inputHeight);\n  }\n\n  /**\n   * Fired when the text-area height changes.\n   *\n   * @event iron-resize\n   */\n}\n\ncustomElements.define(TextAreaElement.is, TextAreaElement);\n\nexport { TextAreaElement };\n","import { PolymerElement, html } from \"@polymer/polymer\";\nimport {\n  setItem\n} from \"../../../util/charBuilder\";\nimport { getEditModeChannel, isEditMode } from \"../../../util/editMode\";\nimport { renderSelection } from \"../../../js/items\";\nimport \"@vaadin/vaadin-text-field/vaadin-text-field\";\nimport \"@vaadin/vaadin-text-field/vaadin-text-area\";\n\nclass DndCharacterBuilderEquipmentItemDetail extends PolymerElement {\n  \n  static get properties() {\n    return {\n      isEditMode: {\n        type: Boolean,\n        value: false\n      },\n      hasRenderedOutput: {\n        type: Boolean,\n        value: false\n      },\n      item: {\n        type: Object\n      },\n      storedItem: {\n        type: Object\n      },\n      itemType: {\n        type: String,\n        value: ''\n      }\n    };\n  }\n\n  static get observers() {\n    return [\n      '_itemChanged(item)'\n    ]\n  }\n\n  constructor() {\n    super();\n\n    this.itemTypes = [\n      'Armor',\n      'Simple Weapon',\n      'Martial Weapon',\n      'Shield',\n      'Wondrous Item',\n      'Adventuring Gear',\n      'Container'\n    ];\n  }\n\n  _itemChanged() {\n    console.error('itemDetail:', this.item);\n\n    if (this.item.storedItem) {\n      this.storedItem = this.item.storedItem;\n    }\n\n    if (this.item.itemRef && !this.item.lookupFailed) {\n      this.hasRenderedOutput = true;\n      renderSelection(this.item, this.$.renderedOutput, true);\n    } else {\n      this.hasRenderedOutput = false;\n    }\n    this.itemType = this._getItemType();\n  }\n\n  _getItemType() {\n    if (this.item) {\n      if (this.item.armor) {\n        return 'Armor'\n      }\n      if (this.item.weaponCategory === 'Simple') {\n        return 'Simple Weapon'\n      }\n      if (this.item.weaponCategory === 'Martial') {\n        return 'Martial Weapon'\n      }\n      if (this.item.type === 'S') {\n        return 'Shield'\n      }\n      if (this.item.container) {\n        return 'Container'\n      }\n      if (this.item.type === 'G') {\n        return 'Adventuring Gear'\n      }\n    }\n    return '';\n  }\n\n  _selectItemType() {\n    const newType = this.$.typeSelect.value;\n    this.storedItem.armor = false;\n    this.storedItem.weaponCategory = undefined;\n    this.storedItem.wondrous = false;\n\n    switch (newType) {\n      case 'Armor':\n        this.storedItem.armor = true;\n        break;\n      case 'Simple Weapon':\n        this.storedItem.weaponCategory = 'Simple';\n        break;\n      case 'Martial Weapon':\n        this.storedItem.weaponCategory = 'Martial';\n        break;\n      case 'Shield':\n        this.storedItem.type = 'S'\n        break;\n      case 'Wondrous':\n        this.storedItem.wondrous = true;\n        break;\n      case 'Adventuring Gear':\n        this.storedItem.type = 'G';\n        break;\n      case 'Container':\n        this.storedItem.container = true;\n        break;\n    }\n    setItem(this.item);\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    this.editModeHandler = (e) => {\n      this.isEditMode = e.detail.isEditMode;\n    }\n    getEditModeChannel().addEventListener('editModeChange', this.editModeHandler);\n    this.isEditMode = isEditMode();\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n\n    getEditModeChannel().removeEventListener('editModeChange', this.editModeHandler);\n  }\n\n  _updateItem() {\n    setItem(this.item);\n  }\n\n  _or(...bools) {\n    for (let bool of bools) {\n      if (bool) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  static get template() {\n    return html`\n      <style include=\"material-styles\"></style>\n      <style>\n        :host {}\n        [hidden] {\n          display: none !important;\n        }\n\n        .edit__name {\n          width: 100%;\n        }\n        .edit__notes {\n          width: 100%;\n          min-height: 200px;\n        }\n        h2 {\n          margin-top: 0;\n        }        \n\n        @media(min-width: 921px) {\n        }\n      </style>\n\n      <div>\n        <div hidden$=\"[[isEditMode]]\">\n          <div hidden$=\"[[!hasRenderedOutput]]\">\n            <h2>[[item.name]]</h4>\n            <div>[[item.notes]]</div>\n            <div id=\"renderedOutput\"></div>\n          </div>\n\n          <div hidden$=\"[[hasRenderedOutput]]\">\n            <h2>[[item.name]]</h4>\n            <div>[[item.notes]]</div>\n          </div>\n        </div>\n\n        <div hidden$=\"[[!isEditMode]]\">\n          <vaadin-text-field class=\"edit__name\" value=\"{{storedItem.name}}\" label=\"Name\" on-change=\"_updateItem\"></vaadin-text-field>\n          \n          <vaadin-select id=\"typeSelect\" value=\"[[itemType]]\" on-change=\"_selectItemType\" label=\"Item Type\" >\n            <template>\n              <vaadin-list-box>\n                <template is=\"dom-repeat\" items=\"[[itemTypes]]\">\n                  <vaadin-item>[[item]]</vaadin-item>\n                </template>\n              </vaadin-list-box>\n            </template>\n          </vaadin-select>\n\n          <vaadin-checkbox checked=\"{{item.reqAttune}}\" on-change=\"_updateItem\">Requires Attunement?</vaadin-checkbox>\n\n          <vaadin-text-area class=\"edit__notes\" value=\"{{storedItem.notes}}\" label=\"Notes\" on-change=\"_updateItem\"></vaadin-text-area>\n        </div>\n        \n      </div>\n    `;\n  }\n}\n\ncustomElements.define(\"dnd-character-builder-equipment-item-detail\", DndCharacterBuilderEquipmentItemDetail);"],"sourceRoot":""}