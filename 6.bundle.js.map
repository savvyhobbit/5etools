{"version":3,"sources":["webpack:///./components/dnd-button.js","webpack:///./node_modules/@vaadin/vaadin-checkbox/src/vaadin-checkbox.js","webpack:///./node_modules/@vaadin/vaadin-text-field/theme/lumo/vaadin-number-field-styles.js","webpack:///./node_modules/@vaadin/vaadin-text-field/src/vaadin-number-field.js","webpack:///./node_modules/@vaadin/vaadin-text-field/src/vaadin-integer-field.js","webpack:///./node_modules/@vaadin/vaadin-checkbox/theme/lumo/vaadin-checkbox-styles.js","webpack:///./node_modules/@vaadin/vaadin-checkbox/vaadin-checkbox.js","webpack:///./node_modules/@vaadin/vaadin-text-field/vaadin-text-field.js","webpack:///./components/views/character/dnd-character-builder-abilities.js"],"names":["DndButton","label","type","String","value","icon","svg","background","border","svgFill","svgStroke","setTimeout","this","button","$","i","result","fill","stroke","customElements","define","CheckboxElement","checked","Boolean","notify","observer","reflectToAttribute","indeterminate","_nativeCheckbox","Object","super","name","_storedName","ready","setAttribute","shadowRoot","querySelector","addEventListener","_handleClick","bind","_addActiveListeners","attrName","getAttribute","_updateLabelAttribute","assignedNodes","firstElementChild","_isAssignedNodesEmpty","removeAttribute","nodes","length","nodeType","Node","TEXT_NODE","textContent","trim","_addEventListenerToNode","e","__interactionsAllowed","keyCode","preventDefault","_toggleChecked","disabled","target","localName","composedPath","dispatchEvent","CustomEvent","composed","bubbles","is","$_documentContainer","document","head","appendChild","content","createElement","memoizedTemplate","innerHTML","hasControls","min","Number","max","step","__previousValidInput","inputElement","__onInputChange","_decreaseValue","_increaseValue","template","cloneNode","thisTemplate","import","decreaseButton","increaseButton","styles","inputField","prefixSlot","insertBefore","_createMethodObserver","required","minlength","maxlength","pattern","invalid","isNumUnset","n","_constraintsChanged","validate","_incrementValue","incr","readonly","parseFloat","_getIncrement","newValue","_incrementIsInsideTheLimits","_setValue","currentValue","multiplier","Math","_getMultiplier","margin","round","number","s","indexOf","isNaN","pow","_getDecimalCount","sign","__validateByStep","__stepChangedCalled","newVal","oldVal","_valueChanged","_onKeyDown","undefined","checkValidity","window","preventInvalidInput","_enabledCharPattern","__isInteger","console","warn","__hasOnlyDigits","_stepChanged","test","DndCharacterBuilderAbilities","isEditMode","abilities","Array","resetOptions","connectedCallback","characterChangeHandler","character","detail","updateFromCharacter","editModeHandler","disconnectedCallback","removeEventListener","customAbilities","set","currentSlots","slots","abilityEls","querySelectorAll","scrollIntoView","index","model","item","stopPropagation","isInput","maxSlots","parseInt","children","_setSlotsChecked","count","el","checkboxes","arg","arguments","constructor","entries","isArray","data","push","forEach","reset"],"mappings":"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","file":"6.bundle.js","sourcesContent":["import { PolymerElement, html } from '@polymer/polymer';\nimport { MDCRipple } from '@material/ripple';\nimport { } from '@polymer/polymer/lib/elements/dom-if.js';\nimport \"./dnd-svg\";\n\nclass DndButton extends PolymerElement {\n  static get properties() {\n    return {\n      label: {\n        type: String,\n        value: ''\n      },\n      icon: {\n        type: String,\n        value: ''\n      },\n      svg: {\n        type: String,\n        value: ''\n      },\n      background: {\n        type: String,\n        value: ''\n      },\n      border: {\n        type: String,\n        value: ''\n      },\n      svgFill: {\n        type: String,\n        value: ''\n      },\n      svgStroke: {\n        type: String,\n        value: ''\n      }\n    }\n  }\n\n  connectedCallback() {\n    setTimeout(()=> {\n      this.button = new MDCRipple(this.$.button);\n    }, 10)\n  }\n\n  _exists(i) {\n    return !!i;\n  }\n\n  _styleStr(background, border, label) {\n    let result = '';\n    if (background) {\n      result+= `background: ${background}; `\n    }\n    if (border) {\n      result+= `border: ${border}; `\n    }\n    return result;\n  }\n\n  _svgStyleStr(fill, stroke) {\n    let result = '';\n    if (fill) {\n      result+= `fill: ${fill}; `\n    }\n    if (stroke) {\n      result+= `stroke: ${stroke}; `\n    }\n    return result;\n  }\n\n  static get template() {\n    return html`\n      <style include=\"material-styles\">\n        .mdc-tab-scroller__scroll-area--scroll {\n          overflow-x: auto;\n          background-color: var(--mdc-theme-surface);\n          border: 1px solid var(--mdc-theme-text-divider-on-background);\n          border-bottom: none;\n        }\n        :host {\n          display: inline;\n          overflow: hidden;\n          white-space: nowrap;\n          border-radius: 6px;\n        }\n        .mdc-button {\n          display: inline-flex;\n          justify-content: center;\n          align-items: center;\n          width: 100%;\n        }\n        .mdc-button .mdc-button__icon {\n          margin-right: 0px;\n          margin-left: 8px;\n        }\n        .mdc-button [background] {\n          background: var(--lumo-contrast-10pct);\n        }\n        dnd-svg {\n          height: 20px;\n          width: 20px;\n          flex-shrink: 0;\n          flex-grow: 0;\n          padding-left: 8px;\n          fill: var(--mdc-theme-primary);\n          stroke: var(--mdc-theme-primary);\n        }\n        i {\n          flex-shrink: 0;\n          flex-grow: 0;\n        }\n\n        \n        :host(.btn-field__btn) dnd-svg {\n          padding-left: 0;\n        }\n        :host(.btn-field__btn) i {\n          margin-left: 0;\n        }\n\n        :host(.icon-only) dnd-svg {\n          margin-left: -24px;\n          padding-left: 0;\n        }\n        :host(.icon-only) i {\n          margin-left: 0;\n          padding-left: 0;\n        }\n        :host(.hard-left) i {\n          margin-left: -24px;\n        }\n\n        :host(.link) .mdc-button__label {\n          text-transform: none;\n          color: var(--lumo-body-text-color);\n          letter-spacing: normal;\n        }\n        :host(.link) i {\n          color: var(--lumo-body-text-color);\n        }\n        :host(.link) button:hover::before {\n          background: none;\n        }\n        :host(.link) button:hover i,\n        :host(.link) button:hover .mdc-button__label {\n          color: var(--mdc-theme-secondary);\n        }\n\n        :host([edit-mode]) button {\n          background-color: var(--mdc-theme-secondary);\n          color: var(--mdc-theme-on-secondary)\n        }\n        :host([edit-mode]) .mdc-button__label {\n          color: var(--mdc-theme-on-primary);\n        }\n        :host([edit-mode]) i {\n          color: var(--mdc-theme-on-primary);\n        }\n        :host([edit-mode]) button:hover i,\n        :host([edit-mode]) button:hover .mdc-button__label {\n          color: var(--mdc-theme-on-secondary);\n        }\n\n        :host([not-edit-mode]) button {\n          background-color: var(--mdc-theme-primary);\n          color: var(--mdc-theme-on-primary);\n        }\n        :host([not-edit-mode]) .mdc-button__label {\n          color: var(--mdc-theme-on-primary);\n        }\n        :host([not-edit-mode]) i {\n          color: var(--mdc-theme-on-primary);\n        }\n        :host([not-edit-mode]) button:hover i,\n        :host([not-edit-mode]) button:hover .mdc-button__label {\n          color: var(--mdc-theme-on-primary);\n        }\n\n      </style>\n      <button id=\"button\" class=\"mdc-button\" style$=\"[[_styleStr(background, border, label)]]\">\n        <div class=\"mdc-button__ripple\"></div>\n        <span class=\"mdc-button__label\">[[label]]</span>\n        <slot name=\"label\"></slot>\n        <template is=\"dom-if\" if=\"[[_exists(icon)]]\">\n          <i class=\"material-icons mdc-button__icon\" aria-hidden=\"true\">[[icon]]</i>\n        </template>\n        <template is=\"dom-if\" if=\"[[_exists(svg)]]\">\n          <dnd-svg id=\"[[svg]]\" style$=\"[[_svgStyleStr(svgFill, svgStroke)]]\"></dnd-svg>\n        </template>\n      </button>\n    `;\n  }\n\n}\ncustomElements.define('dnd-button', DndButton);","/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport { GestureEventListeners } from '@polymer/polymer/lib/mixins/gesture-event-listeners.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { ControlStateMixin } from '@vaadin/vaadin-control-state-mixin/vaadin-control-state-mixin.js';\nimport { ElementMixin } from '@vaadin/vaadin-element-mixin/vaadin-element-mixin.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\n/**\n * `<vaadin-checkbox>` is a Web Component for customized checkboxes.\n *\n * ```html\n * <vaadin-checkbox>\n *   Make my profile visible\n * </vaadin-checkbox>\n * ```\n *\n * ### Styling\n *\n * The following shadow DOM parts are available for styling:\n *\n * Part name         | Description\n * ------------------|----------------\n * `checkbox`        | The wrapper element for the native <input type=\"checkbox\">\n * `label`           | The wrapper element in which the component's children, namely the label, is slotted\n *\n * The following state attributes are available for styling:\n *\n * Attribute    | Description | Part name\n * -------------|-------------|--------------\n * `active`     | Set when the checkbox is pressed down, either with mouse, touch or the keyboard. | `:host`\n * `disabled`   | Set when the checkbox is disabled. | `:host`\n * `focus-ring` | Set when the checkbox is focused using the keyboard. | `:host`\n * `focused`    | Set when the checkbox is focused. | `:host`\n * `indeterminate` | Set when the checkbox is in indeterminate mode. | `:host`\n * `checked` | Set when the checkbox is checked. | `:host`\n * `empty` | Set when there is no label provided. | `label`\n *\n * See [ThemableMixin – how to apply styles for shadow parts](https://github.com/vaadin/vaadin-themable-mixin/wiki)\n *\n * @extends PolymerElement\n * @mixes ElementMixin\n * @mixes ControlStateMixin\n * @mixes ThemableMixin\n * @mixes GestureEventListeners\n * @demo demo/index.html\n */\nclass CheckboxElement extends\n  ElementMixin(\n    ControlStateMixin(\n      ThemableMixin(\n        GestureEventListeners(PolymerElement)))) {\n  static get template() {\n    return html`\n    <style>\n      :host {\n        display: inline-block;\n      }\n\n      :host([hidden]) {\n        display: none !important;\n      }\n\n      label {\n        display: inline-flex;\n        align-items: baseline;\n        outline: none;\n      }\n\n      [part=\"checkbox\"] {\n        position: relative;\n        display: inline-block;\n        flex: none;\n      }\n\n      input[type=\"checkbox\"] {\n        position: absolute;\n        top: 0;\n        left: 0;\n        right: 0;\n        width: 100%;\n        height: 100%;\n        opacity: 0;\n        cursor: inherit;\n        margin: 0;\n      }\n\n      :host([disabled]) {\n        -webkit-tap-highlight-color: transparent;\n      }\n    </style>\n\n    <label>\n      <span part=\"checkbox\">\n        <input type=\"checkbox\" checked=\"{{checked::change}}\" disabled\\$=\"[[disabled]]\" indeterminate=\"{{indeterminate::change}}\" role=\"presentation\" tabindex=\"-1\">\n      </span>\n\n      <span part=\"label\">\n        <slot></slot>\n      </span>\n    </label>\n`;\n  }\n\n  static get is() {\n    return 'vaadin-checkbox';\n  }\n\n  static get version() {\n    return '2.5.0';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * True if the checkbox is checked.\n       * @type {boolean}\n       */\n      checked: {\n        type: Boolean,\n        value: false,\n        notify: true,\n        observer: '_checkedChanged',\n        reflectToAttribute: true\n      },\n\n      /**\n       * Indeterminate state of the checkbox when it's neither checked nor unchecked, but undetermined.\n       * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/checkbox#Indeterminate_state_checkboxes\n       * @type {boolean}\n       */\n      indeterminate: {\n        type: Boolean,\n        notify: true,\n        observer: '_indeterminateChanged',\n        reflectToAttribute: true,\n        value: false\n      },\n\n      /**\n       * The value given to the data submitted with the checkbox's name to the server when the control is inside a form.\n       */\n      value: {\n        type: String,\n        value: 'on'\n      },\n\n      /** @private */\n      _nativeCheckbox: {\n        type: Object\n      }\n    };\n  }\n\n  constructor() {\n    super();\n    /**\n     * @type {string}\n     * Name of the element.\n     */\n    this.name;\n  }\n\n  get name() {\n    return this.checked ? this._storedName : '';\n  }\n\n  set name(name) {\n    this._storedName = name;\n  }\n\n  ready() {\n    super.ready();\n\n    this.setAttribute('role', 'checkbox');\n\n    this._nativeCheckbox = this.shadowRoot.querySelector('input[type=\"checkbox\"]');\n\n    this.addEventListener('click', this._handleClick.bind(this));\n\n    this._addActiveListeners();\n\n    const attrName = this.getAttribute('name');\n    if (attrName) {\n      this.name = attrName;\n    }\n\n    this.shadowRoot.querySelector('[part~=\"label\"]').querySelector('slot')\n      .addEventListener('slotchange', this._updateLabelAttribute.bind(this));\n\n    this._updateLabelAttribute();\n  }\n\n  /** @private */\n  _updateLabelAttribute() {\n    const label = this.shadowRoot.querySelector('[part~=\"label\"]');\n    const assignedNodes = label.firstElementChild.assignedNodes();\n    if (this._isAssignedNodesEmpty(assignedNodes)) {\n      label.setAttribute('empty', '');\n    } else {\n      label.removeAttribute('empty');\n    }\n  }\n\n  /** @private */\n  _isAssignedNodesEmpty(nodes) {\n    // The assigned nodes considered to be empty if there is no slotted content or only one empty text node\n    return nodes.length === 0 ||\n          (nodes.length == 1\n          && nodes[0].nodeType == Node.TEXT_NODE\n          && nodes[0].textContent.trim() === '');\n  }\n\n  /** @private */\n  _checkedChanged(checked) {\n    if (this.indeterminate) {\n      this.setAttribute('aria-checked', 'mixed');\n    } else {\n      this.setAttribute('aria-checked', Boolean(checked));\n    }\n  }\n\n  /** @private */\n  _indeterminateChanged(indeterminate) {\n    if (indeterminate) {\n      this.setAttribute('aria-checked', 'mixed');\n    } else {\n      this.setAttribute('aria-checked', this.checked);\n    }\n  }\n\n  /** @private */\n  _addActiveListeners() {\n    // DOWN\n    this._addEventListenerToNode(this, 'down', (e) => {\n      if (this.__interactionsAllowed(e)) {\n        this.setAttribute('active', '');\n      }\n    });\n\n    // UP\n    this._addEventListenerToNode(this, 'up', () => this.removeAttribute('active'));\n\n    // KEYDOWN\n    this.addEventListener('keydown', e => {\n      if (this.__interactionsAllowed(e) && e.keyCode === 32) {\n        e.preventDefault();\n        this.setAttribute('active', '');\n      }\n    });\n\n    // KEYUP\n    this.addEventListener('keyup', e => {\n      if (this.__interactionsAllowed(e) && e.keyCode === 32) {\n        e.preventDefault();\n        this._toggleChecked();\n        this.removeAttribute('active');\n\n        if (this.indeterminate) {\n          this.indeterminate = false;\n        }\n      }\n    });\n  }\n\n  /**\n   * @return {!HTMLInputElement}\n   * @protected\n   */\n  get focusElement() {\n    return this.shadowRoot.querySelector('input');\n  }\n\n  /**\n   * True if users' interactions (mouse or keyboard)\n   * should toggle the checkbox\n   */\n  __interactionsAllowed(e) {\n    if (this.disabled) {\n      return false;\n    }\n\n    // https://github.com/vaadin/vaadin-checkbox/issues/63\n    if (e.target.localName === 'a') {\n      return false;\n    }\n\n    return true;\n  }\n\n  /** @private */\n  _handleClick(e) {\n    if (this.__interactionsAllowed(e)) {\n      if (!this.indeterminate) {\n        if (e.composedPath()[0] !== this._nativeCheckbox) {\n          e.preventDefault();\n          this._toggleChecked();\n        }\n      } else {\n        /*\n         * Required for IE 11 and Edge.\n         * See issue here: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/7344418/\n         */\n        this.indeterminate = false;\n        e.preventDefault();\n        this._toggleChecked();\n      }\n    }\n  }\n\n  /** @protected */\n  _toggleChecked() {\n    this.checked = !this.checked;\n    this.dispatchEvent(new CustomEvent('change', {composed: false, bubbles: true}));\n  }\n\n  /**\n   * Fired when the user commits a value change.\n   *\n   * @event change\n   */\n}\n\ncustomElements.define(CheckboxElement.is, CheckboxElement);\n\nexport { CheckboxElement };\n","import '@vaadin/vaadin-lumo-styles/font-icons.js';\nimport '@vaadin/vaadin-lumo-styles/sizing.js';\nimport '@vaadin/vaadin-lumo-styles/mixins/field-button.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\n\nconst $_documentContainer = html`<dom-module id=\"lumo-number-field\" theme-for=\"vaadin-number-field\">\n  <template>\n    <style include=\"lumo-field-button\">\n      :host {\n        width: 8em;\n      }\n\n      :host([has-controls]:not([theme~=\"align-right\"])) [part=\"value\"] {\n        text-align: center;\n      }\n\n      [part=\"decrease-button\"][disabled],\n      [part=\"increase-button\"][disabled] {\n        opacity: 0.2;\n      }\n\n      :host([has-controls]) [part=\"input-field\"] {\n        padding: 0;\n      }\n\n      [part=\"decrease-button\"],\n      [part=\"increase-button\"] {\n        cursor: pointer;\n        font-size: var(--lumo-icon-size-s);\n        width: 1.6em;\n        height: 1.6em;\n      }\n\n      [part=\"decrease-button\"]::before,\n      [part=\"increase-button\"]::before {\n        margin-top: 0.2em;\n      }\n\n      /* RTL specific styles */\n\n      :host([dir=\"rtl\"]) [part=\"value\"],\n      :host([dir=\"rtl\"]) [part=\"input-field\"] ::slotted(input) {\n        --_lumo-text-field-overflow-mask-image: linear-gradient(to left, transparent, #000 1.25em);\n      }\n    </style>\n  </template>\n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\n","/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport '@polymer/polymer/polymer-element.js';\n\nimport '@polymer/polymer/lib/elements/custom-style.js';\nimport { TextFieldElement } from './vaadin-text-field.js';\nimport { DomModule } from '@polymer/polymer/lib/elements/dom-module.js';\nconst $_documentContainer = document.createElement('template');\n\n$_documentContainer.innerHTML = `<dom-module id=\"vaadin-number-field-template\">\n  <template>\n    <style>\n      :host([readonly]) [part\\$=\"button\"] {\n        pointer-events: none;\n      }\n\n      [part=\"decrease-button\"]::before {\n        content: \"−\";\n      }\n\n      [part=\"increase-button\"]::before {\n        content: \"+\";\n      }\n\n      [part=\"decrease-button\"],\n      [part=\"increase-button\"] {\n        -webkit-user-select: none;\n        -moz-user-select: none;\n        -ms-user-select: none;\n        user-select: none;\n      }\n\n      /* Hide the native arrow icons */\n      [part=\"value\"]::-webkit-outer-spin-button,\n      [part=\"value\"]::-webkit-inner-spin-button {\n        -webkit-appearance: none;\n        margin: 0;\n      }\n\n      [part=\"value\"] {\n        /* Older Firefox versions (v47.0) requires !important */\n        -moz-appearance: textfield !important;\n      }\n\n      :host([dir=\"rtl\"]) [part=\"input-field\"] {\n        direction: ltr;\n      }\n\n      :host([dir=\"rtl\"]) [part=\"value\"]::placeholder {\n        direction: rtl;\n      }\n\n      :host([dir=\"rtl\"]) [part=\"input-field\"] ::slotted(input)::placeholder {\n        direction: rtl;\n      }\n\n      :host([dir=\"rtl\"]) [part=\"value\"]:-ms-input-placeholder,\n      :host([dir=\"rtl\"]) [part=\"input-field\"] ::slotted(input):-ms-input-placeholder {\n        direction: rtl;\n      }\n\n      :host([dir=\"rtl\"]:not([has-controls])) [part=\"value\"]::placeholder {\n        text-align: left;\n      }\n\n      :host([dir=\"rtl\"]:not([has-controls])) [part=\"input-field\"] ::slotted(input)::placeholder {\n        text-align: left;\n      }\n\n      :host([dir=\"rtl\"]:not([has-controls])) [part=\"value\"]:-ms-input-placeholder,\n      :host([dir=\"rtl\"]:not([has-controls])) [part=\"input-field\"] ::slotted(input):-ms-input-placeholder {\n        text-align: left;\n      }\n    </style>\n\n    <div disabled\\$=\"[[!_allowed(-1, value, min, max, step)]]\" part=\"decrease-button\" on-click=\"_decreaseValue\" on-touchend=\"_decreaseButtonTouchend\" hidden\\$=\"[[!hasControls]]\">\n    </div>\n\n    <div disabled\\$=\"[[!_allowed(1, value, min, max, step)]]\" part=\"increase-button\" on-click=\"_increaseValue\" on-touchend=\"_increaseButtonTouchend\" hidden\\$=\"[[!hasControls]]\">\n    </div>\n  </template>\n\n  \n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\nlet memoizedTemplate;\n\n/**\n* `<vaadin-number-field>` is a Web Component for number field control in forms.\n*\n* ```html\n* <vaadin-number-field label=\"Number\">\n* </vaadin-number-field>\n* ```\n*\n* @extends PolymerElement\n* @demo demo/index.html\n*/\nclass NumberFieldElement extends TextFieldElement {\n  static get is() {\n    return 'vaadin-number-field';\n  }\n\n  static get version() {\n    return '2.6.2';\n  }\n\n  static get properties() {\n    return {\n      /**\n      * Set to true to display value increase/decrease controls.\n      */\n      hasControls: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n\n      /**\n      * The minimum value of the field.\n      */\n      min: {\n        type: Number,\n        reflectToAttribute: true,\n        observer: '_minChanged'\n      },\n\n      /**\n       * The maximum value of the field.\n       */\n      max: {\n        type: Number,\n        reflectToAttribute: true,\n        observer: '_maxChanged'\n      },\n\n      /**\n       * Specifies the allowed number intervals of the field.\n       */\n      step: {\n        type: Number,\n        value: 1,\n        observer: '_stepChanged'\n      }\n\n    };\n  }\n\n  ready() {\n    super.ready();\n    this.__previousValidInput = this.value || '';\n    this.inputElement.type = 'number';\n    this.inputElement.addEventListener('change', this.__onInputChange.bind(this));\n  }\n\n  _decreaseButtonTouchend(e) {\n    // Cancel the following click and focus events\n    e.preventDefault();\n    this._decreaseValue();\n  }\n\n  _increaseButtonTouchend(e) {\n    // Cancel the following click and focus events\n    e.preventDefault();\n    this._increaseValue();\n  }\n\n  static get template() {\n    if (!memoizedTemplate) {\n      // Clone the superclass template\n      memoizedTemplate = super.template.cloneNode(true);\n\n      // Retrieve this element's dom-module template\n      const thisTemplate = DomModule.import(this.is + '-template', 'template');\n      const decreaseButton = thisTemplate.content.querySelector('[part=\"decrease-button\"]');\n      const increaseButton = thisTemplate.content.querySelector('[part=\"increase-button\"]');\n      const styles = thisTemplate.content.querySelector('style');\n\n      // Add the buttons and styles to the text-field template\n      const inputField = memoizedTemplate.content.querySelector('[part=\"input-field\"]');\n      const prefixSlot = memoizedTemplate.content.querySelector('[name=\"prefix\"]');\n      inputField.insertBefore(decreaseButton, prefixSlot);\n      inputField.appendChild(increaseButton);\n      memoizedTemplate.content.appendChild(styles);\n    }\n\n    return memoizedTemplate;\n  }\n\n  _createConstraintsObserver() {\n    // NOTE: do not call \"super\" but instead override the method to add extra arguments\n    this._createMethodObserver('_constraintsChanged(required, minlength, maxlength, pattern, min, max, step)');\n  }\n\n  _constraintsChanged(required, minlength, maxlength, pattern, min, max, step) {\n    if (!this.invalid) {\n      return;\n    }\n\n    const isNumUnset = n => (!n && n !== 0);\n\n    if (!isNumUnset(min) || !isNumUnset(max)) {\n      this.validate();\n    } else {\n      super._constraintsChanged(required, minlength, maxlength, pattern);\n    }\n  }\n\n  _decreaseValue() {\n    this._incrementValue(-1);\n  }\n\n  _increaseValue() {\n    this._incrementValue(1);\n  }\n\n  _incrementValue(incr) {\n    if (this.disabled || this.readonly) {\n      return;\n    }\n\n    let value = parseFloat(this.value);\n\n    if (!this.value) {\n      if (this.min == 0 && incr < 0 ||\n          this.max == 0 && incr > 0 ||\n          this.max == 0 && this.min == 0) {\n        incr = 0;\n        value = 0;\n      } else if ((this.max == null || this.max >= 0) &&\n                 (this.min == null || this.min <= 0)) {\n        value = 0;\n      } else if (this.min > 0) {\n        value = this.min;\n        if (this.max < 0 && incr < 0) {\n          value = this.max;\n        }\n        incr = 0;\n      } else if (this.max < 0) {\n        value = this.max;\n        if (incr < 0) {\n          incr = 0;\n        } else {\n          // FIXME(yuriy): find a proper solution to make correct step back\n          if (this._getIncrement(1, value - this.step) > this.max) {\n            value -= 2 * this.step;\n          } else {\n            value -= this.step;\n          }\n        }\n      }\n    } else if (value < this.min) {\n      incr = 0;\n      value = this.min;\n    } else if (value > this.max) {\n      incr = 0;\n      value = this.max;\n    }\n\n    const newValue = this._getIncrement(incr, value);\n    if (!this.value || incr == 0 || this._incrementIsInsideTheLimits(incr, value)) {\n      this._setValue(newValue);\n    }\n  }\n\n  _setValue(value) {\n    this.value = this.inputElement.value = String(parseFloat(value));\n    this.dispatchEvent(new CustomEvent('change', {bubbles: true}));\n  }\n\n  _getIncrement(incr, currentValue) {\n    let step = this.step || 1,\n      min = this.min || 0;\n\n    // To avoid problems with decimal math, multiplying to operate with integers.\n    const multiplier = Math.max(this._getMultiplier(currentValue),\n      this._getMultiplier(step),\n      this._getMultiplier(min));\n\n    step *= multiplier;\n    currentValue = Math.round(currentValue * multiplier);\n    min *= multiplier;\n\n    const margin = (currentValue - min) % step;\n\n    if (incr > 0) {\n      return (currentValue - margin + step) / multiplier;\n    } else if (incr < 0) {\n      return (currentValue - (margin || step)) / multiplier;\n    } else {\n      return currentValue / multiplier;\n    }\n  }\n\n  _getDecimalCount(number) {\n    const s = String(number);\n    const i = s.indexOf('.');\n    return i === -1 ? 1 : s.length - i - 1;\n  }\n\n  _getMultiplier(number) {\n    if (!isNaN(number)) {\n      return Math.pow(10, this._getDecimalCount(number));\n    }\n  }\n\n  _incrementIsInsideTheLimits(incr, value) {\n    if (incr < 0) {\n      return this.min == null || this._getIncrement(incr, value) >= this.min;\n    } else if (incr > 0) {\n      return this.max == null || this._getIncrement(incr, value) <= this.max;\n    } else {\n      return this._getIncrement(incr, value) <= this.max && this._getIncrement(incr, value) >= this.min;\n    }\n  }\n\n  _allowed(sign) {\n    const incr = sign * (this.step || 1);\n    const value = parseFloat(this.value);\n    return !this.value || (!this.disabled && this._incrementIsInsideTheLimits(incr, value));\n  }\n\n  _stepChanged(step) {\n    // Avoid using initial value in validation\n    this.__validateByStep = this.__stepChangedCalled || this.getAttribute('step') !== null;\n    this.inputElement.step = this.__validateByStep ? step : 'any';\n\n    this.__stepChangedCalled = true;\n    this.setAttribute('step', step);\n  }\n\n  _minChanged(min) {\n    this.inputElement.min = min;\n  }\n\n  _maxChanged(max) {\n    this.inputElement.max = max;\n  }\n\n  _valueChanged(newVal, oldVal) {\n    // Validate value to be numeric\n    if (newVal && isNaN(parseFloat(newVal))) {\n      this.value = '';\n    } else if (typeof this.value !== 'string') {\n      this.value = String(this.value);\n    }\n\n    super._valueChanged(this.value, oldVal);\n  }\n\n  _onKeyDown(e) {\n    if (e.keyCode == 38) {\n      e.preventDefault();\n      this._increaseValue();\n    } else if (e.keyCode == 40) {\n      e.preventDefault();\n      this._decreaseValue();\n    }\n    super._onKeyDown(e);\n  }\n\n  __onInputChange() {\n    this.validate();\n  }\n\n  checkValidity() {\n    // text-field mixin does not check against `min`, `max` and `step`\n    if (this.min !== undefined || this.max !== undefined || this.__validateByStep) {\n      return this.inputElement.checkValidity();\n    }\n\n    return super.checkValidity();\n  }\n}\n\nwindow.customElements.define(NumberFieldElement.is, NumberFieldElement);\n\nexport { NumberFieldElement };\n","/**\n@license\nCopyright (c) 2019 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport '@polymer/polymer/polymer-element.js';\n\nimport '@polymer/polymer/lib/elements/custom-style.js';\nimport { NumberFieldElement } from './vaadin-number-field.js';\nconst $_documentContainer = document.createElement('template');\n\n$_documentContainer.innerHTML = `<dom-module id=\"vaadin-integer-field-template\">\n\n  \n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\n\n/**\n* `<vaadin-integer-field>` is a Web Component for integer field control in forms.\n*\n* ```html\n* <vaadin-integer-field label=\"Number\">\n* </vaadin-integer-field>\n* ```\n*\n* @extends PolymerElement\n* @demo demo/index.html\n*/\nclass IntegerFieldElement extends NumberFieldElement {\n  static get is() {\n    return 'vaadin-integer-field';\n  }\n\n  static get version() {\n    return '2.6.2';\n  }\n\n  static get properties() {\n    // Hide inherited props that don't work with <input type=\"number\"> from JSDoc.\n    return {\n      /**\n       * @private\n       */\n      pattern: String,\n      /**\n       * @private\n       */\n      preventInvalidInput: Boolean,\n      /**\n       * @private\n       */\n      minlength: Number,\n      /**\n       * @private\n       */\n      maxlength: Number\n    };\n  }\n\n  ready() {\n    super.ready();\n    this._enabledCharPattern = '[-+\\\\d]';\n  }\n\n  _valueChanged(newVal, oldVal) {\n    if (newVal !== '' && !this.__isInteger(newVal)) {\n      console.warn(`Trying to set non-integer value \"${newVal}\" to <vaadin-integer-field>.`\n        + ` Clearing the value.`);\n      this.value = '';\n      return;\n    }\n    super._valueChanged(newVal, oldVal);\n  }\n\n  _stepChanged(newVal, oldVal) {\n    if (!this.__hasOnlyDigits(newVal)) {\n      console.warn(`Trying to set invalid step size \"${newVal}\",`\n        + ` which is not a positive integer, to <vaadin-integer-field>.`\n        + ` Resetting the default value 1.`);\n      this.step = 1;\n      return;\n    }\n    super._stepChanged(newVal, oldVal);\n  }\n\n  __isInteger(value) {\n    return /^(-\\d)?\\d*$/.test(String(value));\n  }\n\n  __hasOnlyDigits(value) {\n    return /^\\d*$/.test(String(value));\n  }\n}\n\nwindow.customElements.define(IntegerFieldElement.is, IntegerFieldElement);\n\nexport { IntegerFieldElement };\n","import '@vaadin/vaadin-lumo-styles/color.js';\nimport '@vaadin/vaadin-lumo-styles/style.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\n\nconst $_documentContainer = html`<dom-module id=\"lumo-checkbox\" theme-for=\"vaadin-checkbox\">\n  <template>\n    <style include=\"lumo-checkbox-style lumo-checkbox-effects\">\n      /* IE11 only */\n      ::-ms-backdrop,\n      [part=\"checkbox\"] {\n        line-height: 1;\n      }\n    </style>\n  </template>\n</dom-module><dom-module id=\"lumo-checkbox-style\">\n  <template>\n    <style>\n      :host {\n        -webkit-tap-highlight-color: transparent;\n        -webkit-user-select: none;\n        -moz-user-select: none;\n        -ms-user-select: none;\n        user-select: none;\n        cursor: default;\n        outline: none;\n      }\n\n      [part=\"label\"]:not([empty]) {\n        margin: 0.1875em 0.875em 0.1875em 0.375em;\n      }\n\n      [part=\"checkbox\"] {\n        width: calc(1em + 2px);\n        height: calc(1em + 2px);\n        margin: 0.1875em;\n        position: relative;\n        border-radius: var(--lumo-border-radius-s);\n        background-color: var(--lumo-contrast-20pct);\n        transition: transform 0.2s cubic-bezier(.12, .32, .54, 2), background-color 0.15s;\n        pointer-events: none;\n        line-height: 1.2;\n      }\n\n      :host([indeterminate]) [part=\"checkbox\"],\n      :host([checked]) [part=\"checkbox\"] {\n        background-color: var(--lumo-primary-color);\n      }\n\n      /* Needed to align the checkbox nicely on the baseline */\n      [part=\"checkbox\"]::before {\n        content: \"\\\\2003\";\n      }\n\n      /* Checkmark */\n      [part=\"checkbox\"]::after {\n        content: \"\";\n        display: inline-block;\n        width: 0;\n        height: 0;\n        border: 0 solid var(--lumo-primary-contrast-color);\n        border-width: 0.1875em 0 0 0.1875em;\n        box-sizing: border-box;\n        transform-origin: 0 0;\n        position: absolute;\n        top: 0.8125em;\n        left: 0.5em;\n        transform: scale(0.55) rotate(-135deg);\n        opacity: 0;\n      }\n\n      :host([checked]) [part=\"checkbox\"]::after {\n        opacity: 1;\n        width: 0.625em;\n        height: 1.0625em;\n      }\n\n      /* Indeterminate checkmark */\n\n      :host([indeterminate]) [part=\"checkbox\"]::after {\n        transform: none;\n        opacity: 1;\n        top: 45%;\n        height: 10%;\n        left: 22%;\n        right: 22%;\n        width: auto;\n        border: 0;\n        background-color: var(--lumo-primary-contrast-color);\n        transition: opacity 0.25s;\n      }\n\n      /* Focus ring */\n\n      :host([focus-ring]) [part=\"checkbox\"] {\n        box-shadow: 0 0 0 3px var(--lumo-primary-color-50pct);\n      }\n\n      /* Disabled */\n\n      :host([disabled]) {\n        pointer-events: none;\n        color: var(--lumo-disabled-text-color);\n      }\n\n      :host([disabled]) [part=\"label\"] ::slotted(*) {\n        color: inherit;\n      }\n\n      :host([disabled]) [part=\"checkbox\"] {\n        background-color: var(--lumo-contrast-10pct);\n      }\n\n      :host([disabled]) [part=\"checkbox\"]::after {\n        border-color: var(--lumo-contrast-30pct);\n      }\n\n      :host([indeterminate][disabled]) [part=\"checkbox\"]::after {\n        background-color: var(--lumo-contrast-30pct);\n      }\n\n      /* RTL specific styles */\n\n      :host([dir=\"rtl\"]) [part=\"label\"]:not([empty]) {\n        margin: 0.1875em 0.375em 0.1875em 0.875em;\n      }\n    </style>\n  </template>\n</dom-module><dom-module id=\"lumo-checkbox-effects\">\n  <template>\n    <style>\n      /* Transition the checkmark if activated with the mouse (disabled for grid select-all this way) */\n      :host(:hover) [part=\"checkbox\"]::after {\n        transition: width 0.1s, height 0.25s;\n      }\n\n      /* Used for activation \"halo\" */\n      [part=\"checkbox\"]::before {\n        color: transparent;\n        display: inline-block;\n        width: 100%;\n        height: 100%;\n        border-radius: inherit;\n        background-color: inherit;\n        transform: scale(1.4);\n        opacity: 0;\n        transition: transform 0.1s, opacity 0.8s;\n      }\n\n      /* Hover */\n\n      :host(:not([checked]):not([indeterminate]):not([disabled]):hover) [part=\"checkbox\"] {\n        background-color: var(--lumo-contrast-30pct);\n      }\n\n      /* Disable hover for touch devices */\n      @media (pointer: coarse) {\n        :host(:not([checked]):not([indeterminate]):not([disabled]):hover) [part=\"checkbox\"] {\n          background-color: var(--lumo-contrast-20pct);\n        }\n      }\n\n      /* Active */\n\n      :host([active]) [part=\"checkbox\"] {\n        transform: scale(0.9);\n        transition-duration: 0.05s;\n      }\n\n      :host([active][checked]) [part=\"checkbox\"] {\n        transform: scale(1.1);\n      }\n\n      :host([active]:not([checked])) [part=\"checkbox\"]::before {\n        transition-duration: 0.01s, 0.01s;\n        transform: scale(0);\n        opacity: 0.4;\n      }\n    </style>\n  </template>\n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\n","import './theme/lumo/vaadin-checkbox.js';\nexport * from './src/vaadin-checkbox.js';\n","import './theme/lumo/vaadin-text-field.js';\n","import { PolymerElement, html } from \"@polymer/polymer\";\nimport \"@vaadin/vaadin-checkbox\";\nimport \"@vaadin/vaadin-text-field\";\nimport \"@vaadin/vaadin-text-field/vaadin-integer-field\";\nimport \"@vaadin/vaadin-select\";\nimport \"../../dnd-button\";\nimport {\n  getCharacterChannel,\n  getSelectedCharacter,\n  setAbilityUsage,\n  removeAbilityUsage,\n} from \"../../../util/charBuilder\";\nimport { dispatchEditModeChange, getEditModeChannel, isEditMode } from \"../../../util/editMode\";\nimport { cloneDeep, findInPath } from \"../../../js/utils\";\n\nclass DndCharacterBuilderAbilities extends PolymerElement {\n  static get properties() {\n    return {\n      isEditMode: {\n        type: Boolean,\n        value: false,\n      },\n      abilities: {\n        type: Array\n      }\n    };\n  }\n\n  constructor() {\n    super();\n\n    this.resetOptions = ['', 'Short Rest', 'Long Rest'];\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    this.characterChangeHandler = (e) => {\n      let character = e.detail.character;\n      this.updateFromCharacter(character);\n    };\n\n    this.updateFromCharacter(getSelectedCharacter());\n    getCharacterChannel().addEventListener(\n      \"character-selected\",\n      this.characterChangeHandler\n    );\n\n    this.editModeHandler = (e) => {\n      this.isEditMode = e.detail.isEditMode;\n    };\n    getEditModeChannel().addEventListener(\n      \"editModeChange\",\n      this.editModeHandler\n    );\n    this.isEditMode = isEditMode();\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n\n    getCharacterChannel().removeEventListener(\n      \"character-selected\",\n      this.characterChangeHandler\n    );\n    getEditModeChannel().removeEventListener(\n      \"editModeChange\",\n      this.editModeHandler\n    );\n  }\n\n  updateFromCharacter(character) {\n    if (character && character.customAbilities) {\n      this.set('abilities', cloneDeep(character.customAbilities));\n    } else {\n      this.set('abilities', []);\n    }\n\n    this.dispatchEvent(new CustomEvent(\"loadingChange\", { bubbles: true, composed: true }));\n  }\n  \n  _addAbility() {\n    setAbilityUsage({name: '', currentSlots: 0, slots: 1}, this.abilities.length);\n    if (!this.isEditMode) {\n      dispatchEditModeChange(true);\n    }\n    setTimeout(() => {\n      const abilityEls = this.shadowRoot.querySelectorAll('.ability');\n      abilityEls[abilityEls.length - 1].scrollIntoView();\n    }, 1);\n  }\n\n  _deleteAbility(e) {\n    const index = e.model.index;\n    removeAbilityUsage(index);\n  }\n\n  _updateAbility(e) {\n    const index = e.model.index;\n    setAbilityUsage(e.model.item, index);\n  }\n\n  _toggleSlot(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const isInput = findInPath('.checkbox-wrap', e);\n    const item = e.model.item;\n    const maxSlots = item.slots;\n    const index = e.model.index;\n\n    if (typeof item.currentSlots !== 'number') {\n      item.currentSlots = parseInt(item.currentSlots, 10);\n      if (isNaN(item.currentSlots)) {\n        item.currentSlots = 0;\n      }\n    }\n    \n    if (isInput) {\n      const isChecked = isInput.children[0].checked;\n      if (!isChecked && item.currentSlots < maxSlots) {\n        item.currentSlots = item.currentSlots + 1;\n  \n      } else if (item.currentSlots > 0) {\n        item.currentSlots = item.currentSlots - 1;\n      }\n    } else {\n      if (item.currentSlots < maxSlots) {\n        item.currentSlots = item.currentSlots + 1;\n\n      } else if (item.currentSlots > 0) {\n        item.currentSlots = item.currentSlots - 1;\n      }\n    }\n\n    this._setSlotsChecked(item.currentSlots, findInPath('.ability__slots-label-wrap', e));\n    setAbilityUsage(item, index);\n  }\n\n  _setSlotsChecked(count, el) {\n    const checkboxes = el.querySelectorAll('vaadin-checkbox');\n    for (let i = 0; i < checkboxes.length; i++) {\n      if (i < count) {\n        checkboxes[i].checked = true;\n      } else {\n        checkboxes[i].checked = false\n      }\n    }\n  }\n\n  _exists() {\n    for (let arg of arguments) {\n      if (!!arg && (arg.constructor !== Object || Object.entries(arg).length > 0) && (!Array.isArray(arg) || arg.length > 0)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  _countToArray(count) {\n    const data = [];\n    for (var i = 0; i < count; i++) {\n      data.push(null);\n    }\n    return data;\n  }\n\n  _shortRest() {\n    if (this.abilities) {\n      this.abilities.forEach((item, index) => {\n        if (item.reset === 'Short Rest') {\n          item.currentSlots = 0;\n          setAbilityUsage(item, index);\n        }\n      });\n    }\n  }\n\n  _longRest() {\n    if (this.abilities) {\n      this.abilities.forEach((item, index) => {\n        if (item.reset === 'Long Rest') {\n          item.currentSlots = 0;\n          setAbilityUsage(item, index);\n        }\n      });\n    }\n  }\n\n  _isSlotChecked(currentSlots, index) {\n    return index < currentSlots;\n  }\n\n  static get template() {\n    return html`\n      <style include=\"material-styles\">\n        :host {\n          display: block;\n          padding: 14px;\n        }\n        [hidden] {\n          display: none !important;\n        }\n\n        h2 {\n          display: block;\n          font-size: 1.5em;\n          margin-block-start: 0.83em;\n          margin-block-end: 0.83em;\n          margin-inline-start: 0px;\n          margin-inline-end: 0px;\n          font-weight: bold;\n        }\n\n        h3 {\n          font-size: 24px;\n          font-weight: bold;\n          margin-bottom: 8px;\n        }\n\n        .col-wrap {\n          display: flex;\n          justify-content: space-between;\n          flex-wrap: wrap;\n        }\n\n        .heading {\n          width: 100%;\n          display: flex;\n          flex-direction: row;\n          align-items: center;\n          justify-content: space-between;\n          border-bottom: 1px solid var(--lumo-contrast-10pct);\n        }\n        \n        .rest-buttons {\n          display: flex;\n          flex-direction: row;\n          flex-wrap: wrap;\n        }\n\n        .short-rest { \n          margin-left: 10px;\n        }\n\n        .abilities {\n          width: 100%;\n          margin-bottom: 200px;\n        }\n\n        .ability {\n          width: 100%;\n          display: flex;\n          align-items: center;\n          border-bottom: 1px solid var(--mdc-theme-text-divider-on-background);\n          padding: 8px 0;\n          position: relative;\n          flex-wrap: wrap;\n        }\n\n        [edit-mode] .ability__name {\n          width: 100%;\n        }\n\n        .ability__slots-label-wrap {\n          display: flex;\n          align-items: center;\n        }\n\n        .ability__slots-label-wrap vaadin-integer-field {\n          width: 90px;\n        }\n\n        .col-wrap:not([edit-mode]) .ability__slots-wrap {\n          margin-left: auto;\n        }\n\n        .ability__slots {\n          cursor: pointer;\n          display: flex;\n          padding: 4px;\n          max-width: 120px;\n          flex-wrap: wrap;\n        }\n\n        .ability__slots span {\n          -youbkit-touch-callout: none;\n          -youbkit-user-select: none;\n          -moz-user-select: none;\n          -ms-user-select: none;\n          user-select: none;\n        }\n\n        .ability__slots-label {\n          padding-left: 8px;\n          width: 64px;\n          text-align: center;\n          font-size: 12px;\n          line-height: 1.4;\n          user-select: none;\n        }\n\n        .ability__slots-label-suffix {\n          user-select: none;\n          font-size: 16px;\n          padding-left: 6px;\n        }\n\n        .ability__delete {\n          position: absolute;\n          top: 0;\n          right: 0;\n        }\n\n        .add-ability {\n          display: inline-flex;\n        }\n\n        vaadin-checkbox {\n          pointer-events: none;\n        }\n        vaadin-select {\n          margin-right: 10px;\n        }\n\n        @media (min-width: 420px) {\n        }\n\n        @media (min-width: 921px) {\n        }\n      </style>\n\n      <div class=\"col-wrap\" edit-mode$=[[isEditMode]]>\n        <div class=\"heading\">\n          <h2>Abilities</h2>\n          <div class='rest-buttons'>\n            <!-- <dnd-button class=\"long-rest\" label=\"Long Rest\" on-click=\"_longRest\"></dnd-button>\n            <dnd-button class=\"short-rest\" label=\"Short Rest\" on-click=\"_shortRest\"></dnd-button> -->\n            <dnd-button class=\"add-ability link\" edit-mode$=\"[[isEditMode]]\" not-edit-mode$=\"[[!isEditMode]]\" label=\"Add an Ability\" icon=\"edit\"  on-click=\"_addAbility\"></dnd-button>\n          </div>\n        </div>\n\n        <div class=\"abilities\">\n          <template is=\"dom-repeat\" items=\"[[abilities]]\">\n            <div class=\"ability\">\n              <div class=\"ability__name\">\n                <span hidden$=\"[[isEditMode]]\">[[item.name]]<span hidden$=\"[[_exists(item.name)]]\">&lt;No Name&gt;</span></span>\n                <vaadin-text-field theme=\"label--secondary\" hidden$=\"[[!isEditMode]]\" label=\"Name\" value=\"{{item.name}}\" on-change=\"_updateAbility\"></vaadin-text-field>\n              </div>\n\n              <vaadin-select hidden$=\"[[!isEditMode]]\" value=\"{{item.reset}}\" on-change=\"_updateAbility\" label=\"Reset\" >\n                <template>\n                  <vaadin-list-box>\n                    <template is=\"dom-repeat\" items=\"[[resetOptions]]\">\n                      <vaadin-item>[[item]]</vaadin-item>\n                    </template>\n                  </vaadin-list-box>\n                </template>\n              </vaadin-select>\n\n              <div hidden$=\"[[!isEditMode]]\" class=\"ability__usage\">\n                <vaadin-integer-field min=\"1\" value=\"{{item.slots}}\" on-change=\"_updateAbility\" has-controls label=\"Usages\"></vaadin-integer-field>\n              </div>\n              \n              <div class=\"ability__slots-wrap\" hidden$=\"[[isEditMode]]\">\n                <div hidden$=\"[[item.useNumberField]]\" on-click=\"_toggleSlot\" class=\"ability__slots-label-wrap\">\n                  <div class=\"ability__slots\">\n                    <template is='dom-repeat' items='[[_countToArray(item.slots)]]' as=\"thing\">\n                      <span class=\"checkbox-wrap\"><vaadin-checkbox checked=\"[[_isSlotChecked(item.currentSlots, index)]]\"></vaadin-checkbox></span>\n                    </template>\n                  </div>\n                  <span class=\"ability__slots-label\">Uses <span hidden$=\"[[!item.reset]]\"> per </span>[[item.reset]]</span>\n                </div>\n\n                <div hidden$=\"[[!item.useNumberField]]\" class=\"ability__slots-label-wrap\">\n                  <div>\n                    <vaadin-integer-field min=\"0\" max=\"[[item.slots]]\" value=\"{{item.currentSlots}}\" on-change=\"_updateAbility\" has-controls></vaadin-integer-field>\n                    <span class=\"ability__slots-label-suffix\"> / [[item.slots]]</span>\n                  </div>\n                  <span class=\"ability__slots-label\">Uses <span hidden$=\"[[!item.reset]]\"> per </span>[[item.reset]]</span>\n                </div>\n              </div>\n              \n              <dnd-button hidden$=\"[[!isEditMode]]\" class=\"ability__delete link\" icon=\"delete\" on-click=\"_deleteAbility\"></dnd-button>\n\n            </div>\n          </template>\n        </div>\n      </div>\n    `;\n  }\n}\n\ncustomElements.define(\n  \"dnd-character-builder-abilities\",\n  DndCharacterBuilderAbilities\n);\n"],"sourceRoot":""}