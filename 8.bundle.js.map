{"version":3,"sources":["webpack:///./components/dnd-select-add.js","webpack:///./components/dnd-button.js","webpack:///./node_modules/@vaadin/vaadin-text-field/theme/lumo/vaadin-number-field-styles.js","webpack:///./node_modules/@vaadin/vaadin-text-field/src/vaadin-number-field.js","webpack:///./node_modules/@vaadin/vaadin-text-field/src/vaadin-integer-field.js","webpack:///./components/views/character/dnd-character-builder-attributes.js"],"names":["DndSelectAdd","test","type","Boolean","reflectToAttribute","value","options","Array","observer","model","String","addCallback","Function","choices","Number","label","placeholder","multiValue","disabled","this","listBox","remove","$","select","render","isArray","choiceArray","map","v","indexOf","findIndex","o","name","source","filter","selectedValues","i","join","super","ready","setTimeout","async","renderer","root","document","createElement","setAttribute","addEventListener","e","opened","wasPreviouslySelected","srcElement","getAttribute","length","splice","selectedOptions","option","item","textContent","appendChild","_assignMenuElement","valueUpdated","connectedCallback","selectChangeHandler","val","selected","undefined","disconnectedCallback","removeEventListener","a","customElements","define","DndButton","icon","svg","background","border","svgFill","svgStroke","button","result","fill","stroke","$_documentContainer","head","content","memoizedTemplate","innerHTML","hasControls","min","max","step","__previousValidInput","inputElement","__onInputChange","bind","preventDefault","_decreaseValue","_increaseValue","template","cloneNode","thisTemplate","import","is","decreaseButton","querySelector","increaseButton","styles","inputField","prefixSlot","insertBefore","_createMethodObserver","required","minlength","maxlength","pattern","invalid","isNumUnset","n","_constraintsChanged","validate","_incrementValue","incr","readonly","parseFloat","_getIncrement","newValue","_incrementIsInsideTheLimits","_setValue","dispatchEvent","CustomEvent","bubbles","currentValue","multiplier","Math","_getMultiplier","margin","round","number","s","isNaN","pow","_getDecimalCount","sign","__validateByStep","__stepChangedCalled","newVal","oldVal","_valueChanged","keyCode","_onKeyDown","checkValidity","window","preventInvalidInput","_enabledCharPattern","__isInteger","console","warn","__hasOnlyDigits","_stepChanged","str","dex","con","int","wis","cha","strAdj","dexAdj","conAdj","intAdj","wisAdj","chaAdj","attributeProfs","saves","classSkillProfOptions","Object","backgroundSkillProfOptions","defaultBackgroundSkillProf","raceAttributeOptions","defaultRaceAttribute","maxHP","tempHP","isEditMode","hpField","focusElement","blur","parsedVal","parseInt","characterChangeHandler","character","detail","updateAttributesFromCharacter","editModeHandler","attr","setProperties","attributeAdj","raceAttributes","choose","from","toUpperCase","raceAttributeChoices","count","raceAttributeSelections","attribute","toLowerCase","mod","currentHP","hitDice","ac","initiative","speed","composed","adj","b","intA","intB","base","floor","_total","arg","arguments","constructor","entries","element","target","closest","isOpen","classList","contains","isTemp","intField","buttonComp","toggle","changeVal","focus","modifier","key","_toggleButtonField","className","dataset","error","add","search"],"mappings":"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","file":"8.bundle.js","sourcesContent":["import { PolymerElement, html } from '@polymer/polymer';\nimport { mergeFeature } from '../util/charBuilder';\nimport { jqEmpty, util_capitalizeAll } from \"../js/utils\";\nimport \"@vaadin/vaadin-select\";\nimport {loadModel} from \"../util/data\";\n\nclass DndSelectAdd extends PolymerElement {\n  static get properties() {\n    return {\n      test: {\n        type: Boolean,\n        reflectToAttribute: true,\n        value: false\n      },\n      options: {\n        type: Array,\n        observer: \"optionsUpdated\"\n      },\n      model: {\n        type: String\n      },\n      addCallback: {\n        type: Function\n      },\n      value: {\n        type: String,\n        value: \"\",\n        observer: \"valueUpdated\"\n      },\n      choices: {\n        type: Number,\n        observer: \"choicesUpdated\"\n      },\n      label: {\n        type: String\n      },\n      placeholder: {\n        type: String,\n      },\n      multiValue: {\n        type: String,\n        value: \"\"\n      },\n      disabled: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      }\n    }\n  }\n\n  choicesUpdated() {\n    if (this.listBox) {\n      this.listBox.remove();\n      delete this.listBox;\n    }\n    this.$.select.render();\n  }\n\n  optionsUpdated() {\n    if (this.listBox) {\n      this.listBox.remove();\n      delete this.listBox;\n    }\n    this.$.select.render();\n  }\n\n  valueUpdated() {\n    if (this.choices) {\n      if (Array.isArray(this.value) && this.options) {\n        const choiceArray = this.value\n          .map(v => {\n            if (this.options.indexOf(v) !== -1) {\n              return this.options.indexOf(v);\n            } else {\n              return this.options.findIndex((o) => {\n                return o.name === v.name && o.source === v.source;\n              });\n            }\n          })\n          .filter(v => { return v !== -1 });\n\n        if (this.listBox) {\n          this.listBox.selectedValues = choiceArray;\n        }\n        this.multiValue = choiceArray.map(i => {\n          let value = this.options[i];\n          return value.name ? value.name : util_capitalizeAll(value) \n        }).join(\", \");\n      } else {\n        if (this.listBox) {\n          this.listBox.selectedValues = [];\n        }\n        this.multiValue = \"\";\n      }\n    } else {\n      if (this.value && this.options) {\n        if (this.value.name) {\n          this.$.select.value = this.options.findIndex(i => { return i.name === this.value.name || i === this.value.name }) + \"\";\n        } else {\n          this.$.select.value = this.options.findIndex(i => { return i.name === this.value || i === this.value }) + \"\";\n        }\n      } else {\n        this.$.select.value = \"\";\n      }\n    }\n  }\n\n  ready() {\n    super.ready();\n\n    setTimeout(async () => {\n      if (this.model) {\n        this.options = await loadModel(this.model);\n      }\n\n      this.$.select.renderer = (root, select) => {\n        if (!this.listBox) {\n          this.listBox = document.createElement('vaadin-list-box');\n\n          // setting up for multi-select\n          if (this.choices) {\n            this.listBox.setAttribute(\"multiple\", true);\n\n            this.listBox.addEventListener(\"click\", (e) => {\n              select.opened = true;\n              let wasPreviouslySelected = e.srcElement.getAttribute(\"selected\") !== null\n              setTimeout(() => {\n                if (this.listBox.selectedValues.length > this.choices\n                    && !wasPreviouslySelected) {\n                  this.listBox.selectedValues.splice(this.listBox.selectedValues.length - 2, 1)\n                }\n                let selectedOptions = this.listBox.selectedValues.map(v => { return this.options[v] });\n                this.multiValue = selectedOptions.map(o => { return o.name ? o.name : util_capitalizeAll(o) }).join(', ');\n                if (this.addCallback) {\n                  this.addCallback(selectedOptions);\n                }\n              }, 0);\n            });\n\n          }\n\n          // Adding options\n          if (this.options && this.options.length) {\n            for (let i = 0; i < this.options.length; i ++) {\n              const option = this.options[i],\n                item = document.createElement('vaadin-item');\n              if (option.name) {\n                item.textContent = option.name;\n                item.setAttribute(\"value\", i);\n              } else {\n                item.textContent = util_capitalizeAll(option);\n                item.setAttribute(\"value\", i);\n              }\n              this.listBox.appendChild(item);\n            }\n          }\n          root.appendChild(this.listBox);\n          this.$.select._assignMenuElement();\n\n          this.valueUpdated();\n        }\n      };\n    }, 0);\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    this.selectChangeHandler = () => {\n      const val = this.$.select.value;\n      if (val) {\n        if (!this.choices) {\n          const selected = this.options[val];\n          if (this.addCallback) {\n            this.addCallback(selected, this.model);\n          } else {\n            mergeFeature(undefined, selected, this.model);\n          }\n          if (!this.value) {\n            this.$.select.value = \"\";\n          }\n        }\n      }\n    };\n\n    this.$.select.addEventListener(\"change\", this.selectChangeHandler);\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n\n    this.$.select.removeEventListener(\"change\", this.selectChangeHandler);\n  }\n\n  _exists(a) {\n    return !!a;\n  }\n\n  _label(label, choices) {\n    if (label) {\n      if (choices) {\n        return `${label} (${choices})`;\n      } else {\n        return label;\n      }\n    }\n  }\n  \n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: inline-block;\n        }\n        [slot=\"prefix\"] {\n          width: calc(100% - 46px);\n          padding: 12px;\n          line-height: 1.4;\n        }\n        vaadin-select {\n          width: 100%;\n        }\n        .prefix {\n          white-space: normal;\n          color: var(--lumo-body-text-color);\n        }\n      </style>\n      <vaadin-select test$=\"[[test]]\" theme=\"dark\" add id=\"select\" label=\"[[_label(label, choices)]]\" placeholder=\"[[placeholder]]\" disabled$=\"[[disabled]]\">\n        <div hidden$=\"[[!_exists(multiValue)]]\" slot=\"prefix\">\n          <span class=\"prefix\">[[multiValue]]</span>\n        </div>\n      </vaadin-select>\n    `;\n  }\n}\ncustomElements.define('dnd-select-add', DndSelectAdd);","import { PolymerElement, html } from '@polymer/polymer';\nimport { MDCRipple } from '@material/ripple';\nimport { } from '@polymer/polymer/lib/elements/dom-if.js';\nimport \"./dnd-svg\";\n\nclass DndButton extends PolymerElement {\n  static get properties() {\n    return {\n      label: {\n        type: String,\n        value: ''\n      },\n      icon: {\n        type: String,\n        value: ''\n      },\n      svg: {\n        type: String,\n        value: ''\n      },\n      background: {\n        type: String,\n        value: ''\n      },\n      border: {\n        type: String,\n        value: ''\n      },\n      svgFill: {\n        type: String,\n        value: ''\n      },\n      svgStroke: {\n        type: String,\n        value: ''\n      }\n    }\n  }\n\n  connectedCallback() {\n    setTimeout(()=> {\n      this.button = new MDCRipple(this.$.button);\n    }, 10)\n  }\n\n  _exists(i) {\n    return !!i;\n  }\n\n  _styleStr(background, border) {\n    let result = '';\n    if (background) {\n      result+= `background: ${background}; `\n    }\n    if (border) {\n      result+= `border: ${border}; `\n    }\n    return result;\n  }\n\n  _svgStyleStr(fill, stroke) {\n    let result = '';\n    if (fill) {\n      result+= `fill: ${fill}; `\n    }\n    if (stroke) {\n      result+= `stroke: ${stroke}; `\n    }\n    return result;\n  }\n\n  static get template() {\n    return html`\n      <style include=\"material-styles\">\n        .mdc-tab-scroller__scroll-area--scroll {\n          overflow-x: auto;\n          background-color: var(--mdc-theme-surface);\n          border: 1px solid var(--mdc-theme-text-divider-on-background);\n          border-bottom: none;\n        }\n        :host {\n          display: inline;\n          overflow: hidden;\n          white-space: nowrap;\n        }\n        .mdc-button {\n          display: inline-flex;\n          justify-content: center;\n          align-items: center;\n          width: 100%;\n        }\n        .mdc-button .mdc-button__icon {\n          margin-right: 0px;\n          margin-left: 8px;\n        }\n        .mdc-button [background] {\n          background: var(--lumo-contrast-10pct);\n        }\n        dnd-svg {\n          height: 20px;\n          width: 20px;\n          flex-shrink: 0;\n          flex-grow: 0;\n          padding-left: 8px;\n          fill: var(--mdc-theme-primary);\n          stroke: var(--mdc-theme-primary);\n        }\n        i {\n          flex-shrink: 0;\n          flex-grow: 0;\n        }\n        :host(.btn-field__btn) dnd-svg {\n          padding-left: 0;\n        }\n        :host(.btn-field__btn) i {\n          margin-left: 0;\n        }\n        :host(.icon-only) dnd-svg {\n          margin-left: -24px;\n          padding-left: 0;\n        }\n        :host(.icon-only) i {\n          margin-left: -18px;\n          padding-left: 0;\n        }\n      </style>\n      <button id=\"button\" class=\"mdc-button\" style$=\"[[_styleStr(background, border)]]\">\n        <div class=\"mdc-button__ripple\"></div>\n        <span class=\"mdc-button__label\">[[label]]</span>\n        <slot name=\"label\"></slot>\n        <template is=\"dom-if\" if=\"[[_exists(icon)]]\">\n          <i class=\"material-icons mdc-button__icon\" aria-hidden=\"true\">[[icon]]</i>\n        </template>\n        <template is=\"dom-if\" if=\"[[_exists(svg)]]\">\n          <dnd-svg id=\"[[svg]]\" style$=\"[[_svgStyleStr(svgFill, svgStroke)]]\"></dnd-svg>\n        </template>\n      </button>\n    `;\n  }\n\n}\ncustomElements.define('dnd-button', DndButton);","import '@vaadin/vaadin-lumo-styles/font-icons.js';\nimport '@vaadin/vaadin-lumo-styles/sizing.js';\nimport '@vaadin/vaadin-lumo-styles/mixins/field-button.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\n\nconst $_documentContainer = html`<dom-module id=\"lumo-number-field\" theme-for=\"vaadin-number-field\">\n  <template>\n    <style include=\"lumo-field-button\">\n      :host {\n        width: 8em;\n      }\n\n      :host([has-controls]:not([theme~=\"align-right\"])) [part=\"value\"] {\n        text-align: center;\n      }\n\n      [part=\"decrease-button\"][disabled],\n      [part=\"increase-button\"][disabled] {\n        opacity: 0.2;\n      }\n\n      :host([has-controls]) [part=\"input-field\"] {\n        padding: 0;\n      }\n\n      [part=\"decrease-button\"],\n      [part=\"increase-button\"] {\n        cursor: pointer;\n        font-size: var(--lumo-icon-size-s);\n        width: 1.6em;\n        height: 1.6em;\n      }\n\n      [part=\"decrease-button\"]::before,\n      [part=\"increase-button\"]::before {\n        margin-top: 0.2em;\n      }\n\n      /* RTL specific styles */\n\n      :host([dir=\"rtl\"]) [part=\"value\"],\n      :host([dir=\"rtl\"]) [part=\"input-field\"] ::slotted(input) {\n        --_lumo-text-field-overflow-mask-image: linear-gradient(to left, transparent, #000 1.25em);\n      }\n    </style>\n  </template>\n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\n","/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport '@polymer/polymer/polymer-element.js';\n\nimport '@polymer/polymer/lib/elements/custom-style.js';\nimport { TextFieldElement } from './vaadin-text-field.js';\nimport { DomModule } from '@polymer/polymer/lib/elements/dom-module.js';\nconst $_documentContainer = document.createElement('template');\n\n$_documentContainer.innerHTML = `<dom-module id=\"vaadin-number-field-template\">\n  <template>\n    <style>\n      :host([readonly]) [part\\$=\"button\"] {\n        pointer-events: none;\n      }\n\n      [part=\"decrease-button\"]::before {\n        content: \"−\";\n      }\n\n      [part=\"increase-button\"]::before {\n        content: \"+\";\n      }\n\n      [part=\"decrease-button\"],\n      [part=\"increase-button\"] {\n        -webkit-user-select: none;\n        -moz-user-select: none;\n        -ms-user-select: none;\n        user-select: none;\n      }\n\n      /* Hide the native arrow icons */\n      [part=\"value\"]::-webkit-outer-spin-button,\n      [part=\"value\"]::-webkit-inner-spin-button {\n        -webkit-appearance: none;\n        margin: 0;\n      }\n\n      [part=\"value\"] {\n        /* Older Firefox versions (v47.0) requires !important */\n        -moz-appearance: textfield !important;\n      }\n\n      :host([dir=\"rtl\"]) [part=\"input-field\"] {\n        direction: ltr;\n      }\n\n      :host([dir=\"rtl\"]) [part=\"value\"]::placeholder {\n        direction: rtl;\n      }\n\n      :host([dir=\"rtl\"]) [part=\"input-field\"] ::slotted(input)::placeholder {\n        direction: rtl;\n      }\n\n      :host([dir=\"rtl\"]) [part=\"value\"]:-ms-input-placeholder,\n      :host([dir=\"rtl\"]) [part=\"input-field\"] ::slotted(input):-ms-input-placeholder {\n        direction: rtl;\n      }\n\n      :host([dir=\"rtl\"]:not([has-controls])) [part=\"value\"]::placeholder {\n        text-align: left;\n      }\n\n      :host([dir=\"rtl\"]:not([has-controls])) [part=\"input-field\"] ::slotted(input)::placeholder {\n        text-align: left;\n      }\n\n      :host([dir=\"rtl\"]:not([has-controls])) [part=\"value\"]:-ms-input-placeholder,\n      :host([dir=\"rtl\"]:not([has-controls])) [part=\"input-field\"] ::slotted(input):-ms-input-placeholder {\n        text-align: left;\n      }\n    </style>\n\n    <div disabled\\$=\"[[!_allowed(-1, value, min, max, step)]]\" part=\"decrease-button\" on-click=\"_decreaseValue\" on-touchend=\"_decreaseButtonTouchend\" hidden\\$=\"[[!hasControls]]\">\n    </div>\n\n    <div disabled\\$=\"[[!_allowed(1, value, min, max, step)]]\" part=\"increase-button\" on-click=\"_increaseValue\" on-touchend=\"_increaseButtonTouchend\" hidden\\$=\"[[!hasControls]]\">\n    </div>\n  </template>\n\n  \n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\nlet memoizedTemplate;\n\n/**\n* `<vaadin-number-field>` is a Web Component for number field control in forms.\n*\n* ```html\n* <vaadin-number-field label=\"Number\">\n* </vaadin-number-field>\n* ```\n*\n* @extends PolymerElement\n* @demo demo/index.html\n*/\nclass NumberFieldElement extends TextFieldElement {\n  static get is() {\n    return 'vaadin-number-field';\n  }\n\n  static get version() {\n    return '2.6.2';\n  }\n\n  static get properties() {\n    return {\n      /**\n      * Set to true to display value increase/decrease controls.\n      */\n      hasControls: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n\n      /**\n      * The minimum value of the field.\n      */\n      min: {\n        type: Number,\n        reflectToAttribute: true,\n        observer: '_minChanged'\n      },\n\n      /**\n       * The maximum value of the field.\n       */\n      max: {\n        type: Number,\n        reflectToAttribute: true,\n        observer: '_maxChanged'\n      },\n\n      /**\n       * Specifies the allowed number intervals of the field.\n       */\n      step: {\n        type: Number,\n        value: 1,\n        observer: '_stepChanged'\n      }\n\n    };\n  }\n\n  ready() {\n    super.ready();\n    this.__previousValidInput = this.value || '';\n    this.inputElement.type = 'number';\n    this.inputElement.addEventListener('change', this.__onInputChange.bind(this));\n  }\n\n  _decreaseButtonTouchend(e) {\n    // Cancel the following click and focus events\n    e.preventDefault();\n    this._decreaseValue();\n  }\n\n  _increaseButtonTouchend(e) {\n    // Cancel the following click and focus events\n    e.preventDefault();\n    this._increaseValue();\n  }\n\n  static get template() {\n    if (!memoizedTemplate) {\n      // Clone the superclass template\n      memoizedTemplate = super.template.cloneNode(true);\n\n      // Retrieve this element's dom-module template\n      const thisTemplate = DomModule.import(this.is + '-template', 'template');\n      const decreaseButton = thisTemplate.content.querySelector('[part=\"decrease-button\"]');\n      const increaseButton = thisTemplate.content.querySelector('[part=\"increase-button\"]');\n      const styles = thisTemplate.content.querySelector('style');\n\n      // Add the buttons and styles to the text-field template\n      const inputField = memoizedTemplate.content.querySelector('[part=\"input-field\"]');\n      const prefixSlot = memoizedTemplate.content.querySelector('[name=\"prefix\"]');\n      inputField.insertBefore(decreaseButton, prefixSlot);\n      inputField.appendChild(increaseButton);\n      memoizedTemplate.content.appendChild(styles);\n    }\n\n    return memoizedTemplate;\n  }\n\n  _createConstraintsObserver() {\n    // NOTE: do not call \"super\" but instead override the method to add extra arguments\n    this._createMethodObserver('_constraintsChanged(required, minlength, maxlength, pattern, min, max, step)');\n  }\n\n  _constraintsChanged(required, minlength, maxlength, pattern, min, max, step) {\n    if (!this.invalid) {\n      return;\n    }\n\n    const isNumUnset = n => (!n && n !== 0);\n\n    if (!isNumUnset(min) || !isNumUnset(max)) {\n      this.validate();\n    } else {\n      super._constraintsChanged(required, minlength, maxlength, pattern);\n    }\n  }\n\n  _decreaseValue() {\n    this._incrementValue(-1);\n  }\n\n  _increaseValue() {\n    this._incrementValue(1);\n  }\n\n  _incrementValue(incr) {\n    if (this.disabled || this.readonly) {\n      return;\n    }\n\n    let value = parseFloat(this.value);\n\n    if (!this.value) {\n      if (this.min == 0 && incr < 0 ||\n          this.max == 0 && incr > 0 ||\n          this.max == 0 && this.min == 0) {\n        incr = 0;\n        value = 0;\n      } else if ((this.max == null || this.max >= 0) &&\n                 (this.min == null || this.min <= 0)) {\n        value = 0;\n      } else if (this.min > 0) {\n        value = this.min;\n        if (this.max < 0 && incr < 0) {\n          value = this.max;\n        }\n        incr = 0;\n      } else if (this.max < 0) {\n        value = this.max;\n        if (incr < 0) {\n          incr = 0;\n        } else {\n          // FIXME(yuriy): find a proper solution to make correct step back\n          if (this._getIncrement(1, value - this.step) > this.max) {\n            value -= 2 * this.step;\n          } else {\n            value -= this.step;\n          }\n        }\n      }\n    } else if (value < this.min) {\n      incr = 0;\n      value = this.min;\n    } else if (value > this.max) {\n      incr = 0;\n      value = this.max;\n    }\n\n    const newValue = this._getIncrement(incr, value);\n    if (!this.value || incr == 0 || this._incrementIsInsideTheLimits(incr, value)) {\n      this._setValue(newValue);\n    }\n  }\n\n  _setValue(value) {\n    this.value = this.inputElement.value = String(parseFloat(value));\n    this.dispatchEvent(new CustomEvent('change', {bubbles: true}));\n  }\n\n  _getIncrement(incr, currentValue) {\n    let step = this.step || 1,\n      min = this.min || 0;\n\n    // To avoid problems with decimal math, multiplying to operate with integers.\n    const multiplier = Math.max(this._getMultiplier(currentValue),\n      this._getMultiplier(step),\n      this._getMultiplier(min));\n\n    step *= multiplier;\n    currentValue = Math.round(currentValue * multiplier);\n    min *= multiplier;\n\n    const margin = (currentValue - min) % step;\n\n    if (incr > 0) {\n      return (currentValue - margin + step) / multiplier;\n    } else if (incr < 0) {\n      return (currentValue - (margin || step)) / multiplier;\n    } else {\n      return currentValue / multiplier;\n    }\n  }\n\n  _getDecimalCount(number) {\n    const s = String(number);\n    const i = s.indexOf('.');\n    return i === -1 ? 1 : s.length - i - 1;\n  }\n\n  _getMultiplier(number) {\n    if (!isNaN(number)) {\n      return Math.pow(10, this._getDecimalCount(number));\n    }\n  }\n\n  _incrementIsInsideTheLimits(incr, value) {\n    if (incr < 0) {\n      return this.min == null || this._getIncrement(incr, value) >= this.min;\n    } else if (incr > 0) {\n      return this.max == null || this._getIncrement(incr, value) <= this.max;\n    } else {\n      return this._getIncrement(incr, value) <= this.max && this._getIncrement(incr, value) >= this.min;\n    }\n  }\n\n  _allowed(sign) {\n    const incr = sign * (this.step || 1);\n    const value = parseFloat(this.value);\n    return !this.value || (!this.disabled && this._incrementIsInsideTheLimits(incr, value));\n  }\n\n  _stepChanged(step) {\n    // Avoid using initial value in validation\n    this.__validateByStep = this.__stepChangedCalled || this.getAttribute('step') !== null;\n    this.inputElement.step = this.__validateByStep ? step : 'any';\n\n    this.__stepChangedCalled = true;\n    this.setAttribute('step', step);\n  }\n\n  _minChanged(min) {\n    this.inputElement.min = min;\n  }\n\n  _maxChanged(max) {\n    this.inputElement.max = max;\n  }\n\n  _valueChanged(newVal, oldVal) {\n    // Validate value to be numeric\n    if (newVal && isNaN(parseFloat(newVal))) {\n      this.value = '';\n    } else if (typeof this.value !== 'string') {\n      this.value = String(this.value);\n    }\n\n    super._valueChanged(this.value, oldVal);\n  }\n\n  _onKeyDown(e) {\n    if (e.keyCode == 38) {\n      e.preventDefault();\n      this._increaseValue();\n    } else if (e.keyCode == 40) {\n      e.preventDefault();\n      this._decreaseValue();\n    }\n    super._onKeyDown(e);\n  }\n\n  __onInputChange() {\n    this.validate();\n  }\n\n  checkValidity() {\n    // text-field mixin does not check against `min`, `max` and `step`\n    if (this.min !== undefined || this.max !== undefined || this.__validateByStep) {\n      return this.inputElement.checkValidity();\n    }\n\n    return super.checkValidity();\n  }\n}\n\nwindow.customElements.define(NumberFieldElement.is, NumberFieldElement);\n\nexport { NumberFieldElement };\n","/**\n@license\nCopyright (c) 2019 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport '@polymer/polymer/polymer-element.js';\n\nimport '@polymer/polymer/lib/elements/custom-style.js';\nimport { NumberFieldElement } from './vaadin-number-field.js';\nconst $_documentContainer = document.createElement('template');\n\n$_documentContainer.innerHTML = `<dom-module id=\"vaadin-integer-field-template\">\n\n  \n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\n\n/**\n* `<vaadin-integer-field>` is a Web Component for integer field control in forms.\n*\n* ```html\n* <vaadin-integer-field label=\"Number\">\n* </vaadin-integer-field>\n* ```\n*\n* @extends PolymerElement\n* @demo demo/index.html\n*/\nclass IntegerFieldElement extends NumberFieldElement {\n  static get is() {\n    return 'vaadin-integer-field';\n  }\n\n  static get version() {\n    return '2.6.2';\n  }\n\n  static get properties() {\n    // Hide inherited props that don't work with <input type=\"number\"> from JSDoc.\n    return {\n      /**\n       * @private\n       */\n      pattern: String,\n      /**\n       * @private\n       */\n      preventInvalidInput: Boolean,\n      /**\n       * @private\n       */\n      minlength: Number,\n      /**\n       * @private\n       */\n      maxlength: Number\n    };\n  }\n\n  ready() {\n    super.ready();\n    this._enabledCharPattern = '[-+\\\\d]';\n  }\n\n  _valueChanged(newVal, oldVal) {\n    if (newVal !== '' && !this.__isInteger(newVal)) {\n      console.warn(`Trying to set non-integer value \"${newVal}\" to <vaadin-integer-field>.`\n        + ` Clearing the value.`);\n      this.value = '';\n      return;\n    }\n    super._valueChanged(newVal, oldVal);\n  }\n\n  _stepChanged(newVal, oldVal) {\n    if (!this.__hasOnlyDigits(newVal)) {\n      console.warn(`Trying to set invalid step size \"${newVal}\",`\n        + ` which is not a positive integer, to <vaadin-integer-field>.`\n        + ` Resetting the default value 1.`);\n      this.step = 1;\n      return;\n    }\n    super._stepChanged(newVal, oldVal);\n  }\n\n  __isInteger(value) {\n    return /^(-\\d)?\\d*$/.test(String(value));\n  }\n\n  __hasOnlyDigits(value) {\n    return /^\\d*$/.test(String(value));\n  }\n}\n\nwindow.customElements.define(IntegerFieldElement.is, IntegerFieldElement);\n\nexport { IntegerFieldElement };\n","import {PolymerElement, html} from \"@polymer/polymer\";\nimport \"@vaadin/vaadin-text-field/vaadin-integer-field\";\nimport \"../../dnd-select-add\";\nimport \"../../dnd-button\";\nimport \"../../dnd-svg\";\nimport { \n  getCharacterChannel,\n  getSelectedCharacter,\n  updateAttr,\n  getClassSaves,\n  getSkillProfs,\n  getRaceAttributeOptions,\n  getRaceAttributeDefaults,\n  getAttributeScoreModifiers,\n  getMaxHP,\n  getCurrentHP, getTempHp, setCurrentHp,\n  getHitDice,\n  resetHitDice,\n  addTempHp,\n  useHitDice,\n  getCharacterAC,\n  getCharacterInitiative,\n  getCharacterSpeed\n} from \"../../../util/charBuilder\";\nimport { getEditModeChannel, isEditMode } from \"../../../util/editMode\";\nimport { util_capitalizeAll, absInt } from \"../../../js/utils\";\n\nclass DndCharacterBuilderAttributes extends PolymerElement {\n  \n  static get properties() {\n    return {\n      str: {\n        type: Number\n      },\n      dex: {\n        type: Number\n      },\n      con: {\n        type: Number\n      },\n      int: {\n        type: Number\n      },\n      wis: {\n        type: Number\n      },\n      cha: {\n        type: Number\n      },\n      strAdj: {\n        type: Number,\n        value: 0\n      },\n      dexAdj: {\n        type: Number,\n        value: 0\n      },\n      conAdj: {\n        type: Number,\n        value: 0\n      },\n      intAdj: {\n        type: Number,\n        value: 0\n      },\n      wisAdj: {\n        type: Number,\n        value: 0\n      },\n      chaAdj: {\n        type: Number,\n        value: 0\n      },\n      attributeProfs: {\n        type: String,\n        value: \"\"\n      },\n\n      saves: {\n        type: Array,\n        value: []\n      },\n      classSkillProfOptions: {\n        type: Object,\n        value: {}\n      },\n      backgroundSkillProfOptions: {\n        type: Object,\n        value: []\n      },\n      defaultBackgroundSkillProf: {\n        type: String,\n        value: \"\"\n      },\n      raceAttributeOptions: {\n        type: Object,\n        value: []\n      },\n      defaultRaceAttribute: {\n        type: String,\n        value: \"\"\n      },\n      maxHP: {\n        type: Number\n      },\n      tempHP: {\n        type: Number,\n        value: 0\n      },\n      isEditMode: {\n        type: Boolean,\n        value: false\n      }\n    };\n  }\n\n  static get observers() {\n    return [\"updateCharAttr(str, dex, con, int, wis, cha)\"]\n  }\n\n  updateCharAttr(str, dex, con, int, wis, cha) {\n    if (str && dex && con && int && wis && cha) {\n      updateAttr({str, dex, con, int, wis, cha});\n    }\n  }\n\n  hpChangeHandler(e) {\n    this.$.hpField.focusElement.blur();\n  }\n\n  hpBlurHandler(e) {\n    const parsedVal = parseInt(this.$.hpField.value);\n    \n    if (Number.isNaN(parsedVal)) {\n      this.$.hpField.value = getCurrentHP;\n    } else {\n      setCurrentHp(parsedVal);\n    }\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    this.characterChangeHandler = (e) => {\n      let character = e.detail.character;\n      this.updateAttributesFromCharacter(character);\n    };\n    \n    this.updateAttributesFromCharacter(getSelectedCharacter());\n    getCharacterChannel().addEventListener(\"character-selected\", this.characterChangeHandler);\n\n    this.editModeHandler = (e) => {\n      this.isEditMode = e.detail.isEditMode;\n    }\n    getEditModeChannel().addEventListener('editModeChange', this.editModeHandler);\n    this.isEditMode = isEditMode();\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n\n    getCharacterChannel().removeEventListener(\"character-selected\", this.characterChangeHandler);\n    getEditModeChannel().removeEventListener('editModeChange', this.editModeHandler);\n  }\n\n  async updateAttributesFromCharacter(character) {\n    if (character && character.attr) {\n      const attr = character.attr;\n      if (attr.str !== this.str || attr.dex !== this.dex || attr.con !== this.con \n          || attr.int !== this.int || attr.wis !== this.wis || attr.cha !== this.cha) {\n        this.setProperties({\n          str: character.attr.str,\n          dex: character.attr.dex,\n          con: character.attr.con,\n          int: character.attr.int,\n          wis: character.attr.wis,\n          cha: character.attr.cha\n        });\n      }\n\n      this.saves = await getClassSaves();\n\n      // Attributes from Race\n      let attributeAdj = await getAttributeScoreModifiers();\n      let raceAttributes = await getRaceAttributeOptions();\n      if (raceAttributes && raceAttributes.choose) {\n        this.raceAttributeOptions = raceAttributes.choose.from.map(i => { return i.toUpperCase() });\n        this.raceAttributeChoices = raceAttributes.choose.count || 1;\n        this.raceAttributeSelections = character.raceAttributes;\n      } else {\n        this.raceAttributeOptions = undefined;\n        this.raceAttributeChoices = undefined;\n        this.raceAttributeSelections = undefined;\n      }\n      let defaultRaceAttribute = await getRaceAttributeDefaults(raceAttributes);\n      this.defaultRaceAttribute = defaultRaceAttribute\n        .map(e => {\n          let attribute = e[0].toLowerCase(),\n            mod = e[1];\n          return attribute.toUpperCase() + ' ' + absInt(mod);\n        }).join(', ');\n\n      this.strAdj = attributeAdj.str;\n      this.dexAdj = attributeAdj.dex;\n      this.conAdj = attributeAdj.con;\n      this.intAdj = attributeAdj.int;\n      this.wisAdj = attributeAdj.wis;\n      this.chaAdj = attributeAdj.cha;\n\n      this.attributeProfs = (await getSkillProfs()).join(',');\n\n      this.maxHP = await getMaxHP();\n      this.currentHP = await getCurrentHP();\n      this.tempHP = await getTempHp();\n\n      this.hitDice = await getHitDice();\n\n      this.ac = await getCharacterAC();\n\n      this.initiative = await getCharacterInitiative();\n\n      this.speed = await getCharacterSpeed();\n\n      this.dispatchEvent(new CustomEvent(\"loadingChange\", { bubbles: true, composed: true }));\n    }\n  }\n\n  _adjustString(adj) {\n    if (adj !== 0 && adj !== undefined) {\n      return absInt(adj);\n    }\n    return \"\";\n  }\n\n  _total(a, b) {\n    let intA = parseInt(a),\n      intB = parseInt(b);\n\n    intA = isNaN(intA) ? 0 : intA;\n    intB = isNaN(intB) ? 0 : intB;\n\n    return intA + intB;\n  }\n\n  _mod(base, adj) {\n    return absInt(Math.floor((this._total(base, adj) - 10) / 2));\n  }\n\n  _contains(saves, str) {\n    return saves.indexOf(str) > -1;\n  }\n\n  _exists() {\n    for (let arg of arguments) {\n      if (!!arg && (arg.constructor !== Object || Object.entries(arg).length > 0) && (!Array.isArray(arg) || arg.length > 0)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  _editModeClass(isEditMode) {\n    return isEditMode ? 'edit-mode' : 'not-edit-mode';\n  }\n\n  _tempHpStr(tempHP) {\n    return tempHP && typeof tempHP === 'number' && tempHP > 0 ? ` + ${tempHP}` : '';\n  }\n\n  _toggleButtonField(e) {\n    const element = e.target.closest('.btn-field');\n    const isOpen = element.classList.contains('btn-field--open');\n    const isTemp = element.classList.contains('btn-field--temp');\n    const intField = element.querySelector('vaadin-integer-field');\n    const buttonComp = element.querySelector('dnd-button');\n    element.classList.toggle('btn-field--open');\n    buttonComp.classList.toggle('icon-only');\n\n    if (isTemp) {\n      if (isOpen) {\n        const changeVal = parseInt(intField.value);\n        if (changeVal) {\n          addTempHp(parseInt(this.tempHP) + changeVal);\n          intField.value = '';\n        }\n      } else {\n        intField.focus();\n      }\n\n    } else {\n      if (isOpen) {\n        const changeVal = parseInt(intField.value);\n        if (changeVal) {\n          const modifier = element.classList.contains('btn-field--heal') ? 1 : -1;\n          setCurrentHp(parseInt(this.currentHP) + (modifier * changeVal));\n          intField.value = '';\n        }\n      } else {\n        intField.focus();\n      }\n    }\n  }\n\n  _submitButtonField(e) {\n    if (e.key === 'Enter') {\n      this._toggleButtonField(e);\n    }\n  }\n\n  _blurButtonField(e) {\n    this._toggleButtonField(e);\n  }\n\n  _useHitDice(e) {\n    const element = e.target.closest('.hit-dice__item');\n    if (this.currentHP < this.maxHP) {\n      const className = element.dataset.className;\n      console.error(className);\n      useHitDice(className);\n    } else {\n      // flash error\n      element.classList.add('hit-dice__item--error');\n      setTimeout(() => {\n        element.classList.remove('hit-dice__item--error');\n      }, 500);\n    }\n  }\n\n  _strContains(str, search) {\n    return str.indexOf(search) > -1;\n  }\n\n  _resetHitDice(e) {\n    resetHitDice();\n  }\n\n  _triggerShortRest(e) {\n\n  }\n\n  _triggerLongRest(e) {\n\n  }\n\n  static get template() {\n    return html`\n      <style include=\"material-styles\">\n        :host {\n          display: block;\n          padding: 14px;\n        }\n\n        [hidden] {\n          visibility: hidden;\n        }\n\n        .wrap {\n          display: flex;\n          flex-direction: column;\n          justify-content: space-between;\n        }\n        .stats {\n          display: flex;\n          flex-direction: column;\n          min-width: 0;\n        }\n        .attribute-wrap {\n          display: flex;\n          flex-direction: row;\n          min-width: 0;\n        }\n        .health-wrap {\n          display: flex;\n          flex-direction: row;\n          flex-wrap: wrap;\n          min-width: 0;\n          flex-shrink: 0;\n          justify-content: space-between;\n          margin-bottom: 16px;      \n        }\n        .health-wrap > div {\n          width: calc(33% - 8px);\n          max-width: 120px;\n        }\n        .health-wrap > * {\n          margin-bottom: 16px;\n        }\n\n\n        /* Proficiencies */\n        .proficiencies {\n          margin-left: 8px;\n          line-height: 1.4;\n          min-width: 0;\n          position: relative;\n          top: -2px;\n        }\n        .proficiency-item {\n          font-size: 14px;\n          white-space: nowrap;\n          overflow: hidden;\n          text-overflow: ellipsis;\n          position: relative;\n        }\n\n        .proficiency-item::before,\n        .proficiency-item[expertise]::after {\n          content: '';\n          display: inline-block;\n          height: 10px;\n          width: 10px;\n          border: 1px solid var(--mdc-theme-primary);\n          border-radius: 50%;\n          background-color: transparent;\n          margin-right: 8px;\n          position: relative;\n          top: 1px;\n          box-shadow: 0px 0px 10px -4px rgba(0,0,0,0.75);\n        }\n        .proficiency-item[expertise]::after {\n          position: absolute;\n          left: 10px;\n          top: 5px;\n          margin-right: 0;\n          background-color: var(--mdc-theme-primary);\n        }\n        .proficiency-item[expertise]::before {\n          margin-right: 14px;\n        }\n        .proficiency-item[enabled]::before {\n          background-color: var(--mdc-theme-primary);\n        }\n\n\n        /* Stat Box */\n        .stat-box {\n          position: relative;\n          display: inline-flex;\n          flex-direction: column;\n          justify-content: center;\n          align-items: center;\n          background: var(--lumo-contrast-10pct);\n          border-radius: 4px;\n        }\n        .stat-box:not(:last-child) {\n          margin-bottom:16px;\n        }\n        .stat-box__save {\n          position: absolute;\n          height: 12px;\n          width: 12px;\n          border: 2px solid var(--mdc-theme-primary);\n          border-radius: 50%;\n          top: -8px;\n          background-color: #33383C;\n          display: none;\n        }\n        .stat-box__save[enabled] {\n          background-color: var(--mdc-theme-primary);\n          display: block;\n        }\n        .stat-box__mod {\n          font-size: 32px;\n          font-weight: normal;\n          margin: 8px 8px 2px;\n          line-height: 1;\n          position: relative;\n          left: 1px;\n        }\n        .stat-box__footer {\n          display: inline-block;\n        }\n        .stat-box__adj {\n          position: relative;\n          right: 0px;\n        }\n        .not-edit-mode .stat-box__adj {\n          right: 15px;\n          color: var(--lumo-body-text-color);\n          -webkit-text-fill-color: var(--lumo-body-text-color);\n        }\n        .stat-box__side {\n          padding: 8px 0;\n        }\n\n        /* Stat Box HP  */\n        .stat-box--hp {\n          width: calc(66% - 2px) !important;\n          max-width: 236px !important;\n          flex-direction: row;\n          min-width: 160px;\n          justify-content: space-between;\n          flex-wrap: wrap;\n          height: fit-content;\n        }\n        .stat-box__total {\n          font-size: 14px;\n        }\n        .stat-box--hp .stat-box__adj--hp {\n          position: absolute;\n          bottom: -10px;\n          right: 5px;\n          font-size: 16px;\n        }\n        .stat-box--hp .stat-box__footer {\n          width: 100%;\n        }\n        .stat-box__side {\n            flex-wrap: wrap;\n            justify-content: space-between;\n            width: 100%;\n            margin: 8px;\n        }\n        .stat-box--hp .btn-field {\n          margin-top: 12px;\n          width: auto;\n        }\n\n        .stat-box--hp .btn-field:not(:last-child) {\n          margin-bottom: 0px\n        }\n        @media(min-width: 381px) {\n          .stat-box__side {\n            max-width: 80px;\n            margin: 0 8px 0 0;\n          }\n          .stat-box--hp .btn-field {\n            margin-top: 0;\n            width: 100%;\n          }\n          .stat-box--hp .btn-field:not(:last-child) {\n            margin-bottom: 12px\n          }\n        }\n        \n\n\n\n\n        /* Button Field */\n        .btn-field {\n          display: inline-flex;\n          flex-direction: row;\n          flex-wrap: nowrap;\n          width: 100%;\n          height: 36px;\n          background: var(--lumo-contrast-10pct);\n          border-radius: 4px;\n        }\n        .btn-field:not(:last-child){\n          margin-bottom: 12px;\n        }\n        .btn-field__btn {\n          display: block;\n          width: 100%;\n        }\n        .btn-field__input {\n          display: none;\n        }\n        .btn-field .btn-field__btn-label {\n          display: none;\n        }\n        .btn-field--open .btn-field__btn {\n          width: calc(100% - 50px);\n        }\n        .btn-field--open .btn-field__btn-label {\n          width: 0;\n          overflow: hidden;\n        }\n        .btn-field--open .btn-field__input {\n          display: block;\n          width: 50px;\n          margin-top: -40px;\n        }\n        .btn-field--heal.btn-field--open .btn-field__btn-label {\n          margin-left: -8px;\n        }\n        .btn-field vaadin-integer-field {\n          --lumo-contrast-10pct: transparent;\n        }\n        .btn-field__btn-label--temp,\n        .btn-field__btn-label--damage {\n          font-size: 12px;\n        }\n        .btn-field--heal dnd-button {\n          --mdc-theme-primary: #83f675;\n        }\n        .btn-field--dmg dnd-button {\n          --mdc-theme-primary: #f83c42;\n        }\n        .btn-field--temp dnd-button {\n          --mdc-theme-primary: #2069c9;\n        }\n\n\n        /* Hit Dice */\n        .hit-dice {\n          display: flex;\n          flex-direction: column;\n          border-radius: 4px;\n          padding: 6px 0 0;\n          background: var(--lumo-contrast-10pct);\n          margin-bottom: 16px;\n        }\n        .hit-dice__heading {\n          display: inline-block;\n          text-align: center;\n          margin-bottom: 8px;\n          color: var(--mdc-theme-primary);\n          text-transform: uppercase;\n          font-size: 14px;\n        }\n        .hit-dice__item {\n          width: 100%;\n          display: flex;\n          flex-direction: row;\n          flex-wrap: nowrap;\n        }\n        .hit-dice__item dnd-button {\n          width: 100%;\n        }\n        .hit-dice__item--error dnd-button {\n          --mdc-theme-primary: var(--lumo-error-color-50pct);\n        }\n        .hit-dice__item-label {\n          width: 100%;\n          display: flex;\n          justify-content: space-around;\n          align-items: center;\n          padding: 4px 0 0;\n        }\n        .hit-dice__item-label dnd-svg {\n          stroke: var(--mdc-theme-on-primary);\n          fill: var(--mdc-theme-primary);\n          width: 30px;\n        }\n\n        .basic-box {\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n          padding: 4px 0;\n          background: var(--lumo-contrast-10pct);\n          border-radius: 4px;\n        }\n        .basic-box--short {\n          height: fit-content;\n        }\n        .basic-box__label {\n          color: var(--mdc-theme-primary);\n          font-size: 14px;\n        }\n        .basic-box__value {\n          font-size: 18px;\n        }\n        \n\n        /* Rest Buttons */\n        .rest-btn {\n          margin-bottom: 16px;\n        }\n      </style>\n\n      <div class$=\"[[_editModeClass(isEditMode)]]\">\n        <div class=\"wrap\">\n          <div class=\"health-wrap\">\n            <!-- Hit Points -->\n            <div class=\"stat-box stat-box--hp\">\n              <vaadin-integer-field id=\"hpField\" theme=\"hp\" value={{currentHP}} on-change=\"hpBlurHandler\" on-blur=\"hpChangeHandler\" min=\"0\" max=\"[[maxHP]]\" has-controls label=\"Hit Points\">\n                <span class=\"stat-box__adj--hp\" slot=\"suffix\">/ [[maxHP]] [[_tempHpStr(tempHP)]]</span>\n              </vaadin-integer-field>\n              <div class=\"stat-box__side\">\n                <!--  Healing / Damage -->\n                <div class=\"btn-field btn-field--heal\">\n                    <dnd-button icon=\"favorite\" background=\"none\" class=\"btn-field__btn\" on-click=\"_toggleButtonField\"></dnd-button>\n                    <vaadin-integer-field class=\"btn-field__input\" min=\"0\" on-keydown=\"_submitButtonField\" on-blur=\"_blurButtonField\">\n                      <span slot=\"prefix\">+</span>\n                    </vaadin-integer-field>\n                </div>\n                <div class=\"btn-field btn-field--dmg\">\n                    <dnd-button svg=\"swords\" background=\"none\" class=\"btn-field__btn\" on-click=\"_toggleButtonField\"></dnd-button>\n                    <vaadin-integer-field class=\"btn-field__input\" min=\"0\" on-keydown=\"_submitButtonField\" on-blur=\"_blurButtonField\">\n                      <span slot=\"prefix\">-</span>\n                    </vaadin-integer-field>\n                </div>\n                <div class=\"btn-field btn-field--temp\">\n                    <dnd-button svg=\"paladin\" background=\"none\" class=\"btn-field__btn\" on-click=\"_toggleButtonField\"></dnd-button>\n                    <vaadin-integer-field class=\"btn-field__input\" min=\"0\" on-keydown=\"_submitButtonField\" on-blur=\"_blurButtonField\">\n                      <span slot=\"prefix\">+</span>\n                    </vaadin-integer-field>\n                </div>\n              </div>\n            </div>\n\n\n            <!--  Hit Dice -->\n            <div class=\"hit-dice\">\n              <div class=\"hit-dice__heading\">Hit Dice</div>\n              <template is=\"dom-repeat\" items=\"[[hitDice]]\">\n                <div class=\"hit-dice__item\" data-class-name$=\"[[item.className]]\">\n                  <dnd-button on-click=\"_useHitDice\">\n                    <div class=\"hit-dice__item-label\" slot=\"label\">\n                      <dnd-svg id=\"[[item.die]]\"></dnd-svg>\n                      <div class=\"hit-dice__count\">[[item.current]] / [[item.total]]</div>\n                    </div>\n                  </dnd-button>\n                </div>\n              </template>\n              <dnd-button class=\"hit-dice__reset\" label=\"Reset\" on-click=\"_resetHitDice\"></dnd-button>\n            </div>\n\n            <div class=\"basic-box basic-box--short ac\">\n              <div class=\"basic-box__value\">[[ac]]</div>\n              <div class=\"basic-box__label\">AC</div>\n            </div>\n\n            <div class=\"basic-box basic-box--short initiative\">\n              <div class=\"basic-box__value\">[[initiative]]</div>\n              <div class=\"basic-box__label\">Initiative</div>\n            </div>\n\n            <div class=\"basic-box basic-box--short speed\">\n              <div class=\"basic-box__value\">[[speed]]</div>\n              <div class=\"basic-box__label\">Speed</div>\n            </div>\n\n            <!--  Short Rest -->\n            <!-- <dnd-button icon=\"watch\" class=\"rest-btn rest-btn--short\" background=\"var(--lumo-contrast-10pct)\" label=\"Short\" on-click=\"_triggerShortRest\"></dnd-button> -->\n\n            <!--  Long Rest -->\n            <!-- <dnd-button icon=\"watch_later\" class=\"rest-btn rest-btn--long\" background=\"var(--lumo-contrast-10pct)\" label=\"Long\" on-click=\"_triggerLongRest\"></dnd-button> -->\n\n            \n          </div>\n\n          <div class=\"stats\">\n            <!--  Attributes -->\n            <div class=\"attribute-wrap\">\n              <div class=\"stat-box\">\n                <div class=\"stat-box__save\" enabled$=\"[[_contains(saves, 'str')]]\"></div>\n                <div class=\"stat-box__mod\">[[_mod(strAdj, str)]]</div>\n                <div class=\"stat-box__footer\">\n                  <vaadin-integer-field theme=\"mini\" value={{str}} min=\"1\" max=\"20\" has-controls label=\"Strength\" disabled$=\"[[!isEditMode]]\">\n                    <span class=\"stat-box__adj\" slot=\"suffix\">[[_adjustString(strAdj)]]</span>\n                  </vaadin-integer-field>\n                </div>\n              </div>\n              <div class=\"proficiencies\">\n                <div class=\"proficiency-item\" enabled$=\"[[_strContains(attributeProfs, 'athletics')]]\">Athletics</div>\n              </div>\n            </div>\n            <div class=\"attribute-wrap\">\n              <div class=\"stat-box\">\n                <div class=\"stat-box__save\" enabled$=\"[[_contains(saves, 'dex')]]\"></div>\n                <div class=\"stat-box__mod\">[[_mod(dexAdj, dex)]]</div>\n                <div class=\"stat-box__footer\">\n                  <vaadin-integer-field theme=\"mini\" value={{dex}} min=\"1\" max=\"20\" has-controls label=\"Dexterity\" disabled$=\"[[!isEditMode]]\">\n                    <span class=\"stat-box__adj\" slot=\"suffix\">[[_adjustString(dexAdj)]]</span>\n                  </vaadin-integer-field>\n                </div>\n              </div>\n              <div class=\"proficiencies\">\n                <div class=\"proficiency-item\" enabled$=\"[[_strContains(attributeProfs, 'acrobatics')]]\">Acrobatics</div>\n                <div class=\"proficiency-item\" enabled$=\"[[_strContains(attributeProfs, 'slight of hand')]]\">Slight of Hand</div>\n                <div class=\"proficiency-item\" enabled$=\"[[_strContains(attributeProfs, 'stealth')]]\">Stealth</div>\n              </div>\n            </div>\n            <div class=\"attribute-wrap\">\n              <div class=\"stat-box\">\n                <div class=\"stat-box__save\" enabled$=\"[[_contains(saves, 'con')]]\"></div>\n                <div class=\"stat-box__mod\">[[_mod(conAdj, con)]]</div>\n                <div class=\"stat-box__footer\">\n                  <vaadin-integer-field theme=\"mini\" value={{con}} min=\"1\" max=\"20\" has-controls label=\"Constitution\" disabled$=\"[[!isEditMode]]\">\n                    <span class=\"stat-box__adj\" slot=\"suffix\">[[_adjustString(conAdj)]]</span>\n                  </vaadin-integer-field>\n                </div>\n              </div>\n              <div class=\"proficiencies\">\n              \n              </div>\n            </div>\n            <div class=\"attribute-wrap\">\n              <div class=\"stat-box\">\n                <div class=\"stat-box__save\" enabled$=\"[[_contains(saves, 'int')]]\"></div>\n                <div class=\"stat-box__mod\">[[_mod(intAdj, int)]]</div>\n                <div class=\"stat-box__footer\">\n                  <vaadin-integer-field theme=\"mini\" value={{int}} min=\"1\" max=\"20\" has-controls label=\"Intellegence\" disabled$=\"[[!isEditMode]]\">\n                    <span class=\"stat-box__adj\" slot=\"suffix\">[[_adjustString(intAdj)]]</span>\n                  </vaadin-integer-field>\n                </div>\n              </div>\n              <div class=\"proficiencies\">\n                <div class=\"proficiency-item\" enabled$=\"[[_strContains(attributeProfs, 'arcana')]]\">Arcana</div>\n                <div class=\"proficiency-item\" enabled$=\"[[_strContains(attributeProfs, 'history')]]\">History</div>\n                <div class=\"proficiency-item\" enabled$=\"[[_strContains(attributeProfs, 'investigation')]]\">Investigation</div>\n                <div class=\"proficiency-item\" enabled$=\"[[_strContains(attributeProfs, 'nature')]]\">Nature</div>\n                <div class=\"proficiency-item\" enabled$=\"[[_strContains(attributeProfs, 'religion')]]\">Religion</div>\n              </div>\n            </div>\n            <div class=\"attribute-wrap\">\n              <div class=\"stat-box\">\n                <div class=\"stat-box__save\" enabled$=\"[[_contains(saves, 'wis')]]\"></div>\n                <div class=\"stat-box__mod\">[[_mod(wisAdj, wis)]]</div>\n                <div class=\"stat-box__footer\">\n                  <vaadin-integer-field theme=\"mini\" value={{wis}} min=\"1\" max=\"20\" has-controls label=\"Wisdom\" disabled$=\"[[!isEditMode]]\">\n                    <span class=\"stat-box__adj\" slot=\"suffix\">[[_adjustString(wisAdj)]]</span>\n                  </vaadin-integer-field>\n                </div>\n              </div>\n              <div class=\"proficiencies\">\n                <div class=\"proficiency-item\" enabled$=\"[[_strContains(attributeProfs, 'animal handling')]]\">Animal Handling</div>\n                <div class=\"proficiency-item\" enabled$=\"[[_strContains(attributeProfs, 'insight')]]\">Insight</div>\n                <div class=\"proficiency-item\" enabled$=\"[[_strContains(attributeProfs, 'medicine')]]\">Medicine</div>\n                <div class=\"proficiency-item\" enabled$=\"[[_strContains(attributeProfs, 'perception')]]\">Perception</div>\n                <div class=\"proficiency-item\" enabled$=\"[[_strContains(attributeProfs, 'survival')]]\">Survival</div>\n              </div>\n            </div>\n            <div class=\"attribute-wrap\">\n              <div class=\"stat-box\">\n                <div class=\"stat-box__save\" enabled$=\"[[_contains(saves, 'cha')]]\"></div>\n                <div class=\"stat-box__mod\">[[_mod(chaAdj, cha)]]</div>\n                <div class=\"stat-box__footer\">\n                  <vaadin-integer-field theme=\"mini\" value={{cha}} min=\"1\" max=\"20\" has-controls label=\"Charisma\" disabled$=\"[[!isEditMode]]\">\n                    <span class=\"stat-box__adj\" slot=\"suffix\">[[_adjustString(chaAdj)]]</span>\n                  </vaadin-integer-field>\n                </div>\n              </div>\n              <div class=\"proficiencies\">\n                <div class=\"proficiency-item\" enabled$=\"[[_strContains(attributeProfs, 'deception')]]\">Deception</div>\n                <div class=\"proficiency-item\" enabled$=\"[[_strContains(attributeProfs, 'intimidation')]]\">Intimidation</div>\n                <div class=\"proficiency-item\" enabled$=\"[[_strContains(attributeProfs, 'performance')]]\">Performance</div>\n                <div class=\"proficiency-item\" enabled$=\"[[_strContains(attributeProfs, 'persuasion')]]\">Persuasion</div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    `;\n  }\n}\n\ncustomElements.define(\"dnd-character-builder-attributes\", DndCharacterBuilderAttributes);"],"sourceRoot":""}