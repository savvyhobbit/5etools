{"version":3,"sources":["webpack:///./node_modules/@vaadin/number-field/theme/lumo/vaadin-number-field-styles.js","webpack:///./node_modules/@vaadin/number-field/src/vaadin-number-field.js","webpack:///./node_modules/@vaadin/integer-field/src/vaadin-integer-field.js","webpack:///./node_modules/@vaadin/vaadin-text-field/src/vaadin-integer-field.js","webpack:///./data/choices.js","webpack:///./components/views/character/dnd-character-builder-class.js"],"names":["numberField","moduleId","hasControls","type","Boolean","value","reflectToAttribute","stepButtonsVisible","min","Number","max","step","super","delegateProps","constraints","this","_setType","tag","localName","slotStyles","$","clearButton","ready","addController","input","_setInputElement","_setFocusElement","stateTarget","ariaTarget","inputElement","_labelController","_tooltipController","setPosition","checkValidity","invalid","e","preventDefault","_decreaseValue","_increaseValue","_incrementValue","incr","disabled","readonly","parseFloat","_getIncrement","newValue","_incrementIsInsideTheLimits","_setValue","String","dispatchEvent","CustomEvent","bubbles","currentValue","multiplier","Math","_getMultiplier","margin","round","number","s","i","indexOf","length","isNaN","_getDecimalCount","sign","newVal","oldVal","_valueChanged","event","key","_onKeyDown","target","composedPath","_hasInputValue","validity","badInput","customElements","define","is","allowedCharPattern","__isInteger","console","warn","__hasOnlyDigits","_stepChanged","test","classOptionsMap","class","2","name","count","options","5","10","15","20","4","7","11","19","artificer","6","14","18","barbarian","subclasses","3","bard","monk","17","fighter","1","paladin","ranger","sorcerer","warlock","9","12","levels","Array","classes","Object","undefined","noContentMessage","isEditMode","connectedCallback","characterChangeHandler","character","detail","updateFromCharacter","addEventListener","editModeHandler","disconnectedCallback","removeEventListener","error","classLevel","classChoices","_findLevelChoices","composed","hitDiceMaxes","push","index","className","classRef","classFeatures","levelsInClass","levelsInSubclass","classFeaturesForLevel","find","gainSubclassFeature","some","subclassDef","subclassFeatures","map","isSubclass","concat","filter","feature","classLevelFeatures","_getClassLevelFeatures","f","source","choice","isNotSelectedOptionalFeature","selection","isOptionalFeature","from","optionalFeature","id","model","__data","level","lvl","choiceKeysToRemove","keys","choices","startsWith","toLowerCase","splice","forEach","item","levelIndex","__dataHost","expandedIndex","expandedFeatureName","expandedFeatureSource","rowIndex","renderStack","renderer","features","foundFeature","recursiveEntryRender","join","levelChoices","_findChoices","classDef","classLevelCount","subclassChoiceLevel","classSubOptions","additionalSpells","lowestAddtlSpellLevel","addtlSpellSetEntry","entries","addtlSpellTypeKey","addtlSpellTypeValue","addtlSpellLevelKey","addtlSpellLevelValue","spellGainLevel","parseInt","split","skillProficiencies","startingProficiencies","skills","armor","armorProficiencies","p","prof","proficiency","includes","weapons","weaponProficiencies","trim","tools","toolProficiencies","choose","selections","subclassSubOptions","hasExpanded","isArray","subclass","shortName","asiItem","asiChoice","asi","featurei","isClassFeatureVariant","classOptions","classLevelOptions","classLevelOption","sel","opt","hasSubFeature","selectionsArray","subclassLevelOptions","subclassLevelOption","a","b","previousSubclass","classs","adjChoice","c","window","innerWidth","obj","values","data","replace","element","closest","isOpen","classList","contains","intField","querySelector","dataset","changeVal","toggle","add","setTimeout","remove","focus","maxes","_levelHitDice","items","selectedItem","viewId"],"mappings":"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","file":"8.bundle.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport '@vaadin/vaadin-lumo-styles/sizing.js';\nimport { fieldButton } from '@vaadin/vaadin-lumo-styles/mixins/field-button.js';\nimport { inputFieldShared } from '@vaadin/vaadin-lumo-styles/mixins/input-field-shared.js';\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nconst numberField = css`\n  :host {\n    width: 8em;\n  }\n\n  :host([step-buttons-visible]:not([theme~='align-right'])) ::slotted(input),\n  :host([has-controls]:not([theme~='align-right'])) ::slotted(input) {\n    text-align: center;\n  }\n\n  [part$='button'][disabled] {\n    opacity: 0.2;\n  }\n\n  :host([step-buttons-visible]) [part='input-field'],\n  :host([has-controls]) [part='input-field'] {\n    padding: 0;\n  }\n\n  [part\\$='button'] {\n    cursor: pointer;\n    font-size: var(--lumo-icon-size-s);\n    width: 1.6em;\n    height: 1.6em;\n  }\n\n  [part\\$='button']::before {\n    margin-top: 0.3em;\n  }\n\n  [part='decrease-button']::before {\n    content: var(--lumo-icons-minus);\n  }\n\n  [part='increase-button']::before {\n    content: var(--lumo-icons-plus);\n  }\n\n  /* RTL specific styles */\n  :host([dir='rtl']:not([theme~='align-right'])) ::slotted(input) {\n    --_lumo-text-field-overflow-mask-image: linear-gradient(to left, transparent, #000 1.25em);\n  }\n`;\n\nregisterStyles('vaadin-number-field', [inputFieldShared, fieldButton, numberField], {\n  moduleId: 'lumo-number-field',\n});\n","/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport '@vaadin/input-container/src/vaadin-input-container.js';\nimport { html, PolymerElement } from '@polymer/polymer';\nimport { ElementMixin } from '@vaadin/component-base/src/element-mixin.js';\nimport { TooltipController } from '@vaadin/component-base/src/tooltip-controller.js';\nimport { InputController } from '@vaadin/field-base/src/input-controller.js';\nimport { InputFieldMixin } from '@vaadin/field-base/src/input-field-mixin.js';\nimport { LabelledInputController } from '@vaadin/field-base/src/labelled-input-controller.js';\nimport { inputFieldShared } from '@vaadin/field-base/src/styles/input-field-shared-styles.js';\nimport { registerStyles, ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nregisterStyles('vaadin-number-field', inputFieldShared, { moduleId: 'vaadin-number-field-styles' });\n\n/**\n * `<vaadin-number-field>` is an input field web component that only accepts numeric input.\n *\n * ```html\n * <vaadin-number-field label=\"Balance\"></vaadin-number-field>\n * ```\n *\n * ### Styling\n *\n * `<vaadin-number-field>` provides the same set of shadow DOM parts and state attributes as `<vaadin-text-field>`.\n * See [`<vaadin-text-field>`](#/elements/vaadin-text-field) for the styling documentation.\n *\n * In addition to `<vaadin-text-field>` parts, the following parts are available for theming:\n *\n * Part name         | Description\n * ------------------|-------------------------\n * `increase-button` | Increase (\"plus\") button\n * `decrease-button` | Decrease (\"minus\") button\n *\n * Note, the `input-prevented` state attribute is only supported when `allowedCharPattern` is set.\n *\n * See [Styling Components](https://vaadin.com/docs/latest/styling/custom-theme/styling-components) documentation.\n *\n * @fires {Event} input - Fired when the value is changed by the user: on every typing keystroke, and the value is cleared using the clear button.\n * @fires {Event} change - Fired when the user commits a value change.\n * @fires {CustomEvent} invalid-changed - Fired when the `invalid` property changes.\n * @fires {CustomEvent} value-changed - Fired when the `value` property changes.\n * @fires {CustomEvent} validated - Fired whenever the field is validated.\n *\n * @extends HTMLElement\n * @mixes InputFieldMixin\n * @mixes SlotStylesMixin\n * @mixes ElementMixin\n * @mixes ThemableMixin\n */\nexport class NumberField extends InputFieldMixin(ThemableMixin(ElementMixin(PolymerElement))) {\n  static get is() {\n    return 'vaadin-number-field';\n  }\n\n  static get template() {\n    return html`\n      <style>\n        :host([readonly]) [part$='button'] {\n          pointer-events: none;\n        }\n\n        [part='decrease-button']::before {\n          content: '−';\n        }\n\n        [part='increase-button']::before {\n          content: '+';\n        }\n\n        [part='decrease-button'],\n        [part='increase-button'] {\n          -webkit-user-select: none;\n          -moz-user-select: none;\n          user-select: none;\n        }\n\n        :host([dir='rtl']) [part='input-field'] {\n          direction: ltr;\n        }\n      </style>\n\n      <div class=\"vaadin-field-container\">\n        <div part=\"label\">\n          <slot name=\"label\"></slot>\n          <span part=\"required-indicator\" aria-hidden=\"true\" on-click=\"focus\"></span>\n        </div>\n\n        <vaadin-input-container\n          part=\"input-field\"\n          readonly=\"[[readonly]]\"\n          disabled=\"[[disabled]]\"\n          invalid=\"[[invalid]]\"\n          theme$=\"[[_theme]]\"\n        >\n          <div\n            disabled$=\"[[!_allowed(-1, value, min, max, step)]]\"\n            part=\"decrease-button\"\n            on-click=\"_decreaseValue\"\n            on-touchend=\"_decreaseButtonTouchend\"\n            hidden$=\"[[!_isStepButtonVisible(hasControls, stepButtonsVisible)]]\"\n            aria-hidden=\"true\"\n            slot=\"prefix\"\n          ></div>\n          <slot name=\"prefix\" slot=\"prefix\"></slot>\n          <slot name=\"input\"></slot>\n          <slot name=\"suffix\" slot=\"suffix\"></slot>\n          <div id=\"clearButton\" part=\"clear-button\" slot=\"suffix\" aria-hidden=\"true\"></div>\n          <div\n            disabled$=\"[[!_allowed(1, value, min, max, step)]]\"\n            part=\"increase-button\"\n            on-click=\"_increaseValue\"\n            on-touchend=\"_increaseButtonTouchend\"\n            hidden$=\"[[!_isStepButtonVisible(hasControls, stepButtonsVisible)]]\"\n            aria-hidden=\"true\"\n            slot=\"suffix\"\n          ></div>\n        </vaadin-input-container>\n\n        <div part=\"helper-text\">\n          <slot name=\"helper\"></slot>\n        </div>\n\n        <div part=\"error-message\">\n          <slot name=\"error-message\"></slot>\n        </div>\n      </div>\n\n      <slot name=\"tooltip\"></slot>\n    `;\n  }\n\n  static get properties() {\n    return {\n      /**\n       * Set to true to display value increase/decrease controls.\n       * @attr {boolean} has-controls\n       * @deprecated since 23.3.\n       * Use [`stepButtonsVisible`](#/elements/vaadin-number-field#property-stepButtonsVisible) instead\n       */\n      hasControls: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true,\n      },\n\n      /**\n       * Set to true to show increase/decrease buttons.\n       * @attr {boolean} step-buttons-visible\n       */\n      stepButtonsVisible: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true,\n      },\n\n      /**\n       * The minimum value of the field.\n       */\n      min: {\n        type: Number,\n      },\n\n      /**\n       * The maximum value of the field.\n       */\n      max: {\n        type: Number,\n      },\n\n      /**\n       * Specifies the allowed number intervals of the field.\n       * @type {number}\n       */\n      step: {\n        type: Number,\n      },\n    };\n  }\n\n  static get observers() {\n    return ['_stepChanged(step, inputElement)'];\n  }\n\n  static get delegateProps() {\n    return [...super.delegateProps, 'min', 'max'];\n  }\n\n  static get constraints() {\n    return [...super.constraints, 'min', 'max', 'step'];\n  }\n\n  constructor() {\n    super();\n    this._setType('number');\n  }\n\n  /** @protected */\n  get slotStyles() {\n    const tag = this.localName;\n    return [\n      ...super.slotStyles,\n      `\n        ${tag} input[type=\"number\"]::-webkit-outer-spin-button,\n        ${tag} input[type=\"number\"]::-webkit-inner-spin-button {\n          -webkit-appearance: none;\n          margin: 0;\n        }\n\n        ${tag} input[type=\"number\"] {\n          -moz-appearance: textfield;\n        }\n\n        ${tag}[dir='rtl'] input[type=\"number\"]::placeholder {\n          direction: rtl;\n        }\n\n        ${tag}[dir='rtl']:not([step-buttons-visible]):not([has-controls]) input[type=\"number\"]::placeholder {\n          text-align: left;\n        }\n      `,\n    ];\n  }\n\n  /**\n   * Used by `InputControlMixin` as a reference to the clear button element.\n   * @protected\n   */\n  get clearElement() {\n    return this.$.clearButton;\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n\n    this.addController(\n      new InputController(this, (input) => {\n        this._setInputElement(input);\n        this._setFocusElement(input);\n        this.stateTarget = input;\n        this.ariaTarget = input;\n      }),\n    );\n\n    this.addController(new LabelledInputController(this.inputElement, this._labelController));\n\n    this._tooltipController = new TooltipController(this);\n    this.addController(this._tooltipController);\n    this._tooltipController.setPosition('top');\n  }\n\n  /**\n   * Override the method from `InputConstraintsMixin`\n   * to enforce HTML constraint validation even if\n   * the user didn't add any constraints explicitly:\n   * the field has to be regardless checked for bad input.\n   *\n   * @override\n   */\n  checkValidity() {\n    if (this.inputElement) {\n      return this.inputElement.checkValidity();\n    }\n\n    return !this.invalid;\n  }\n\n  /** @private */\n  _decreaseButtonTouchend(e) {\n    // Cancel the following click and focus events\n    e.preventDefault();\n    this._decreaseValue();\n  }\n\n  /** @private */\n  _increaseButtonTouchend(e) {\n    // Cancel the following click and focus events\n    e.preventDefault();\n    this._increaseValue();\n  }\n\n  /** @private */\n  _decreaseValue() {\n    this._incrementValue(-1);\n  }\n\n  /** @private */\n  _increaseValue() {\n    this._incrementValue(1);\n  }\n\n  /** @private */\n  _incrementValue(incr) {\n    if (this.disabled || this.readonly) {\n      return;\n    }\n\n    const step = this.step || 1;\n    let value = parseFloat(this.value);\n\n    if (!this.value) {\n      if ((this.min === 0 && incr < 0) || (this.max === 0 && incr > 0) || (this.max === 0 && this.min === 0)) {\n        incr = 0;\n        value = 0;\n      } else if ((this.max == null || this.max >= 0) && (this.min == null || this.min <= 0)) {\n        value = 0;\n      } else if (this.min > 0) {\n        value = this.min;\n        if (this.max < 0 && incr < 0) {\n          value = this.max;\n        }\n        incr = 0;\n      } else if (this.max < 0) {\n        value = this.max;\n        if (incr < 0) {\n          incr = 0;\n        } else if (this._getIncrement(1, value - step) > this.max) {\n          value -= 2 * step;\n          // FIXME(yuriy): find a proper solution to make correct step back\n        } else {\n          value -= step;\n        }\n      }\n    } else if (value < this.min) {\n      incr = 0;\n      value = this.min;\n    } else if (value > this.max) {\n      incr = 0;\n      value = this.max;\n    }\n\n    const newValue = this._getIncrement(incr, value);\n    if (!this.value || incr === 0 || this._incrementIsInsideTheLimits(incr, value)) {\n      this._setValue(newValue);\n    }\n  }\n\n  /** @private */\n  _setValue(value) {\n    this.value = this.inputElement.value = String(parseFloat(value));\n    this.dispatchEvent(new CustomEvent('change', { bubbles: true }));\n  }\n\n  /** @private */\n  _getIncrement(incr, currentValue) {\n    let step = this.step || 1,\n      min = this.min || 0;\n\n    // To avoid problems with decimal math, multiplying to operate with integers.\n    const multiplier = Math.max(this._getMultiplier(currentValue), this._getMultiplier(step), this._getMultiplier(min));\n\n    step *= multiplier;\n    currentValue = Math.round(currentValue * multiplier);\n    min *= multiplier;\n\n    const margin = (currentValue - min) % step;\n\n    if (incr > 0) {\n      return (currentValue - margin + step) / multiplier;\n    } else if (incr < 0) {\n      return (currentValue - (margin || step)) / multiplier;\n    }\n    return currentValue / multiplier;\n  }\n\n  /** @private */\n  _getDecimalCount(number) {\n    const s = String(number);\n    const i = s.indexOf('.');\n    return i === -1 ? 1 : s.length - i - 1;\n  }\n\n  /** @private */\n  _getMultiplier(number) {\n    if (!isNaN(number)) {\n      return 10 ** this._getDecimalCount(number);\n    }\n  }\n\n  /** @private */\n  _incrementIsInsideTheLimits(incr, value) {\n    if (incr < 0) {\n      return this.min == null || this._getIncrement(incr, value) >= this.min;\n    } else if (incr > 0) {\n      return this.max == null || this._getIncrement(incr, value) <= this.max;\n    }\n    return this._getIncrement(incr, value) <= this.max && this._getIncrement(incr, value) >= this.min;\n  }\n\n  /** @private */\n  _allowed(sign) {\n    const incr = sign * (this.step || 1);\n    const value = parseFloat(this.value);\n    return !this.value || (!this.disabled && this._incrementIsInsideTheLimits(incr, value));\n  }\n\n  /**\n   * @param {number} step\n   * @param {HTMLElement | undefined} inputElement\n   * @protected\n   */\n  _stepChanged(step, inputElement) {\n    if (inputElement) {\n      inputElement.step = step || 'any';\n    }\n  }\n\n  /**\n   * @param {unknown} newVal\n   * @param {unknown} oldVal\n   * @protected\n   * @override\n   */\n  _valueChanged(newVal, oldVal) {\n    // Validate value to be numeric\n    if (newVal && isNaN(parseFloat(newVal))) {\n      this.value = '';\n    } else if (typeof this.value !== 'string') {\n      this.value = String(this.value);\n    }\n\n    super._valueChanged(this.value, oldVal);\n  }\n\n  /**\n   * Override an event listener from `InputControlMixin`\n   * to avoid adding a separate listener.\n   * @param {!KeyboardEvent} event\n   * @protected\n   * @override\n   */\n  _onKeyDown(event) {\n    if (event.key === 'ArrowUp') {\n      event.preventDefault();\n      this._increaseValue();\n    } else if (event.key === 'ArrowDown') {\n      event.preventDefault();\n      this._decreaseValue();\n    }\n\n    super._onKeyDown(event);\n  }\n\n  /**\n   * Determines whether to hide the increase / decrease buttons based on the\n   * deprecated `hasControls` property, and the replacement `stepButtonsVisible`\n   * property\n   * @private\n   */\n  _isStepButtonVisible(hasControls, stepButtonsVisible) {\n    return hasControls || stepButtonsVisible;\n  }\n\n  /**\n   * Native [type=number] inputs don't update their value\n   * when you are entering input that the browser is unable to parse\n   * e.g. \"--5\", hence we have to override this method from `InputMixin`\n   * so that, when value is empty, it would additionally check\n   * for bad input based on the native `validity.badInput` property.\n   *\n   * @param {InputEvent} event\n   * @protected\n   * @override\n   */\n  _setHasInputValue(event) {\n    const target = event.composedPath()[0];\n    this._hasInputValue = target.value.length > 0 || target.validity.badInput;\n  }\n}\n\ncustomElements.define(NumberField.is, NumberField);\n","/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { NumberField } from '@vaadin/number-field/src/vaadin-number-field.js';\n\n/**\n * `<vaadin-integer-field>` is an input field web component that only accepts entering integer numbers.\n *\n * ```html\n * <vaadin-integer-field label=\"X\"></vaadin-integer-field>\n * ```\n *\n * ### Styling\n *\n * `<vaadin-integer-field>` provides the same set of shadow DOM parts and state attributes as `<vaadin-text-field>`.\n * See [`<vaadin-text-field>`](#/elements/vaadin-text-field) for the styling documentation.\n *\n * In addition to `<vaadin-text-field>` parts, the following parts are available for theming:\n *\n * Part name         | Description\n * ------------------|-------------------------\n * `increase-button` | Increase (\"plus\") button\n * `decrease-button` | Decrease (\"minus\") button\n *\n * See [Styling Components](https://vaadin.com/docs/latest/styling/custom-theme/styling-components) documentation.\n *\n * @fires {Event} input - Fired when the value is changed by the user: on every typing keystroke, and the value is cleared using the clear button.\n * @fires {Event} change - Fired when the user commits a value change.\n * @fires {CustomEvent} invalid-changed - Fired when the `invalid` property changes.\n * @fires {CustomEvent} value-changed - Fired when the `value` property changes.\n * @fires {CustomEvent} validated - Fired whenever the field is validated.\n *\n * @extends NumberField\n */\nexport class IntegerField extends NumberField {\n  static get is() {\n    return 'vaadin-integer-field';\n  }\n\n  constructor() {\n    super();\n\n    this.allowedCharPattern = '[-+\\\\d]';\n  }\n\n  /**\n   * Override an observer from `InputMixin` to clear the value\n   * when trying to type invalid characters.\n   * @param {string | undefined} newVal\n   * @param {string | undefined} oldVal\n   * @protected\n   * @override\n   */\n  _valueChanged(newVal, oldVal) {\n    if (newVal !== '' && !this.__isInteger(newVal)) {\n      console.warn(`Trying to set non-integer value \"${newVal}\" to <vaadin-integer-field>. Clearing the value.`);\n      this.value = '';\n      return;\n    }\n    super._valueChanged(newVal, oldVal);\n  }\n\n  /**\n   * Override an observer from `NumberField` to reset the step\n   * property when an invalid step is set.\n   * @param {number} newVal\n   * @param {HTMLElement | undefined} inputElement\n   * @protected\n   * @override\n   */\n  _stepChanged(step, inputElement) {\n    if (step != null && !this.__hasOnlyDigits(step)) {\n      console.warn(\n        `<vaadin-integer-field> The \\`step\\` property must be a positive integer but \\`${step}\\` was provided, so the property was reset to \\`null\\`.`,\n      );\n      this.step = null;\n      return;\n    }\n\n    super._stepChanged(step, inputElement);\n  }\n\n  /** @private */\n  __isInteger(value) {\n    return /^(-\\d)?\\d*$/.test(String(value));\n  }\n\n  /** @private */\n  __hasOnlyDigits(value) {\n    return /^\\d+$/.test(String(value));\n  }\n}\n\ncustomElements.define(IntegerField.is, IntegerField);\n","/**\n * @license\n * Copyright (c) 2017 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { IntegerField } from '@vaadin/integer-field/src/vaadin-integer-field.js';\n\n/**\n * @deprecated Import `IntegerField` from `@vaadin/integer-field` instead.\n */\nexport const IntegerFieldElement = IntegerField;\n\nexport * from '@vaadin/integer-field/src/vaadin-integer-field.js';\n\nconsole.warn(\n  'WARNING: Since Vaadin 23.2, \"@vaadin/vaadin-text-field\" is deprecated. Use \"@vaadin/integer-field\" instead.',\n);\n","export const classOptionsMap = {\n  \"artificer(ua)\": {\n    class: {\n      2: {\n        name: \"Wonderous Invention\",\n        count: 1,\n        options: [\"{@item Bag of holding}\", \"{@item cap of water breathing}\", \"{@item driftglobe}\", \"{@item goggles of night}\", \"{@item sending stones}\"]\n      },\n      5: {\n        name: \"Wonderous Invention\",\n        count: 1,\n        options: [\"{@item Alchemy jug}\", \"{@item helm of comprehending languages}\", \"{@item lantern of revealing}\", \"{@item ring of swimming}\", \"{@item robe of useful items}\", \"{@item rope of climbing}\", \"{@item wand of magic detection}\", \"{@item wand of secrets}\", \"{@item Bag of holding}\", \"{@item cap of water breathing}\", \"{@item driftglobe}\", \"{@item goggles of night}\", \"{@item sending stones}\"]\n      },\n      10: {\n        name: \"Wonderous Invention\",\n        count: 1,\n        options: [\"{@item Bag of beans}\", \"{@item chime of opening}\", \"{@item decanter of endless water}\", \"{@item eyes of minute seeing}\", \"{@item folding boat}\", \"{@item Heward's handy haversack}\", \"{@item Alchemy jug}\", \"{@item helm of comprehending languages}\", \"{@item lantern of revealing}\", \"{@item ring of swimming}\", \"{@item robe of useful items}\", \"{@item rope of climbing}\", \"{@item wand of magic detection}\", \"{@item wand of secrets}\", \"{@item Bag of holding}\", \"{@item cap of water breathing}\", \"{@item driftglobe}\", \"{@item goggles of night}\", \"{@item sending stones}\"]\n      },\n      15: {\n        name: \"Wonderous Invention\",\n        count: 1,\n        options: [\"{@item Boots of striding and springing}\", \"{@item bracers of archery}\", \"{@item brooch of shielding}\", \"{@item broom of flying}\", \"{@item hat of disguise}\", \"{@item slippers of spider climbing}\", \"{@item Bag of beans}\", \"{@item chime of opening}\", \"{@item decanter of endless water}\", \"{@item eyes of minute seeing}\", \"{@item folding boat}\", \"{@item Heward's handy haversack}\", \"{@item Alchemy jug}\", \"{@item helm of comprehending languages}\", \"{@item lantern of revealing}\", \"{@item ring of swimming}\", \"{@item robe of useful items}\", \"{@item rope of climbing}\", \"{@item wand of magic detection}\", \"{@item wand of secrets}\", \"{@item Bag of holding}\", \"{@item cap of water breathing}\", \"{@item driftglobe}\", \"{@item goggles of night}\", \"{@item sending stones}\"]\n      },\n      20: {\n        name: \"Wonderous Invention\",\n        count: 1,\n        options: [\"{@item Eyes of the eagle}\", \"{@item gem of brightness}\", \"{@item gloves of missile snaring}\", \"{@item gloves of swimming and climbing}\", \"{@item ring of jumping}\", \"{@item ring of mind shielding}\", \"{@item wings of flying}\", \"{@item Boots of striding and springing}\", \"{@item bracers of archery}\", \"{@item brooch of shielding}\", \"{@item broom of flying}\", \"{@item hat of disguise}\", \"{@item slippers of spider climbing}\", \"{@item Bag of beans}\", \"{@item chime of opening}\", \"{@item decanter of endless water}\", \"{@item eyes of minute seeing}\", \"{@item folding boat}\", \"{@item Heward's handy haversack}\", \"{@item Alchemy jug}\", \"{@item helm of comprehending languages}\", \"{@item lantern of revealing}\", \"{@item ring of swimming}\", \"{@item robe of useful items}\", \"{@item rope of climbing}\", \"{@item wand of magic detection}\", \"{@item wand of secrets}\", \"{@item Bag of holding}\", \"{@item cap of water breathing}\", \"{@item driftglobe}\", \"{@item goggles of night}\", \"{@item sending stones}\"]\n      }\n    }\n  },\n  \"artificer (revisited)\": {\n    class: {\n      2: {\n        name: \"Infuse Item\",\n        count: 3,\n        type: \"featureType=ai|source=UAArtificerRevisited\"\n      },\n      4: {\n        name: \"Infuse Item\",\n        count: 1,\n        type: \"featureType=ai|source=UAArtificerRevisited\"\n      },\n      7: {\n        name: \"Infuse Item\",\n        count: 1,\n        type: \"featureType=ai|source=UAArtificerRevisited\"\n      },\n      11: {\n        name: \"Infuse Item\",\n        count: 1,\n        type: \"featureType=ai|source=UAArtificerRevisited\"\n      },\n      15: {\n        name: \"Infuse Item\",\n        count: 1,\n        type: \"featureType=ai|source=UAArtificerRevisited\"\n      },\n      19: {\n        name: \"Infuse Item\",\n        count: 1,\n        type: \"featureType=ai|source=UAArtificerRevisited\"\n      }\n    }\n  },\n  artificer: {\n    class: {\n      2: {\n        name: \"Infuse Item\",\n        count: 4,\n        type: \"featureType=ai|source=TCE\"\n      },\n      6: {\n        name: \"Infuse Item\",\n        count: 2,\n        type: \"featureType=ai|source=TCE\"\n      },\n      10: {\n        name: \"Infuse Item\",\n        count: 2,\n        type: \"featureType=ai|source=TCE\"\n      },\n      14: {\n        name: \"Infuse Item\",\n        count: 2,\n        type: \"featureType=ai|source=TCE\"\n      },\n      18: {\n        name: \"Infuse Item\",\n        count: 2,\n        type: \"featureType=ai|source=TCE\"\n      }\n    }\n  },\n  barbarian: {\n    subclasses: {\n      \"Path of the Totem Warrior\": {\n        3: {\n          name: \"Totem Spirit\",\n          count: 1,\n          options: [\"Bear\", \"Eagle\", \"Elk\", \"Tiger\", \"Wolf\"]\n        },\n        6: {\n          name: \"Aspect of the Beast\",\n          count: 1,\n          options: [\"Bear\", \"Eagle\", \"Elk\", \"Tiger\", \"Wolf\"]\n        },\n        14: {\n          name: \"Totemic Attunement\",\n          count: 1,\n          options: [\"Bear\", \"Eagle\", \"Elk\", \"Tiger\", \"Wolf\"]\n        }\n      }\n    }\n  },\n  bard: {\n    subclasses: {\n      \"College of Swords\": {\n        3: {\n          name: \"Fighting Style\",\n          count: 1,\n          type: \"fs:b\"\n        }\n      }\n    }\n  },\n  monk: {\n    subclasses: {\n      \"Way of the Four Elements\": {\n        3: {\n          name: \"Elemental Discipline\",\n          count: 2,\n          type: \"ed\"\n        },\n        6: {\n          name: \"Elemental Discipline\",\n          count: 1,\n          type: \"ed\"\n        },\n        11: {\n          name: \"Elemental Discipline\",\n          count: 1,\n          type: \"ed\"\n        },\n        17: {\n          name: \"Elemental Discipline\",\n          count: 1,\n          type: \"ed\"\n        }\n      },\n    }\n  },\n  fighter: {\n    class: {\n      1: {\n        name: \"Fighting Style\",\n        type: \"fs:f\",\n        count: 1\n      }\n    },\n    subclasses: {\n      \"Battle Master\": {\n        3: {\n          name: \"Maneuvers\",\n          type: \"mv:b\",\n          count: 3\n        },\n        7: {\n          name: \"Maneuvers\",\n          type: \"mv:b\",\n          count: 2\n        },\n        10: {\n          name: \"Maneuvers\",\n          type: \"mv:b\",\n          count: 2\n        },\n        15: {\n          name: \"Maneuvers\",\n          type: \"mv:b\",\n          count: 2\n        }\n      }\n    }\n  },\n  paladin: {\n    class: {\n      2: {\n        name: \"Fighting Style\",\n        type: \"fs:p\",\n        count: 1\n      },\n    }\n  },\n  ranger: {\n    class: {\n      2: {\n        name: \"Fighting Style\",\n        type: \"fs:r\",\n        count: 1\n      },\n    }\n  },\n  sorcerer: {\n    class: {\n      3: {\n        name: \"Metamagic\",\n        type: \"mm\",\n        count: 2\n      },\n      10: {\n        name: \"Metamagic\",\n        type: \"mm\",\n        count: 1\n      },\n      17: {\n        name: \"Metamagic\",\n        type: \"mm\",\n        count: 1\n      }\n    }\n  },\n  warlock: {\n    class: {\n      2: {\n        name: \"Eldritch Invocations\",\n        type: \"ei\",\n        count: 2\n      },\n      3: {\n        name: \"Pact Boon\",\n        type: \"pb\",\n        count: 1\n      },\n      5: {\n        name: \"Eldritch Invocations\",\n        type: \"ei\",\n        count: 1\n      },\n      7: {\n        name: \"Eldritch Invocations\",\n        type: \"ei\",\n        count: 1\n      },\n      9: {\n        name: \"Eldritch Invocations\",\n        type: \"ei\",\n        count: 1\n      },\n      12: {\n        name: \"Eldritch Invocations\",\n        type: \"ei\",\n        count: 1\n      },\n      15: {\n        name: \"Eldritch Invocations\",\n        type: \"ei\",\n        count: 1\n      },\n      18: {\n        name: \"Eldritch Invocations\",\n        type: \"ei\",\n        count: 1\n      }\n    }\n  }\n};\n\nexport const proficiencyGains = {\n  classes: {\n    \"artificer(ua)\": {\n      subclasses: {\n        \"Gunsmith\": {\n          1: {\n            name: \"Master Smith\",\n            value: \"{@item smith's tools|phb}\"\n          }\n        }\n      }\n    },\n    \"Artificer (Revisited)\": {\n      subclasses: {\n        \"Alchemist\": {\n          3: {\n            name: \"Tools of the Trade\",\n            value: [\"{@item alchemist's supplies|phb}\", \"{@item herbalism kit|phb}\"]\n          }\n        },\n        \"Archivist\": {\n          3: {\n            name: \"Tools of the Trade\",\n            value: [\"{@item calligrapher's supplies|phb}\", \"{@item forgery kit|phb}\"]\n          }\n        },\n        \"Artillerist\": {\n          3: {\n            name: \"Tools of the Trade\",\n            value: [\"{@item smith's tools|phb}\", \"{@item woodcarver's tools|phb}\"]\n          }\n        },\n        \"Battle Smith\": {\n          3: [\n            {\n              name: \"Tools of the Trade\",\n              value: [\"{@item leatherworker's tools|phb}\", \"{@item smith's tools|phb}\"]\n            }, \n            {\n              name: \"Battle Ready\",\n              value: \"martial weapons\"\n            }\n          ]\n        }\n      }\n    },\n    artificer: {\n      subclasses: {\n        \"Alchemist\": {\n          3: {\n            name: \"Tool Proficiency\",\n            value: \"alchemist's supplies\",\n            orOther: true,\n            type: \"artisan's tools\"\n          }\n        },\n        \"Artillerist\": {\n          3: {\n            name: \"Tool Proficiency\",\n            value: \"woodcarver's supplies\"\n          }\n        },\n        \"Battle Smith\": {\n          3: [\n            {\n              name: \"Tool Proficiency\",\n              value: \"smith's supplies\"\n            },\n            {\n              name: \"Battle Ready\",\n              value: \"martial weapons\"\n            }\n          ]\n        },\n        \"Armorer (UA)\": {\n          3: {\n            name: \"Tricks of the Trade\",\n            value: [\"heavy armor\", \"smith's tools\"]\n          }\n        }\n      }\n    }\n  }\n};\n\n\nexport const expertiseClasses = {\n  \"artificer(ua)\": {\n    2: {\n      name: \"Tool Expertise\",\n      type: \"artificier-tools\"\n    }\n  },\n  \"Artificer (Revisited)\": {\n    3: {\n      name: \"Tool Expertise\",\n      type: \"artificier-tools\"\n    }\n  },\n  \"Artificer\": {\n    6: {\n      name: \"Tool Expertise\",\n      type: \"artificier-tools\"\n    }\n  },\n  bard: {\n    3: 2,\n    10: 2\n  }\n};\n\nexport const itemGains = {\n  \"Artificer (Revisited)\": {\n    subclasses: {\n      \"Alchemist\": {\n        3: {\n          name: \"Tools of the Trade\",\n          value: [\"{@item alchemist's supplies|phb}\", \"{@item herbalism kit|phb}\"]\n        }\n      },\n      \"Archivist\": {\n        3: {\n          name: \"Tools of the Trade\",\n          value: [\"{@item calligrapher's supplies|phb}\", \"{@item forgery kit|phb}\"]\n        }\n      },\n      \"Artillerist\": {\n        3: {\n          name: \"Tools of the Trade\",\n          value: [\"{@item smith's tools|phb}\", \"{@item woodcarver's tools|phb}\", \"a nonmagical, wooden wand\"]\n        }\n      },\n      \"Battle Smith\": {\n        3: {\n          name: \"Tools of the Trade\",\n          value: [\"{@item leatherworker's tools|phb}\", \"{@item smith's tools|phb}\"]\n        }\n      }\n    }\n  }\n};\n\nexport const resistanceGains = {\n  class: {\n    \"Artificer (Revisited)\": {\n      subclasses: {\n        \"Alchemist\": {\n          14: [\n            {\n              name: \"Chemical Savant\",\n              level: \"resistance\",\n              type: \"damage\",\n              value: \"acid\"\n            },\n            {\n              name: \"Chemical Savant\",\n              level: \"resistance\",\n              type: \"damage\",\n              value: \"poison\"\n            },\n            {\n              name: \"Chemical Savant\",\n              level: \"immunity\",\n              type: \"condition\",\n              value: \"poisoned\"\n            }\n          ]\n        }\n      }\n    }\n  },\n  artificer: {\n    subclasses: {\n      \"Alchemist\": {\n        15: [\n          {\n            name: \"Chemical Mastery\",\n            level: \"resistance\",\n            type: \"damage\",\n            value: \"acid\"\n          },\n          {\n            name: \"Chemical Mastery\",\n            level: \"resistance\",\n            type: \"damage\",\n            value: \"poison\"\n          },\n          {\n            name: \"Chemical Mastery\",\n            level: \"immunity\",\n            type: \"condition\",\n            value: \"poisoned\"\n          }\n        ]\n      }\n    }\n  }\n};\n","import { PolymerElement, html } from \"@polymer/polymer\";\nimport { MutableData } from '@polymer/polymer/lib/mixins/mutable-data.js';\nimport { getCharacterChannel, getSelectedCharacter, getClassReferences, setClassLevels, mergeSubclass, getSubclassChoiceLevel, mergeFeature, setSubclassChoice, setClassChoice, getSubclassChoice, getClassChoice, getHPRollForClassLevel, getHPDiceForLevel, setHpRoll, getClassString, getOptionFeatureChoice, setOptionFeatureChoice } from \"../../../util/charBuilder\";\nimport \"../../dnd-select-add\";\nimport \"../../dnd-switch\";\nimport \"../../dnd-button\";\nimport \"../../dnd-asi-select\";\nimport \"../../dnd-svg\";\nimport './dnd-character-builder-suboptions';\nimport { jqEmpty, getEntryName, cloneDeep } from \"../../../js/utils\";\nimport { classOptionsMap } from \"../../../data/choices\";\nimport EntryRenderer from \"../../../util/entryrender\";\nimport { } from '@polymer/polymer/lib/elements/dom-if.js';\nimport { } from '@polymer/polymer/lib/elements/dom-repeat.js';\nimport { getEditModeChannel, isEditMode } from \"../../../util/editMode\";\nimport { filterModel } from \"../../../util/data\";\nimport '@vaadin/vaadin-text-field/vaadin-integer-field'\n\nclass DndCharacterBuilderClass extends MutableData(PolymerElement) {\n  \n  static get properties() {\n    return {\n      levels: {\n        type: Array,\n        value: []\n      },\n      classes: {\n        type: Object,\n      },\n      subclasses: {\n        type: Object,\n        value: undefined\n      },\n      noContentMessage: {\n        type: Boolean,\n        value: false\n      },\n      isEditMode: {\n        type: Boolean,\n        value: false\n      }\n    };\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    this.characterChangeHandler = (e) => {\n      let character = e.detail.character;\n      this.updateFromCharacter(character);\n    };\n    \n    this.updateFromCharacter(getSelectedCharacter());\n    getCharacterChannel().addEventListener(\"character-selected\", this.characterChangeHandler);\n\n    this.editModeHandler = (e) => {\n      this.isEditMode = e.detail.isEditMode;\n    }\n    getEditModeChannel().addEventListener('editModeChange', this.editModeHandler);\n    this.isEditMode = isEditMode();\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n\n    getCharacterChannel().removeEventListener(\"character-selected\", this.characterChangeHandler);\n    getEditModeChannel().removeEventListener('editModeChange', this.editModeHandler);\n  }\n\n  async updateFromCharacter(character) {\n    if (character && character.levels && character.levels.length) {\n      console.error('class updateFromCharacter', character);\n      this.noContentMessage = false;\n      this.character = character;\n      this.classes = await getClassReferences(character);\n      this.subclasses = cloneDeep(character.subclasses);\n      this.classLevel = getClassString(character);\n      this.classChoices = await this._findLevelChoices(character, this.classes);\n\n      this.dispatchEvent(new CustomEvent(\"loadingChange\", { bubbles: true, composed: true }));\n\n      this.levels = cloneDeep(character.levels);\n\n      const hitDiceMaxes = [];\n      for (let i = 0; i < character.levels.length; i++) {\n        hitDiceMaxes.push(await getHPDiceForLevel(i));\n      }\n      this.hitDiceMaxes = hitDiceMaxes;\n    } else {\n      this.levels = [];\n      this.noContentMessage = true;\n      this.dispatchEvent(new CustomEvent(\"loadingChange\", { bubbles: true, composed: true }));\n    }\n  }\n\n  _getClassLevelFeatures(levels, index, classes, subclasses) {\n    if (classes && levels[index] && subclasses) {\n      const className = levels[index].name;\n      const classRef = classes[className];\n\n      if (classRef) {\n        const classFeatures = classRef.classFeatures;\n        let levelsInClass = -1;\n        let levelsInSubclass = -1;\n\n        if (levels.length >= index + 1) {\n          for (let i = 0; i <= index; i ++) {\n            if (levels[i].name === className) {\n              levelsInClass ++;\n\n              const classFeaturesForLevel = classFeatures[levelsInClass];\n              if (classFeaturesForLevel) {\n                const hasSubclassFeature = classFeaturesForLevel.find(i => i.gainSubclassFeature);\n                if (hasSubclassFeature) {\n                  levelsInSubclass ++;\n                }\n              }\n            }\n          }\n\n          const classFeaturesForLevel = classFeatures[levelsInClass];\n          if (classFeaturesForLevel) {\n            const hasSubclassFeature = classFeaturesForLevel.some(i => i.gainSubclassFeature);\n            if (hasSubclassFeature && subclasses && subclasses[className] && classRef.subclasses && classRef.subclasses.length) {\n              const subclassDef = classRef.subclasses.find(i => subclasses[className].name === i.name);\n              if (subclassDef && subclassDef.subclassFeatures && subclassDef.subclassFeatures[levelsInSubclass]) {\n                subclassDef.subclassFeatures[levelsInSubclass].map((i) => { i.isSubclass = true; return i; })\n                return [...classFeaturesForLevel].concat(subclassDef.subclassFeatures[levelsInSubclass]);\n              }\n            }\n            return classFeaturesForLevel.filter((feature) => { \n              const name = getEntryName(feature);\n              return name !== 'Proficiency Versatility' && name !== 'Martial Versatility';\n            });\n          }\n        }\n      }\n    }\n  }\n\n  _getClassLevelFeatureStringArray(levels, index, classes, subclasses, classChoices) {\n    if (levels && index !== undefined && classes && subclasses) {\n      const classLevelFeatures = this._getClassLevelFeatures(levels, index, classes, subclasses);\n\n      if (classLevelFeatures) {\n        return classLevelFeatures.map(f => {\n          return { name: getEntryName(f), isSubclass: f.isSubclass, source: f.source };\n        }).filter(feature => {\n          const isUnselectedReplacementChoice = classChoices && classChoices[index] && classChoices[index].some((choice) => {\n            const isNotSelectedOptionalFeature = choice.selection && (choice.selection.name !== feature.name || choice.selection.source !== feature.source);\n            const isOptionalFeature = choice.from && choice.from.some((optionalFeature) => {return optionalFeature.name === feature.name && optionalFeature.source === feature.source});\n            \n            return choice.id === 'replacement' && isNotSelectedOptionalFeature && isOptionalFeature;\n          });\n\n          return !isUnselectedReplacementChoice;\n        });\n      }\n    }\n  }\n\n  _level(index) {\n    return index + 1;\n  }\n\n  _deleteLevel(e) {\n    const index = e.model.__data.index,\n      className = this.levels[index].name,\n      level = this.levels.filter(lvl => lvl.name === className).length,\n      choiceKeysToRemove = Object.keys(this.character.choices).filter(key => key.startsWith(className.toLowerCase() + '_' + level));\n    \n    this.levels.splice(index, 1);\n    choiceKeysToRemove.forEach(key => {\n      delete this.character.choices[key];\n    });\n    setClassLevels(this.levels);\n  }\n\n  _expandDetails(e) {\n    let feature = e.model.__data.item;\n    let levelIndex = e.model.__dataHost.__dataHost.__data.index;\n    \n    if (this.expandedIndex === levelIndex && this.expandedFeatureName === feature.name && this.expandedFeatureSource === feature.source) {\n      this.expandedIndex = null;\n      this.expandedFeatureName = null;\n      this.expandedFeatureSource = null;\n    } else {\n      this.expandedIndex = levelIndex;\n      this.expandedFeatureName = feature.name;\n      this.expandedFeatureSource = feature.source;\n    }\n  }\n\n  _renderDetails(expandedIndex, expandedFeatureName, expandedFeatureSource, rowIndex) {\n    if (expandedIndex === rowIndex) {\n      let renderStack = [];\n      const renderer = new EntryRenderer();\n      const features = this._getClassLevelFeatures(this.levels, rowIndex, this.classes, this.subclasses);\n      \n      if (features && features.length) {\n        const foundFeature = features.find(feature => feature.name === expandedFeatureName && feature.source === expandedFeatureSource);\n        if (foundFeature) {\n          renderer.recursiveEntryRender(\n            foundFeature,\n            renderStack,\n            0,\n            undefined,\n            true\n          );\n          return \"<div class='details stats-wrapper'>\" + renderStack.join(\"\") + \"</div>\"\n        }\n      }\n    }\n    return \"\";\n  }\n\n  async _findLevelChoices(character, classes) {\n    const levelChoices = [];\n    if (character && character.levels && character.levels.length) {\n      for (let i = 0; i < character.levels.length; i++) {\n        levelChoices.push(await this._findChoices(character, classes, i));\n      }\n    }\n    return levelChoices;\n  }\n\n  async _findChoices(character, classes, levelIndex) {\n    if (classes && character.levels && character.levels.length && character.levels.length > levelIndex) {\n      let levels = character.levels,\n        subclasses = character.subclasses,\n        className = levels[levelIndex].name,\n        classDef = classes[className],\n        subclassDef = classDef.subclasses.find(i => subclasses[className] && subclasses[className].name === i.name);\n\n      if (classDef) {\n        let choices = [],\n          classLevelCount = 0,\n          subclassChoiceLevel = getSubclassChoiceLevel(classDef);\n\n        for (let i = 0; i <= levelIndex; i++) {\n          let level = levels[i]\n          if (level.name === className) {\n            classLevelCount ++;\n          }\n        }\n\n        \n        // Class sub-option for additional spells and first level proficiencies\n        const classSubOptions = {};\n        // restructuring class defined additional spells\n        if (classDef.additionalSpells) {\n          let lowestAddtlSpellLevel = 9;\n          classDef.additionalSpells.forEach((addtlSpellSetEntry) => {\n            Object.entries(addtlSpellSetEntry).forEach(([addtlSpellTypeKey, addtlSpellTypeValue]) => {\n              Object.entries(addtlSpellTypeValue).forEach(([addtlSpellLevelKey, addtlSpellLevelValue]) => {\n                const spellGainLevel = parseInt(addtlSpellLevelKey.split('s').join(''));\n\n                if (spellGainLevel < lowestAddtlSpellLevel && addtlSpellTypeKey !== 'prepared' && addtlSpellTypeKey !== 'expanded') {\n                  lowestAddtlSpellLevel = spellGainLevel;\n                }\n                \n                // If this level has some spell gain, recreate structure for just this level\n                if (classDef.additionalSpells.length === 1 && spellGainLevel === classLevelCount) {\n                  if (!classSubOptions.additionalSpells) {\n                    classSubOptions.additionalSpells = [{}];\n                  }\n                  if (!classSubOptions.additionalSpells[0][addtlSpellTypeKey]) {\n                    classSubOptions.additionalSpells[0][addtlSpellTypeKey] = {}\n                  }\n                  classSubOptions.additionalSpells[0][addtlSpellTypeKey][addtlSpellLevelKey] = addtlSpellLevelValue;\n                }\n              });\n            });\n          });\n          // if there are multiple additional spell sets then select set (and all others) at the lowest level\n          if (classDef.additionalSpells.length > 1 && lowestAddtlSpellLevel === classLevelCount) {\n            classSubOptions.additionalSpells = classDef.additionalSpells;\n          }\n        }\n\n        if (levelIndex === 0) {\n          classSubOptions.skillProficiencies = classDef.startingProficiencies.skills;\n\n          if (classDef.startingProficiencies.armor) {\n            classSubOptions.armorProficiencies = [{}];\n            classDef.startingProficiencies.armor.forEach(p => {\n              let prof = p.proficiency || p.toLowerCase();\n              prof = prof.includes('shield') ? 'shield' : prof;\n              classSubOptions.armorProficiencies[0][prof] = true;\n            });\n          }\n          \n          if (classDef.startingProficiencies.weapons) {\n            classSubOptions.weaponProficiencies = [{}];\n            classDef.startingProficiencies.weapons.forEach(p => {\n              let prof = p.proficiency || p.toLowerCase();\n              if (prof.includes(\"@item\")) {\n                prof = prof.split(\"@item\")[1].trim().split('|')[0];\n              }\n              classSubOptions.weaponProficiencies[0][prof] = true;\n            });\n          }\n\n          if (classDef.startingProficiencies.tools) {\n            classSubOptions.toolProficiencies = [{}];\n            classDef.startingProficiencies.tools.forEach(p => {\n              let count;\n              let prof = p.proficiency || p.toLowerCase();\n              count = prof.includes('one ') ? 1 : prof.includes('two ') ? 2 : prof.includes('three ') ? 3 :prof.includes('four ') ? 4 : prof.includes('five ') ? 5 : 1;\n              if (prof.includes(\"@item\")) {\n                prof = prof.split(\"@item\")[1].trim().split('|')[0];\n              }\n              if (prof.includes(\"artisan's tools\") || prof.includes('musical instrument')) {\n                prof = prof.includes(\"artisan's tools\") ? \"artisan's tools\" : 'musical instrument';\n                classSubOptions.toolProficiencies[0].choose = { from: [prof], count };\n              } else {\n                classSubOptions.toolProficiencies[0][prof] = true;\n              }\n            });\n          }\n        }\n        choices.push({\n          id: \"classSubOptions\",\n          classSubOptions,\n          class: className.toLowerCase(),\n          level: classLevelCount\n        });\n\n        // Subclass choice\n        if (subclassChoiceLevel !== undefined && classLevelCount === subclassChoiceLevel) {\n          choices.push({\n            id: \"subclass\",\n            from: classDef.subclasses,\n            selections: character.subclasses[className]\n          });\n        }\n\n        // Subclass suboption\n        const subclassSubOptions = {};\n        if (subclassDef && subclassDef.additionalSpells) {\n          let lowestAddtlSpellLevel = 20;\n          let hasExpanded = false;\n          subclassDef.additionalSpells.forEach((addtlSpellSetEntry) => {\n            Object.entries(addtlSpellSetEntry).forEach(([addtlSpellTypeKey, addtlSpellTypeValue]) => {\n              if (addtlSpellTypeKey === 'expanded') {\n                hasExpanded = true;\n              }\n              if (typeof addtlSpellTypeValue !== 'string' && !Array.isArray(addtlSpellTypeValue)) {\n                Object.entries(addtlSpellTypeValue).forEach(([addtlSpellLevelKey, addtlSpellLevelValue]) => {\n                  const spellGainLevel = parseInt(addtlSpellLevelKey.split('s').join(''));\n\n                  if (spellGainLevel < lowestAddtlSpellLevel && addtlSpellTypeKey !== 'prepared') {\n                    lowestAddtlSpellLevel = spellGainLevel;\n                  }\n                  \n                  // If this level has some spell gain, recreate structure for just this level\n                  if (subclassDef.additionalSpells.length === 1 && addtlSpellTypeKey !== 'expanded'&& spellGainLevel === classLevelCount) {\n                    if (!subclassSubOptions.additionalSpells) {\n                      subclassSubOptions.additionalSpells = [{}];\n                    }\n                    if (!subclassSubOptions.additionalSpells[0][addtlSpellTypeKey]) {\n                      subclassSubOptions.additionalSpells[0][addtlSpellTypeKey] = {}\n                    }\n                    subclassSubOptions.additionalSpells[0][addtlSpellTypeKey][addtlSpellLevelKey] = addtlSpellLevelValue;\n                  }\n                });\n              }\n            });\n          });\n          // if there are multiple additional spell sets then select set (and all others) at the lowest level\n          if ((subclassDef.additionalSpells.length > 1 || hasExpanded) && lowestAddtlSpellLevel === classLevelCount) {\n            subclassSubOptions.additionalSpells = subclassDef.additionalSpells;\n          }\n          choices.push({\n            id: \"subclassSubOptions\",\n            subclassSubOptions,\n            subclass: subclassDef.shortName,\n            class: className.toLowerCase(),\n            level: classLevelCount\n          });\n        }\n\n        // ASI choice\n        let features = this._getClassLevelFeatures(levels, levelIndex, classes, subclasses);\n        if (features && features.length) {\n          if (features.find((f) => { return f.name === \"Ability Score Improvement\"; })) {\n            if (!this.asiItem) {\n              this.asiChoice = {\n                id: \"asi\",\n                class: className.toLowerCase(),\n                level: classLevelCount,\n                asiItem: {\n                  asi: true\n                }\n              }\n            }\n            choices.push(this.asiChoice);\n          }\n        }\n\n        // Feature replacement choice\n        if (features && features.length) {\n          features.forEach(feature => {\n            if (!feature.name.includes(\"feature\")) {\n              const choice = {\n                id: 'replacement',\n                from: [{name: feature.name, source: feature.source}],\n                selection: getOptionFeatureChoice(className, levelIndex, feature.name),\n                class: className,\n                level: levelIndex,\n                feature: feature.name\n              };\n              features.forEach(featurei => {\n                if (featurei.isClassFeatureVariant && featurei.entries[0].includes('replaces') && featurei.entries[0].includes(feature.name)) {\n                  choice.from.push({name: featurei.name, source: featurei.source});\n                }\n              });\n              if (choice.from.length > 1) {\n                choices.push(choice);\n              }\n            }\n          });\n        }\n\n        // Generating other choices from choices.js map\n        if (classLevelCount) {\n          const classOptions = classOptionsMap[className.toLowerCase()];\n\n          if (classOptions && classOptions.class && classOptions.class[classLevelCount]) {\n            const classLevelOptions = [].concat(classOptions.class[classLevelCount]);\n            \n            for (const classLevelOption of classLevelOptions) {\n              if (classLevelOption.options) {\n                choices.push({\n                  id: \"classFeature\",\n                  name: classLevelOption.name,\n                  from: classLevelOption.options,\n                  count: classLevelOption.count > 1 ? classLevelOption.count : 1,\n                  class: className.toLowerCase(),\n                  feature: classLevelOption.name,\n                  level: classLevelCount,\n                  selections: getClassChoice(className.toLowerCase(), classLevelCount, classLevelOption.name)\n                });\n              } else if (classLevelOption.type) {\n                const options = await filterModel(\"features\", classLevelOption.type);\n                let selections = getClassChoice(className.toLowerCase(), classLevelCount, classLevelOption.name);\n                if (selections) {\n                  if (Array.isArray(selections)) {\n                    selections = selections.map(sel => options.find(opt => opt.name === sel.name && opt.source === sel.source));\n                  } else {\n                    selections = options.find(opt => opt.name === selections.name && opt.source === selections.source);\n                  }\n                }\n                choices.push({\n                  id: \"classFeature\",\n                  hasSubFeature: true,\n                  name: classLevelOption.name,\n                  from: options,\n                  count: classLevelOption.count > 1 ? classLevelOption.count : 1,\n                  class: className.toLowerCase(),\n                  feature: classLevelOption.name,\n                  level: classLevelCount,\n                  selections,\n                  selectionsArray: Array.isArray(selections) ? selections : [selections]\n                });\n              }\n            }\n          }\n\n          if (classOptions && classOptions.subclasses && subclasses[className] && classOptions.subclasses[subclasses[className].name] && classOptions.subclasses[subclasses[className].name][classLevelCount]) {\n            const subclassLevelOptions = [].concat(classOptions.subclasses[subclasses[className].name][classLevelCount]);\n            \n            for (const subclassLevelOption of subclassLevelOptions) {\n              if (subclassLevelOption.options) {\n                choices.push({\n                  id: \"subclassFeature\",\n                  name: subclassLevelOption.name,\n                  from: subclassLevelOption.options,\n                  count: subclassLevelOption.count > 1 ? subclassLevelOption.count : undefined,\n                  class: className.toLowerCase(),\n                  subclass: subclasses[className],\n                  feature: subclassLevelOption.name,\n                  level: classLevelCount,\n                  selections: getSubclassChoice(className.toLowerCase(), subclasses[className].name.toLowerCase(), classLevelCount, subclassLevelOption.name)\n                });\n              } else if (subclassLevelOption.type) {\n                const options = await filterModel(\"features\", subclassLevelOption.type);\n                let selections = getSubclassChoice(className.toLowerCase(), subclasses[className].name.toLowerCase(), classLevelCount, subclassLevelOption.name);\n                if (selections) {\n                  if (Array.isArray(selections)) {\n                    selections = selections.map(sel => options.find(opt => opt.name === sel.name && opt.source === sel.source));\n                  } else {\n                    selections = options.find(opt => opt.name === selections.name && opt.source === selections.source);\n                  }\n                }\n                choices.push({\n                  id: \"subclassFeature\",\n                  hasSubFeature: true,\n                  name: subclassLevelOption.name,\n                  from: options,\n                  count: subclassLevelOption.count > 1 ? subclassLevelOption.count : undefined,\n                  class: className.toLowerCase(),\n                  subclass: subclasses[className],\n                  feature: subclassLevelOption.name,\n                  level: classLevelCount,\n                  selections: selections,\n                  selectionsArray: Array.isArray(selections) ? selections : [selections]\n                });\n              }\n            }\n          }\n        }\n\n        return choices;\n      }\n    }\n    return [];\n  }\n\n  _equal(a, b) {\n    return a === b;\n  }\n\n  _genSubclassCallback(level, previousSubclass) {\n    return (subclass) => {\n      mergeSubclass(undefined, level.name, subclass, previousSubclass);\n    }\n  }\n\n  _genSubclassOptions(level) {\n    return this.classes[level.name].subclasses;\n  }\n\n  _getSubclassSelection(level, subclasses) {\n    return subclasses[level.name];\n  }\n\n  _classFeatureOptionAddCallback(classs, level, feature) {\n    return (choice) => {\n      let adjChoice;\n      if (Array.isArray(choice)) {\n        adjChoice = choice.map(c => {\n          if (c.name) {\n            return { name: c.name, source: c.source }\n          } else {\n            return c;\n          }\n        });\n      } else if (choice.name) {\n        adjChoice = { name: choice.name, source: choice.source };\n      } else {\n        adjChoice = choice;\n      }\n      setClassChoice(classs, level, feature, adjChoice);\n    };\n  }\n\n  _subclassFeatureOptionAddCallback(classs, subclass, level, feature) {\n    return (choice) => {\n      let adjChoice;\n      if (Array.isArray(choice)) {\n        adjChoice = choice.map(c => {\n          if (c.name) {\n            return { ...c }\n          } else {\n            return c;\n          }\n        });\n      } else if (choice.name) {\n        adjChoice = { ...choice };\n      } else {\n        adjChoice = choice;\n      }\n      setSubclassChoice(classs, subclass.name.toLowerCase(), level, feature, adjChoice);\n    };\n  }\n\n  _optionalFeatureAddCallback(classs, level, feature) {\n    return (choice) => {\n      let adjChoice;\n      if (Array.isArray(choice)) {\n        adjChoice = choice.map(c => {\n          if (c.name) {\n            return { ...c }\n          } else {\n            return c;\n          }\n        });\n      } else if (choice.name) {\n        adjChoice = { ...choice };\n      } else {\n        adjChoice = choice;\n      }\n      setOptionFeatureChoice(classs, level, feature, adjChoice);\n    };\n  }\n\n  _indexOfLevel(level, levels) {\n    return levels.indexOf(level);\n  }\n\n  _isMobile() {\n    return window.innerWidth < 921;\n  }\n\n  _objArray(obj) {\n    return Object.values(obj);\n  }\n\n  _atIndex(data, index) {\n    return data ? data[index] : null;\n  }\n\n  _svgFromClass(className) {\n    return className ? className.replace(/(\\s|\\(|\\))/g, \"\") : '';\n  }\n\n  _addClassLevel(e) {\n    mergeFeature(undefined, e.model.item, \"classes\");\n  }\n\n  _levelHp(className, index) {\n    return getHPRollForClassLevel(className, index + 1);\n  }\n\n  _editModeClass(isEditMode) {\n    return isEditMode ? 'edit-mode' : 'not-edit-mode';\n  }\n\n  _toggleHpField(e) {\n    const element = e.target.closest('.btn-field');\n    const isOpen = element.classList.contains('btn-field--open');\n    const intField = element.querySelector('vaadin-integer-field');\n    const level = parseInt(element.dataset.level) + 1;\n    const className = element.dataset.className;\n    const max = parseInt(element.dataset.max);\n  \n    if (isOpen) {\n      const changeVal = parseInt(intField.value);\n      if (!changeVal) {\n        element.classList.toggle('btn-field--open');\n      } else if (changeVal <= max && changeVal > 0) {\n        setHpRoll(className, level, changeVal);\n        intField.value = '';\n        element.classList.toggle('btn-field--open');\n      } else {\n        element.classList.add('btn-field--error');\n        setTimeout(() => {\n          element.classList.remove('btn-field--error');\n        }, 500);\n      }\n    } else {\n      element.classList.toggle('btn-field--open');\n      intField.focus();\n    }\n  }\n\n  _levelHitDice(index, maxes) {\n    if (maxes && index !== undefined && maxes[index]) {\n      return maxes[index];\n    }\n  }\n\n  _hpDiceIconClass(index, hitDiceMaxes) {\n    const dice = this._levelHitDice(index, hitDiceMaxes);\n    return `fal fa-dice-d${dice || '6'}`;\n  }\n\n  _joinUnderscore(...items) {\n    return items.join('_')\n  }\n\n  _featureLinkClick(e) {\n    const item = e.target.__dataHost.__data.item;\n    \n    this.dispatchEvent(new CustomEvent(\"open-drawer\", {\n      bubbles: true,\n      composed: true,\n      detail: {\n        selectedItem: item,\n        viewId: 'features'\n      }\n    }));\n  }\n\n  static get template() {\n    return html`\n      <style include=\"material-styles my-styles fa-styles\">\n        .something {\n          display: block;\n        }\n\n        .class-grid {\n          margin-bottom: var(--tab-bottom-margin);\n        }\n\n        .heading-wrap {\n          display: flex;\n          justify-content: space-between;\n          margin: 22px 14px 0;\n          align-items: center;\n          border-bottom: 1px solid var(--lumo-contrast-10pct);\n          flex-wrap: wrap;\n        }\n        .heading {\n          width: 100%;\n          display: flex;\n          flex-direction: row;\n          align-items: center;\n          justify-content: space-between;\n        }\n        .class-levels {\n          font-size: 16px;\n          padding-left: 8px;\n          font-weight: normal;\n          display: none;\n        }\n\n        h2 {\n          margin-bottom: 24px;\n          display: block;\n          font-size: 1.5em;\n          margin: 20px 0;\n          font-weight: bold;\n        }\n\n        .not-edit-mode .button-wrap {\n          display: none;\n        }\n\n        .button-wrap {\n          display: flex;\n          flex-wrap: wrap;\n          align-items: center;\n          padding: 10px;\n          width: 100%;\n        }\n        .button-wrap > * {\n          margin: 4px;\n        }\n\n        .row-wrap {\n          padding: 4px 16px;\n        }\n        .row-wrap:not(:first-child) {\n          border-top: 1px solid var(--mdc-theme-text-divider-on-background);\n        }\n        .row {\n          position: relative;\n          min-height: 80px;\n          padding: 12px 0 12px;\n        }\n        .row:after {\n          content: \"\";\n          display: table;\n          clear: both;\n        }\n\n        .open-details {\n          display: flex;\n          align-items: flex-start;\n          flex-wrap: wrap;\n        }\n\n        .level-col {\n          width: calc(100% - 70px);\n          text-overflow: ellipsis;\n          white-space: nowrap;\n          overflow: hidden;\n          flex-shrink: 0;\n          padding: 6px 0;\n        }\n        .level-col__level {\n          margin-right: 10px;\n          font-size: 20px;\n          font-weight: bold;\n        }\n        .level-col__image-wrap {\n          width: 30px;\n          position: relative;\n          height: 21px;\n          display: inline-block;\n        }\n        .level-col__image {\n          width: 30px;\n          height: 30px;\n          display: block;\n          position: absolute;\n          top: -1px;\n        }\n        .level-col__class {\n          font-size: 20px;\n          font-weight: bold;\n        }\n\n        .features-col {\n          white-space: normal;\n          width: 100%;\n          margin: 0;\n          padding: 16px 0 8px;\n          font-size: 16px;\n        }\n        .class-feature__text {\n          cursor: pointer;\n        }\n        .class-feature__text:hover {\n          text-decoration: underline;\n        }\n        .class-feature__text[subclass] {\n          color: var(--mdc-theme-secondary);\n        }\n        .class-feature:last-of-type .class-feature__separator {\n          display: none;\n        }\n\n        .choices-col {\n          display: flex;\n          float: left;\n          flex-wrap: wrap;\n          width: 100%;\n          padding-left: 30px;\n        }\n        .choices-col__choice {\n          margin-right: 16px;\n          width: 100%;\n        }\n\n        .choices-col__choice dnd-select-add {\n          min-width: 250px;\n          width: calc(100% - 20px);\n        }\n        .choices-col__choice dnd-character-builder-suboptions {\n          min-width: 250px;\n          width: calc(100% - 20px);\n        }\n        .add-with-links dnd-select-add {\n          width: calc(100% - 48px);\n        }\n\n        @media(min-width: 420px) {\n          .choices-col__choice dnd-select-add {\n            width: calc(50% - 20px);\n          }\n          .choices-col__choice dnd-character-builder-suboptions {\n            width: calc(50% - 20px);\n          }\n          .add-with-links dnd-select-add {\n            width: calc(50% - 48px);\n          }\n        }\n\n        .choices-col__subclass-choice {\n          display: block;\n        }\n\n        .delete-col {\n          margin-right: 16px;\n        }\n        .delete-btn {\n          height: 36px;\n          font-size: 18px;\n          padding: 0;\n          background: none !important;\n        }\n        .delete-btn:before,\n        .delete-btn:after {\n          background: none !important;\n        }\n        .delete-btn:hover {\n          color: var(--mdc-theme-secondary);\n        }\n        .not-edit-mode .delete-btn {\n          display: none;\n        }\n        \n\n        .btn-field {\n          display: inline-flex;\n          flex-direction: row;\n          flex-wrap: nowrap;\n          margin-bottom: 16px;\n          width: 80px;\n          height: 36px;\n          background: var(--lumo-contrast-10pct);\n          border-radius: 4px;\n        }\n        .btn-field--error {\n          background: var(--lumo-error-color-50pct);\n        }\n        .btn-field__btn {\n          display: block;\n          width: 100%;\n        }\n        .btn-field__input {\n          display: none;\n        }\n        .btn-field--open .btn-field__btn {\n          width: 40px;\n        }\n        .btn-field__btn-label-text {\n          position: relative;\n          left: 4px;\n          bottom: 2px;\n        }\n        .btn-field--open .btn-field__btn-label-text {\n          display: none;\n        }\n        .btn-field--open .btn-field__input {\n          display: block;\n          width: 40px;\n          margin-top: -40px;\n        }\n        .btn-field--open .btn-field__btn-label {\n          margin-left: -20px;\n        }\n        .btn-field vaadin-integer-field {\n          --lumo-contrast-10pct: transparent;\n        }\n\n\n        .hp-col {\n          position: absolute;\n          right: 0;\n          top: 15px;\n          overflow: hidden;\n          display: flex;\n        }\n        .not-edit-mode .hp-col {\n          right: 0px;\n          top: 18px;\n        }\n        .hp-col .fal {\n          font-size: 20px;\n          position: relative;\n          margin-right: 8px;\n          top: 3px;\n        }\n        .hp-col__non-edit {\n          display: block;\n        }\n        .hp-col .hp-col__non-edit .hp-roll-icon {\n          left: 33px;\n        }\n        .edit-mode .hp-col__non-edit {\n          display: none;\n        }\n        .hp-col__edit {\n          display: none;\n        }\n        .edit-mode .hp-col__edit {\n          display: inline-flex;\n        }\n        .hp-col .hp-roll-icon {\n          position: absolute;\n          left: 18px;\n          font-size: 11px;\n          top: 1px;\n        }\n        .edit-mode .hp-roll-icon {\n          left: 36px;\n          top: 5px;\n        }\n        .btn-field--open .hp-roll-icon {\n          left: 26px;\n        }\n\n        .details {\n          font-size: 14px;\n          width: calc(100% - 30px);\n          margin: 0 auto 13px !important;\n          background: var(--lumo-contrast-10pct);\n          border-radius: 4px;\n          white-space: pre-line;\n          padding: 14px 14px 1px;\n          line-height: 1.5;\n        }\n        .details > .statsBlockHead:first-child > .stat-name {\n          margin-top: 0;\n        }\n        .details.stats-wrapper .statsBlockHead .stat-name {\n          font-size: 22px;\n          margin-bottom: 10px;\n        }\n        .details.stats-wrapper .statsBlockSubHead .stat-name {\n          font-size: 18px;\n        }\n        .details.stats-wrapper p {\n          margin-bottom: 8px;\n        }\n        .details.stats-wrapper .statsInlineHead .stat-name {\n          font-size: inherit;\n        }\n\n        .add-with-links {\n          display: flex;\n          align-items: flex-start;\n        }\n\n        .links-list {\n          display: flex;\n          flex-direction: column;\n          margin-top: 34px;\n          margin-left: 8px;\n        }\n        .links-list .mdc-icon-button {\n          padding: 4px;\n          height: 28px;\n          width: 28px;\n          font-size: 20px;\n        }\n\n        @media(min-width: 921px) {\n          .features-col {\n            margin: 0 30px 0 12px;\n            width: unset;\n          }\n          .class-grid {\n            margin-bottom: 0;\n          }\n          .class-levels {\n            display: inline;\n          }\n        }\n\n        .no-content-message {\n          padding: 20px;\n          font-size: 14px;\n          font-style: italic;\n        }\n      </style>\n\n      <div class$=\"[[_editModeClass(isEditMode)]]\">\n        <div class=\"heading-wrap\">\n          <h2>Levels <span class=\"class-levels\">[[classLevel]]</span></h2> \n          <dnd-select-add model=\"class-all\" placeholder=\"Add a Class\"></dnd-select-add>\n\n          <div class=\"button-wrap\">\n            <template is=\"dom-repeat\" items=\"[[_objArray(classes)]]\">\n              <dnd-button icon=\"add\" label=\"[[item.name]]\" on-click=\"_addClassLevel\"></dnd-button>\n            </template>\n          </div>\n        </div>\n\n        <div>\n          <div class=\"no-content-message\" hidden$=\"[[!noContentMessage]]\">Enter edit mode to add class levels.</div>\n\n          <div class=\"class-grid\">\n            <template is=\"dom-repeat\" items=[[levels]]>\n              <div class=\"row-wrap\">\n                <div class=\"row\">\n                  <div class=\"open-details\">\n                    <div class=\"level-col\">\n                      <span class=\"level-col__level\">[[_level(index)]]</span>\n                      <span class=\"level-col__image-wrap\" ><dnd-svg class=\"level-col__image\" default-color id=\"[[_svgFromClass(item.name)]]\"></dnd-svg></span>\n                      <span class=\"level-col__class\">[[item.name]]</span>\n                    </div>\n\n                    <div class=\"features-col\">\n                      <template is=\"dom-repeat\" items=\"[[_getClassLevelFeatureStringArray(levels, index, classes, subclasses, classChoices)]]\">\n                        <span class=\"class-feature\">\n                          <span class=\"class-feature__text\" subclass$=\"[[item.isSubclass]]\" on-click=\"_expandDetails\">[[item.name]]</span><span\n                            class=\"class-feature__separator\">, \n                        </span></span>\n                      </template>\n\n                    </div>\n                  </div>\n                  <div class=\"details-wrap\" inner-h-t-m-l=\"[[_renderDetails(expandedIndex, expandedFeatureName, expandedFeatureSource, index)]]\"></div>\n\n                  <div class=\"choices-col\">\n                    <template is=\"dom-repeat\" items=\"[[_atIndex(classChoices, index)]]\" as=\"choice\">\n                      <div class=\"choices-col__choice\">\n                        <template is=\"dom-if\" if=\"[[_equal(choice.id, 'classSubOptions')]]\">\n                          <dnd-character-builder-suboptions label=\"[[choice.class]]\" storage-key=\"[[_joinUnderscore(choice.class, choice.level)]]\" selected-item=\"[[choice.classSubOptions]]\"></dnd-character-builder-suboptions>\n                        </template>\n\n                        <template is=\"dom-if\" if=\"[[_equal(choice.id, 'subclassSubOptions')]]\">\n                          <dnd-character-builder-suboptions label=\"[[choice.class]]\" storage-key=\"[[_joinUnderscore(choice.class, choice.level, choice.subclass)]]\" selected-item=\"[[choice.subclassSubOptions]]\"></dnd-character-builder-suboptions>\n                        </template>\n          \n                        <template is=\"dom-if\" if=\"[[_equal(choice.id, 'replacement')]]\">\n                          <dnd-select-add label=\"Optional Features\" placeholder=\"<Choose Option>\" disabled$=\"[[!isEditMode]]\"\n                            options=\"[[choice.from]]\" value=\"[[choice.selection]]\" add-callback=\"[[_optionalFeatureAddCallback(choice.class, choice.level, choice.feature)]]\"></dnd-select-add>\n                        </template>\n\n                        <template is=\"dom-if\" if=\"[[_equal(choice.id, 'subclass')]]\">\n                          <dnd-select-add class=\"choices-col__subclass-choice\" label=\"Subclass\" placeholder=\"<Choose Subclass>\" disabled$=\"[[!isEditMode]]\"\n                            options=\"[[choice.from]]\" value=\"[[choice.selections]]\" add-callback=\"[[_genSubclassCallback(item, choice.selections)]]\"></dnd-select-add>\n                        </template>\n\n                        <template is=\"dom-if\" if=\"[[_equal(choice.id, 'asi')]]\">\n                          <dnd-character-builder-suboptions label=\"ASI\" storage-key=\"[[_joinUnderscore(choice.class, choice.level, 'asi')]]\" selected-item=\"[[choice.asiItem]]\"></dnd-asi-select>\n                        </template>\n\n                        <template is=\"dom-if\" if=\"[[_equal(choice.id, 'classFeature')]]\">\n                          <div class=\"add-with-links\">\n                            <dnd-select-add choices=\"[[choice.count]]\" label=\"[[choice.name]]\" placeholder=\"<Choose Option>\" disabled$=\"[[!isEditMode]]\"\n                              options=\"[[choice.from]]\" choices=\"1\" value=\"[[choice.selections]]\" add-callback=\"[[_classFeatureOptionAddCallback(choice.class, choice.level, choice.feature)]]\"></dnd-select-add>\n                            <div class=\"links-list\">\n                              <template is=\"dom-repeat\" items=\"[[choice.selections]]\">\n                                <button class=\"mdc-icon-button material-icons\" on-click=\"_featureLinkClick\" >logout</button>\n                              </template>\n                            </div>\n                          </div>\n                          <template is=\"dom-repeat\" items=\"[[choice.selectionsArray]]\" as=\"subfeature\">\n                            <dnd-character-builder-suboptions label=\"[[choice.class]]\" storage-key=\"[[_joinUnderscore(choice.class, choice.level, 'feature', index)]]\" selected-item=\"[[subfeature]]\"></dnd-character-builder-suboptions>\n                          </template>\n                        </template>\n\n                        <template is=\"dom-if\" if=\"[[_equal(choice.id, 'subclassFeature')]]\">\n                          <div class=\"add-with-links\">\n                            <dnd-select-add choices=\"[[choice.count]]\" label=\"[[choice.name]]\" placeholder=\"<Choose Option>\" disabled$=\"[[!isEditMode]]\"\n                              options=\"[[choice.from]]\" value=\"[[choice.selections]]\" add-callback=\"[[_subclassFeatureOptionAddCallback(choice.class, choice.subclass, choice.level, choice.feature)]]\"></dnd-select-add>\n                            <div class=\"links-list\">\n                              <template is=\"dom-repeat\" items=\"[[choice.selections]]\">\n                                <button class=\"mdc-icon-button material-icons\" on-click=\"_featureLinkClick\" >logout</button>\n                              </template>\n                            </div>\n                          </div>\n                          <template is=\"dom-repeat\" items=\"[[choice.selectionsArray]]\" as=\"subfeature\">\n                            <dnd-character-builder-suboptions label=\"[[choice.class]]\" storage-key=\"[[_joinUnderscore(choice.class, choice.level, 'sub', 'feature', index)]]\" selected-item=\"[[subfeature]]\"></dnd-character-builder-suboptions>\n                          </template>\n                        </template>\n                      </div>\n                    </template>\n                  </div>\n\n                  <div class=\"hp-col\">\n                    <div class=\"delete-col\">\n                      <button class=\"delete-btn mdc-icon-button\" on-click=\"_deleteLevel\">\n                        <i class=\"fas fa-trash\"></i>\n                      </button>\n                    </div>\n                    <div class=\"hp-col__non-edit\">\n                      <i class$=\"[[_hpDiceIconClass(index, hitDiceMaxes)]]\"></i>\n                      <span class=\"material-icons hp-roll-icon\" aria-hidden=\"true\">favorite</span>\n                      [[_levelHp(item.name, index)]]\n                    </div>\n                    <div class=\"hp-col__edit btn-field\" data-max$=\"[[_levelHitDice(index, hitDiceMaxes)]]\" data-level$=\"[[index]]\" data-class-name$=\"[[item.name]]\">\n                      <dnd-button background=\"none\" class=\"btn-field__btn\" on-click=\"_toggleHpField\">\n                        <span class=\"btn-field__btn-label\" slot=\"label\">\n                          <i class$=\"[[_hpDiceIconClass(index, hitDiceMaxes)]]\"></i>\n                          <span class=\"material-icons hp-roll-icon\" aria-hidden=\"true\">favorite</span>\n                          <span class=\"btn-field__btn-label-text\">[[_levelHp(item.name, index)]]</span>\n                        </span>\n                      </dnd-button>\n                      <vaadin-integer-field class=\"btn-field__input\" min=\"1\" max=\"[[_levelHitDice(index, hitDiceMaxes)]]\" on-blur=\"_toggleHpField\"></vaadin-integer-field>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </template>\n          </div>\n        </div>\n      </div>\n    `;\n  }\n}\n\ncustomElements.define(\"dnd-character-builder-class\", DndCharacterBuilderClass);"],"sourceRoot":""}