{"version":3,"sources":["webpack:///./node_modules/@vaadin/vaadin-text-field/theme/lumo/vaadin-number-field-styles.js","webpack:///./node_modules/@vaadin/vaadin-text-field/src/vaadin-number-field.js","webpack:///./node_modules/@vaadin/vaadin-text-field/src/vaadin-integer-field.js","webpack:///./data/choices.js","webpack:///./components/views/character/dnd-character-builder-class.js"],"names":["$_documentContainer","document","head","appendChild","content","createElement","memoizedTemplate","innerHTML","hasControls","type","Boolean","value","reflectToAttribute","min","Number","observer","max","step","super","ready","this","__previousValidInput","inputElement","addEventListener","__onInputChange","bind","e","preventDefault","_decreaseValue","_increaseValue","template","cloneNode","thisTemplate","import","is","decreaseButton","querySelector","increaseButton","styles","inputField","prefixSlot","insertBefore","_createMethodObserver","required","minlength","maxlength","pattern","invalid","isNumUnset","n","_constraintsChanged","validate","_incrementValue","incr","disabled","readonly","parseFloat","_getIncrement","newValue","_incrementIsInsideTheLimits","_setValue","String","dispatchEvent","CustomEvent","bubbles","currentValue","multiplier","Math","_getMultiplier","margin","round","number","s","i","indexOf","length","isNaN","pow","_getDecimalCount","sign","__validateByStep","__stepChangedCalled","getAttribute","setAttribute","newVal","oldVal","_valueChanged","keyCode","_onKeyDown","undefined","checkValidity","window","customElements","define","preventInvalidInput","_enabledCharPattern","__isInteger","console","warn","__hasOnlyDigits","_stepChanged","test","classOptionsMap","class","2","name","count","options","5","10","15","20","4","7","11","19","artificer","6","14","18","barbarian","subclasses","3","bard","monk","17","fighter","1","paladin","ranger","sorcerer","warlock","9","12","levels","Array","classes","Object","noContentMessage","isEditMode","connectedCallback","characterChangeHandler","character","detail","updateFromCharacter","editModeHandler","disconnectedCallback","removeEventListener","error","classLevel","classChoices","_findLevelChoices","composed","hitDiceMaxes","push","index","className","classRef","classFeatures","levelsInClass","levelsInSubclass","classFeaturesForLevel","find","gainSubclassFeature","some","subclassDef","subclassFeatures","map","isSubclass","concat","filter","feature","classLevelFeatures","_getClassLevelFeatures","f","source","choice","isNotSelectedOptionalFeature","selection","isOptionalFeature","from","optionalFeature","id","model","__data","level","lvl","choiceKeysToRemove","keys","choices","key","startsWith","toLowerCase","splice","forEach","rowIndex","expandedIndex","renderStack","renderer","features","recursiveEntryRender","join","levelChoices","_findChoices","levelIndex","classDef","classLevelCount","subclassChoiceLevel","classSubOptions","additionalSpells","lowestAddtlSpellLevel","addtlSpellSetEntry","entries","addtlSpellTypeKey","addtlSpellTypeValue","addtlSpellLevelKey","addtlSpellLevelValue","spellGainLevel","parseInt","split","skillProficiencies","startingProficiencies","skills","armor","armorProficiencies","p","prof","proficiency","includes","weapons","weaponProficiencies","trim","tools","toolProficiencies","choose","selections","subclassSubOptions","hasExpanded","isArray","subclass","shortName","asiItem","asiChoice","asi","featurei","isClassFeatureVariant","classOptions","classLevelOptions","classLevelOption","sel","opt","hasSubFeature","selectionsArray","subclassLevelOptions","subclassLevelOption","a","b","previousSubclass","classs","adjChoice","c","innerWidth","obj","values","data","replace","item","element","target","closest","isOpen","classList","contains","intField","dataset","changeVal","toggle","add","setTimeout","remove","focus","maxes","_levelHitDice","items"],"mappings":"4GAKA,MAAMA,E,KAAsB,CAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eA2ChCC,SAASC,KAAKC,YAAYH,EAAoBI,S;;;;;;ACtC9C,MAAM,EAAsBH,SAASI,cAAc,YA+EnD,IAAIC,EA7EJ,EAAoBC,UAAY,8tEA4EhCN,SAASC,KAAKC,YAAY,EAAoBC,SAc9C,MAAM,UAA2B,IAC/B,gBACE,MAAO,sBAGT,qBACE,MAAO,QAGT,wBACE,MAAO,CAILI,YAAa,CACXC,KAAMC,QACNC,OAAO,EACPC,oBAAoB,GAMtBC,IAAK,CACHJ,KAAMK,OACNF,oBAAoB,EACpBG,SAAU,eAMZC,IAAK,CACHP,KAAMK,OACNF,oBAAoB,EACpBG,SAAU,eAMZE,KAAM,CACJR,KAAMK,OACNH,MAAO,EACPI,SAAU,iBAMhB,QACEG,MAAMC,QACNC,KAAKC,qBAAuBD,KAAKT,OAAS,GAC1CS,KAAKE,aAAab,KAAO,SACzBW,KAAKE,aAAaC,iBAAiB,SAAUH,KAAKI,gBAAgBC,KAAKL,OAGzE,wBAAwBM,GAEtBA,EAAEC,iBACFP,KAAKQ,iBAGP,wBAAwBF,GAEtBA,EAAEC,iBACFP,KAAKS,iBAGP,sBACE,IAAKvB,EAAkB,CAErBA,EAAmBY,MAAMY,SAASC,WAAU,GAG5C,MAAMC,EAAe,IAAUC,OAAOb,KAAKc,GAAK,YAAa,YACvDC,EAAiBH,EAAa5B,QAAQgC,cAAc,4BACpDC,EAAiBL,EAAa5B,QAAQgC,cAAc,4BACpDE,EAASN,EAAa5B,QAAQgC,cAAc,SAG5CG,EAAajC,EAAiBF,QAAQgC,cAAc,wBACpDI,EAAalC,EAAiBF,QAAQgC,cAAc,mBAC1DG,EAAWE,aAAaN,EAAgBK,GACxCD,EAAWpC,YAAYkC,GACvB/B,EAAiBF,QAAQD,YAAYmC,GAGvC,OAAOhC,EAGT,6BAEEc,KAAKsB,sBAAsB,gFAG7B,oBAAoBC,EAAUC,EAAWC,EAAWC,EAASjC,EAAKG,EAAKC,GACrE,IAAKG,KAAK2B,QACR,OAGF,MAAMC,EAAaC,IAAOA,GAAW,IAANA,EAE1BD,EAAWnC,IAASmC,EAAWhC,GAGlCE,MAAMgC,oBAAoBP,EAAUC,EAAWC,EAAWC,GAF1D1B,KAAK+B,WAMT,iBACE/B,KAAKgC,iBAAiB,GAGxB,iBACEhC,KAAKgC,gBAAgB,GAGvB,gBAAgBC,GACd,GAAIjC,KAAKkC,UAAYlC,KAAKmC,SACxB,OAGF,IAAI5C,EAAQ6C,WAAWpC,KAAKT,OAEvBS,KAAKT,MA4BCA,EAAQS,KAAKP,KACtBwC,EAAO,EACP1C,EAAQS,KAAKP,KACJF,EAAQS,KAAKJ,MACtBqC,EAAO,EACP1C,EAAQS,KAAKJ,KAhCG,GAAZI,KAAKP,KAAYwC,EAAO,GACZ,GAAZjC,KAAKJ,KAAYqC,EAAO,GACZ,GAAZjC,KAAKJ,KAAwB,GAAZI,KAAKP,KACxBwC,EAAO,EACP1C,EAAQ,IACc,MAAZS,KAAKJ,KAAeI,KAAKJ,KAAO,KACpB,MAAZI,KAAKP,KAAeO,KAAKP,KAAO,GAC1CF,EAAQ,EACCS,KAAKP,IAAM,GACpBF,EAAQS,KAAKP,IACTO,KAAKJ,IAAM,GAAKqC,EAAO,IACzB1C,EAAQS,KAAKJ,KAEfqC,EAAO,GACEjC,KAAKJ,IAAM,IACpBL,EAAQS,KAAKJ,IACTqC,EAAO,EACTA,EAAO,EAGHjC,KAAKqC,cAAc,EAAG9C,EAAQS,KAAKH,MAAQG,KAAKJ,IAClDL,GAAS,EAAIS,KAAKH,KAElBN,GAASS,KAAKH,MAYtB,MAAMyC,EAAWtC,KAAKqC,cAAcJ,EAAM1C,GACrCS,KAAKT,OAAiB,GAAR0C,IAAajC,KAAKuC,4BAA4BN,EAAM1C,IACrES,KAAKwC,UAAUF,GAInB,UAAU/C,GACRS,KAAKT,MAAQS,KAAKE,aAAaX,MAAQkD,OAAOL,WAAW7C,IACzDS,KAAK0C,cAAc,IAAIC,YAAY,SAAU,CAACC,SAAS,KAGzD,cAAcX,EAAMY,GAClB,IAAIhD,EAAOG,KAAKH,MAAQ,EACtBJ,EAAMO,KAAKP,KAAO,EAGpB,MAAMqD,EAAaC,KAAKnD,IAAII,KAAKgD,eAAeH,GAC9C7C,KAAKgD,eAAenD,GACpBG,KAAKgD,eAAevD,IAEtBI,GAAQiD,EAERrD,GAAOqD,EAEP,MAAMG,IAHNJ,EAAeE,KAAKG,MAAML,EAAeC,IAGVrD,GAAOI,EAEtC,OAAIoC,EAAO,GACDY,EAAeI,EAASpD,GAAQiD,EAC/Bb,EAAO,GACRY,GAAgBI,GAAUpD,IAASiD,EAEpCD,EAAeC,EAI1B,iBAAiBK,GACf,MAAMC,EAAIX,OAAOU,GACXE,EAAID,EAAEE,QAAQ,KACpB,OAAc,IAAPD,EAAW,EAAID,EAAEG,OAASF,EAAI,EAGvC,eAAeF,GACb,IAAKK,MAAML,GACT,OAAOJ,KAAKU,IAAI,GAAIzD,KAAK0D,iBAAiBP,IAI9C,4BAA4BlB,EAAM1C,GAChC,OAAI0C,EAAO,EACU,MAAZjC,KAAKP,KAAeO,KAAKqC,cAAcJ,EAAM1C,IAAUS,KAAKP,IAC1DwC,EAAO,EACG,MAAZjC,KAAKJ,KAAeI,KAAKqC,cAAcJ,EAAM1C,IAAUS,KAAKJ,IAE5DI,KAAKqC,cAAcJ,EAAM1C,IAAUS,KAAKJ,KAAOI,KAAKqC,cAAcJ,EAAM1C,IAAUS,KAAKP,IAIlG,SAASkE,GACP,MAAM1B,EAAO0B,GAAQ3D,KAAKH,MAAQ,GAC5BN,EAAQ6C,WAAWpC,KAAKT,OAC9B,OAAQS,KAAKT,QAAWS,KAAKkC,UAAYlC,KAAKuC,4BAA4BN,EAAM1C,GAGlF,aAAaM,GAEXG,KAAK4D,iBAAmB5D,KAAK6D,qBAAqD,OAA9B7D,KAAK8D,aAAa,QACtE9D,KAAKE,aAAaL,KAAOG,KAAK4D,iBAAmB/D,EAAO,MAExDG,KAAK6D,qBAAsB,EAC3B7D,KAAK+D,aAAa,OAAQlE,GAG5B,YAAYJ,GACVO,KAAKE,aAAaT,IAAMA,EAG1B,YAAYG,GACVI,KAAKE,aAAaN,IAAMA,EAG1B,cAAcoE,EAAQC,GAEhBD,GAAUR,MAAMpB,WAAW4B,IAC7BhE,KAAKT,MAAQ,GACkB,iBAAfS,KAAKT,QACrBS,KAAKT,MAAQkD,OAAOzC,KAAKT,QAG3BO,MAAMoE,cAAclE,KAAKT,MAAO0E,GAGlC,WAAW3D,GACQ,IAAbA,EAAE6D,SACJ7D,EAAEC,iBACFP,KAAKS,kBACiB,IAAbH,EAAE6D,UACX7D,EAAEC,iBACFP,KAAKQ,kBAEPV,MAAMsE,WAAW9D,GAGnB,kBACEN,KAAK+B,WAGP,gBAEE,YAAiBsC,IAAbrE,KAAKP,UAAkC4E,IAAbrE,KAAKJ,KAAqBI,KAAK4D,iBACpD5D,KAAKE,aAAaoE,gBAGpBxE,MAAMwE,iBAIjBC,OAAOC,eAAeC,OAAO,EAAmB3D,GAAI;;;;;;AClXpD,MAAM,EAAsBjC,SAASI,cAAc,YAEnD,EAAoBE,UAAY,uEAKhCN,SAASC,KAAKC,YAAY,EAAoBC,SAa9C,MAAM,UAA4B,EAChC,gBACE,MAAO,uBAGT,qBACE,MAAO,QAGT,wBAEE,MAAO,CAIL0C,QAASe,OAITiC,oBAAqBpF,QAIrBkC,UAAW9B,OAIX+B,UAAW/B,QAIf,QACEI,MAAMC,QACNC,KAAK2E,oBAAsB,UAG7B,cAAcX,EAAQC,GACpB,GAAe,KAAXD,IAAkBhE,KAAK4E,YAAYZ,GAIrC,OAHAa,QAAQC,KAAK,oCAAoCd,0DAEjDhE,KAAKT,MAAQ,IAGfO,MAAMoE,cAAcF,EAAQC,GAG9B,aAAaD,EAAQC,GACnB,IAAKjE,KAAK+E,gBAAgBf,GAKxB,OAJAa,QAAQC,KAAK,oCAAoCd,uGAGjDhE,KAAKH,KAAO,GAGdC,MAAMkF,aAAahB,EAAQC,GAG7B,YAAY1E,GACV,MAAO,cAAc0F,KAAKxC,OAAOlD,IAGnC,gBAAgBA,GACd,MAAO,QAAQ0F,KAAKxC,OAAOlD,KAI/BgF,OAAOC,eAAeC,OAAO,EAAoB3D,GAAI,I,qHC/F9C,MAAMoE,EAAkB,CAC7B,gBAAiB,CACfC,MAAO,CACLC,EAAG,CACDC,KAAM,sBACNC,MAAO,EACPC,QAAS,CAAC,yBAA0B,iCAAkC,qBAAsB,2BAA4B,2BAE1HC,EAAG,CACDH,KAAM,sBACNC,MAAO,EACPC,QAAS,CAAC,sBAAuB,0CAA2C,+BAAgC,2BAA4B,+BAAgC,2BAA4B,kCAAmC,0BAA2B,yBAA0B,iCAAkC,qBAAsB,2BAA4B,2BAElXE,GAAI,CACFJ,KAAM,sBACNC,MAAO,EACPC,QAAS,CAAC,uBAAwB,2BAA4B,oCAAqC,gCAAiC,uBAAwB,mCAAoC,sBAAuB,0CAA2C,+BAAgC,2BAA4B,+BAAgC,2BAA4B,kCAAmC,0BAA2B,yBAA0B,iCAAkC,qBAAsB,2BAA4B,2BAExiBG,GAAI,CACFL,KAAM,sBACNC,MAAO,EACPC,QAAS,CAAC,0CAA2C,6BAA8B,8BAA+B,0BAA2B,0BAA2B,sCAAuC,uBAAwB,2BAA4B,oCAAqC,gCAAiC,uBAAwB,mCAAoC,sBAAuB,0CAA2C,+BAAgC,2BAA4B,+BAAgC,2BAA4B,kCAAmC,0BAA2B,yBAA0B,iCAAkC,qBAAsB,2BAA4B,2BAE7uBI,GAAI,CACFN,KAAM,sBACNC,MAAO,EACPC,QAAS,CAAC,4BAA6B,4BAA6B,oCAAqC,0CAA2C,0BAA2B,iCAAkC,0BAA2B,0CAA2C,6BAA8B,8BAA+B,0BAA2B,0BAA2B,sCAAuC,uBAAwB,2BAA4B,oCAAqC,gCAAiC,uBAAwB,mCAAoC,sBAAuB,0CAA2C,+BAAgC,2BAA4B,+BAAgC,2BAA4B,kCAAmC,0BAA2B,yBAA0B,iCAAkC,qBAAsB,2BAA4B,6BAIn9B,wBAAyB,CACvBJ,MAAO,CACLC,EAAG,CACDC,KAAM,cACNC,MAAO,EACPjG,KAAM,8CAERuG,EAAG,CACDP,KAAM,cACNC,MAAO,EACPjG,KAAM,8CAERwG,EAAG,CACDR,KAAM,cACNC,MAAO,EACPjG,KAAM,8CAERyG,GAAI,CACFT,KAAM,cACNC,MAAO,EACPjG,KAAM,8CAERqG,GAAI,CACFL,KAAM,cACNC,MAAO,EACPjG,KAAM,8CAER0G,GAAI,CACFV,KAAM,cACNC,MAAO,EACPjG,KAAM,gDAIZ2G,UAAW,CACTb,MAAO,CACLC,EAAG,CACDC,KAAM,cACNC,MAAO,EACPjG,KAAM,6BAER4G,EAAG,CACDZ,KAAM,cACNC,MAAO,EACPjG,KAAM,6BAERoG,GAAI,CACFJ,KAAM,cACNC,MAAO,EACPjG,KAAM,6BAER6G,GAAI,CACFb,KAAM,cACNC,MAAO,EACPjG,KAAM,6BAER8G,GAAI,CACFd,KAAM,cACNC,MAAO,EACPjG,KAAM,+BAIZ+G,UAAW,CACTC,WAAY,CACV,4BAA6B,CAC3BC,EAAG,CACDjB,KAAM,eACNC,MAAO,EACPC,QAAS,CAAC,OAAQ,QAAS,MAAO,QAAS,SAE7CU,EAAG,CACDZ,KAAM,sBACNC,MAAO,EACPC,QAAS,CAAC,OAAQ,QAAS,MAAO,QAAS,SAE7CW,GAAI,CACFb,KAAM,qBACNC,MAAO,EACPC,QAAS,CAAC,OAAQ,QAAS,MAAO,QAAS,YAKnDgB,KAAM,CACJF,WAAY,CACV,oBAAqB,CACnBC,EAAG,CACDjB,KAAM,iBACNC,MAAO,EACPjG,KAAM,WAKdmH,KAAM,CACJH,WAAY,CACV,2BAA4B,CAC1BC,EAAG,CACDjB,KAAM,uBACNC,MAAO,EACPjG,KAAM,MAER4G,EAAG,CACDZ,KAAM,uBACNC,MAAO,EACPjG,KAAM,MAERyG,GAAI,CACFT,KAAM,uBACNC,MAAO,EACPjG,KAAM,MAERoH,GAAI,CACFpB,KAAM,uBACNC,MAAO,EACPjG,KAAM,SAKdqH,QAAS,CACPvB,MAAO,CACLwB,EAAG,CACDtB,KAAM,iBACNhG,KAAM,OACNiG,MAAO,KAIbsB,QAAS,CACPzB,MAAO,CACLC,EAAG,CACDC,KAAM,iBACNhG,KAAM,OACNiG,MAAO,KAIbuB,OAAQ,CACN1B,MAAO,CACLC,EAAG,CACDC,KAAM,iBACNhG,KAAM,OACNiG,MAAO,KAIbwB,SAAU,CACR3B,MAAO,CACLmB,EAAG,CACDjB,KAAM,YACNhG,KAAM,KACNiG,MAAO,GAETG,GAAI,CACFJ,KAAM,YACNhG,KAAM,KACNiG,MAAO,GAETmB,GAAI,CACFpB,KAAM,YACNhG,KAAM,KACNiG,MAAO,KAIbyB,QAAS,CACP5B,MAAO,CACLC,EAAG,CACDC,KAAM,uBACNhG,KAAM,KACNiG,MAAO,GAETgB,EAAG,CACDjB,KAAM,YACNhG,KAAM,KACNiG,MAAO,GAETE,EAAG,CACDH,KAAM,uBACNhG,KAAM,KACNiG,MAAO,GAETO,EAAG,CACDR,KAAM,uBACNhG,KAAM,KACNiG,MAAO,GAET0B,EAAG,CACD3B,KAAM,uBACNhG,KAAM,KACNiG,MAAO,GAET2B,GAAI,CACF5B,KAAM,uBACNhG,KAAM,KACNiG,MAAO,GAETI,GAAI,CACFL,KAAM,uBACNhG,KAAM,KACNiG,MAAO,GAETa,GAAI,CACFd,KAAM,uBACNhG,KAAM,KACNiG,MAAO,M,kDC3Nf,MAAM,UAAiC,YAAY,MAEjD,wBACE,MAAO,CACL4B,OAAQ,CACN7H,KAAM8H,MACN5H,MAAO,IAET6H,QAAS,CACP/H,KAAMgI,QAERhB,WAAY,CACVhH,KAAMgI,OACN9H,WAAO8E,GAETiD,iBAAkB,CAChBjI,KAAMC,QACNC,OAAO,GAETgI,WAAY,CACVlI,KAAMC,QACNC,OAAO,IAKb,oBACEO,MAAM0H,oBAENxH,KAAKyH,uBAA0BnH,IAC7B,IAAIoH,EAAYpH,EAAEqH,OAAOD,UACzB1H,KAAK4H,oBAAoBF,IAG3B1H,KAAK4H,oBAAoB,eACzB,cAAsBzH,iBAAiB,qBAAsBH,KAAKyH,wBAElEzH,KAAK6H,gBAAmBvH,IACtBN,KAAKuH,WAAajH,EAAEqH,OAAOJ,YAE7B,cAAqBpH,iBAAiB,iBAAkBH,KAAK6H,iBAC7D7H,KAAKuH,WAAa,cAGpB,uBACEzH,MAAMgI,uBAEN,cAAsBC,oBAAoB,qBAAsB/H,KAAKyH,wBACrE,cAAqBM,oBAAoB,iBAAkB/H,KAAK6H,iBAGlE,0BAA0BH,GACxB,GAAIA,GAAaA,EAAUR,QAAUQ,EAAUR,OAAO3D,OAAQ,CAC5DsB,QAAQmD,MAAM,4BAA6BN,GAC3C1H,KAAKsH,kBAAmB,EACxBtH,KAAK0H,UAAYA,EACjB1H,KAAKoH,cAAgB,YAAmBM,GACxC1H,KAAKqG,WAAa,oBAAUqB,EAAUrB,YACtCrG,KAAKiI,WAAa,YAAeP,GACjC1H,KAAKkI,mBAAqBlI,KAAKmI,kBAAkBT,EAAW1H,KAAKoH,SAEjEpH,KAAK0C,cAAc,IAAIC,YAAY,gBAAiB,CAAEC,SAAS,EAAMwF,UAAU,KAE/EpI,KAAKkH,OAAS,oBAAUQ,EAAUR,QAElC,MAAMmB,EAAe,GACrB,IAAK,IAAIhF,EAAI,EAAGA,EAAIqE,EAAUR,OAAO3D,OAAQF,IAC3CgF,EAAaC,WAAW,YAAkBjF,IAE5CrD,KAAKqI,aAAeA,OAEpBrI,KAAKkH,OAAS,GACdlH,KAAKsH,kBAAmB,EACxBtH,KAAK0C,cAAc,IAAIC,YAAY,gBAAiB,CAAEC,SAAS,EAAMwF,UAAU,KAInF,uBAAuBlB,EAAQqB,EAAOnB,EAASf,GAC7C,GAAIe,GAAWF,EAAOqB,IAAUlC,EAAY,CAC1C,MAAMmC,EAAYtB,EAAOqB,GAAOlD,KAC1BoD,EAAWrB,EAAQoB,GAEzB,GAAIC,EAAU,CACZ,MAAMC,EAAgBD,EAASC,cAC/B,IAAIC,GAAiB,EACjBC,GAAoB,EAExB,GAAI1B,EAAO3D,QAAUgF,EAAQ,EAAG,CAC9B,IAAK,IAAIlF,EAAI,EAAGA,GAAKkF,EAAOlF,IAC1B,GAAI6D,EAAO7D,GAAGgC,OAASmD,EAAW,CAChCG,IAEA,MAAME,EAAwBH,EAAcC,GAC5C,GAAIE,EAAuB,CACEA,EAAsBC,KAAKzF,GAAKA,EAAE0F,sBAE3DH,KAMR,MAAMC,EAAwBH,EAAcC,GAC5C,GAAIE,EAAuB,CAEzB,GAD2BA,EAAsBG,KAAK3F,GAAKA,EAAE0F,sBACnC1C,GAAcA,EAAWmC,IAAcC,EAASpC,YAAcoC,EAASpC,WAAW9C,OAAQ,CAClH,MAAM0F,EAAcR,EAASpC,WAAWyC,KAAKzF,GAAKgD,EAAWmC,GAAWnD,OAAShC,EAAEgC,MACnF,GAAI4D,GAAeA,EAAYC,kBAAoBD,EAAYC,iBAAiBN,GAE9E,OADAK,EAAYC,iBAAiBN,GAAkBO,IAAK9F,IAAQA,EAAE+F,YAAa,EAAa/F,IACjF,IAAIwF,GAAuBQ,OAAOJ,EAAYC,iBAAiBN,IAG1E,OAAOC,EAAsBS,OAAQC,IACnC,MAAMlE,EAAO,uBAAakE,GAC1B,MAAgB,4BAATlE,GAA+C,wBAATA,QAQzD,iCAAiC6B,EAAQqB,EAAOnB,EAASf,EAAY6B,GACnE,GAAIhB,QAAoB7C,IAAVkE,GAAuBnB,GAAWf,EAAY,CAC1D,MAAMmD,EAAqBxJ,KAAKyJ,uBAAuBvC,EAAQqB,EAAOnB,EAASf,GAE/E,GAAImD,EACF,OAAOA,EAAmBL,IAAIO,IACrB,CAAErE,KAAM,uBAAaqE,GAAIN,WAAYM,EAAEN,WAAYO,OAAQD,EAAEC,UACnEL,OAAOC,KAC8BrB,GAAgBA,EAAaK,IAAUL,EAAaK,GAAOS,KAAMY,IACrG,MAAMC,EAA+BD,EAAOE,YAAcF,EAAOE,UAAUzE,OAASkE,EAAQlE,MAAQuE,EAAOE,UAAUH,SAAWJ,EAAQI,QAClII,EAAoBH,EAAOI,MAAQJ,EAAOI,KAAKhB,KAAMiB,GAA4BA,EAAgB5E,OAASkE,EAAQlE,MAAQ4E,EAAgBN,SAAWJ,EAAQI,QAEnK,MAAqB,gBAAdC,EAAOM,IAAwBL,GAAgCE,OAShF,OAAOxB,GACL,OAAOA,EAAQ,EAGjB,aAAajI,GACX,MAAMiI,EAAQjI,EAAE6J,MAAMC,OAAO7B,MAC3BC,EAAYxI,KAAKkH,OAAOqB,GAAOlD,KAC/BgF,EAAQrK,KAAKkH,OAAOoC,OAAOgB,GAAOA,EAAIjF,OAASmD,GAAWjF,OAC1DgH,EAAqBlD,OAAOmD,KAAKxK,KAAK0H,UAAU+C,SAASnB,OAAOoB,GAAOA,EAAIC,WAAWnC,EAAUoC,cAAgB,IAAMP,IAExHrK,KAAKkH,OAAO2D,OAAOtC,EAAO,GAC1BgC,EAAmBO,QAAQJ,WAClB1K,KAAK0H,UAAU+C,QAAQC,KAEhC,aAAe1K,KAAKkH,QAGtB,eAAe5G,GACb,IAAIyK,EAAWzK,EAAE6J,MAAMC,OAAO7B,MAE1BvI,KAAKgL,gBAAkBD,EACzB/K,KAAKgL,cAAgB,KAErBhL,KAAKgL,cAAgBD,EAIzB,eAAeC,EAAeD,GAC5B,IAAIE,EAAc,GAClB,GAAID,IAAkBD,EAAU,CAC9B,MAAMG,EAAW,IAAI,IACfC,EAAWnL,KAAKyJ,uBAAuBzJ,KAAKkH,OAAQ6D,EAAU/K,KAAKoH,QAASpH,KAAKqG,YAEvF,GAAI8E,GAAYA,EAAS5H,OACvB,IAAK,IAAIgG,KAAW4B,EAAU,CACUnL,KAAKkI,cAAgBlI,KAAKkI,aAAa6C,IAAa/K,KAAKkI,aAAa6C,GAAU/B,KAAMY,IAC1H,MAAMC,EAA+BD,EAAOE,YAAcF,EAAOE,UAAUzE,OAASkE,EAAQlE,MAAQuE,EAAOE,UAAUH,SAAWJ,EAAQI,QAClII,EAAoBH,EAAOI,MAAQJ,EAAOI,KAAKhB,KAAMiB,GAA4BA,EAAgB5E,OAASkE,EAAQlE,MAAQ4E,EAAgBN,SAAWJ,EAAQI,QAEnK,MAAqB,gBAAdC,EAAOM,IAAwBL,GAAgCE,KAGtEmB,EAASE,qBACP7B,EACA0B,EACA,OACA5G,GACA,GAKR,MAAO,sCAAwC4G,EAAYI,KAAK,IAAM,SAEtE,MAAO,GAIX,wBAAwB3D,EAAWN,GACjC,MAAMkE,EAAe,GACrB,GAAI5D,GAAaA,EAAUR,QAAUQ,EAAUR,OAAO3D,OACpD,IAAK,IAAIF,EAAI,EAAGA,EAAIqE,EAAUR,OAAO3D,OAAQF,IAC3CiI,EAAahD,WAAWtI,KAAKuL,aAAa7D,EAAWN,EAAS/D,IAGlE,OAAOiI,EAGT,mBAAmB5D,EAAWN,EAASoE,GACrC,GAAIpE,GAAWM,EAAUR,QAAUQ,EAAUR,OAAO3D,QAAUmE,EAAUR,OAAO3D,OAASiI,EAAY,CAClG,IAAItE,EAASQ,EAAUR,OACrBb,EAAaqB,EAAUrB,WACvBmC,EAAYtB,EAAOsE,GAAYnG,KAC/BoG,EAAWrE,EAAQoB,GACnBS,EAAcwC,EAASpF,WAAWyC,KAAKzF,GAAKgD,EAAWmC,IAAcnC,EAAWmC,GAAWnD,OAAShC,EAAEgC,MAExG,GAAIoG,EAAU,CACZ,IAAIhB,EAAU,GACZiB,EAAkB,EAClBC,EAAsB,YAAuBF,GAE/C,IAAK,IAAIpI,EAAI,EAAGA,GAAKmI,EAAYnI,IAAK,CACxB6D,EAAO7D,GACTgC,OAASmD,GACjBkD,IAMJ,MAAME,EAAkB,GAExB,GAAIH,EAASI,iBAAkB,CAC7B,IAAIC,EAAwB,EAC5BL,EAASI,iBAAiBf,QAASiB,IACjC1E,OAAO2E,QAAQD,GAAoBjB,QAAQ,EAAEmB,EAAmBC,MAC9D7E,OAAO2E,QAAQE,GAAqBpB,QAAQ,EAAEqB,EAAoBC,MAChE,MAAMC,EAAiBC,SAASH,EAAmBI,MAAM,KAAKlB,KAAK,KAE/DgB,EAAiBP,GAA+C,aAAtBG,GAA0D,aAAtBA,IAChFH,EAAwBO,GAIe,IAArCZ,EAASI,iBAAiBtI,QAAgB8I,IAAmBX,IAC1DE,EAAgBC,mBACnBD,EAAgBC,iBAAmB,CAAC,KAEjCD,EAAgBC,iBAAiB,GAAGI,KACvCL,EAAgBC,iBAAiB,GAAGI,GAAqB,IAE3DL,EAAgBC,iBAAiB,GAAGI,GAAmBE,GAAsBC,SAMjFX,EAASI,iBAAiBtI,OAAS,GAAKuI,IAA0BJ,IACpEE,EAAgBC,iBAAmBJ,EAASI,kBAI7B,IAAfL,IACFI,EAAgBY,mBAAqBf,EAASgB,sBAAsBC,OAEhEjB,EAASgB,sBAAsBE,QACjCf,EAAgBgB,mBAAqB,CAAC,IACtCnB,EAASgB,sBAAsBE,MAAM7B,QAAQ+B,IAC3C,IAAIC,EAAOD,EAAEE,aAAeF,EAAEjC,cAC9BkC,EAAOA,EAAKE,SAAS,UAAY,SAAWF,EAC5ClB,EAAgBgB,mBAAmB,GAAGE,IAAQ,KAI9CrB,EAASgB,sBAAsBQ,UACjCrB,EAAgBsB,oBAAsB,CAAC,IACvCzB,EAASgB,sBAAsBQ,QAAQnC,QAAQ+B,IAC7C,IAAIC,EAAOD,EAAEE,aAAeF,EAAEjC,cAC1BkC,EAAKE,SAAS,WAChBF,EAAOA,EAAKP,MAAM,SAAS,GAAGY,OAAOZ,MAAM,KAAK,IAElDX,EAAgBsB,oBAAoB,GAAGJ,IAAQ,KAI/CrB,EAASgB,sBAAsBW,QACjCxB,EAAgByB,kBAAoB,CAAC,IACrC5B,EAASgB,sBAAsBW,MAAMtC,QAAQ+B,IAC3C,IAAIvH,EACAwH,EAAOD,EAAEE,aAAeF,EAAEjC,cAC9BtF,EAAQwH,EAAKE,SAAS,QAAU,EAAIF,EAAKE,SAAS,QAAU,EAAIF,EAAKE,SAAS,UAAY,EAAGF,EAAKE,SAAS,SAAW,EAAIF,EAAKE,SAAS,SAAW,EAAI,EACnJF,EAAKE,SAAS,WAChBF,EAAOA,EAAKP,MAAM,SAAS,GAAGY,OAAOZ,MAAM,KAAK,IAE9CO,EAAKE,SAAS,oBAAsBF,EAAKE,SAAS,uBACpDF,EAAOA,EAAKE,SAAS,mBAAqB,kBAAoB,qBAC9DpB,EAAgByB,kBAAkB,GAAGC,OAAS,CAAEtD,KAAM,CAAC8C,GAAOxH,UAE9DsG,EAAgByB,kBAAkB,GAAGP,IAAQ,MAKrDrC,EAAQnC,KAAK,CACX4B,GAAI,kBACJ0B,kBACAzG,MAAOqD,EAAUoC,cACjBP,MAAOqB,SAImBrH,IAAxBsH,GAAqCD,IAAoBC,GAC3DlB,EAAQnC,KAAK,CACX4B,GAAI,WACJF,KAAMyB,EAASpF,WACfkH,WAAY7F,EAAUrB,WAAWmC,KAKrC,MAAMgF,EAAqB,GAC3B,GAAIvE,GAAeA,EAAY4C,iBAAkB,CAC/C,IAAIC,EAAwB,GACxB2B,GAAc,EAClBxE,EAAY4C,iBAAiBf,QAASiB,IACpC1E,OAAO2E,QAAQD,GAAoBjB,QAAQ,EAAEmB,EAAmBC,MACpC,aAAtBD,IACFwB,GAAc,GAEmB,iBAAxBvB,GAAqC/E,MAAMuG,QAAQxB,IAC5D7E,OAAO2E,QAAQE,GAAqBpB,QAAQ,EAAEqB,EAAoBC,MAChE,MAAMC,EAAiBC,SAASH,EAAmBI,MAAM,KAAKlB,KAAK,KAE/DgB,EAAiBP,GAA+C,aAAtBG,IAC5CH,EAAwBO,GAIkB,IAAxCpD,EAAY4C,iBAAiBtI,QAAsC,aAAtB0I,GAAmCI,IAAmBX,IAChG8B,EAAmB3B,mBACtB2B,EAAmB3B,iBAAmB,CAAC,KAEpC2B,EAAmB3B,iBAAiB,GAAGI,KAC1CuB,EAAmB3B,iBAAiB,GAAGI,GAAqB,IAE9DuB,EAAmB3B,iBAAiB,GAAGI,GAAmBE,GAAsBC,UAOrFnD,EAAY4C,iBAAiBtI,OAAS,GAAKkK,IAAgB3B,IAA0BJ,IACxF8B,EAAmB3B,iBAAmB5C,EAAY4C,kBAEpDpB,EAAQnC,KAAK,CACX4B,GAAI,qBACJsD,qBACAG,SAAU1E,EAAY2E,UACtBzI,MAAOqD,EAAUoC,cACjBP,MAAOqB,IAKX,IAAIP,EAAWnL,KAAKyJ,uBAAuBvC,EAAQsE,EAAYpE,EAASf,GA0CxE,GAzCI8E,GAAYA,EAAS5H,QACnB4H,EAASrC,KAAMY,GAA0B,8BAAXA,EAAErE,QAC7BrF,KAAK6N,UACR7N,KAAK8N,UAAY,CACf5D,GAAI,MACJ/E,MAAOqD,EAAUoC,cACjBP,MAAOqB,EACPmC,QAAS,CACPE,KAAK,KAIXtD,EAAQnC,KAAKtI,KAAK8N,YAKlB3C,GAAYA,EAAS5H,QACvB4H,EAASL,QAAQvB,IACf,IAAKA,EAAQlE,KAAK2H,SAAS,WAAY,CACrC,MAAMpD,EAAS,CACbM,GAAI,cACJF,KAAM,CAAC,CAAC3E,KAAMkE,EAAQlE,KAAMsE,OAAQJ,EAAQI,SAC5CG,UAAW,YAAuBtB,EAAWgD,EAAYjC,EAAQlE,MACjEF,MAAOqD,EACP6B,MAAOmB,EACPjC,QAASA,EAAQlE,MAEnB8F,EAASL,QAAQkD,IACXA,EAASC,uBAAyBD,EAAShC,QAAQ,GAAGgB,SAAS,aAAegB,EAAShC,QAAQ,GAAGgB,SAASzD,EAAQlE,OACrHuE,EAAOI,KAAK1B,KAAK,CAACjD,KAAM2I,EAAS3I,KAAMsE,OAAQqE,EAASrE,WAGxDC,EAAOI,KAAKzG,OAAS,GACvBkH,EAAQnC,KAAKsB,MAOjB8B,EAAiB,CACnB,MAAMwC,EAAehJ,EAAgBsD,EAAUoC,eAE/C,GAAIsD,GAAgBA,EAAa/I,OAAS+I,EAAa/I,MAAMuG,GAAkB,CAC7E,MAAMyC,EAAoB,GAAG9E,OAAO6E,EAAa/I,MAAMuG,IAEvD,IAAK,MAAM0C,KAAoBD,EAC7B,GAAIC,EAAiB7I,QACnBkF,EAAQnC,KAAK,CACX4B,GAAI,eACJ7E,KAAM+I,EAAiB/I,KACvB2E,KAAMoE,EAAiB7I,QACvBD,MAAO8I,EAAiB9I,MAAQ,EAAI8I,EAAiB9I,MAAQ,EAC7DH,MAAOqD,EAAUoC,cACjBrB,QAAS6E,EAAiB/I,KAC1BgF,MAAOqB,EACP6B,WAAY,YAAe/E,EAAUoC,cAAec,EAAiB0C,EAAiB/I,aAEnF,GAAI+I,EAAiB/O,KAAM,CAChC,MAAMkG,QAAgB,YAAY,WAAY6I,EAAiB/O,MAC/D,IAAIkO,EAAa,YAAe/E,EAAUoC,cAAec,EAAiB0C,EAAiB/I,MACvFkI,IAEAA,EADEpG,MAAMuG,QAAQH,GACHA,EAAWpE,IAAIkF,GAAO9I,EAAQuD,KAAKwF,GAAOA,EAAIjJ,OAASgJ,EAAIhJ,MAAQiJ,EAAI3E,SAAW0E,EAAI1E,SAEtFpE,EAAQuD,KAAKwF,GAAOA,EAAIjJ,OAASkI,EAAWlI,MAAQiJ,EAAI3E,SAAW4D,EAAW5D,SAG/Fc,EAAQnC,KAAK,CACX4B,GAAI,eACJqE,eAAe,EACflJ,KAAM+I,EAAiB/I,KACvB2E,KAAMzE,EACND,MAAO8I,EAAiB9I,MAAQ,EAAI8I,EAAiB9I,MAAQ,EAC7DH,MAAOqD,EAAUoC,cACjBrB,QAAS6E,EAAiB/I,KAC1BgF,MAAOqB,EACP6B,aACAiB,gBAAiBrH,MAAMuG,QAAQH,GAAcA,EAAa,CAACA,MAMnE,GAAIW,GAAgBA,EAAa7H,YAAcA,EAAWmC,IAAc0F,EAAa7H,WAAWA,EAAWmC,GAAWnD,OAAS6I,EAAa7H,WAAWA,EAAWmC,GAAWnD,MAAMqG,GAAkB,CACnM,MAAM+C,EAAuB,GAAGpF,OAAO6E,EAAa7H,WAAWA,EAAWmC,GAAWnD,MAAMqG,IAE3F,IAAK,MAAMgD,KAAuBD,EAChC,GAAIC,EAAoBnJ,QACtBkF,EAAQnC,KAAK,CACX4B,GAAI,kBACJ7E,KAAMqJ,EAAoBrJ,KAC1B2E,KAAM0E,EAAoBnJ,QAC1BD,MAAOoJ,EAAoBpJ,MAAQ,EAAIoJ,EAAoBpJ,WAAQjB,EACnEc,MAAOqD,EAAUoC,cACjB+C,SAAUtH,EAAWmC,GACrBe,QAASmF,EAAoBrJ,KAC7BgF,MAAOqB,EACP6B,WAAY,YAAkB/E,EAAUoC,cAAevE,EAAWmC,GAAWnD,KAAKuF,cAAec,EAAiBgD,EAAoBrJ,aAEnI,GAAIqJ,EAAoBrP,KAAM,CACnC,MAAMkG,QAAgB,YAAY,WAAYmJ,EAAoBrP,MAClE,IAAIkO,EAAa,YAAkB/E,EAAUoC,cAAevE,EAAWmC,GAAWnD,KAAKuF,cAAec,EAAiBgD,EAAoBrJ,MACvIkI,IAEAA,EADEpG,MAAMuG,QAAQH,GACHA,EAAWpE,IAAIkF,GAAO9I,EAAQuD,KAAKwF,GAAOA,EAAIjJ,OAASgJ,EAAIhJ,MAAQiJ,EAAI3E,SAAW0E,EAAI1E,SAEtFpE,EAAQuD,KAAKwF,GAAOA,EAAIjJ,OAASkI,EAAWlI,MAAQiJ,EAAI3E,SAAW4D,EAAW5D,SAG/Fc,EAAQnC,KAAK,CACX4B,GAAI,kBACJqE,eAAe,EACflJ,KAAMqJ,EAAoBrJ,KAC1B2E,KAAMzE,EACND,MAAOoJ,EAAoBpJ,MAAQ,EAAIoJ,EAAoBpJ,WAAQjB,EACnEc,MAAOqD,EAAUoC,cACjB+C,SAAUtH,EAAWmC,GACrBe,QAASmF,EAAoBrJ,KAC7BgF,MAAOqB,EACP6B,WAAYA,EACZiB,gBAAiBrH,MAAMuG,QAAQH,GAAcA,EAAa,CAACA,OAOrE,OAAO9C,GAGX,MAAO,GAGT,OAAOkE,EAAGC,GACR,OAAOD,IAAMC,EAGf,qBAAqBvE,EAAOwE,GAC1B,OAAQlB,IACN,iBAActJ,EAAWgG,EAAMhF,KAAMsI,EAAUkB,IAInD,oBAAoBxE,GAClB,OAAOrK,KAAKoH,QAAQiD,EAAMhF,MAAMgB,WAGlC,sBAAsBgE,EAAOhE,GAC3B,OAAOA,EAAWgE,EAAMhF,MAG1B,+BAA+ByJ,EAAQzE,EAAOd,GAC5C,OAAQK,IACN,IAAImF,EAEFA,EADE5H,MAAMuG,QAAQ9D,GACJA,EAAOT,IAAI6F,GACjBA,EAAE3J,KACG,CAAEA,KAAM2J,EAAE3J,KAAMsE,OAAQqF,EAAErF,QAE1BqF,GAGFpF,EAAOvE,KACJ,CAAEA,KAAMuE,EAAOvE,KAAMsE,OAAQC,EAAOD,QAEpCC,EAEd,aAAekF,EAAQzE,EAAOd,EAASwF,IAI3C,kCAAkCD,EAAQnB,EAAUtD,EAAOd,GACzD,OAAQK,IACN,IAAImF,EAEFA,EADE5H,MAAMuG,QAAQ9D,GACJA,EAAOT,IAAI6F,GACjBA,EAAE3J,KACG,IAAK2J,GAELA,GAGFpF,EAAOvE,KACJ,IAAKuE,GAELA,EAEd,aAAkBkF,EAAQnB,EAAStI,KAAKuF,cAAeP,EAAOd,EAASwF,IAI3E,4BAA4BD,EAAQzE,EAAOd,GACzC,OAAQK,IACN,IAAImF,EAEFA,EADE5H,MAAMuG,QAAQ9D,GACJA,EAAOT,IAAI6F,GACjBA,EAAE3J,KACG,IAAK2J,GAELA,GAGFpF,EAAOvE,KACJ,IAAKuE,GAELA,EAEd,aAAuBkF,EAAQzE,EAAOd,EAASwF,IAInD,cAAc1E,EAAOnD,GACnB,OAAOA,EAAO5D,QAAQ+G,GAGxB,YACE,OAAO9F,OAAO0K,WAAa,IAG7B,UAAUC,GACR,OAAO7H,OAAO8H,OAAOD,GAGvB,SAASE,EAAM7G,GACb,OAAO6G,EAAOA,EAAK7G,GAAS,KAG9B,cAAcC,GACZ,OAAOA,EAAYA,EAAU6G,QAAQ,cAAe,IAAM,GAG5D,eAAe/O,GACb,iBAAa+D,EAAW/D,EAAE6J,MAAMmF,KAAM,WAGxC,SAAS9G,EAAWD,GAClB,OAAO,YAAuBC,EAAWD,EAAQ,GAGnD,eAAehB,GACb,OAAOA,EAAa,YAAc,gBAGpC,eAAejH,GACb,MAAMiP,EAAUjP,EAAEkP,OAAOC,QAAQ,cAC3BC,EAASH,EAAQI,UAAUC,SAAS,mBACpCC,EAAWN,EAAQvO,cAAc,wBACjCqJ,EAAQiC,SAASiD,EAAQO,QAAQzF,OAAS,EAC1C7B,EAAY+G,EAAQO,QAAQtH,UAC5B5I,EAAM0M,SAASiD,EAAQO,QAAQlQ,KAErC,GAAI8P,EAAQ,CACV,MAAMK,EAAYzD,SAASuD,EAAStQ,OAC/BwQ,EAEMA,GAAanQ,GAAOmQ,EAAY,GACzC,aAAUvH,EAAW6B,EAAO0F,GAC5BF,EAAStQ,MAAQ,GACjBgQ,EAAQI,UAAUK,OAAO,qBAEzBT,EAAQI,UAAUM,IAAI,oBACtBC,WAAW,KACTX,EAAQI,UAAUQ,OAAO,qBACxB,MATHZ,EAAQI,UAAUK,OAAO,wBAY3BT,EAAQI,UAAUK,OAAO,mBACzBH,EAASO,QAIb,cAAc7H,EAAO8H,GACnB,GAAIA,QAAmBhM,IAAVkE,GAAuB8H,EAAM9H,GACxC,OAAO8H,EAAM9H,GAIjB,iBAAiBA,EAAOF,GAEtB,MAAO,iBADMrI,KAAKsQ,cAAc/H,EAAOF,IACR,KAGjC,mBAAmBkI,GACjB,OAAOA,EAAMlF,KAAK,KAGpB,sBACE,OAAO,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OA8Zf7G,eAAeC,OAAO,8BAA+B","file":"8.bundle.js","sourcesContent":["import '@vaadin/vaadin-lumo-styles/font-icons.js';\nimport '@vaadin/vaadin-lumo-styles/sizing.js';\nimport '@vaadin/vaadin-lumo-styles/mixins/field-button.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\n\nconst $_documentContainer = html`<dom-module id=\"lumo-number-field\" theme-for=\"vaadin-number-field\">\n  <template>\n    <style include=\"lumo-field-button\">\n      :host {\n        width: 8em;\n      }\n\n      :host([has-controls]:not([theme~=\"align-right\"])) [part=\"value\"] {\n        text-align: center;\n      }\n\n      [part=\"decrease-button\"][disabled],\n      [part=\"increase-button\"][disabled] {\n        opacity: 0.2;\n      }\n\n      :host([has-controls]) [part=\"input-field\"] {\n        padding: 0;\n      }\n\n      [part=\"decrease-button\"],\n      [part=\"increase-button\"] {\n        cursor: pointer;\n        font-size: var(--lumo-icon-size-s);\n        width: 1.6em;\n        height: 1.6em;\n      }\n\n      [part=\"decrease-button\"]::before,\n      [part=\"increase-button\"]::before {\n        margin-top: 0.2em;\n      }\n\n      /* RTL specific styles */\n\n      :host([dir=\"rtl\"]) [part=\"value\"],\n      :host([dir=\"rtl\"]) [part=\"input-field\"] ::slotted(input) {\n        --_lumo-text-field-overflow-mask-image: linear-gradient(to left, transparent, #000 1.25em);\n      }\n    </style>\n  </template>\n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\n","/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport '@polymer/polymer/polymer-element.js';\n\nimport '@polymer/polymer/lib/elements/custom-style.js';\nimport { TextFieldElement } from './vaadin-text-field.js';\nimport { DomModule } from '@polymer/polymer/lib/elements/dom-module.js';\nconst $_documentContainer = document.createElement('template');\n\n$_documentContainer.innerHTML = `<dom-module id=\"vaadin-number-field-template\">\n  <template>\n    <style>\n      :host([readonly]) [part\\$=\"button\"] {\n        pointer-events: none;\n      }\n\n      [part=\"decrease-button\"]::before {\n        content: \"−\";\n      }\n\n      [part=\"increase-button\"]::before {\n        content: \"+\";\n      }\n\n      [part=\"decrease-button\"],\n      [part=\"increase-button\"] {\n        -webkit-user-select: none;\n        -moz-user-select: none;\n        -ms-user-select: none;\n        user-select: none;\n      }\n\n      /* Hide the native arrow icons */\n      [part=\"value\"]::-webkit-outer-spin-button,\n      [part=\"value\"]::-webkit-inner-spin-button {\n        -webkit-appearance: none;\n        margin: 0;\n      }\n\n      [part=\"value\"] {\n        /* Older Firefox versions (v47.0) requires !important */\n        -moz-appearance: textfield !important;\n      }\n\n      :host([dir=\"rtl\"]) [part=\"input-field\"] {\n        direction: ltr;\n      }\n\n      :host([dir=\"rtl\"]) [part=\"value\"]::placeholder {\n        direction: rtl;\n      }\n\n      :host([dir=\"rtl\"]) [part=\"input-field\"] ::slotted(input)::placeholder {\n        direction: rtl;\n      }\n\n      :host([dir=\"rtl\"]) [part=\"value\"]:-ms-input-placeholder,\n      :host([dir=\"rtl\"]) [part=\"input-field\"] ::slotted(input):-ms-input-placeholder {\n        direction: rtl;\n      }\n\n      :host([dir=\"rtl\"]:not([has-controls])) [part=\"value\"]::placeholder {\n        text-align: left;\n      }\n\n      :host([dir=\"rtl\"]:not([has-controls])) [part=\"input-field\"] ::slotted(input)::placeholder {\n        text-align: left;\n      }\n\n      :host([dir=\"rtl\"]:not([has-controls])) [part=\"value\"]:-ms-input-placeholder,\n      :host([dir=\"rtl\"]:not([has-controls])) [part=\"input-field\"] ::slotted(input):-ms-input-placeholder {\n        text-align: left;\n      }\n    </style>\n\n    <div disabled\\$=\"[[!_allowed(-1, value, min, max, step)]]\" part=\"decrease-button\" on-click=\"_decreaseValue\" on-touchend=\"_decreaseButtonTouchend\" hidden\\$=\"[[!hasControls]]\">\n    </div>\n\n    <div disabled\\$=\"[[!_allowed(1, value, min, max, step)]]\" part=\"increase-button\" on-click=\"_increaseValue\" on-touchend=\"_increaseButtonTouchend\" hidden\\$=\"[[!hasControls]]\">\n    </div>\n  </template>\n\n  \n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\nlet memoizedTemplate;\n\n/**\n* `<vaadin-number-field>` is a Web Component for number field control in forms.\n*\n* ```html\n* <vaadin-number-field label=\"Number\">\n* </vaadin-number-field>\n* ```\n*\n* @extends PolymerElement\n* @demo demo/index.html\n*/\nclass NumberFieldElement extends TextFieldElement {\n  static get is() {\n    return 'vaadin-number-field';\n  }\n\n  static get version() {\n    return '2.6.2';\n  }\n\n  static get properties() {\n    return {\n      /**\n      * Set to true to display value increase/decrease controls.\n      */\n      hasControls: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n\n      /**\n      * The minimum value of the field.\n      */\n      min: {\n        type: Number,\n        reflectToAttribute: true,\n        observer: '_minChanged'\n      },\n\n      /**\n       * The maximum value of the field.\n       */\n      max: {\n        type: Number,\n        reflectToAttribute: true,\n        observer: '_maxChanged'\n      },\n\n      /**\n       * Specifies the allowed number intervals of the field.\n       */\n      step: {\n        type: Number,\n        value: 1,\n        observer: '_stepChanged'\n      }\n\n    };\n  }\n\n  ready() {\n    super.ready();\n    this.__previousValidInput = this.value || '';\n    this.inputElement.type = 'number';\n    this.inputElement.addEventListener('change', this.__onInputChange.bind(this));\n  }\n\n  _decreaseButtonTouchend(e) {\n    // Cancel the following click and focus events\n    e.preventDefault();\n    this._decreaseValue();\n  }\n\n  _increaseButtonTouchend(e) {\n    // Cancel the following click and focus events\n    e.preventDefault();\n    this._increaseValue();\n  }\n\n  static get template() {\n    if (!memoizedTemplate) {\n      // Clone the superclass template\n      memoizedTemplate = super.template.cloneNode(true);\n\n      // Retrieve this element's dom-module template\n      const thisTemplate = DomModule.import(this.is + '-template', 'template');\n      const decreaseButton = thisTemplate.content.querySelector('[part=\"decrease-button\"]');\n      const increaseButton = thisTemplate.content.querySelector('[part=\"increase-button\"]');\n      const styles = thisTemplate.content.querySelector('style');\n\n      // Add the buttons and styles to the text-field template\n      const inputField = memoizedTemplate.content.querySelector('[part=\"input-field\"]');\n      const prefixSlot = memoizedTemplate.content.querySelector('[name=\"prefix\"]');\n      inputField.insertBefore(decreaseButton, prefixSlot);\n      inputField.appendChild(increaseButton);\n      memoizedTemplate.content.appendChild(styles);\n    }\n\n    return memoizedTemplate;\n  }\n\n  _createConstraintsObserver() {\n    // NOTE: do not call \"super\" but instead override the method to add extra arguments\n    this._createMethodObserver('_constraintsChanged(required, minlength, maxlength, pattern, min, max, step)');\n  }\n\n  _constraintsChanged(required, minlength, maxlength, pattern, min, max, step) {\n    if (!this.invalid) {\n      return;\n    }\n\n    const isNumUnset = n => (!n && n !== 0);\n\n    if (!isNumUnset(min) || !isNumUnset(max)) {\n      this.validate();\n    } else {\n      super._constraintsChanged(required, minlength, maxlength, pattern);\n    }\n  }\n\n  _decreaseValue() {\n    this._incrementValue(-1);\n  }\n\n  _increaseValue() {\n    this._incrementValue(1);\n  }\n\n  _incrementValue(incr) {\n    if (this.disabled || this.readonly) {\n      return;\n    }\n\n    let value = parseFloat(this.value);\n\n    if (!this.value) {\n      if (this.min == 0 && incr < 0 ||\n          this.max == 0 && incr > 0 ||\n          this.max == 0 && this.min == 0) {\n        incr = 0;\n        value = 0;\n      } else if ((this.max == null || this.max >= 0) &&\n                 (this.min == null || this.min <= 0)) {\n        value = 0;\n      } else if (this.min > 0) {\n        value = this.min;\n        if (this.max < 0 && incr < 0) {\n          value = this.max;\n        }\n        incr = 0;\n      } else if (this.max < 0) {\n        value = this.max;\n        if (incr < 0) {\n          incr = 0;\n        } else {\n          // FIXME(yuriy): find a proper solution to make correct step back\n          if (this._getIncrement(1, value - this.step) > this.max) {\n            value -= 2 * this.step;\n          } else {\n            value -= this.step;\n          }\n        }\n      }\n    } else if (value < this.min) {\n      incr = 0;\n      value = this.min;\n    } else if (value > this.max) {\n      incr = 0;\n      value = this.max;\n    }\n\n    const newValue = this._getIncrement(incr, value);\n    if (!this.value || incr == 0 || this._incrementIsInsideTheLimits(incr, value)) {\n      this._setValue(newValue);\n    }\n  }\n\n  _setValue(value) {\n    this.value = this.inputElement.value = String(parseFloat(value));\n    this.dispatchEvent(new CustomEvent('change', {bubbles: true}));\n  }\n\n  _getIncrement(incr, currentValue) {\n    let step = this.step || 1,\n      min = this.min || 0;\n\n    // To avoid problems with decimal math, multiplying to operate with integers.\n    const multiplier = Math.max(this._getMultiplier(currentValue),\n      this._getMultiplier(step),\n      this._getMultiplier(min));\n\n    step *= multiplier;\n    currentValue = Math.round(currentValue * multiplier);\n    min *= multiplier;\n\n    const margin = (currentValue - min) % step;\n\n    if (incr > 0) {\n      return (currentValue - margin + step) / multiplier;\n    } else if (incr < 0) {\n      return (currentValue - (margin || step)) / multiplier;\n    } else {\n      return currentValue / multiplier;\n    }\n  }\n\n  _getDecimalCount(number) {\n    const s = String(number);\n    const i = s.indexOf('.');\n    return i === -1 ? 1 : s.length - i - 1;\n  }\n\n  _getMultiplier(number) {\n    if (!isNaN(number)) {\n      return Math.pow(10, this._getDecimalCount(number));\n    }\n  }\n\n  _incrementIsInsideTheLimits(incr, value) {\n    if (incr < 0) {\n      return this.min == null || this._getIncrement(incr, value) >= this.min;\n    } else if (incr > 0) {\n      return this.max == null || this._getIncrement(incr, value) <= this.max;\n    } else {\n      return this._getIncrement(incr, value) <= this.max && this._getIncrement(incr, value) >= this.min;\n    }\n  }\n\n  _allowed(sign) {\n    const incr = sign * (this.step || 1);\n    const value = parseFloat(this.value);\n    return !this.value || (!this.disabled && this._incrementIsInsideTheLimits(incr, value));\n  }\n\n  _stepChanged(step) {\n    // Avoid using initial value in validation\n    this.__validateByStep = this.__stepChangedCalled || this.getAttribute('step') !== null;\n    this.inputElement.step = this.__validateByStep ? step : 'any';\n\n    this.__stepChangedCalled = true;\n    this.setAttribute('step', step);\n  }\n\n  _minChanged(min) {\n    this.inputElement.min = min;\n  }\n\n  _maxChanged(max) {\n    this.inputElement.max = max;\n  }\n\n  _valueChanged(newVal, oldVal) {\n    // Validate value to be numeric\n    if (newVal && isNaN(parseFloat(newVal))) {\n      this.value = '';\n    } else if (typeof this.value !== 'string') {\n      this.value = String(this.value);\n    }\n\n    super._valueChanged(this.value, oldVal);\n  }\n\n  _onKeyDown(e) {\n    if (e.keyCode == 38) {\n      e.preventDefault();\n      this._increaseValue();\n    } else if (e.keyCode == 40) {\n      e.preventDefault();\n      this._decreaseValue();\n    }\n    super._onKeyDown(e);\n  }\n\n  __onInputChange() {\n    this.validate();\n  }\n\n  checkValidity() {\n    // text-field mixin does not check against `min`, `max` and `step`\n    if (this.min !== undefined || this.max !== undefined || this.__validateByStep) {\n      return this.inputElement.checkValidity();\n    }\n\n    return super.checkValidity();\n  }\n}\n\nwindow.customElements.define(NumberFieldElement.is, NumberFieldElement);\n\nexport { NumberFieldElement };\n","/**\n@license\nCopyright (c) 2019 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport '@polymer/polymer/polymer-element.js';\n\nimport '@polymer/polymer/lib/elements/custom-style.js';\nimport { NumberFieldElement } from './vaadin-number-field.js';\nconst $_documentContainer = document.createElement('template');\n\n$_documentContainer.innerHTML = `<dom-module id=\"vaadin-integer-field-template\">\n\n  \n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\n\n/**\n* `<vaadin-integer-field>` is a Web Component for integer field control in forms.\n*\n* ```html\n* <vaadin-integer-field label=\"Number\">\n* </vaadin-integer-field>\n* ```\n*\n* @extends PolymerElement\n* @demo demo/index.html\n*/\nclass IntegerFieldElement extends NumberFieldElement {\n  static get is() {\n    return 'vaadin-integer-field';\n  }\n\n  static get version() {\n    return '2.6.2';\n  }\n\n  static get properties() {\n    // Hide inherited props that don't work with <input type=\"number\"> from JSDoc.\n    return {\n      /**\n       * @private\n       */\n      pattern: String,\n      /**\n       * @private\n       */\n      preventInvalidInput: Boolean,\n      /**\n       * @private\n       */\n      minlength: Number,\n      /**\n       * @private\n       */\n      maxlength: Number\n    };\n  }\n\n  ready() {\n    super.ready();\n    this._enabledCharPattern = '[-+\\\\d]';\n  }\n\n  _valueChanged(newVal, oldVal) {\n    if (newVal !== '' && !this.__isInteger(newVal)) {\n      console.warn(`Trying to set non-integer value \"${newVal}\" to <vaadin-integer-field>.`\n        + ` Clearing the value.`);\n      this.value = '';\n      return;\n    }\n    super._valueChanged(newVal, oldVal);\n  }\n\n  _stepChanged(newVal, oldVal) {\n    if (!this.__hasOnlyDigits(newVal)) {\n      console.warn(`Trying to set invalid step size \"${newVal}\",`\n        + ` which is not a positive integer, to <vaadin-integer-field>.`\n        + ` Resetting the default value 1.`);\n      this.step = 1;\n      return;\n    }\n    super._stepChanged(newVal, oldVal);\n  }\n\n  __isInteger(value) {\n    return /^(-\\d)?\\d*$/.test(String(value));\n  }\n\n  __hasOnlyDigits(value) {\n    return /^\\d*$/.test(String(value));\n  }\n}\n\nwindow.customElements.define(IntegerFieldElement.is, IntegerFieldElement);\n\nexport { IntegerFieldElement };\n","export const classOptionsMap = {\n  \"artificer(ua)\": {\n    class: {\n      2: {\n        name: \"Wonderous Invention\",\n        count: 1,\n        options: [\"{@item Bag of holding}\", \"{@item cap of water breathing}\", \"{@item driftglobe}\", \"{@item goggles of night}\", \"{@item sending stones}\"]\n      },\n      5: {\n        name: \"Wonderous Invention\",\n        count: 1,\n        options: [\"{@item Alchemy jug}\", \"{@item helm of comprehending languages}\", \"{@item lantern of revealing}\", \"{@item ring of swimming}\", \"{@item robe of useful items}\", \"{@item rope of climbing}\", \"{@item wand of magic detection}\", \"{@item wand of secrets}\", \"{@item Bag of holding}\", \"{@item cap of water breathing}\", \"{@item driftglobe}\", \"{@item goggles of night}\", \"{@item sending stones}\"]\n      },\n      10: {\n        name: \"Wonderous Invention\",\n        count: 1,\n        options: [\"{@item Bag of beans}\", \"{@item chime of opening}\", \"{@item decanter of endless water}\", \"{@item eyes of minute seeing}\", \"{@item folding boat}\", \"{@item Heward's handy haversack}\", \"{@item Alchemy jug}\", \"{@item helm of comprehending languages}\", \"{@item lantern of revealing}\", \"{@item ring of swimming}\", \"{@item robe of useful items}\", \"{@item rope of climbing}\", \"{@item wand of magic detection}\", \"{@item wand of secrets}\", \"{@item Bag of holding}\", \"{@item cap of water breathing}\", \"{@item driftglobe}\", \"{@item goggles of night}\", \"{@item sending stones}\"]\n      },\n      15: {\n        name: \"Wonderous Invention\",\n        count: 1,\n        options: [\"{@item Boots of striding and springing}\", \"{@item bracers of archery}\", \"{@item brooch of shielding}\", \"{@item broom of flying}\", \"{@item hat of disguise}\", \"{@item slippers of spider climbing}\", \"{@item Bag of beans}\", \"{@item chime of opening}\", \"{@item decanter of endless water}\", \"{@item eyes of minute seeing}\", \"{@item folding boat}\", \"{@item Heward's handy haversack}\", \"{@item Alchemy jug}\", \"{@item helm of comprehending languages}\", \"{@item lantern of revealing}\", \"{@item ring of swimming}\", \"{@item robe of useful items}\", \"{@item rope of climbing}\", \"{@item wand of magic detection}\", \"{@item wand of secrets}\", \"{@item Bag of holding}\", \"{@item cap of water breathing}\", \"{@item driftglobe}\", \"{@item goggles of night}\", \"{@item sending stones}\"]\n      },\n      20: {\n        name: \"Wonderous Invention\",\n        count: 1,\n        options: [\"{@item Eyes of the eagle}\", \"{@item gem of brightness}\", \"{@item gloves of missile snaring}\", \"{@item gloves of swimming and climbing}\", \"{@item ring of jumping}\", \"{@item ring of mind shielding}\", \"{@item wings of flying}\", \"{@item Boots of striding and springing}\", \"{@item bracers of archery}\", \"{@item brooch of shielding}\", \"{@item broom of flying}\", \"{@item hat of disguise}\", \"{@item slippers of spider climbing}\", \"{@item Bag of beans}\", \"{@item chime of opening}\", \"{@item decanter of endless water}\", \"{@item eyes of minute seeing}\", \"{@item folding boat}\", \"{@item Heward's handy haversack}\", \"{@item Alchemy jug}\", \"{@item helm of comprehending languages}\", \"{@item lantern of revealing}\", \"{@item ring of swimming}\", \"{@item robe of useful items}\", \"{@item rope of climbing}\", \"{@item wand of magic detection}\", \"{@item wand of secrets}\", \"{@item Bag of holding}\", \"{@item cap of water breathing}\", \"{@item driftglobe}\", \"{@item goggles of night}\", \"{@item sending stones}\"]\n      }\n    }\n  },\n  \"artificer (revisited)\": {\n    class: {\n      2: {\n        name: \"Infuse Item\",\n        count: 3,\n        type: \"featureType=ai|source=UAArtificerRevisited\"\n      },\n      4: {\n        name: \"Infuse Item\",\n        count: 1,\n        type: \"featureType=ai|source=UAArtificerRevisited\"\n      },\n      7: {\n        name: \"Infuse Item\",\n        count: 1,\n        type: \"featureType=ai|source=UAArtificerRevisited\"\n      },\n      11: {\n        name: \"Infuse Item\",\n        count: 1,\n        type: \"featureType=ai|source=UAArtificerRevisited\"\n      },\n      15: {\n        name: \"Infuse Item\",\n        count: 1,\n        type: \"featureType=ai|source=UAArtificerRevisited\"\n      },\n      19: {\n        name: \"Infuse Item\",\n        count: 1,\n        type: \"featureType=ai|source=UAArtificerRevisited\"\n      }\n    }\n  },\n  artificer: {\n    class: {\n      2: {\n        name: \"Infuse Item\",\n        count: 4,\n        type: \"featureType=ai|source=TCE\"\n      },\n      6: {\n        name: \"Infuse Item\",\n        count: 2,\n        type: \"featureType=ai|source=TCE\"\n      },\n      10: {\n        name: \"Infuse Item\",\n        count: 2,\n        type: \"featureType=ai|source=TCE\"\n      },\n      14: {\n        name: \"Infuse Item\",\n        count: 2,\n        type: \"featureType=ai|source=TCE\"\n      },\n      18: {\n        name: \"Infuse Item\",\n        count: 2,\n        type: \"featureType=ai|source=TCE\"\n      }\n    }\n  },\n  barbarian: {\n    subclasses: {\n      \"Path of the Totem Warrior\": {\n        3: {\n          name: \"Totem Spirit\",\n          count: 1,\n          options: [\"Bear\", \"Eagle\", \"Elk\", \"Tiger\", \"Wolf\"]\n        },\n        6: {\n          name: \"Aspect of the Beast\",\n          count: 1,\n          options: [\"Bear\", \"Eagle\", \"Elk\", \"Tiger\", \"Wolf\"]\n        },\n        14: {\n          name: \"Totemic Attunement\",\n          count: 1,\n          options: [\"Bear\", \"Eagle\", \"Elk\", \"Tiger\", \"Wolf\"]\n        }\n      }\n    }\n  },\n  bard: {\n    subclasses: {\n      \"College of Swords\": {\n        3: {\n          name: \"Fighting Style\",\n          count: 1,\n          type: \"fs:b\"\n        }\n      }\n    }\n  },\n  monk: {\n    subclasses: {\n      \"Way of the Four Elements\": {\n        3: {\n          name: \"Elemental Discipline\",\n          count: 2,\n          type: \"ed\"\n        },\n        6: {\n          name: \"Elemental Discipline\",\n          count: 1,\n          type: \"ed\"\n        },\n        11: {\n          name: \"Elemental Discipline\",\n          count: 1,\n          type: \"ed\"\n        },\n        17: {\n          name: \"Elemental Discipline\",\n          count: 1,\n          type: \"ed\"\n        }\n      },\n    }\n  },\n  fighter: {\n    class: {\n      1: {\n        name: \"Fighting Style\",\n        type: \"fs:f\",\n        count: 1\n      }\n    }\n  },\n  paladin: {\n    class: {\n      2: {\n        name: \"Fighting Style\",\n        type: \"fs:p\",\n        count: 1\n      },\n    }\n  },\n  ranger: {\n    class: {\n      2: {\n        name: \"Fighting Style\",\n        type: \"fs:r\",\n        count: 1\n      },\n    }\n  },\n  sorcerer: {\n    class: {\n      3: {\n        name: \"Metamagic\",\n        type: \"mm\",\n        count: 2\n      },\n      10: {\n        name: \"Metamagic\",\n        type: \"mm\",\n        count: 1\n      },\n      17: {\n        name: \"Metamagic\",\n        type: \"mm\",\n        count: 1\n      }\n    }\n  },\n  warlock: {\n    class: {\n      2: {\n        name: \"Eldritch Invocations\",\n        type: \"ei\",\n        count: 2\n      },\n      3: {\n        name: \"Pact Boon\",\n        type: \"pb\",\n        count: 1\n      },\n      5: {\n        name: \"Eldritch Invocations\",\n        type: \"ei\",\n        count: 1\n      },\n      7: {\n        name: \"Eldritch Invocations\",\n        type: \"ei\",\n        count: 1\n      },\n      9: {\n        name: \"Eldritch Invocations\",\n        type: \"ei\",\n        count: 1\n      },\n      12: {\n        name: \"Eldritch Invocations\",\n        type: \"ei\",\n        count: 1\n      },\n      15: {\n        name: \"Eldritch Invocations\",\n        type: \"ei\",\n        count: 1\n      },\n      18: {\n        name: \"Eldritch Invocations\",\n        type: \"ei\",\n        count: 1\n      }\n    }\n  }\n};\n\nexport const proficiencyGains = {\n  classes: {\n    \"artificer(ua)\": {\n      subclasses: {\n        \"Gunsmith\": {\n          1: {\n            name: \"Master Smith\",\n            value: \"{@item smith's tools|phb}\"\n          }\n        }\n      }\n    },\n    \"Artificer (Revisited)\": {\n      subclasses: {\n        \"Alchemist\": {\n          3: {\n            name: \"Tools of the Trade\",\n            value: [\"{@item alchemist's supplies|phb}\", \"{@item herbalism kit|phb}\"]\n          }\n        },\n        \"Archivist\": {\n          3: {\n            name: \"Tools of the Trade\",\n            value: [\"{@item calligrapher's supplies|phb}\", \"{@item forgery kit|phb}\"]\n          }\n        },\n        \"Artillerist\": {\n          3: {\n            name: \"Tools of the Trade\",\n            value: [\"{@item smith's tools|phb}\", \"{@item woodcarver's tools|phb}\"]\n          }\n        },\n        \"Battle Smith\": {\n          3: [\n            {\n              name: \"Tools of the Trade\",\n              value: [\"{@item leatherworker's tools|phb}\", \"{@item smith's tools|phb}\"]\n            }, \n            {\n              name: \"Battle Ready\",\n              value: \"martial weapons\"\n            }\n          ]\n        }\n      }\n    },\n    artificer: {\n      subclasses: {\n        \"Alchemist\": {\n          3: {\n            name: \"Tool Proficiency\",\n            value: \"alchemist's supplies\",\n            orOther: true,\n            type: \"artisan's tools\"\n          }\n        },\n        \"Artillerist\": {\n          3: {\n            name: \"Tool Proficiency\",\n            value: \"woodcarver's supplies\"\n          }\n        },\n        \"Battle Smith\": {\n          3: [\n            {\n              name: \"Tool Proficiency\",\n              value: \"smith's supplies\"\n            },\n            {\n              name: \"Battle Ready\",\n              value: \"martial weapons\"\n            }\n          ]\n        },\n        \"Armorer (UA)\": {\n          3: {\n            name: \"Tricks of the Trade\",\n            value: [\"heavy armor\", \"smith's tools\"]\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const spellGains = {\n  classes: {\n    \"artificer(ua)\": {\n      subclasses: {\n        \"Gunsmith\": {\n          1: {\n            name: \"\",\n            value: \"mending\"\n          }\n        }\n      }\n    },\n    \"Artificer (Revisited)\": {\n      subclasses: {\n        \"Alchemist\": {\n          14: {\n            name: \"Chemical Savant\",\n            value: \"greater restoration\",\n            noSlot: true,\n            noMaterial: true,\n            recharge: \"long rest\"\n          }\n        }\n      }\n    },\n    \"artificer\": {\n      subclasses: {\n        \"Alchemist\": {\n          14: {\n            name: \"Chemical Mastery\",\n            value: [\"greater restoration\", \"heal\"],\n            noSlot: true,\n            noMaterial: true,\n            recharge: \"long rest\"\n          }\n        }\n      }\n    },\n    barbarian: {\n      subclasses: {\n        \"Path of the Totem Warrior\": {\n          3: {\n            name: \"Spirit Seeker\",\n            value: [\"beast sense\", \"speak with animals\"],\n            ritualOnly: true,\n            noSlot: true\n          }\n        },\n        \"Path of the Ancestral Guardian v2 (UA)\": {\n          10: {\n            name: \"Consult the Spirits\",\n            value: \"clairvoyance\",\n            noSlot: true\n          }\n        },\n        \"Path of the Ancestral Guardian\": {\n          10: {\n            name: \"Consult the Spirits\",\n            value: [\"augury\", \"clairvoyance\"],\n            noSlot: true,\n            noMaterial: true,\n            recharge: \"short rest\"\n          }\n        },\n        \"Path of the Wild Soul (UA)\": {\n          3: {\n            name: \"Lingering Magic\",\n            value: \"detect magic\",\n            noSlot: true,\n            noMaterial: true,\n            recharge: \"long rest\",\n            charges: \"con\"\n          }\n        }\n      }\n    },\n    bard: {\n      subclasses: {\n        \"College of Lore\": {\n          6: {\n            name: \"\",\n            count: 2,\n            list: \"any\"\n          }\n        }\n      },\n      class: {\n        10: {\n          name: \"Magical Secrets\",\n          count: 2,\n          list: \"any\"\n        },\n        14: {\n          name: \"\",\n          count: 2,\n          list: \"any\"\n        },\n        18: {\n          name: \"\",\n          count: 2,\n          list: \"any\"\n        }\n      }\n    }\n  }\n};\n\nexport const expertiseClasses = {\n  \"artificer(ua)\": {\n    2: {\n      name: \"Tool Expertise\",\n      type: \"artificier-tools\"\n    }\n  },\n  \"Artificer (Revisited)\": {\n    3: {\n      name: \"Tool Expertise\",\n      type: \"artificier-tools\"\n    }\n  },\n  \"Artificer\": {\n    6: {\n      name: \"Tool Expertise\",\n      type: \"artificier-tools\"\n    }\n  },\n  bard: {\n    3: 2,\n    10: 2\n  }\n};\n\nexport const itemGains = {\n  \"Artificer (Revisited)\": {\n    subclasses: {\n      \"Alchemist\": {\n        3: {\n          name: \"Tools of the Trade\",\n          value: [\"{@item alchemist's supplies|phb}\", \"{@item herbalism kit|phb}\"]\n        }\n      },\n      \"Archivist\": {\n        3: {\n          name: \"Tools of the Trade\",\n          value: [\"{@item calligrapher's supplies|phb}\", \"{@item forgery kit|phb}\"]\n        }\n      },\n      \"Artillerist\": {\n        3: {\n          name: \"Tools of the Trade\",\n          value: [\"{@item smith's tools|phb}\", \"{@item woodcarver's tools|phb}\", \"a nonmagical, wooden wand\"]\n        }\n      },\n      \"Battle Smith\": {\n        3: {\n          name: \"Tools of the Trade\",\n          value: [\"{@item leatherworker's tools|phb}\", \"{@item smith's tools|phb}\"]\n        }\n      }\n    }\n  }\n};\n\nexport const resistanceGains = {\n  class: {\n    \"Artificer (Revisited)\": {\n      subclasses: {\n        \"Alchemist\": {\n          14: [\n            {\n              name: \"Chemical Savant\",\n              level: \"resistance\",\n              type: \"damage\",\n              value: \"acid\"\n            },\n            {\n              name: \"Chemical Savant\",\n              level: \"resistance\",\n              type: \"damage\",\n              value: \"poison\"\n            },\n            {\n              name: \"Chemical Savant\",\n              level: \"immunity\",\n              type: \"condition\",\n              value: \"poisoned\"\n            }\n          ]\n        }\n      }\n    }\n  },\n  artificer: {\n    subclasses: {\n      \"Alchemist\": {\n        15: [\n          {\n            name: \"Chemical Mastery\",\n            level: \"resistance\",\n            type: \"damage\",\n            value: \"acid\"\n          },\n          {\n            name: \"Chemical Mastery\",\n            level: \"resistance\",\n            type: \"damage\",\n            value: \"poison\"\n          },\n          {\n            name: \"Chemical Mastery\",\n            level: \"immunity\",\n            type: \"condition\",\n            value: \"poisoned\"\n          }\n        ]\n      }\n    }\n  }\n};\n","import { PolymerElement, html } from \"@polymer/polymer\";\nimport { MutableData } from '@polymer/polymer/lib/mixins/mutable-data.js';\nimport { getCharacterChannel, getSelectedCharacter, getClassReferences, setClassLevels, mergeSubclass, getSubclassChoiceLevel, mergeFeature, setSubclassChoice, setClassChoice, getSubclassChoice, getClassChoice, getHPRollForClassLevel, getHPDiceForLevel, setHpRoll, getClassString, getOptionFeatureChoice, setOptionFeatureChoice } from \"../../../util/charBuilder\";\nimport \"../../dnd-select-add\";\nimport \"../../dnd-switch\";\nimport \"../../dnd-button\";\nimport \"../../dnd-asi-select\";\nimport \"../../dnd-svg\";\nimport './dnd-character-builder-suboptions';\nimport { jqEmpty, getEntryName, cloneDeep } from \"../../../js/utils\";\nimport { classOptionsMap } from \"../../../data/choices\";\nimport EntryRenderer from \"../../../util/entryrender\";\nimport { } from '@polymer/polymer/lib/elements/dom-if.js';\nimport { } from '@polymer/polymer/lib/elements/dom-repeat.js';\nimport { getEditModeChannel, isEditMode } from \"../../../util/editMode\";\nimport { filterModel } from \"../../../util/data\";\nimport '@vaadin/vaadin-text-field/vaadin-integer-field'\n\nclass DndCharacterBuilderClass extends MutableData(PolymerElement) {\n  \n  static get properties() {\n    return {\n      levels: {\n        type: Array,\n        value: []\n      },\n      classes: {\n        type: Object,\n      },\n      subclasses: {\n        type: Object,\n        value: undefined\n      },\n      noContentMessage: {\n        type: Boolean,\n        value: false\n      },\n      isEditMode: {\n        type: Boolean,\n        value: false\n      }\n    };\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    this.characterChangeHandler = (e) => {\n      let character = e.detail.character;\n      this.updateFromCharacter(character);\n    };\n    \n    this.updateFromCharacter(getSelectedCharacter());\n    getCharacterChannel().addEventListener(\"character-selected\", this.characterChangeHandler);\n\n    this.editModeHandler = (e) => {\n      this.isEditMode = e.detail.isEditMode;\n    }\n    getEditModeChannel().addEventListener('editModeChange', this.editModeHandler);\n    this.isEditMode = isEditMode();\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n\n    getCharacterChannel().removeEventListener(\"character-selected\", this.characterChangeHandler);\n    getEditModeChannel().removeEventListener('editModeChange', this.editModeHandler);\n  }\n\n  async updateFromCharacter(character) {\n    if (character && character.levels && character.levels.length) {\n      console.error('class updateFromCharacter', character);\n      this.noContentMessage = false;\n      this.character = character;\n      this.classes = await getClassReferences(character);\n      this.subclasses = cloneDeep(character.subclasses);\n      this.classLevel = getClassString(character);\n      this.classChoices = await this._findLevelChoices(character, this.classes);\n\n      this.dispatchEvent(new CustomEvent(\"loadingChange\", { bubbles: true, composed: true }));\n\n      this.levels = cloneDeep(character.levels);\n\n      const hitDiceMaxes = [];\n      for (let i = 0; i < character.levels.length; i++) {\n        hitDiceMaxes.push(await getHPDiceForLevel(i));\n      }\n      this.hitDiceMaxes = hitDiceMaxes;\n    } else {\n      this.levels = [];\n      this.noContentMessage = true;\n      this.dispatchEvent(new CustomEvent(\"loadingChange\", { bubbles: true, composed: true }));\n    }\n  }\n\n  _getClassLevelFeatures(levels, index, classes, subclasses) {\n    if (classes && levels[index] && subclasses) {\n      const className = levels[index].name;\n      const classRef = classes[className];\n\n      if (classRef) {\n        const classFeatures = classRef.classFeatures;\n        let levelsInClass = -1;\n        let levelsInSubclass = -1;\n\n        if (levels.length >= index + 1) {\n          for (let i = 0; i <= index; i ++) {\n            if (levels[i].name === className) {\n              levelsInClass ++;\n\n              const classFeaturesForLevel = classFeatures[levelsInClass];\n              if (classFeaturesForLevel) {\n                const hasSubclassFeature = classFeaturesForLevel.find(i => i.gainSubclassFeature);\n                if (hasSubclassFeature) {\n                  levelsInSubclass ++;\n                }\n              }\n            }\n          }\n\n          const classFeaturesForLevel = classFeatures[levelsInClass];\n          if (classFeaturesForLevel) {\n            const hasSubclassFeature = classFeaturesForLevel.some(i => i.gainSubclassFeature);\n            if (hasSubclassFeature && subclasses && subclasses[className] && classRef.subclasses && classRef.subclasses.length) {\n              const subclassDef = classRef.subclasses.find(i => subclasses[className].name === i.name);\n              if (subclassDef && subclassDef.subclassFeatures && subclassDef.subclassFeatures[levelsInSubclass]) {\n                subclassDef.subclassFeatures[levelsInSubclass].map((i) => { i.isSubclass = true; return i; })\n                return [...classFeaturesForLevel].concat(subclassDef.subclassFeatures[levelsInSubclass]);\n              }\n            }\n            return classFeaturesForLevel.filter((feature) => { \n              const name = getEntryName(feature);\n              return name !== 'Proficiency Versatility' && name !== 'Martial Versatility';\n            });\n          }\n        }\n      }\n    }\n  }\n\n  _getClassLevelFeatureStringArray(levels, index, classes, subclasses, classChoices) {\n    if (levels && index !== undefined && classes && subclasses) {\n      const classLevelFeatures = this._getClassLevelFeatures(levels, index, classes, subclasses);\n\n      if (classLevelFeatures) {\n        return classLevelFeatures.map(f => {\n          return { name: getEntryName(f), isSubclass: f.isSubclass, source: f.source };\n        }).filter(feature => {\n          const isUnselectedReplacementChoice = classChoices && classChoices[index] && classChoices[index].some((choice) => {\n            const isNotSelectedOptionalFeature = choice.selection && (choice.selection.name !== feature.name || choice.selection.source !== feature.source);\n            const isOptionalFeature = choice.from && choice.from.some((optionalFeature) => {return optionalFeature.name === feature.name && optionalFeature.source === feature.source});\n            \n            return choice.id === 'replacement' && isNotSelectedOptionalFeature && isOptionalFeature;\n          });\n\n          return !isUnselectedReplacementChoice;\n        });\n      }\n    }\n  }\n\n  _level(index) {\n    return index + 1;\n  }\n\n  _deleteLevel(e) {\n    const index = e.model.__data.index,\n      className = this.levels[index].name,\n      level = this.levels.filter(lvl => lvl.name === className).length,\n      choiceKeysToRemove = Object.keys(this.character.choices).filter(key => key.startsWith(className.toLowerCase() + '_' + level));\n    \n    this.levels.splice(index, 1);\n    choiceKeysToRemove.forEach(key => {\n      delete this.character.choices[key];\n    });\n    setClassLevels(this.levels);\n  }\n\n  _expandDetails(e) {\n    let rowIndex = e.model.__data.index;\n    \n    if (this.expandedIndex === rowIndex) {\n      this.expandedIndex = null;\n    } else {\n      this.expandedIndex = rowIndex;\n    }\n  }\n\n  _renderDetails(expandedIndex, rowIndex) {\n    let renderStack = [];\n    if (expandedIndex === rowIndex) {\n      const renderer = new EntryRenderer();\n      const features = this._getClassLevelFeatures(this.levels, rowIndex, this.classes, this.subclasses);\n      \n      if (features && features.length) {\n        for (let feature of features) {\n          const isUnselectedReplacementChoice = this.classChoices && this.classChoices[rowIndex] && this.classChoices[rowIndex].some((choice) => {\n            const isNotSelectedOptionalFeature = choice.selection && (choice.selection.name !== feature.name || choice.selection.source !== feature.source);\n            const isOptionalFeature = choice.from && choice.from.some((optionalFeature) => {return optionalFeature.name === feature.name && optionalFeature.source === feature.source});\n            \n            return choice.id === 'replacement' && isNotSelectedOptionalFeature && isOptionalFeature;\n          });\n          if (!isUnselectedReplacementChoice) {\n            renderer.recursiveEntryRender(\n              feature,\n              renderStack,\n              0,\n              undefined,\n              true\n            );\n          }\n        }\n      }\n      return \"<div class='details stats-wrapper'>\" + renderStack.join(\"\") + \"</div>\"\n    } else {\n      return \"\";\n    }\n  }\n\n  async _findLevelChoices(character, classes) {\n    const levelChoices = [];\n    if (character && character.levels && character.levels.length) {\n      for (let i = 0; i < character.levels.length; i++) {\n        levelChoices.push(await this._findChoices(character, classes, i));\n      }\n    }\n    return levelChoices;\n  }\n\n  async _findChoices(character, classes, levelIndex) {\n    if (classes && character.levels && character.levels.length && character.levels.length > levelIndex) {\n      let levels = character.levels,\n        subclasses = character.subclasses,\n        className = levels[levelIndex].name,\n        classDef = classes[className],\n        subclassDef = classDef.subclasses.find(i => subclasses[className] && subclasses[className].name === i.name);\n\n      if (classDef) {\n        let choices = [],\n          classLevelCount = 0,\n          subclassChoiceLevel = getSubclassChoiceLevel(classDef);\n\n        for (let i = 0; i <= levelIndex; i++) {\n          let level = levels[i]\n          if (level.name === className) {\n            classLevelCount ++;\n          }\n        }\n\n        \n        // Class sub-option for additional spells and first level proficiencies\n        const classSubOptions = {};\n        // restructuring class defined additional spells\n        if (classDef.additionalSpells) {\n          let lowestAddtlSpellLevel = 9;\n          classDef.additionalSpells.forEach((addtlSpellSetEntry) => {\n            Object.entries(addtlSpellSetEntry).forEach(([addtlSpellTypeKey, addtlSpellTypeValue]) => {\n              Object.entries(addtlSpellTypeValue).forEach(([addtlSpellLevelKey, addtlSpellLevelValue]) => {\n                const spellGainLevel = parseInt(addtlSpellLevelKey.split('s').join(''));\n\n                if (spellGainLevel < lowestAddtlSpellLevel && addtlSpellTypeKey !== 'prepared' && addtlSpellTypeKey !== 'expanded') {\n                  lowestAddtlSpellLevel = spellGainLevel;\n                }\n                \n                // If this level has some spell gain, recreate structure for just this level\n                if (classDef.additionalSpells.length === 1 && spellGainLevel === classLevelCount) {\n                  if (!classSubOptions.additionalSpells) {\n                    classSubOptions.additionalSpells = [{}];\n                  }\n                  if (!classSubOptions.additionalSpells[0][addtlSpellTypeKey]) {\n                    classSubOptions.additionalSpells[0][addtlSpellTypeKey] = {}\n                  }\n                  classSubOptions.additionalSpells[0][addtlSpellTypeKey][addtlSpellLevelKey] = addtlSpellLevelValue;\n                }\n              });\n            });\n          });\n          // if there are multiple additional spell sets then select set (and all others) at the lowest level\n          if (classDef.additionalSpells.length > 1 && lowestAddtlSpellLevel === classLevelCount) {\n            classSubOptions.additionalSpells = classDef.additionalSpells;\n          }\n        }\n\n        if (levelIndex === 0) {\n          classSubOptions.skillProficiencies = classDef.startingProficiencies.skills;\n\n          if (classDef.startingProficiencies.armor) {\n            classSubOptions.armorProficiencies = [{}];\n            classDef.startingProficiencies.armor.forEach(p => {\n              let prof = p.proficiency || p.toLowerCase();\n              prof = prof.includes('shield') ? 'shield' : prof;\n              classSubOptions.armorProficiencies[0][prof] = true;\n            });\n          }\n          \n          if (classDef.startingProficiencies.weapons) {\n            classSubOptions.weaponProficiencies = [{}];\n            classDef.startingProficiencies.weapons.forEach(p => {\n              let prof = p.proficiency || p.toLowerCase();\n              if (prof.includes(\"@item\")) {\n                prof = prof.split(\"@item\")[1].trim().split('|')[0];\n              }\n              classSubOptions.weaponProficiencies[0][prof] = true;\n            });\n          }\n\n          if (classDef.startingProficiencies.tools) {\n            classSubOptions.toolProficiencies = [{}];\n            classDef.startingProficiencies.tools.forEach(p => {\n              let count;\n              let prof = p.proficiency || p.toLowerCase();\n              count = prof.includes('one ') ? 1 : prof.includes('two ') ? 2 : prof.includes('three ') ? 3 :prof.includes('four ') ? 4 : prof.includes('five ') ? 5 : 1;\n              if (prof.includes(\"@item\")) {\n                prof = prof.split(\"@item\")[1].trim().split('|')[0];\n              }\n              if (prof.includes(\"artisan's tools\") || prof.includes('musical instrument')) {\n                prof = prof.includes(\"artisan's tools\") ? \"artisan's tools\" : 'musical instrument';\n                classSubOptions.toolProficiencies[0].choose = { from: [prof], count };\n              } else {\n                classSubOptions.toolProficiencies[0][prof] = true;\n              }\n            });\n          }\n        }\n        choices.push({\n          id: \"classSubOptions\",\n          classSubOptions,\n          class: className.toLowerCase(),\n          level: classLevelCount\n        });\n\n        // Subclass choice\n        if (subclassChoiceLevel !== undefined && classLevelCount === subclassChoiceLevel) {\n          choices.push({\n            id: \"subclass\",\n            from: classDef.subclasses,\n            selections: character.subclasses[className]\n          });\n        }\n\n        // Subclass suboption\n        const subclassSubOptions = {};\n        if (subclassDef && subclassDef.additionalSpells) {\n          let lowestAddtlSpellLevel = 20;\n          let hasExpanded = false;\n          subclassDef.additionalSpells.forEach((addtlSpellSetEntry) => {\n            Object.entries(addtlSpellSetEntry).forEach(([addtlSpellTypeKey, addtlSpellTypeValue]) => {\n              if (addtlSpellTypeKey === 'expanded') {\n                hasExpanded = true;\n              }\n              if (typeof addtlSpellTypeValue !== 'string' && !Array.isArray(addtlSpellTypeValue)) {\n                Object.entries(addtlSpellTypeValue).forEach(([addtlSpellLevelKey, addtlSpellLevelValue]) => {\n                  const spellGainLevel = parseInt(addtlSpellLevelKey.split('s').join(''));\n\n                  if (spellGainLevel < lowestAddtlSpellLevel && addtlSpellTypeKey !== 'prepared') {\n                    lowestAddtlSpellLevel = spellGainLevel;\n                  }\n                  \n                  // If this level has some spell gain, recreate structure for just this level\n                  if (subclassDef.additionalSpells.length === 1 && addtlSpellTypeKey !== 'expanded'&& spellGainLevel === classLevelCount) {\n                    if (!subclassSubOptions.additionalSpells) {\n                      subclassSubOptions.additionalSpells = [{}];\n                    }\n                    if (!subclassSubOptions.additionalSpells[0][addtlSpellTypeKey]) {\n                      subclassSubOptions.additionalSpells[0][addtlSpellTypeKey] = {}\n                    }\n                    subclassSubOptions.additionalSpells[0][addtlSpellTypeKey][addtlSpellLevelKey] = addtlSpellLevelValue;\n                  }\n                });\n              }\n            });\n          });\n          // if there are multiple additional spell sets then select set (and all others) at the lowest level\n          if ((subclassDef.additionalSpells.length > 1 || hasExpanded) && lowestAddtlSpellLevel === classLevelCount) {\n            subclassSubOptions.additionalSpells = subclassDef.additionalSpells;\n          }\n          choices.push({\n            id: \"subclassSubOptions\",\n            subclassSubOptions,\n            subclass: subclassDef.shortName,\n            class: className.toLowerCase(),\n            level: classLevelCount\n          });\n        }\n\n        // ASI choice\n        let features = this._getClassLevelFeatures(levels, levelIndex, classes, subclasses);\n        if (features && features.length) {\n          if (features.find((f) => { return f.name === \"Ability Score Improvement\"; })) {\n            if (!this.asiItem) {\n              this.asiChoice = {\n                id: \"asi\",\n                class: className.toLowerCase(),\n                level: classLevelCount,\n                asiItem: {\n                  asi: true\n                }\n              }\n            }\n            choices.push(this.asiChoice);\n          }\n        }\n\n        // Feature replacement choice\n        if (features && features.length) {\n          features.forEach(feature => {\n            if (!feature.name.includes(\"feature\")) {\n              const choice = {\n                id: 'replacement',\n                from: [{name: feature.name, source: feature.source}],\n                selection: getOptionFeatureChoice(className, levelIndex, feature.name),\n                class: className,\n                level: levelIndex,\n                feature: feature.name\n              };\n              features.forEach(featurei => {\n                if (featurei.isClassFeatureVariant && featurei.entries[0].includes('replaces') && featurei.entries[0].includes(feature.name)) {\n                  choice.from.push({name: featurei.name, source: featurei.source});\n                }\n              });\n              if (choice.from.length > 1) {\n                choices.push(choice);\n              }\n            }\n          });\n        }\n\n        // Generating other choices from choices.js map\n        if (classLevelCount) {\n          const classOptions = classOptionsMap[className.toLowerCase()];\n\n          if (classOptions && classOptions.class && classOptions.class[classLevelCount]) {\n            const classLevelOptions = [].concat(classOptions.class[classLevelCount]);\n            \n            for (const classLevelOption of classLevelOptions) {\n              if (classLevelOption.options) {\n                choices.push({\n                  id: \"classFeature\",\n                  name: classLevelOption.name,\n                  from: classLevelOption.options,\n                  count: classLevelOption.count > 1 ? classLevelOption.count : 1,\n                  class: className.toLowerCase(),\n                  feature: classLevelOption.name,\n                  level: classLevelCount,\n                  selections: getClassChoice(className.toLowerCase(), classLevelCount, classLevelOption.name)\n                });\n              } else if (classLevelOption.type) {\n                const options = await filterModel(\"features\", classLevelOption.type);\n                let selections = getClassChoice(className.toLowerCase(), classLevelCount, classLevelOption.name);\n                if (selections) {\n                  if (Array.isArray(selections)) {\n                    selections = selections.map(sel => options.find(opt => opt.name === sel.name && opt.source === sel.source));\n                  } else {\n                    selections = options.find(opt => opt.name === selections.name && opt.source === selections.source);\n                  }\n                }\n                choices.push({\n                  id: \"classFeature\",\n                  hasSubFeature: true,\n                  name: classLevelOption.name,\n                  from: options,\n                  count: classLevelOption.count > 1 ? classLevelOption.count : 1,\n                  class: className.toLowerCase(),\n                  feature: classLevelOption.name,\n                  level: classLevelCount,\n                  selections,\n                  selectionsArray: Array.isArray(selections) ? selections : [selections]\n                });\n              }\n            }\n          }\n\n          if (classOptions && classOptions.subclasses && subclasses[className] && classOptions.subclasses[subclasses[className].name] && classOptions.subclasses[subclasses[className].name][classLevelCount]) {\n            const subclassLevelOptions = [].concat(classOptions.subclasses[subclasses[className].name][classLevelCount]);\n            \n            for (const subclassLevelOption of subclassLevelOptions) {\n              if (subclassLevelOption.options) {\n                choices.push({\n                  id: \"subclassFeature\",\n                  name: subclassLevelOption.name,\n                  from: subclassLevelOption.options,\n                  count: subclassLevelOption.count > 1 ? subclassLevelOption.count : undefined,\n                  class: className.toLowerCase(),\n                  subclass: subclasses[className],\n                  feature: subclassLevelOption.name,\n                  level: classLevelCount,\n                  selections: getSubclassChoice(className.toLowerCase(), subclasses[className].name.toLowerCase(), classLevelCount, subclassLevelOption.name)\n                });\n              } else if (subclassLevelOption.type) {\n                const options = await filterModel(\"features\", subclassLevelOption.type);\n                let selections = getSubclassChoice(className.toLowerCase(), subclasses[className].name.toLowerCase(), classLevelCount, subclassLevelOption.name);\n                if (selections) {\n                  if (Array.isArray(selections)) {\n                    selections = selections.map(sel => options.find(opt => opt.name === sel.name && opt.source === sel.source));\n                  } else {\n                    selections = options.find(opt => opt.name === selections.name && opt.source === selections.source);\n                  }\n                }\n                choices.push({\n                  id: \"subclassFeature\",\n                  hasSubFeature: true,\n                  name: subclassLevelOption.name,\n                  from: options,\n                  count: subclassLevelOption.count > 1 ? subclassLevelOption.count : undefined,\n                  class: className.toLowerCase(),\n                  subclass: subclasses[className],\n                  feature: subclassLevelOption.name,\n                  level: classLevelCount,\n                  selections: selections,\n                  selectionsArray: Array.isArray(selections) ? selections : [selections]\n                });\n              }\n            }\n          }\n        }\n\n        return choices;\n      }\n    }\n    return [];\n  }\n\n  _equal(a, b) {\n    return a === b;\n  }\n\n  _genSubclassCallback(level, previousSubclass) {\n    return (subclass) => {\n      mergeSubclass(undefined, level.name, subclass, previousSubclass);\n    }\n  }\n\n  _genSubclassOptions(level) {\n    return this.classes[level.name].subclasses;\n  }\n\n  _getSubclassSelection(level, subclasses) {\n    return subclasses[level.name];\n  }\n\n  _classFeatureOptionAddCallback(classs, level, feature) {\n    return (choice) => {\n      let adjChoice;\n      if (Array.isArray(choice)) {\n        adjChoice = choice.map(c => {\n          if (c.name) {\n            return { name: c.name, source: c.source }\n          } else {\n            return c;\n          }\n        });\n      } else if (choice.name) {\n        adjChoice = { name: choice.name, source: choice.source };\n      } else {\n        adjChoice = choice;\n      }\n      setClassChoice(classs, level, feature, adjChoice);\n    };\n  }\n\n  _subclassFeatureOptionAddCallback(classs, subclass, level, feature) {\n    return (choice) => {\n      let adjChoice;\n      if (Array.isArray(choice)) {\n        adjChoice = choice.map(c => {\n          if (c.name) {\n            return { ...c }\n          } else {\n            return c;\n          }\n        });\n      } else if (choice.name) {\n        adjChoice = { ...choice };\n      } else {\n        adjChoice = choice;\n      }\n      setSubclassChoice(classs, subclass.name.toLowerCase(), level, feature, adjChoice);\n    };\n  }\n\n  _optionalFeatureAddCallback(classs, level, feature) {\n    return (choice) => {\n      let adjChoice;\n      if (Array.isArray(choice)) {\n        adjChoice = choice.map(c => {\n          if (c.name) {\n            return { ...c }\n          } else {\n            return c;\n          }\n        });\n      } else if (choice.name) {\n        adjChoice = { ...choice };\n      } else {\n        adjChoice = choice;\n      }\n      setOptionFeatureChoice(classs, level, feature, adjChoice);\n    };\n  }\n\n  _indexOfLevel(level, levels) {\n    return levels.indexOf(level);\n  }\n\n  _isMobile() {\n    return window.innerWidth < 921;\n  }\n\n  _objArray(obj) {\n    return Object.values(obj);\n  }\n\n  _atIndex(data, index) {\n    return data ? data[index] : null;\n  }\n\n  _svgFromClass(className) {\n    return className ? className.replace(/(\\s|\\(|\\))/g, \"\") : '';\n  }\n\n  _addClassLevel(e) {\n    mergeFeature(undefined, e.model.item, \"classes\");\n  }\n\n  _levelHp(className, index) {\n    return getHPRollForClassLevel(className, index + 1);\n  }\n\n  _editModeClass(isEditMode) {\n    return isEditMode ? 'edit-mode' : 'not-edit-mode';\n  }\n\n  _toggleHpField(e) {\n    const element = e.target.closest('.btn-field');\n    const isOpen = element.classList.contains('btn-field--open');\n    const intField = element.querySelector('vaadin-integer-field');\n    const level = parseInt(element.dataset.level) + 1;\n    const className = element.dataset.className;\n    const max = parseInt(element.dataset.max);\n  \n    if (isOpen) {\n      const changeVal = parseInt(intField.value);\n      if (!changeVal) {\n        element.classList.toggle('btn-field--open');\n      } else if (changeVal <= max && changeVal > 0) {\n        setHpRoll(className, level, changeVal);\n        intField.value = '';\n        element.classList.toggle('btn-field--open');\n      } else {\n        element.classList.add('btn-field--error');\n        setTimeout(() => {\n          element.classList.remove('btn-field--error');\n        }, 500);\n      }\n    } else {\n      element.classList.toggle('btn-field--open');\n      intField.focus();\n    }\n  }\n\n  _levelHitDice(index, maxes) {\n    if (maxes && index !== undefined && maxes[index]) {\n      return maxes[index];\n    }\n  }\n\n  _hpDiceIconClass(index, hitDiceMaxes) {\n    const dice = this._levelHitDice(index, hitDiceMaxes);\n    return `fal fa-dice-d${dice || '6'}`;\n  }\n\n  _joinUnderscore(...items) {\n    return items.join('_')\n  }\n\n  static get template() {\n    return html`\n      <style include=\"material-styles my-styles fa-styles\">\n        .something {\n          display: block;\n        }\n\n        .class-grid {\n          margin-bottom: 200px;\n        }\n\n        .heading-wrap {\n          display: flex;\n          justify-content: space-between;\n          margin: 22px 14px 0;\n          align-items: center;\n          border-bottom: 1px solid var(--lumo-contrast-10pct);\n          flex-wrap: wrap;\n        }\n        .heading {\n          width: 100%;\n          display: flex;\n          flex-direction: row;\n          align-items: center;\n          justify-content: space-between;\n        }\n        .class-levels {\n          font-size: 16px;\n          padding-left: 8px;\n          font-weight: normal;\n          display: none;\n        }\n\n        h2 {\n          margin-bottom: 24px;\n          display: block;\n          font-size: 1.5em;\n          margin: 20px 0;\n          font-weight: bold;\n        }\n\n        .not-edit-mode .button-wrap {\n          display: none;\n        }\n\n        .button-wrap {\n          display: flex;\n          flex-wrap: wrap;\n          align-items: center;\n          padding: 10px;\n          width: 100%;\n        }\n        .button-wrap > * {\n          margin: 4px;\n        }\n\n        .row-wrap {\n          padding: 4px 16px;\n        }\n        .row-wrap:not(:first-child) {\n          border-top: 1px solid var(--mdc-theme-text-divider-on-background);\n        }\n        .row {\n          position: relative;\n          min-height: 80px;\n          padding: 12px 0 12px;\n        }\n        .row:after {\n          content: \"\";\n          display: table;\n          clear: both;\n        }\n\n        .open-details {\n          cursor: pointer;\n          display: flex;\n          align-items: flex-start;\n          flex-wrap: wrap;\n        }\n        .open-details:hover .level-col {\n          color: var(--mdc-theme-secondary);\n        }\n\n        .level-col {\n          width: calc(100% - 70px);\n          text-overflow: ellipsis;\n          white-space: nowrap;\n          overflow: hidden;\n          flex-shrink: 0;\n          padding: 6px 0;\n        }\n        .level-col__level {\n          margin-right: 10px;\n          font-size: 20px;\n          font-weight: bold;\n        }\n        .level-col__image-wrap {\n          width: 30px;\n          position: relative;\n          height: 21px;\n          display: inline-block;\n        }\n        .level-col__image {\n          width: 30px;\n          height: 30px;\n          display: block;\n          position: absolute;\n          top: -1px;\n        }\n        .level-col__class {\n          font-size: 20px;\n          font-weight: bold;\n        }\n\n        .features-col {\n          white-space: normal;\n          width: 100%;\n          margin: 0;\n          padding: 16px 0 8px;\n          font-size: 15px;\n        }\n        .class-feature:not(:last-of-type)::after {\n          content: ', ';\n        }\n        .class-feature[subclass] {\n          color: var(--mdc-theme-secondary);\n        }\n\n        .choices-col {\n          display: flex;\n          float: left;\n          flex-wrap: wrap;\n          width: 100%;\n          padding-left: 30px;\n        }\n        .choices-col__choice {\n          margin-right: 16px;\n          width: 100%;\n        }\n        .choices-col__choice dnd-select-add {\n          min-width: 250px;\n          width: calc(100% - 20px);\n        }\n        .choices-col__choice dnd-character-builder-suboptions {\n          --suboptions__min-width: 250px;\n          --suboptions__width: calc(100% - 20px);\n        }\n\n        @media(min-width: 420px) {\n          .choices-col__choice dnd-select-add {\n            width: calc(50% - 20px);\n          }\n          .choices-col__choice dnd-character-builder-suboptions {\n            --suboptions__width: calc(50% - 20px);\n          }\n        }\n\n        .choices-col__subclass-choice {\n          display: block;\n        }\n\n        .delete-col {\n          margin-right: 16px;\n        }\n        .delete-btn {\n          height: 36px;\n          font-size: 18px;\n          padding: 0;\n          background: none !important;\n        }\n        .delete-btn:before,\n        .delete-btn:after {\n          background: none !important;\n        }\n        .delete-btn:hover {\n          color: var(--mdc-theme-secondary);\n        }\n        .not-edit-mode .delete-btn {\n          display: none;\n        }\n        \n\n        .btn-field {\n          display: inline-flex;\n          flex-direction: row;\n          flex-wrap: nowrap;\n          margin-bottom: 16px;\n          width: 80px;\n          height: 36px;\n          background: var(--lumo-contrast-10pct);\n          border-radius: 4px;\n        }\n        .btn-field--error {\n          background: var(--lumo-error-color-50pct);\n        }\n        .btn-field__btn {\n          display: block;\n          width: 100%;\n        }\n        .btn-field__input {\n          display: none;\n        }\n        .btn-field--open .btn-field__btn {\n          width: 40px;\n        }\n        .btn-field__btn-label-text {\n          position: relative;\n          left: 4px;\n          bottom: 2px;\n        }\n        .btn-field--open .btn-field__btn-label-text {\n          display: none;\n        }\n        .btn-field--open .btn-field__input {\n          display: block;\n          width: 40px;\n          margin-top: -40px;\n        }\n        .btn-field--open .btn-field__btn-label {\n          margin-left: -20px;\n        }\n        .btn-field vaadin-integer-field {\n          --lumo-contrast-10pct: transparent;\n        }\n\n\n        .hp-col {\n          position: absolute;\n          right: 0;\n          top: 8px;\n          overflow: hidden;\n          display: flex;\n        }\n        .not-edit-mode .hp-col {\n          right: 0px;\n        }\n        .hp-col .fal {\n          font-size: 20px;\n          position: relative;\n          margin-right: 8px;\n          top: 3px;\n        }\n        .hp-col__non-edit {\n          display: block;\n        }\n        .hp-col .hp-col__non-edit .hp-roll-icon {\n          left: 33px;\n        }\n        .edit-mode .hp-col__non-edit {\n          display: none;\n        }\n        .hp-col__edit {\n          display: none;\n        }\n        .edit-mode .hp-col__edit {\n          display: inline-flex;\n        }\n        .hp-col .hp-roll-icon {\n          position: absolute;\n          left: 18px;\n          font-size: 11px;\n          top: 1px;\n        }\n        .edit-mode .hp-roll-icon {\n          left: 36px;\n          top: 5px;\n        }\n        .btn-field--open .hp-roll-icon {\n          left: 26px;\n        }\n\n        .details {\n          font-size: 15px;\n          width: calc(100% - 30px);\n          margin: 0 auto 13px !important;\n          background: var(--lumo-contrast-10pct);\n          border-radius: 4px;\n          white-space: pre-line;\n          padding: 14px 14px 1px;\n        }\n        .details > .statsBlockHead:first-child > .stat-name {\n          margin-top: 0;\n        }\n\n        @media(min-width: 921px) {\n          .features-col {\n            margin: 0 30px 0 12px;\n            width: unset;\n            font-size: 16px;\n          }\n          .class-grid {\n            margin-bottom: 0;\n          }\n          .class-levels {\n            display: inline;\n          }\n        }\n\n        .no-content-message {\n          padding: 20px;\n          font-size: 14px;\n          font-style: italic;\n        }\n      </style>\n\n      <div class$=\"[[_editModeClass(isEditMode)]]\">\n        <div class=\"heading-wrap\">\n          <h2>Levels <span class=\"class-levels\">[[classLevel]]</span></h2> \n          <dnd-select-add model=\"class-all\" placeholder=\"Add a Class\"></dnd-select-add>\n\n          <div class=\"button-wrap\">\n            <template is=\"dom-repeat\" items=\"[[_objArray(classes)]]\">\n              <dnd-button icon=\"add\" label=\"[[item.name]]\" on-click=\"_addClassLevel\"></dnd-button>\n            </template>\n          </div>\n        </div>\n\n        <div>\n          <div class=\"no-content-message\" hidden$=\"[[!noContentMessage]]\">Enter edit mode to add class levels.</div>\n\n          <div class=\"class-grid\">\n            <template is=\"dom-repeat\" items=[[levels]]>\n              <div class=\"row-wrap\">\n                <div class=\"row\">\n                  <div class=\"open-details\" on-click=\"_expandDetails\">\n                    <div class=\"level-col\">\n                      <span class=\"level-col__level\">[[_level(index)]]</span>\n                      <span class=\"level-col__image-wrap\" ><dnd-svg class=\"level-col__image\" default-color id=\"[[_svgFromClass(item.name)]]\"></dnd-svg></span>\n                      <span class=\"level-col__class\">[[item.name]]</span>\n                    </div>\n\n                    <div class=\"features-col\">\n                      <template is=\"dom-repeat\" items=\"[[_getClassLevelFeatureStringArray(levels, index, classes, subclasses, classChoices)]]\">\n                        <span class=\"class-feature\" subclass$=\"[[item.isSubclass]]\">[[item.name]]</span>\n                      </template>\n                    </div>\n                  </div>\n\n                  <div class=\"choices-col\">\n                    <template is=\"dom-repeat\" items=\"[[_atIndex(classChoices, index)]]\" as=\"choice\">\n                      <div class=\"choices-col__choice\">\n                        <template is=\"dom-if\" if=\"[[_equal(choice.id, 'classSubOptions')]]\">\n                          <dnd-character-builder-suboptions label=\"[[choice.class]]\" storage-key=\"[[_joinUnderscore(choice.class, choice.level)]]\" selected-item=\"[[choice.classSubOptions]]\"></dnd-character-builder-suboptions>\n                        </template>\n\n                        <template is=\"dom-if\" if=\"[[_equal(choice.id, 'subclassSubOptions')]]\">\n                          <dnd-character-builder-suboptions label=\"[[choice.class]]\" storage-key=\"[[_joinUnderscore(choice.class, choice.level, choice.subclass)]]\" selected-item=\"[[choice.subclassSubOptions]]\"></dnd-character-builder-suboptions>\n                        </template>\n          \n                        <template is=\"dom-if\" if=\"[[_equal(choice.id, 'replacement')]]\">\n                          <dnd-select-add label=\"Optional Features\" placeholder=\"<Choose Option>\" disabled$=\"[[!isEditMode]]\"\n                            options=\"[[choice.from]]\" value=\"[[choice.selection]]\" add-callback=\"[[_optionalFeatureAddCallback(choice.class, choice.level, choice.feature)]]\"></dnd-select-add>\n                        </template>\n\n                        <template is=\"dom-if\" if=\"[[_equal(choice.id, 'subclass')]]\">\n                          <dnd-select-add class=\"choices-col__subclass-choice\" label=\"Subclass\" placeholder=\"<Choose Subclass>\" disabled$=\"[[!isEditMode]]\"\n                            options=\"[[choice.from]]\" value=\"[[choice.selections]]\" add-callback=\"[[_genSubclassCallback(item, choice.selections)]]\"></dnd-select-add>\n                        </template>\n\n                        <template is=\"dom-if\" if=\"[[_equal(choice.id, 'asi')]]\">\n                          <dnd-character-builder-suboptions label=\"ASI\" storage-key=\"[[_joinUnderscore(choice.class, choice.level, 'asi')]]\" selected-item=\"[[choice.asiItem]]\"></dnd-asi-select>\n                        </template>\n\n                        <template is=\"dom-if\" if=\"[[_equal(choice.id, 'classFeature')]]\">\n                          <dnd-select-add choices=\"[[choice.count]]\" label=\"[[choice.name]]\" placeholder=\"<Choose Option>\" disabled$=\"[[!isEditMode]]\"\n                            options=\"[[choice.from]]\" choices=\"1\" value=\"[[choice.selections]]\" add-callback=\"[[_classFeatureOptionAddCallback(choice.class, choice.level, choice.feature)]]\"></dnd-select-add>\n                          <template is=\"dom-repeat\" items=\"[[choice.selectionsArray]]\" as=\"subfeature\">\n                            <dnd-character-builder-suboptions label=\"[[choice.class]]\" storage-key=\"[[_joinUnderscore(choice.class, choice.level, 'feature', index)]]\" selected-item=\"[[subfeature]]\"></dnd-character-builder-suboptions>\n                          </template>\n                        </template>\n\n                        <template is=\"dom-if\" if=\"[[_equal(choice.id, 'subclassFeature')]]\">\n                          <dnd-select-add choices=\"[[choice.count]]\" label=\"[[choice.name]]\" placeholder=\"<Choose Option>\" disabled$=\"[[!isEditMode]]\"\n                            options=\"[[choice.from]]\" value=\"[[choice.selections]]\" add-callback=\"[[_subclassFeatureOptionAddCallback(choice.class, choice.subclass, choice.level, choice.feature)]]\"></dnd-select-add>\n                          <template is=\"dom-repeat\" items=\"[[choice.selectionsArray]]\" as=\"subfeature\">\n                            <dnd-character-builder-suboptions label=\"[[choice.class]]\" storage-key=\"[[_joinUnderscore(choice.class, choice.level, 'sub', 'feature', index)]]\" selected-item=\"[[subfeature]]\"></dnd-character-builder-suboptions>\n                          </template>\n                        </template>\n                      </div>\n                    </template>\n                  </div>\n\n                  <div class=\"hp-col\">\n                    <div class=\"delete-col\">\n                      <button class=\"delete-btn mdc-icon-button\" on-click=\"_deleteLevel\">\n                        <i class=\"fas fa-trash\"></i>\n                      </button>\n                    </div>\n                    <div class=\"hp-col__non-edit\">\n                      <i class$=\"[[_hpDiceIconClass(index, hitDiceMaxes)]]\"></i>\n                      <span class=\"material-icons hp-roll-icon\" aria-hidden=\"true\">favorite</span>\n                      [[_levelHp(item.name, index)]]\n                    </div>\n                    <div class=\"hp-col__edit btn-field\" data-max$=\"[[_levelHitDice(index, hitDiceMaxes)]]\" data-level$=\"[[index]]\" data-class-name$=\"[[item.name]]\">\n                      <dnd-button background=\"none\" class=\"btn-field__btn\" on-click=\"_toggleHpField\">\n                        <span class=\"btn-field__btn-label\" slot=\"label\">\n                          <i class$=\"[[_hpDiceIconClass(index, hitDiceMaxes)]]\"></i>\n                          <span class=\"material-icons hp-roll-icon\" aria-hidden=\"true\">favorite</span>\n                          <span class=\"btn-field__btn-label-text\">[[_levelHp(item.name, index)]]</span>\n                        </span>\n                      </dnd-button>\n                      <vaadin-integer-field class=\"btn-field__input\" min=\"1\" max=\"[[_levelHitDice(index, hitDiceMaxes)]]\" on-blur=\"_toggleHpField\"></vaadin-integer-field>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"details-wrap\" inner-h-t-m-l=\"[[_renderDetails(expandedIndex, index)]]\"></div>\n              </div>\n            </template>\n          </div>\n        </div>\n      </div>\n    `;\n  }\n}\n\ncustomElements.define(\"dnd-character-builder-class\", DndCharacterBuilderClass);"],"sourceRoot":""}